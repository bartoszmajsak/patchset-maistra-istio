From b875574e7058e3b3328660fba0bc0a6a68250fa3 Mon Sep 17 00:00:00 2001
From: Daniel Grimm <dgrimm@redhat.com>
Date: Wed, 1 Dec 2021 17:11:49 +0100
Subject: [misc] OSSM-774 Fix flaky TestStatusManager (#456)

This adds a little sleep to our unit tests for the StatusManager,
because without it, we're running into the issue that we're updating
a ServiceMeshPeer's status very quickly, and in some cases it might be
that the last change has not been propagated when we're generating
the patch for the next status change, which can lead to failures.

This can happen in the real world, but you would need to change a
ServiceMeshPeer's status within a few milliseconds, I doubt that it
affects users. It would also be fixed with the next status update.
For those reasons, I'm only fixing it in the test, with a Sleep()
call.
---
 pkg/servicemesh/federation/status/manager_test.go | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/pkg/servicemesh/federation/status/manager_test.go b/pkg/servicemesh/federation/status/manager_test.go
index f84c6bc13f..d04d1eb124 100644
--- a/pkg/servicemesh/federation/status/manager_test.go
+++ b/pkg/servicemesh/federation/status/manager_test.go
@@ -812,6 +812,8 @@ func(t *testing.T, status *v1.ServiceMeshPeerStatus) {
 			for index, f := range tc.events {
 				t.Logf("processing event %d", index)
 				f(handler)
+				// give it a little time for the status update to propagate
+				time.Sleep(25 * time.Millisecond)
 				verifyPeerStatus(t, cs, tc.mesh, &tc.status[index].peer, tc.assertions[index])
 				verifyExportStatus(t, cs, tc.mesh, &tc.status[index].exports)
 				verifyImportStatus(t, cs, tc.mesh, &tc.status[index].imports)
-- 
2.35.3

