From f9a87258697244fc9366546cb45f6729c9537992 Mon Sep 17 00:00:00 2001
From: Istio Automation <istio-testing-bot@google.com>
Date: Mon, 3 Jan 2022 06:19:56 -0800
Subject: [release-1.12] Only get hostnames at endpoint removal. (#36671)

* Do not rely on service existence for endpoint removal.

* rn

* clean up

Co-authored-by: Pengyuan Bian <bianpengyuan@google.com>
---
 .../kube/controller/endpointslice.go             | 16 ++++++++++++----
 .../kube/controller/endpointslice_test.go        |  4 +++-
 releasenotes/notes/36510.yaml                    |  8 ++++++++
 3 files changed, 23 insertions(+), 5 deletions(-)
 create mode 100644 releasenotes/notes/36510.yaml

diff --git a/pilot/pkg/serviceregistry/kube/controller/endpointslice.go b/pilot/pkg/serviceregistry/kube/controller/endpointslice.go
index f563a9eab0..b7ce95e794 100644
--- a/pilot/pkg/serviceregistry/kube/controller/endpointslice.go
+++ b/pilot/pkg/serviceregistry/kube/controller/endpointslice.go
@@ -202,11 +202,12 @@ func (esc *endpointSliceController) forgetEndpoint(endpoint interface{}) map[hos
 	}
 
 	out := make(map[host.Name][]*model.IstioEndpoint)
-	for _, svc := range esc.c.servicesForNamespacedName(esc.getServiceNamespacedName(slice)) {
+	for _, hostName := range esc.c.hostNamesForNamespacedName(esc.getServiceNamespacedName(slice)) {
 		// endpointSlice cache update
-		hostName := svc.Hostname
-		esc.endpointCache.Delete(hostName, slice.Name)
-		out[hostName] = esc.endpointCache.Get(hostName)
+		if esc.endpointCache.Has(hostName) {
+			esc.endpointCache.Delete(hostName, slice.Name)
+			out[hostName] = esc.endpointCache.Get(hostName)
+		}
 	}
 	return out
 }
@@ -438,6 +439,13 @@ func (e *endpointSliceCache) Get(hostname host.Name) []*model.IstioEndpoint {
 	return endpoints
 }
 
+func (e *endpointSliceCache) Has(hostname host.Name) bool {
+	e.mu.RLock()
+	defer e.mu.RUnlock()
+	_, found := e.endpointsByServiceAndSlice[hostname]
+	return found
+}
+
 func endpointSliceSelectorForService(name string) klabels.Selector {
 	return klabels.Set(map[string]string{
 		v1beta1.LabelServiceName: name,
diff --git a/pilot/pkg/serviceregistry/kube/controller/endpointslice_test.go b/pilot/pkg/serviceregistry/kube/controller/endpointslice_test.go
index 3b687456ca..fbb7350273 100644
--- a/pilot/pkg/serviceregistry/kube/controller/endpointslice_test.go
+++ b/pilot/pkg/serviceregistry/kube/controller/endpointslice_test.go
@@ -135,7 +135,9 @@ func TestEndpointSliceCache(t *testing.T) {
 	if !testEndpointsEqual(cache.Get(hostname), []*model.IstioEndpoint{ep1}) {
 		t.Fatalf("unexpected endpoints")
 	}
-
+	if !cache.Has(hostname) {
+		t.Fatalf("expect to find the host name")
+	}
 	// add a new endpoint
 	ep2 := &model.IstioEndpoint{
 		Address:         "2.3.4.5",
diff --git a/releasenotes/notes/36510.yaml b/releasenotes/notes/36510.yaml
new file mode 100644
index 0000000000..a72d16da63
--- /dev/null
+++ b/releasenotes/notes/36510.yaml
@@ -0,0 +1,8 @@
+apiVersion: release-notes/v2
+kind: bug-fix
+area: traffic-management
+issue:
+  - https://github.com/istio/istio/issues/36510
+releaseNotes:
+  - |
+    **Fixed** an issue where stale endpoints can be configured when a service gets deleted and created again.
-- 
2.35.3

