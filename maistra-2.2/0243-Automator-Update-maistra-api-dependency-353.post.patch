From 5ce073cdaeefc57472d38df73a9fb4b8102ee750 Mon Sep 17 00:00:00 2001
From: maistra-bot <57098434+maistra-bot@users.noreply.github.com>
Date: Wed, 26 May 2021 17:31:45 +0200
Subject: Automator: Update maistra/api dependency (#353)

Co-authored-by: maistra-bot <null>
---
 go.mod                                        |   2 +-
 go.sum                                        |   2 +
 .../base/crds/maistra.io_meshfederations.yaml |  64 +---
 .../base/crds/maistra.io_serviceexports.yaml  |  75 +----
 .../base/crds/maistra.io_serviceimports.yaml  |  41 +--
 .../maistra.io_servicemeshextensions.yaml     |  65 ++--
 .../charts/base/files/gen-istio-cluster.yaml  | 245 +++++---------
 .../core/v1alpha1/federationstatus.go         |  88 +++++
 .../core/v1alpha1/interface.go                |   7 +
 .../informers/externalversions/generic.go     |   2 +
 .../core/v1alpha1/expansion_generated.go      |   8 +
 .../listers/core/v1alpha1/federationstatus.go |  97 ++++++
 .../typed/core/v1alpha1/core_client.go        |   5 +
 .../core/v1alpha1/fake/fake_core_client.go    |   4 +
 .../v1alpha1/fake/fake_federationstatus.go    | 140 ++++++++
 .../typed/core/v1alpha1/federationstatus.go   | 193 +++++++++++
 .../core/v1alpha1/generated_expansion.go      |   2 +
 .../api/core/v1/extension_conversion.go       |  24 ++
 .../maistra.io/api/core/v1/extension_types.go |   8 +
 .../api/core/v1alpha1/conversion_generated.go | 312 ++++++++++++++++++
 vendor/maistra.io/api/core/v1alpha1/doc.go    |  17 +
 .../api/core/v1alpha1/extension_conversion.go |  75 +++++
 .../api/core/v1alpha1/extension_types.go      |  13 +-
 .../core/v1alpha1/federationstatus_types.go   | 174 ++++++++++
 .../api/core/v1alpha1/groupversion_info.go    |   3 +
 .../core/v1alpha1/zz_generated.deepcopy.go    | 232 +++++++++++++
 vendor/modules.txt                            |   2 +-
 27 files changed, 1551 insertions(+), 349 deletions(-)
 create mode 100644 vendor/maistra.io/api/client/informers/externalversions/core/v1alpha1/federationstatus.go
 create mode 100644 vendor/maistra.io/api/client/listers/core/v1alpha1/federationstatus.go
 create mode 100644 vendor/maistra.io/api/client/versioned/typed/core/v1alpha1/fake/fake_federationstatus.go
 create mode 100644 vendor/maistra.io/api/client/versioned/typed/core/v1alpha1/federationstatus.go
 create mode 100644 vendor/maistra.io/api/core/v1/extension_conversion.go
 create mode 100644 vendor/maistra.io/api/core/v1alpha1/conversion_generated.go
 create mode 100644 vendor/maistra.io/api/core/v1alpha1/doc.go
 create mode 100644 vendor/maistra.io/api/core/v1alpha1/extension_conversion.go
 create mode 100644 vendor/maistra.io/api/core/v1alpha1/federationstatus_types.go

diff --git a/go.mod b/go.mod
index 96802af9d0..7710a7de97 100644
--- a/go.mod
+++ b/go.mod
@@ -109,7 +109,7 @@ require (
 	k8s.io/kube-openapi v0.0.0-20211020163157-7327e2aaee2b
 	k8s.io/kubectl v0.22.2
 	k8s.io/utils v0.0.0-20210930125809-cb0fa318a74b
-	maistra.io/api v0.0.0-20210519155434-9f28759d3cb8
+	maistra.io/api v0.0.0-20210601141927-1cbee4cb8ce8
 	sigs.k8s.io/controller-runtime v0.10.2
 	sigs.k8s.io/gateway-api v0.4.0
 	sigs.k8s.io/mcs-api v0.1.0
diff --git a/go.sum b/go.sum
index 10ff0ee142..a5c4a33a13 100644
--- a/go.sum
+++ b/go.sum
@@ -2058,6 +2058,8 @@ k8s.io/utils v0.0.0-20210930125809-cb0fa318a74b h1:wxEMGetGMur3J1xuGLQY7GEQYg9bZ
 k8s.io/utils v0.0.0-20210930125809-cb0fa318a74b/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=
 maistra.io/api v0.0.0-20210519155434-9f28759d3cb8 h1:qQ8fsWOX9Kpt4S5MyZGID5MN52QmYKSnKhXoIrSjbkU=
 maistra.io/api v0.0.0-20210519155434-9f28759d3cb8/go.mod h1:DoQHGC9UUk0r2B+Tc4N33u5BGyKT9/xaWWawIqMTs4o=
+maistra.io/api v0.0.0-20210601141927-1cbee4cb8ce8 h1:hBSNtXLQFFH27vJQvblel28HFClrJxVHlVKK9g69auE=
+maistra.io/api v0.0.0-20210601141927-1cbee4cb8ce8/go.mod h1:Os/zrIv6nsjgC43UAo17FFv+fvYlzANUWIpNNZEZ/KE=
 oras.land/oras-go v0.4.0/go.mod h1:VJcU+VE4rkclUbum5C0O7deEZbBYnsnpbGSACwTjOcg=
 rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=
 rsc.io/letsencrypt v0.0.3/go.mod h1:buyQKZ6IXrRnB7TdkHP0RyEybLx18HHyOSoTyoOLqNY=
diff --git a/manifests/charts/base/crds/maistra.io_meshfederations.yaml b/manifests/charts/base/crds/maistra.io_meshfederations.yaml
index 350f863866..4f42ff127e 100644
--- a/manifests/charts/base/crds/maistra.io_meshfederations.yaml
+++ b/manifests/charts/base/crds/maistra.io_meshfederations.yaml
@@ -3,7 +3,7 @@ apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.2.4
+    controller-gen.kubebuilder.io/version: (devel)
   creationTimestamp: null
   name: meshfederations.maistra.io
 spec:
@@ -21,19 +21,13 @@ spec:
     status: {}
   validation:
     openAPIV3Schema:
-      description: MeshFederation is the Schema for joining two meshes together.  The
-        resource name will be used to identify the 'cluster' to which imported services
-        belong.
+      description: MeshFederation is the Schema for joining two meshes together.  The resource name will be used to identify the 'cluster' to which imported services belong.
       properties:
         apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
           type: string
         kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
@@ -43,56 +37,36 @@ spec:
             gateways:
               properties:
                 egress:
-                  description: Gateway through which outbound federated service traffic
-                    will travel. This is not required if AllowDirectOutbound is set
-                    to true.
+                  description: Gateway through which outbound federated service traffic will travel. This is not required if AllowDirectOutbound is set to true.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
-                        TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
                 ingress:
-                  description: Gateway through which inbound federated service traffic
-                    will travel.
+                  description: Gateway through which inbound federated service traffic will travel.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
-                        TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
               type: object
             networkAddress:
-              description: 'NetworkAddress is the address used to communicate with
-                the external mesh. Port 15443 will be used for service traffic and
-                port 8188 will be used for service discovery. XXX: should this be
-                an array?'
+              description: 'NetworkAddress is the address used to communicate with the external mesh. Port 15443 will be used for service traffic and port 8188 will be used for service discovery. XXX: should this be an array?'
               type: string
             security:
               properties:
                 allowDirectInbound:
-                  description: 'AllowDirectInbound determines whether or not external
-                    service invocations will be terminated at the ingress gateway.
-                    XXX: should this also be configurable per exported service?'
+                  description: 'AllowDirectInbound determines whether or not external service invocations will be terminated at the ingress gateway. XXX: should this also be configurable per exported service?'
                   type: boolean
                 allowDirectOutbound:
-                  description: 'AllowDirectOutbound determines whether or not external
-                    service invocations will be proxied through and terminated at
-                    the egress gateway XXX: should this also be configurable per imported
-                    service?'
+                  description: 'AllowDirectOutbound determines whether or not external service invocations will be proxied through and terminated at the egress gateway XXX: should this also be configurable per imported service?'
                   type: boolean
                 certificateChain:
-                  description: 'Name of secret containing certificate chain to be
-                    used to validate the remote.  This is also used to validate certificates
-                    used by the remote services (both client and server certificates).
-                    XXX: maybe this is only used to initiate a connection, with the
-                    actual certs stored in the status field, as retrieved from the
-                    remote mesh, or maybe this identifies an endpoint used to retrieve
-                    a cert chain, a la jwks'
+                  description: 'Name of secret containing certificate chain to be used to validate the remote.  This is also used to validate certificates used by the remote services (both client and server certificates). XXX: maybe this is only used to initiate a connection, with the actual certs stored in the status field, as retrieved from the remote mesh, or maybe this identifies an endpoint used to retrieve a cert chain, a la jwks'
                   type: string
                 clientID:
-                  description: ClientID of the remote mesh.  This is used to authenticate
-                    incoming requrests from the remote mesh's discovery client.
+                  description: ClientID of the remote mesh.  This is used to authenticate incoming requrests from the remote mesh's discovery client.
                   type: string
                 trustDomain:
                   description: TrustDomain of remote mesh.
@@ -106,21 +80,17 @@ spec:
               items:
                 properties:
                   lastTransitionTime:
-                    description: Last time the condition transitioned from one status
-                      to another.
+                    description: Last time the condition transitioned from one status to another.
                     format: date-time
                     type: string
                   message:
-                    description: Human-readable message indicating details about the
-                      last transition.
+                    description: Human-readable message indicating details about the last transition.
                     type: string
                   reason:
-                    description: Unique, single-word, CamelCase reason for the condition's
-                      last transition.
+                    description: Unique, single-word, CamelCase reason for the condition's last transition.
                     type: string
                   status:
-                    description: The status of this condition. Can be True, False
-                      or Unknown.
+                    description: The status of this condition. Can be True, False or Unknown.
                     type: string
                   type:
                     description: The type of this condition.
diff --git a/manifests/charts/base/crds/maistra.io_serviceexports.yaml b/manifests/charts/base/crds/maistra.io_serviceexports.yaml
index 84624caf4c..c2cbb32817 100644
--- a/manifests/charts/base/crds/maistra.io_serviceexports.yaml
+++ b/manifests/charts/base/crds/maistra.io_serviceexports.yaml
@@ -3,7 +3,7 @@ apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.2.4
+    controller-gen.kubebuilder.io/version: (devel)
   creationTimestamp: null
   name: serviceexports.maistra.io
 spec:
@@ -19,19 +19,13 @@ spec:
     status: {}
   validation:
     openAPIV3Schema:
-      description: ServiceExport is the Schema for configuring exported services.  The
-        name of the ServiceExports resource must match the name of a MeshFederation
-        resource defining the remote mesh to which the services will be exported.
+      description: ServiceExport is the Schema for configuring exported services.  The name of the ServiceExports resource must match the name of a MeshFederation resource defining the remote mesh to which the services will be exported.
       properties:
         apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
           type: string
         kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
@@ -39,32 +33,14 @@ spec:
           description: Spec defines rules for matching services to be exported.
           properties:
             exports:
-              description: Exports are the rules that determine which services are
-                exported from the mesh.  The list is processed in order and the first
-                spec in the list that applies to a service is the one that will be
-                applied.  This allows more specific selectors to be placed before
-                more general selectors.
+              description: Exports are the rules that determine which services are exported from the mesh.  The list is processed in order and the first spec in the list that applies to a service is the one that will be applied.  This allows more specific selectors to be placed before more general selectors.
               items:
                 properties:
                   labelSelector:
-                    description: LabelSelector provides a mechanism for selecting
-                      services to export by using a label selector to match Service
-                      resources for export.
+                    description: LabelSelector provides a mechanism for selecting services to export by using a label selector to match Service resources for export.
                     properties:
                       aliases:
-                        description: 'Aliases is a map of aliases to apply to exported
-                          services.  If a name is not found in the map, the original
-                          service name is exported.  A ''*'' will match any name.
-                          The Aliases list will be processed in order, with the first
-                          match found being applied to the exported service. Examples:
-                          */foo->*/bar will match foo service in any namesapce, exporting
-                          it as bar from its original namespace. */foo->bar/bar will
-                          match foo service in any namespace, exporting it as bar/bar.
-                          foo/*->bar/* will match any service in foo namespace, exporting
-                          it from the bar namespace with its original name */*->bar/*
-                          will match any service and export it from the bar namespace
-                          with its original name. */*->*/* is the same as not specifying
-                          anything'
+                        description: 'Aliases is a map of aliases to apply to exported services.  If a name is not found in the map, the original service name is exported.  A ''*'' will match any name. The Aliases list will be processed in order, with the first match found being applied to the exported service. Examples: */foo->*/bar will match foo service in any namesapce, exporting it as bar from its original namespace. */foo->bar/bar will match foo service in any namespace, exporting it as bar/bar. foo/*->bar/* will match any service in foo namespace, exporting it from the bar namespace with its original name */*->bar/* will match any service and export it from the bar namespace with its original name. */*->*/* is the same as not specifying anything'
                         items:
                           properties:
                             alias:
@@ -84,38 +60,24 @@ spec:
                           type: object
                         type: array
                       namespace:
-                        description: Namespace specifies to which namespace the selector
-                          applies.  An empty value applies to all namespaces in the
-                          mesh.
+                        description: Namespace specifies to which namespace the selector applies.  An empty value applies to all namespaces in the mesh.
                         type: string
                       selector:
-                        description: Selector used to select Service resources in
-                          the namespace/mesh.  An empty selector selects all services.
+                        description: Selector used to select Service resources in the namespace/mesh.  An empty selector selects all services.
                         properties:
                           matchExpressions:
-                            description: matchExpressions is a list of label selector
-                              requirements. The requirements are ANDed.
+                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                             items:
-                              description: A label selector requirement is a selector
-                                that contains values, a key, and an operator that
-                                relates the key and values.
+                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                               properties:
                                 key:
-                                  description: key is the label key that the selector
-                                    applies to.
+                                  description: key is the label key that the selector applies to.
                                   type: string
                                 operator:
-                                  description: operator represents a key's relationship
-                                    to a set of values. Valid operators are In, NotIn,
-                                    Exists and DoesNotExist.
+                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                   type: string
                                 values:
-                                  description: values is an array of string values.
-                                    If the operator is In or NotIn, the values array
-                                    must be non-empty. If the operator is Exists or
-                                    DoesNotExist, the values array must be empty.
-                                    This array is replaced during a strategic merge
-                                    patch.
+                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                   items:
                                     type: string
                                   type: array
@@ -127,17 +89,12 @@ spec:
                           matchLabels:
                             additionalProperties:
                               type: string
-                            description: matchLabels is a map of {key,value} pairs.
-                              A single {key,value} in the matchLabels map is equivalent
-                              to an element of matchExpressions, whose key field is
-                              "key", the operator is "In", and the values array contains
-                              only "value". The requirements are ANDed.
+                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                             type: object
                         type: object
                     type: object
                   nameSelector:
-                    description: NameSelector provides a simple name matcher for exporting
-                      services in the mesh.
+                    description: NameSelector provides a simple name matcher for exporting services in the mesh.
                     properties:
                       alias:
                         properties:
diff --git a/manifests/charts/base/crds/maistra.io_serviceimports.yaml b/manifests/charts/base/crds/maistra.io_serviceimports.yaml
index 72c0bd8a2a..1164af4283 100644
--- a/manifests/charts/base/crds/maistra.io_serviceimports.yaml
+++ b/manifests/charts/base/crds/maistra.io_serviceimports.yaml
@@ -3,7 +3,7 @@ apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.2.4
+    controller-gen.kubebuilder.io/version: (devel)
   creationTimestamp: null
   name: serviceimports.maistra.io
 spec:
@@ -19,19 +19,13 @@ spec:
     status: {}
   validation:
     openAPIV3Schema:
-      description: ServiceImport is the Schema for configuring imported services.  The
-        name of the ServiceImports resource must match the name of a MeshFederation
-        resource defining the remote mesh from which the services will be imported.
+      description: ServiceImports is the Schema for configuring imported services.  The name of the ServiceImports resource must match the name of a MeshFederation resource defining the remote mesh from which the services will be imported.
       properties:
         apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
           type: string
         kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
@@ -39,37 +33,20 @@ spec:
           description: Spec defines rules for matching services to be imported.
           properties:
             domainSuffix:
-              description: 'DomainSuffix specifies the domain suffix to be applies
-                to imported services.  If no domain suffix is specified, imported
-                services will be named as follows:    <imported-name>.<imported-namespace>.svc.<mesh-name>-imports.local
-                If a domain suffix is specified, imported services will be named as
-                follows:    <imported-name>.<imported-namespace>.<domain-suffix>'
+              description: 'DomainSuffix specifies the domain suffix to be applies to imported services.  If no domain suffix is specified, imported services will be named as follows:    <imported-name>.<imported-namespace>.svc.<mesh-name>-imports.local If a domain suffix is specified, imported services will be named as follows:    <imported-name>.<imported-namespace>.<domain-suffix>'
               type: string
             imports:
-              description: Imports are the rules that determine which services are
-                imported to the mesh.  The list is processed in order and the first
-                spec in the list that applies to a service is the one that will be
-                applied.  This allows more specific selectors to be placed before
-                more general selectors.
+              description: Imports are the rules that determine which services are imported to the mesh.  The list is processed in order and the first spec in the list that applies to a service is the one that will be applied.  This allows more specific selectors to be placed before more general selectors.
               items:
                 properties:
                   domainSuffix:
-                    description: DomainSuffix applies the specified suffix to services
-                      imported by this rule.  The behavior is identical to that of
-                      ServiceImportsSpec.DomainSuffix.
+                    description: DomainSuffix applies the specified suffix to services imported by this rule.  The behavior is identical to that of ServiceImportsSpec.DomainSuffix.
                     type: string
                   importAsLocal:
-                    description: ImportAsLocal imports the service as a local service
-                      in the mesh.  For example, if an exported service, foo/bar is
-                      imported as some-ns/service, the service will be imported as
-                      service.some-ns.svc.cluster.local in the some-ns namespace.  If
-                      a service of this name already exists in the mesh, the imported
-                      service's endpoints will be aggregated with any other workloads
-                      associated with the service.  This setting overrides DomainSuffix.
+                    description: ImportAsLocal imports the service as a local service in the mesh.  For example, if an exported service, foo/bar is imported as some-ns/service, the service will be imported as service.some-ns.svc.cluster.local in the some-ns namespace.  If a service of this name already exists in the mesh, the imported service's endpoints will be aggregated with any other workloads associated with the service.  This setting overrides DomainSuffix.
                     type: boolean
                   nameSelector:
-                    description: NameSelector provides a simple name matcher for importing
-                      services in the mesh.
+                    description: NameSelector provides a simple name matcher for importing services in the mesh.
                     properties:
                       alias:
                         properties:
diff --git a/manifests/charts/base/crds/maistra.io_servicemeshextensions.yaml b/manifests/charts/base/crds/maistra.io_servicemeshextensions.yaml
index e94d138b68..e708f7597a 100644
--- a/manifests/charts/base/crds/maistra.io_servicemeshextensions.yaml
+++ b/manifests/charts/base/crds/maistra.io_servicemeshextensions.yaml
@@ -3,35 +3,36 @@ apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.2.4
+    controller-gen.kubebuilder.io/version: (devel)
   creationTimestamp: null
   name: servicemeshextensions.maistra.io
 spec:
   group: maistra.io
   names:
+    categories:
+    - maistra-io
     kind: ServiceMeshExtension
     listKind: ServiceMeshExtensionList
     plural: servicemeshextensions
+    shortNames:
+    - sme
     singular: servicemeshextension
   preserveUnknownFields: false
   scope: Namespaced
+  subresources:
+    status: {}
   version: v1
   versions:
   - name: v1
     schema:
       openAPIV3Schema:
-        description: ServiceMeshExtension is the Schema for the servicemeshextensions
-          API
+        description: ServiceMeshExtension is the Schema for the servicemeshextensions API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
             type: string
           metadata:
             type: object
@@ -44,17 +45,14 @@ spec:
               image:
                 type: string
               imagePullPolicy:
-                description: PullPolicy describes a policy for if/when to pull a container
-                  image
+                description: PullPolicy describes a policy for if/when to pull a container image
                 type: string
               imagePullSecrets:
                 items:
-                  description: LocalObjectReference contains enough information to
-                    let you locate the referenced object inside the same namespace.
+                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
-                        TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
                 type: array
@@ -64,8 +62,7 @@ spec:
               priority:
                 type: integer
               workloadSelector:
-                description: WorkloadSelector is used to match workloads based on
-                  pod labels
+                description: WorkloadSelector is used to match workloads based on pod labels
                 properties:
                   labels:
                     additionalProperties:
@@ -78,8 +75,7 @@ spec:
             - phase
             type: object
           status:
-            description: ServiceMeshExtensionStatus defines the observed state of
-              ServiceMeshExtension
+            description: ServiceMeshExtensionStatus defines the observed state of ServiceMeshExtension
             properties:
               deployment:
                 properties:
@@ -104,23 +100,16 @@ spec:
         type: object
     served: true
     storage: true
-    subresources:
-      status: {}
   - name: v1alpha1
     schema:
       openAPIV3Schema:
-        description: ServiceMeshExtension is the Schema for the servicemeshextensions
-          API
+        description: ServiceMeshExtension is the Schema for the servicemeshextensions API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
             type: string
           metadata:
             type: object
@@ -131,14 +120,25 @@ spec:
                 type: string
               image:
                 type: string
+              imagePullPolicy:
+                description: PullPolicy describes a policy for if/when to pull a container image
+                type: string
+              imagePullSecrets:
+                items:
+                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
+                  properties:
+                    name:
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
+                      type: string
+                  type: object
+                type: array
               phase:
                 description: FilterPhase defines point of injection of Envoy filter
                 type: string
               priority:
                 type: integer
               workloadSelector:
-                description: WorkloadSelector is used to match workloads based on
-                  pod labels
+                description: WorkloadSelector is used to match workloads based on pod labels
                 properties:
                   labels:
                     additionalProperties:
@@ -151,8 +151,7 @@ spec:
             - phase
             type: object
           status:
-            description: ServiceMeshExtensionStatus defines the observed state of
-              ServiceMeshExtension
+            description: ServiceMeshExtensionStatus defines the observed state of ServiceMeshExtension
             properties:
               deployment:
                 properties:
diff --git a/manifests/charts/base/files/gen-istio-cluster.yaml b/manifests/charts/base/files/gen-istio-cluster.yaml
index 43ac7d2d53..6f61267f3b 100644
--- a/manifests/charts/base/files/gen-istio-cluster.yaml
+++ b/manifests/charts/base/files/gen-istio-cluster.yaml
@@ -6000,7 +6000,7 @@ apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.2.4
+    controller-gen.kubebuilder.io/version: (devel)
   creationTimestamp: null
   name: meshfederations.maistra.io
 spec:
@@ -6018,19 +6018,13 @@ spec:
     status: {}
   validation:
     openAPIV3Schema:
-      description: MeshFederation is the Schema for joining two meshes together.  The
-        resource name will be used to identify the 'cluster' to which imported services
-        belong.
+      description: MeshFederation is the Schema for joining two meshes together.  The resource name will be used to identify the 'cluster' to which imported services belong.
       properties:
         apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
           type: string
         kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
@@ -6040,56 +6034,36 @@ spec:
             gateways:
               properties:
                 egress:
-                  description: Gateway through which outbound federated service traffic
-                    will travel. This is not required if AllowDirectOutbound is set
-                    to true.
+                  description: Gateway through which outbound federated service traffic will travel. This is not required if AllowDirectOutbound is set to true.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
-                        TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
                 ingress:
-                  description: Gateway through which inbound federated service traffic
-                    will travel.
+                  description: Gateway through which inbound federated service traffic will travel.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
-                        TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
               type: object
             networkAddress:
-              description: 'NetworkAddress is the address used to communicate with
-                the external mesh. Port 15443 will be used for service traffic and
-                port 8188 will be used for service discovery. XXX: should this be
-                an array?'
+              description: 'NetworkAddress is the address used to communicate with the external mesh. Port 15443 will be used for service traffic and port 8188 will be used for service discovery. XXX: should this be an array?'
               type: string
             security:
               properties:
                 allowDirectInbound:
-                  description: 'AllowDirectInbound determines whether or not external
-                    service invocations will be terminated at the ingress gateway.
-                    XXX: should this also be configurable per exported service?'
+                  description: 'AllowDirectInbound determines whether or not external service invocations will be terminated at the ingress gateway. XXX: should this also be configurable per exported service?'
                   type: boolean
                 allowDirectOutbound:
-                  description: 'AllowDirectOutbound determines whether or not external
-                    service invocations will be proxied through and terminated at
-                    the egress gateway XXX: should this also be configurable per imported
-                    service?'
+                  description: 'AllowDirectOutbound determines whether or not external service invocations will be proxied through and terminated at the egress gateway XXX: should this also be configurable per imported service?'
                   type: boolean
                 certificateChain:
-                  description: 'Name of secret containing certificate chain to be
-                    used to validate the remote.  This is also used to validate certificates
-                    used by the remote services (both client and server certificates).
-                    XXX: maybe this is only used to initiate a connection, with the
-                    actual certs stored in the status field, as retrieved from the
-                    remote mesh, or maybe this identifies an endpoint used to retrieve
-                    a cert chain, a la jwks'
+                  description: 'Name of secret containing certificate chain to be used to validate the remote.  This is also used to validate certificates used by the remote services (both client and server certificates). XXX: maybe this is only used to initiate a connection, with the actual certs stored in the status field, as retrieved from the remote mesh, or maybe this identifies an endpoint used to retrieve a cert chain, a la jwks'
                   type: string
                 clientID:
-                  description: ClientID of the remote mesh.  This is used to authenticate
-                    incoming requrests from the remote mesh's discovery client.
+                  description: ClientID of the remote mesh.  This is used to authenticate incoming requrests from the remote mesh's discovery client.
                   type: string
                 trustDomain:
                   description: TrustDomain of remote mesh.
@@ -6103,21 +6077,17 @@ spec:
               items:
                 properties:
                   lastTransitionTime:
-                    description: Last time the condition transitioned from one status
-                      to another.
+                    description: Last time the condition transitioned from one status to another.
                     format: date-time
                     type: string
                   message:
-                    description: Human-readable message indicating details about the
-                      last transition.
+                    description: Human-readable message indicating details about the last transition.
                     type: string
                   reason:
-                    description: Unique, single-word, CamelCase reason for the condition's
-                      last transition.
+                    description: Unique, single-word, CamelCase reason for the condition's last transition.
                     type: string
                   status:
-                    description: The status of this condition. Can be True, False
-                      or Unknown.
+                    description: The status of this condition. Can be True, False or Unknown.
                     type: string
                   type:
                     description: The type of this condition.
@@ -6145,7 +6115,7 @@ apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.2.4
+    controller-gen.kubebuilder.io/version: (devel)
   creationTimestamp: null
   name: serviceexports.maistra.io
 spec:
@@ -6161,19 +6131,13 @@ spec:
     status: {}
   validation:
     openAPIV3Schema:
-      description: ServiceExport is the Schema for configuring exported services.  The
-        name of the ServiceExports resource must match the name of a MeshFederation
-        resource defining the remote mesh to which the services will be exported.
+      description: ServiceExport is the Schema for configuring exported services.  The name of the ServiceExports resource must match the name of a MeshFederation resource defining the remote mesh to which the services will be exported.
       properties:
         apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
           type: string
         kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
@@ -6181,32 +6145,14 @@ spec:
           description: Spec defines rules for matching services to be exported.
           properties:
             exports:
-              description: Exports are the rules that determine which services are
-                exported from the mesh.  The list is processed in order and the first
-                spec in the list that applies to a service is the one that will be
-                applied.  This allows more specific selectors to be placed before
-                more general selectors.
+              description: Exports are the rules that determine which services are exported from the mesh.  The list is processed in order and the first spec in the list that applies to a service is the one that will be applied.  This allows more specific selectors to be placed before more general selectors.
               items:
                 properties:
                   labelSelector:
-                    description: LabelSelector provides a mechanism for selecting
-                      services to export by using a label selector to match Service
-                      resources for export.
+                    description: LabelSelector provides a mechanism for selecting services to export by using a label selector to match Service resources for export.
                     properties:
                       aliases:
-                        description: 'Aliases is a map of aliases to apply to exported
-                          services.  If a name is not found in the map, the original
-                          service name is exported.  A ''*'' will match any name.
-                          The Aliases list will be processed in order, with the first
-                          match found being applied to the exported service. Examples:
-                          */foo->*/bar will match foo service in any namesapce, exporting
-                          it as bar from its original namespace. */foo->bar/bar will
-                          match foo service in any namespace, exporting it as bar/bar.
-                          foo/*->bar/* will match any service in foo namespace, exporting
-                          it from the bar namespace with its original name */*->bar/*
-                          will match any service and export it from the bar namespace
-                          with its original name. */*->*/* is the same as not specifying
-                          anything'
+                        description: 'Aliases is a map of aliases to apply to exported services.  If a name is not found in the map, the original service name is exported.  A ''*'' will match any name. The Aliases list will be processed in order, with the first match found being applied to the exported service. Examples: */foo->*/bar will match foo service in any namesapce, exporting it as bar from its original namespace. */foo->bar/bar will match foo service in any namespace, exporting it as bar/bar. foo/*->bar/* will match any service in foo namespace, exporting it from the bar namespace with its original name */*->bar/* will match any service and export it from the bar namespace with its original name. */*->*/* is the same as not specifying anything'
                         items:
                           properties:
                             alias:
@@ -6226,38 +6172,24 @@ spec:
                           type: object
                         type: array
                       namespace:
-                        description: Namespace specifies to which namespace the selector
-                          applies.  An empty value applies to all namespaces in the
-                          mesh.
+                        description: Namespace specifies to which namespace the selector applies.  An empty value applies to all namespaces in the mesh.
                         type: string
                       selector:
-                        description: Selector used to select Service resources in
-                          the namespace/mesh.  An empty selector selects all services.
+                        description: Selector used to select Service resources in the namespace/mesh.  An empty selector selects all services.
                         properties:
                           matchExpressions:
-                            description: matchExpressions is a list of label selector
-                              requirements. The requirements are ANDed.
+                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                             items:
-                              description: A label selector requirement is a selector
-                                that contains values, a key, and an operator that
-                                relates the key and values.
+                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                               properties:
                                 key:
-                                  description: key is the label key that the selector
-                                    applies to.
+                                  description: key is the label key that the selector applies to.
                                   type: string
                                 operator:
-                                  description: operator represents a key's relationship
-                                    to a set of values. Valid operators are In, NotIn,
-                                    Exists and DoesNotExist.
+                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                   type: string
                                 values:
-                                  description: values is an array of string values.
-                                    If the operator is In or NotIn, the values array
-                                    must be non-empty. If the operator is Exists or
-                                    DoesNotExist, the values array must be empty.
-                                    This array is replaced during a strategic merge
-                                    patch.
+                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                   items:
                                     type: string
                                   type: array
@@ -6269,17 +6201,12 @@ spec:
                           matchLabels:
                             additionalProperties:
                               type: string
-                            description: matchLabels is a map of {key,value} pairs.
-                              A single {key,value} in the matchLabels map is equivalent
-                              to an element of matchExpressions, whose key field is
-                              "key", the operator is "In", and the values array contains
-                              only "value". The requirements are ANDed.
+                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                             type: object
                         type: object
                     type: object
                   nameSelector:
-                    description: NameSelector provides a simple name matcher for exporting
-                      services in the mesh.
+                    description: NameSelector provides a simple name matcher for exporting services in the mesh.
                     properties:
                       alias:
                         properties:
@@ -6326,7 +6253,7 @@ apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.2.4
+    controller-gen.kubebuilder.io/version: (devel)
   creationTimestamp: null
   name: serviceimports.maistra.io
 spec:
@@ -6342,19 +6269,13 @@ spec:
     status: {}
   validation:
     openAPIV3Schema:
-      description: ServiceImport is the Schema for configuring imported services.  The
-        name of the ServiceImports resource must match the name of a MeshFederation
-        resource defining the remote mesh from which the services will be imported.
+      description: ServiceImports is the Schema for configuring imported services.  The name of the ServiceImports resource must match the name of a MeshFederation resource defining the remote mesh from which the services will be imported.
       properties:
         apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation
-            of an object. Servers should convert recognized schemas to the latest
-            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
           type: string
         kind:
-          description: 'Kind is a string value representing the REST resource this
-            object represents. Servers may infer this from the endpoint the client
-            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
@@ -6362,37 +6283,20 @@ spec:
           description: Spec defines rules for matching services to be imported.
           properties:
             domainSuffix:
-              description: 'DomainSuffix specifies the domain suffix to be applies
-                to imported services.  If no domain suffix is specified, imported
-                services will be named as follows:    <imported-name>.<imported-namespace>.svc.<mesh-name>-imports.local
-                If a domain suffix is specified, imported services will be named as
-                follows:    <imported-name>.<imported-namespace>.<domain-suffix>'
+              description: 'DomainSuffix specifies the domain suffix to be applies to imported services.  If no domain suffix is specified, imported services will be named as follows:    <imported-name>.<imported-namespace>.svc.<mesh-name>-imports.local If a domain suffix is specified, imported services will be named as follows:    <imported-name>.<imported-namespace>.<domain-suffix>'
               type: string
             imports:
-              description: Imports are the rules that determine which services are
-                imported to the mesh.  The list is processed in order and the first
-                spec in the list that applies to a service is the one that will be
-                applied.  This allows more specific selectors to be placed before
-                more general selectors.
+              description: Imports are the rules that determine which services are imported to the mesh.  The list is processed in order and the first spec in the list that applies to a service is the one that will be applied.  This allows more specific selectors to be placed before more general selectors.
               items:
                 properties:
                   domainSuffix:
-                    description: DomainSuffix applies the specified suffix to services
-                      imported by this rule.  The behavior is identical to that of
-                      ServiceImportsSpec.DomainSuffix.
+                    description: DomainSuffix applies the specified suffix to services imported by this rule.  The behavior is identical to that of ServiceImportsSpec.DomainSuffix.
                     type: string
                   importAsLocal:
-                    description: ImportAsLocal imports the service as a local service
-                      in the mesh.  For example, if an exported service, foo/bar is
-                      imported as some-ns/service, the service will be imported as
-                      service.some-ns.svc.cluster.local in the some-ns namespace.  If
-                      a service of this name already exists in the mesh, the imported
-                      service's endpoints will be aggregated with any other workloads
-                      associated with the service.  This setting overrides DomainSuffix.
+                    description: ImportAsLocal imports the service as a local service in the mesh.  For example, if an exported service, foo/bar is imported as some-ns/service, the service will be imported as service.some-ns.svc.cluster.local in the some-ns namespace.  If a service of this name already exists in the mesh, the imported service's endpoints will be aggregated with any other workloads associated with the service.  This setting overrides DomainSuffix.
                     type: boolean
                   nameSelector:
-                    description: NameSelector provides a simple name matcher for importing
-                      services in the mesh.
+                    description: NameSelector provides a simple name matcher for importing services in the mesh.
                     properties:
                       alias:
                         properties:
@@ -6439,35 +6343,36 @@ apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.2.4
+    controller-gen.kubebuilder.io/version: (devel)
   creationTimestamp: null
   name: servicemeshextensions.maistra.io
 spec:
   group: maistra.io
   names:
+    categories:
+    - maistra-io
     kind: ServiceMeshExtension
     listKind: ServiceMeshExtensionList
     plural: servicemeshextensions
+    shortNames:
+    - sme
     singular: servicemeshextension
   preserveUnknownFields: false
   scope: Namespaced
+  subresources:
+    status: {}
   version: v1
   versions:
   - name: v1
     schema:
       openAPIV3Schema:
-        description: ServiceMeshExtension is the Schema for the servicemeshextensions
-          API
+        description: ServiceMeshExtension is the Schema for the servicemeshextensions API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
             type: string
           metadata:
             type: object
@@ -6480,17 +6385,14 @@ spec:
               image:
                 type: string
               imagePullPolicy:
-                description: PullPolicy describes a policy for if/when to pull a container
-                  image
+                description: PullPolicy describes a policy for if/when to pull a container image
                 type: string
               imagePullSecrets:
                 items:
-                  description: LocalObjectReference contains enough information to
-                    let you locate the referenced object inside the same namespace.
+                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
-                        TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
                 type: array
@@ -6500,8 +6402,7 @@ spec:
               priority:
                 type: integer
               workloadSelector:
-                description: WorkloadSelector is used to match workloads based on
-                  pod labels
+                description: WorkloadSelector is used to match workloads based on pod labels
                 properties:
                   labels:
                     additionalProperties:
@@ -6514,8 +6415,7 @@ spec:
             - phase
             type: object
           status:
-            description: ServiceMeshExtensionStatus defines the observed state of
-              ServiceMeshExtension
+            description: ServiceMeshExtensionStatus defines the observed state of ServiceMeshExtension
             properties:
               deployment:
                 properties:
@@ -6540,23 +6440,16 @@ spec:
         type: object
     served: true
     storage: true
-    subresources:
-      status: {}
   - name: v1alpha1
     schema:
       openAPIV3Schema:
-        description: ServiceMeshExtension is the Schema for the servicemeshextensions
-          API
+        description: ServiceMeshExtension is the Schema for the servicemeshextensions API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation
-              of an object. Servers should convert recognized schemas to the latest
-              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this
-              object represents. Servers may infer this from the endpoint the client
-              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
             type: string
           metadata:
             type: object
@@ -6567,14 +6460,25 @@ spec:
                 type: string
               image:
                 type: string
+              imagePullPolicy:
+                description: PullPolicy describes a policy for if/when to pull a container image
+                type: string
+              imagePullSecrets:
+                items:
+                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
+                  properties:
+                    name:
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
+                      type: string
+                  type: object
+                type: array
               phase:
                 description: FilterPhase defines point of injection of Envoy filter
                 type: string
               priority:
                 type: integer
               workloadSelector:
-                description: WorkloadSelector is used to match workloads based on
-                  pod labels
+                description: WorkloadSelector is used to match workloads based on pod labels
                 properties:
                   labels:
                     additionalProperties:
@@ -6587,8 +6491,7 @@ spec:
             - phase
             type: object
           status:
-            description: ServiceMeshExtensionStatus defines the observed state of
-              ServiceMeshExtension
+            description: ServiceMeshExtensionStatus defines the observed state of ServiceMeshExtension
             properties:
               deployment:
                 properties:
diff --git a/vendor/maistra.io/api/client/informers/externalversions/core/v1alpha1/federationstatus.go b/vendor/maistra.io/api/client/informers/externalversions/core/v1alpha1/federationstatus.go
new file mode 100644
index 0000000000..d99a716ed9
diff --git a/vendor/maistra.io/api/client/listers/core/v1alpha1/federationstatus.go b/vendor/maistra.io/api/client/listers/core/v1alpha1/federationstatus.go
new file mode 100644
index 0000000000..69ea70aef8
diff --git a/vendor/maistra.io/api/client/versioned/typed/core/v1alpha1/fake/fake_federationstatus.go b/vendor/maistra.io/api/client/versioned/typed/core/v1alpha1/fake/fake_federationstatus.go
new file mode 100644
index 0000000000..5a860468cb
diff --git a/vendor/maistra.io/api/client/versioned/typed/core/v1alpha1/federationstatus.go b/vendor/maistra.io/api/client/versioned/typed/core/v1alpha1/federationstatus.go
new file mode 100644
index 0000000000..5911fc6e88
diff --git a/vendor/maistra.io/api/core/v1/extension_conversion.go b/vendor/maistra.io/api/core/v1/extension_conversion.go
new file mode 100644
index 0000000000..cd3d0de678
diff --git a/vendor/maistra.io/api/core/v1alpha1/conversion_generated.go b/vendor/maistra.io/api/core/v1alpha1/conversion_generated.go
new file mode 100644
index 0000000000..1ff2b29d43
diff --git a/vendor/maistra.io/api/core/v1alpha1/doc.go b/vendor/maistra.io/api/core/v1alpha1/doc.go
new file mode 100644
index 0000000000..7f255086b1
diff --git a/vendor/maistra.io/api/core/v1alpha1/extension_conversion.go b/vendor/maistra.io/api/core/v1alpha1/extension_conversion.go
new file mode 100644
index 0000000000..34a41e3b9a
diff --git a/vendor/maistra.io/api/core/v1alpha1/federationstatus_types.go b/vendor/maistra.io/api/core/v1alpha1/federationstatus_types.go
new file mode 100644
index 0000000000..b7cd837733
-- 
2.35.3

