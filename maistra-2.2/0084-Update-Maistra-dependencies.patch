From ab5cf3e43f5d42ad133668459c6137cc223e38be Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marko=20Luk=C5=A1a?= <marko.luksa@gmail.com>
Date: Thu, 10 Feb 2022 09:47:24 +0100
Subject: Update Maistra dependencies

---
 bin/update_maistra_deps.sh                    |    2 +-
 ...ration.maistra.io_exportedservicesets.yaml |  327 +++--
 ...ration.maistra.io_importedservicesets.yaml |  251 ++--
 ...ederation.maistra.io_servicemeshpeers.yaml |  498 ++++---
 .../maistra.io_servicemeshextensions.yaml     |   68 +-
 .../charts/base/files/gen-istio-cluster.yaml  | 1144 ++++++++++-------
 6 files changed, 1327 insertions(+), 963 deletions(-)

diff --git a/bin/update_maistra_deps.sh b/bin/update_maistra_deps.sh
index c9b8bc9dec..37770dcc40 100755
--- a/bin/update_maistra_deps.sh
+++ b/bin/update_maistra_deps.sh
@@ -16,7 +16,7 @@
 
 set -eux
 
-UPDATE_BRANCH=${UPDATE_BRANCH:-"maistra-2.1"}
+UPDATE_BRANCH=${UPDATE_BRANCH:-"maistra-2.2"}
 
 # Update go dependencies
 go get -d "maistra.io/api@${UPDATE_BRANCH}"
diff --git a/manifests/charts/base/crds/federation.maistra.io_exportedservicesets.yaml b/manifests/charts/base/crds/federation.maistra.io_exportedservicesets.yaml
index 6ff179e6c2..b695c3f84f 100644
--- a/manifests/charts/base/crds/federation.maistra.io_exportedservicesets.yaml
+++ b/manifests/charts/base/crds/federation.maistra.io_exportedservicesets.yaml
@@ -1,10 +1,9 @@
 
----
-apiVersion: apiextensions.k8s.io/v1beta1
+apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
+    controller-gen.kubebuilder.io/version: v0.6.2
   creationTimestamp: null
   name: exportedservicesets.federation.maistra.io
 spec:
@@ -14,150 +13,206 @@ spec:
     listKind: ExportedServiceSetList
     plural: exportedservicesets
     singular: exportedserviceset
-  preserveUnknownFields: false
   scope: Namespaced
-  subresources:
-    status: {}
-  validation:
-    openAPIV3Schema:
-      description: ExportedServiceSet is the Schema for configuring exported services.  The name of the ExportedServiceSet resource must match the name of a ServiceMeshPeer resource defining the remote mesh to which the services will be exported.
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: Spec defines rules for matching services to be exported.
-          properties:
-            exportRules:
-              description: ExportRules are the rules that determine which services are exported from the mesh.  The list is processed in order and the first spec in the list that applies to a service is the one that will be applied.  This allows more specific selectors to be placed before more general selectors.
-              items:
-                properties:
-                  labelSelector:
-                    description: LabelSelector provides a mechanism for selecting services to export by using a label selector to match Service resources for export.
-                    properties:
-                      aliases:
-                        description: 'Aliases is a map of aliases to apply to exported services.  If a name is not found in the map, the original service name is exported.  A ''*'' will match any name. The Aliases list will be processed in order, with the first match found being applied to the exported service. Examples: */foo->*/bar will match foo service in any namesapce, exporting it as bar from its original namespace. */foo->bar/bar will match foo service in any namespace, exporting it as bar/bar. foo/*->bar/* will match any service in foo namespace, exporting it from the bar namespace with its original name */*->bar/* will match any service and export it from the bar namespace with its original name. */*->*/* is the same as not specifying anything'
-                        items:
+  versions:
+  - name: v1
+    schema:
+      openAPIV3Schema:
+        description: ExportedServiceSet is the Schema for configuring exported services.
+          It must be created in the same namespace as the control plane. The name
+          of the ExportedServiceSet resource must match the name of a ServiceMeshPeer
+          resource defining the remote mesh to which the services will be exported.
+          This implies there will be at most one ExportedServiceSet resource per peer
+          and control plane.
+        properties:
+          apiVersion:
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            type: string
+          kind:
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            type: string
+          metadata:
+            type: object
+          spec:
+            description: Spec defines rules for matching services to be exported.
+            properties:
+              exportRules:
+                description: ExportRules are the rules that determine which services
+                  are exported from the mesh.  The list is processed in order and
+                  the first spec in the list that applies to a service is the one
+                  that will be applied.  This allows more specific selectors to be
+                  placed before more general selectors.
+                items:
+                  properties:
+                    labelSelector:
+                      description: LabelSelector provides a mechanism for selecting
+                        services to export by using a label selector to match Service
+                        resources for export.
+                      properties:
+                        aliases:
+                          description: 'Aliases is a map of aliases to apply to exported
+                            services.  If a name is not found in the map, the original
+                            service name is exported.  A ''*'' will match any name.
+                            The Aliases list will be processed in order, with the
+                            first match found being applied to the exported service.
+                            Examples: */foo->*/bar will match foo service in any namesapce,
+                            exporting it as bar from its original namespace. */foo->bar/bar
+                            will match foo service in any namespace, exporting it
+                            as bar/bar. foo/*->bar/* will match any service in foo
+                            namespace, exporting it from the bar namespace with its
+                            original name */*->bar/* will match any service and export
+                            it from the bar namespace with its original name. */*->*/*
+                            is the same as not specifying anything'
+                          items:
+                            properties:
+                              alias:
+                                properties:
+                                  name:
+                                    type: string
+                                  namespace:
+                                    type: string
+                                type: object
+                              name:
+                                type: string
+                              namespace:
+                                type: string
+                            type: object
+                          type: array
+                        namespace:
+                          description: Namespace specifies to which namespace the
+                            selector applies.  An empty value applies to all namespaces
+                            in the mesh.
+                          type: string
+                        selector:
+                          description: Selector used to select Service resources in
+                            the namespace/mesh.  An empty selector selects all services.
                           properties:
-                            alias:
-                              properties:
-                                name:
-                                  type: string
-                                namespace:
-                                  type: string
+                            matchExpressions:
+                              description: matchExpressions is a list of label selector
+                                requirements. The requirements are ANDed.
+                              items:
+                                description: A label selector requirement is a selector
+                                  that contains values, a key, and an operator that
+                                  relates the key and values.
+                                properties:
+                                  key:
+                                    description: key is the label key that the selector
+                                      applies to.
+                                    type: string
+                                  operator:
+                                    description: operator represents a key's relationship
+                                      to a set of values. Valid operators are In,
+                                      NotIn, Exists and DoesNotExist.
+                                    type: string
+                                  values:
+                                    description: values is an array of string values.
+                                      If the operator is In or NotIn, the values array
+                                      must be non-empty. If the operator is Exists
+                                      or DoesNotExist, the values array must be empty.
+                                      This array is replaced during a strategic merge
+                                      patch.
+                                    items:
+                                      type: string
+                                    type: array
+                                required:
+                                - key
+                                - operator
+                                type: object
+                              type: array
+                            matchLabels:
+                              additionalProperties:
+                                type: string
+                              description: matchLabels is a map of {key,value} pairs.
+                                A single {key,value} in the matchLabels map is equivalent
+                                to an element of matchExpressions, whose key field
+                                is "key", the operator is "In", and the values array
+                                contains only "value". The requirements are ANDed.
                               type: object
+                          type: object
+                      type: object
+                    nameSelector:
+                      description: NameSelector provides a simple name matcher for
+                        exporting services in the mesh.
+                      properties:
+                        alias:
+                          properties:
                             name:
                               type: string
                             namespace:
                               type: string
                           type: object
-                        type: array
-                      namespace:
-                        description: Namespace specifies to which namespace the selector applies.  An empty value applies to all namespaces in the mesh.
-                        type: string
-                      selector:
-                        description: Selector used to select Service resources in the namespace/mesh.  An empty selector selects all services.
-                        properties:
-                          matchExpressions:
-                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
-                            items:
-                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
-                              properties:
-                                key:
-                                  description: key is the label key that the selector applies to.
-                                  type: string
-                                operator:
-                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
-                                  type: string
-                                values:
-                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
-                                  items:
-                                    type: string
-                                  type: array
-                              required:
-                              - key
-                              - operator
-                              type: object
-                            type: array
-                          matchLabels:
-                            additionalProperties:
-                              type: string
-                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
-                            type: object
-                        type: object
-                    type: object
-                  nameSelector:
-                    description: NameSelector provides a simple name matcher for exporting services in the mesh.
-                    properties:
-                      alias:
-                        properties:
-                          name:
-                            type: string
-                          namespace:
-                            type: string
-                        type: object
-                      name:
-                        type: string
-                      namespace:
-                        type: string
-                    type: object
-                  type:
-                    description: Type of rule.  One of Name or Label.
-                    type: string
-                required:
-                - type
-                type: object
-              type: array
-          type: object
-        status:
-          properties:
-            exportedServices:
-              description: Exports provides details about the services exported by this mesh.
-              items:
-                description: PeerServiceMapping represents the name mapping between an exported service and its local counterpart.
-                properties:
-                  exportedName:
-                    description: ExportedName represents the fully qualified domain name (FQDN) of an exported service.  For an exporting mesh, this is the name that is exported to the remote mesh. For an importing mesh, this would be the name of the service exported by the remote mesh.
-                    type: string
-                  localService:
-                    description: LocalService represents the service in the local (i.e. this) mesh. For an exporting mesh, this would be the service being exported. For an importing mesh, this would be the imported service.
-                    properties:
-                      hostname:
-                        description: Hostname represents fully qualified domain name (FQDN) used to access the service.
-                        type: string
-                      name:
-                        description: Name represents the simple name of the service, e.g. the metadata.name field of a kubernetes Service.
-                        type: string
-                      namespace:
-                        description: Namespace represents the namespace within which the service resides.
-                        type: string
-                    required:
-                    - hostname
-                    - name
-                    - namespace
-                    type: object
-                required:
+                        name:
+                          type: string
+                        namespace:
+                          type: string
+                      type: object
+                    type:
+                      description: Type of rule.  One of NameSelector or LabelSelector.
+                      type: string
+                  required:
+                  - type
+                  type: object
+                type: array
+            type: object
+          status:
+            properties:
+              exportedServices:
+                description: Exports provides details about the services exported
+                  by this mesh.
+                items:
+                  description: PeerServiceMapping represents the name mapping between
+                    an exported service and its local counterpart.
+                  properties:
+                    exportedName:
+                      description: ExportedName represents the fully qualified domain
+                        name (FQDN) of an exported service.  For an exporting mesh,
+                        this is the name that is exported to the remote mesh. For
+                        an importing mesh, this would be the name of the service exported
+                        by the remote mesh.
+                      type: string
+                    localService:
+                      description: LocalService represents the service in the local
+                        (i.e. this) mesh. For an exporting mesh, this would be the
+                        service being exported. For an importing mesh, this would
+                        be the imported service.
+                      properties:
+                        hostname:
+                          description: Hostname represents fully qualified domain
+                            name (FQDN) used to access the service.
+                          type: string
+                        name:
+                          description: Name represents the simple name of the service,
+                            e.g. the metadata.name field of a kubernetes Service.
+                          type: string
+                        namespace:
+                          description: Namespace represents the namespace within which
+                            the service resides.
+                          type: string
+                      required:
+                      - hostname
+                      - name
+                      - namespace
+                      type: object
+                  required:
+                  - exportedName
+                  - localService
+                  type: object
+                type: array
+                x-kubernetes-list-map-keys:
                 - exportedName
-                - localService
-                type: object
-              type: array
-              x-kubernetes-list-map-keys:
-              - exportedName
-              x-kubernetes-list-type: map
-          required:
-          - exportedServices
-          type: object
-      type: object
-  version: v1
-  versions:
-  - name: v1
+                x-kubernetes-list-type: map
+            required:
+            - exportedServices
+            type: object
+        type: object
     served: true
     storage: true
+    subresources:
+      status: {}
 status:
   acceptedNames:
     kind: ""
diff --git a/manifests/charts/base/crds/federation.maistra.io_importedservicesets.yaml b/manifests/charts/base/crds/federation.maistra.io_importedservicesets.yaml
index 76d65c24ed..8dcb552e14 100644
--- a/manifests/charts/base/crds/federation.maistra.io_importedservicesets.yaml
+++ b/manifests/charts/base/crds/federation.maistra.io_importedservicesets.yaml
@@ -1,10 +1,9 @@
 
----
-apiVersion: apiextensions.k8s.io/v1beta1
+apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
+    controller-gen.kubebuilder.io/version: v0.6.2
   creationTimestamp: null
   name: importedservicesets.federation.maistra.io
 spec:
@@ -14,118 +13,156 @@ spec:
     listKind: ImportedServiceSetList
     plural: importedservicesets
     singular: importedserviceset
-  preserveUnknownFields: false
   scope: Namespaced
-  subresources:
-    status: {}
-  validation:
-    openAPIV3Schema:
-      description: ImportedServiceSet is the Schema for configuring imported services.  The name of the ImportedServiceSet resource must match the name of a ServiceMeshPeer resource defining the remote mesh from which the services will be imported.
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: Spec defines rules for matching services to be imported.
-          properties:
-            domainSuffix:
-              description: 'DomainSuffix specifies the domain suffix to be applies to imported services.  If no domain suffix is specified, imported services will be named as follows:    <imported-name>.<imported-namespace>.svc.<mesh-name>-imports.local If a domain suffix is specified, imported services will be named as follows:    <imported-name>.<imported-namespace>.<domain-suffix>'
-              type: string
-            importRules:
-              description: ImportRules are the rules that determine which services are imported to the mesh.  The list is processed in order and the first spec in the list that applies to a service is the one that will be applied.  This allows more specific selectors to be placed before more general selectors.
-              items:
+  versions:
+  - name: v1
+    schema:
+      openAPIV3Schema:
+        description: ImportedServiceSet is the Schema for configuring imported services.
+          It must be created in the same namespace as the control plane. The name
+          of the ImportedServiceSet resource must match the name of a ServiceMeshPeer
+          resource defining the remote mesh from which the services will be imported.
+          This implies there will be at most one ImportedServiceSet resource per peer
+          and control plane.
+        properties:
+          apiVersion:
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            type: string
+          kind:
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            type: string
+          metadata:
+            type: object
+          spec:
+            description: Spec defines rules for matching services to be imported.
+            properties:
+              domainSuffix:
+                description: 'DomainSuffix specifies the domain suffix to be applies
+                  to imported services.  If no domain suffix is specified, imported
+                  services will be named as follows:    <imported-name>.<imported-namespace>.svc.<mesh-name>-imports.local
+                  If a domain suffix is specified, imported services will be named
+                  as follows:    <imported-name>.<imported-namespace>.<domain-suffix>'
+                type: string
+              importRules:
+                description: ImportRules are the rules that determine which services
+                  are imported to the mesh.  The list is processed in order and the
+                  first spec in the list that applies to a service is the one that
+                  will be applied.  This allows more specific selectors to be placed
+                  before more general selectors.
+                items:
+                  properties:
+                    domainSuffix:
+                      description: DomainSuffix applies the specified suffix to services
+                        imported by this rule.  The behavior is identical to that
+                        of ImportedServiceSetSpec.DomainSuffix.
+                      type: string
+                    importAsLocal:
+                      description: ImportAsLocal imports the service as a local service
+                        in the mesh.  For example, if an exported service, foo/bar
+                        is imported as some-ns/service, the service will be imported
+                        as service.some-ns.svc.cluster.local in the some-ns namespace.  If
+                        a service of this name already exists in the mesh, the imported
+                        service's endpoints will be aggregated with any other workloads
+                        associated with the service.  This setting overrides DomainSuffix.
+                      type: boolean
+                    nameSelector:
+                      description: NameSelector provides a simple name matcher for
+                        importing services in the mesh.
+                      properties:
+                        alias:
+                          properties:
+                            name:
+                              type: string
+                            namespace:
+                              type: string
+                          type: object
+                        name:
+                          type: string
+                        namespace:
+                          type: string
+                      type: object
+                    type:
+                      description: Type of rule.  Only NameSelector type is supported.
+                      type: string
+                  required:
+                  - type
+                  type: object
+                type: array
+              locality:
+                description: Locality within which imported services should be associated.
                 properties:
-                  domainSuffix:
-                    description: DomainSuffix applies the specified suffix to services imported by this rule.  The behavior is identical to that of ImportedServiceSetSpec.DomainSuffix.
+                  region:
+                    description: Region within which imported services are located.
                     type: string
-                  importAsLocal:
-                    description: ImportAsLocal imports the service as a local service in the mesh.  For example, if an exported service, foo/bar is imported as some-ns/service, the service will be imported as service.some-ns.svc.cluster.local in the some-ns namespace.  If a service of this name already exists in the mesh, the imported service's endpoints will be aggregated with any other workloads associated with the service.  This setting overrides DomainSuffix.
-                    type: boolean
-                  nameSelector:
-                    description: NameSelector provides a simple name matcher for importing services in the mesh.
-                    properties:
-                      alias:
-                        properties:
-                          name:
-                            type: string
-                          namespace:
-                            type: string
-                        type: object
-                      name:
-                        type: string
-                      namespace:
-                        type: string
-                    type: object
-                  type:
-                    description: Type of rule.  Only Name type is supported.
+                  subzone:
+                    description: Subzone within which imported services are located.  If
+                      Subzone is specified, Zone must also be specified.
                     type: string
-                required:
-                - type
-                type: object
-              type: array
-            locality:
-              description: Locality within which imported services should be associated.
-              properties:
-                region:
-                  description: Region within which imported services are located.
-                  type: string
-                subzone:
-                  description: Subzone within which imported services are located.  If Subzone is specified, Zone must also be specified.
-                  type: string
-                zone:
-                  description: Zone within which imported services are located.  If Zone is specified, Region must also be specified.
-                  type: string
-              type: object
-          type: object
-        status:
-          properties:
-            importedServices:
-              description: Imports provides details about the services imported by this mesh.
-              items:
-                description: PeerServiceMapping represents the name mapping between an exported service and its local counterpart.
-                properties:
-                  exportedName:
-                    description: ExportedName represents the fully qualified domain name (FQDN) of an exported service.  For an exporting mesh, this is the name that is exported to the remote mesh. For an importing mesh, this would be the name of the service exported by the remote mesh.
+                  zone:
+                    description: Zone within which imported services are located.  If
+                      Zone is specified, Region must also be specified.
                     type: string
-                  localService:
-                    description: LocalService represents the service in the local (i.e. this) mesh. For an exporting mesh, this would be the service being exported. For an importing mesh, this would be the imported service.
-                    properties:
-                      hostname:
-                        description: Hostname represents fully qualified domain name (FQDN) used to access the service.
-                        type: string
-                      name:
-                        description: Name represents the simple name of the service, e.g. the metadata.name field of a kubernetes Service.
-                        type: string
-                      namespace:
-                        description: Namespace represents the namespace within which the service resides.
-                        type: string
-                    required:
-                    - hostname
-                    - name
-                    - namespace
-                    type: object
-                required:
-                - exportedName
-                - localService
                 type: object
-              type: array
-              x-kubernetes-list-map-keys:
-              - exportedName
-              x-kubernetes-list-type: map
-          required:
-          - importedServices
-          type: object
-      type: object
-  version: v1
-  versions:
-  - name: v1
+            type: object
+          status:
+            properties:
+              importedServices:
+                description: Imports provides details about the services imported
+                  by this mesh.
+                items:
+                  description: PeerServiceMapping represents the name mapping between
+                    an exported service and its local counterpart.
+                  properties:
+                    exportedName:
+                      description: ExportedName represents the fully qualified domain
+                        name (FQDN) of an exported service.  For an exporting mesh,
+                        this is the name that is exported to the remote mesh. For
+                        an importing mesh, this would be the name of the service exported
+                        by the remote mesh.
+                      type: string
+                    localService:
+                      description: LocalService represents the service in the local
+                        (i.e. this) mesh. For an exporting mesh, this would be the
+                        service being exported. For an importing mesh, this would
+                        be the imported service.
+                      properties:
+                        hostname:
+                          description: Hostname represents fully qualified domain
+                            name (FQDN) used to access the service.
+                          type: string
+                        name:
+                          description: Name represents the simple name of the service,
+                            e.g. the metadata.name field of a kubernetes Service.
+                          type: string
+                        namespace:
+                          description: Namespace represents the namespace within which
+                            the service resides.
+                          type: string
+                      required:
+                      - hostname
+                      - name
+                      - namespace
+                      type: object
+                  required:
+                  - exportedName
+                  - localService
+                  type: object
+                type: array
+                x-kubernetes-list-map-keys:
+                - exportedName
+                x-kubernetes-list-type: map
+            required:
+            - importedServices
+            type: object
+        type: object
     served: true
     storage: true
+    subresources:
+      status: {}
 status:
   acceptedNames:
     kind: ""
diff --git a/manifests/charts/base/crds/federation.maistra.io_servicemeshpeers.yaml b/manifests/charts/base/crds/federation.maistra.io_servicemeshpeers.yaml
index d0d5cdc7e8..ca43fe9949 100644
--- a/manifests/charts/base/crds/federation.maistra.io_servicemeshpeers.yaml
+++ b/manifests/charts/base/crds/federation.maistra.io_servicemeshpeers.yaml
@@ -1,10 +1,9 @@
 
----
-apiVersion: apiextensions.k8s.io/v1beta1
+apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
+    controller-gen.kubebuilder.io/version: v0.6.2
   creationTimestamp: null
   name: servicemeshpeers.federation.maistra.io
 spec:
@@ -16,265 +15,336 @@ spec:
     listKind: ServiceMeshPeerList
     plural: servicemeshpeers
     singular: servicemeshpeer
-  preserveUnknownFields: false
   scope: Namespaced
-  subresources:
-    status: {}
-  validation:
-    openAPIV3Schema:
-      description: ServiceMeshPeer is the Schema for joining two meshes together.  The resource name will be used to identify the 'cluster' to which imported services belong.
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: ServiceMeshPeerSpec configures details required to support federation with another service mesh.
-          properties:
-            gateways:
-              description: Gateways configures the gateways used to facilitate ingress and egress with the other mesh.
-              properties:
-                egress:
-                  description: Gateway through which outbound federated service traffic will travel. This is not required if AllowDirectOutbound is set to true.
-                  properties:
-                    name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
-                      type: string
-                  type: object
-                ingress:
-                  description: Gateway through which inbound federated service traffic will travel.
-                  properties:
-                    name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
-                      type: string
-                  type: object
-              type: object
-            remote:
-              description: Remote configures details related to the remote mesh with which this mesh is federating.
-              properties:
-                addresses:
-                  description: Addresses are the addresses to which discovery and service requests should be sent (i.e. the addresses of ingress gateways on the remote mesh).  These may be specified as resolveable DNS names or IP addresses.
-                  items:
-                    type: string
-                  type: array
-                discoveryPort:
-                  description: DiscoveryPort is the port on which the addresses are handling discovery requests.  Defaults to 8188, if unspecified.
-                  format: int32
-                  type: integer
-                servicePort:
-                  description: ServicePort is the port on which the addresses are handling service requests.  Defaults to 15443, if unspecified.
-                  format: int32
-                  type: integer
-              type: object
-            security:
-              description: Security configures details for securing communication with the other mesh.
-              properties:
-                certificateChain:
-                  description: Name of ConfigMap containing certificate chain to be used to validate the remote.  This is also used to validate certificates used by the remote services (both client and server certificates).  The name of the entry should be root-cert.pem.  If unspecified, it will look for a ConfigMap named <meshfederation-name>-ca-root-cert, e.g. if this resource is named mesh1, it will look for a ConfigMap named mesh1-ca-root-cert.
-                  properties:
-                    apiGroup:
-                      description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
-                      type: string
-                    kind:
-                      description: Kind is the type of resource being referenced
-                      type: string
-                    name:
-                      description: Name is the name of resource being referenced
+  versions:
+  - name: v1
+    schema:
+      openAPIV3Schema:
+        description: ServiceMeshPeer is the Schema for joining two meshes together.  The
+          resource name will be used to identify the 'cluster' to which imported services
+          belong.
+        properties:
+          apiVersion:
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            type: string
+          kind:
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            type: string
+          metadata:
+            type: object
+          spec:
+            description: ServiceMeshPeerSpec configures details required to support
+              federation with another service mesh.
+            properties:
+              gateways:
+                description: Gateways configures the gateways used to facilitate ingress
+                  and egress with the other mesh.
+                properties:
+                  egress:
+                    description: Gateway through which outbound federated service
+                      traffic will travel.
+                    properties:
+                      name:
+                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
+                          TODO: Add other useful fields. apiVersion, kind, uid?'
+                        type: string
+                    type: object
+                  ingress:
+                    description: Gateway through which inbound federated service traffic
+                      will travel.
+                    properties:
+                      name:
+                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
+                          TODO: Add other useful fields. apiVersion, kind, uid?'
+                        type: string
+                    type: object
+                type: object
+              remote:
+                description: Remote configures details related to the remote mesh
+                  with which this mesh is federating.
+                properties:
+                  addresses:
+                    description: Addresses are the addresses to which discovery and
+                      service requests should be sent (i.e. the addresses of ingress
+                      gateways on the remote mesh).  These may be specified as resolveable
+                      DNS names or IP addresses.
+                    items:
                       type: string
-                  required:
-                  - kind
-                  - name
-                  type: object
-                clientID:
-                  description: ClientID of the remote mesh.  This is used to authenticate incoming requrests from the remote mesh's discovery client.
-                  type: string
-                trustDomain:
-                  description: TrustDomain of remote mesh.
-                  type: string
-              type: object
-          type: object
-        status:
-          description: ServiceMeshPeerStatus provides information related to the other mesh.
-          properties:
-            discoveryStatus:
-              description: DiscoveryStatus represents the discovery status of each pilot/istiod pod in the mesh.
-              properties:
-                active:
-                  description: Active represents the pilot/istiod pods actively watching the other mesh for discovery.
-                  items:
-                    description: PodPeerDiscoveryStatus provides discovery details related to a specific pilot/istiod pod.
+                    type: array
+                  discoveryPort:
+                    description: DiscoveryPort is the port on which the addresses
+                      are handling discovery requests.  Defaults to 8188, if unspecified.
+                    format: int32
+                    type: integer
+                  servicePort:
+                    description: ServicePort is the port on which the addresses are
+                      handling service requests.  Defaults to 15443, if unspecified.
+                    format: int32
+                    type: integer
+                type: object
+              security:
+                description: Security configures details for securing communication
+                  with the other mesh.
+                properties:
+                  certificateChain:
+                    description: Name of ConfigMap containing certificate chain to
+                      be used to validate the remote.  This is also used to validate
+                      certificates used by the remote services (both client and server
+                      certificates).  The name of the entry should be root-cert.pem.  If
+                      unspecified, it will look for a ConfigMap named <meshfederation-name>-ca-root-cert,
+                      e.g. if this resource is named mesh1, it will look for a ConfigMap
+                      named mesh1-ca-root-cert.
                     properties:
-                      pod:
-                        description: Pod is the pod name to which these details apply.  This maps to a a pilot/istiod pod.
+                      apiGroup:
+                        description: APIGroup is the group for the resource being
+                          referenced. If APIGroup is not specified, the specified
+                          Kind must be in the core API group. For any other third-party
+                          types, APIGroup is required.
                         type: string
-                      remotes:
-                        description: Remotes represents details related to the inbound connections from remote meshes.
-                        items:
-                          description: DiscoveryRemoteStatus represents details related to an inbound connection from a remote mesh.
+                      kind:
+                        description: Kind is the type of resource being referenced
+                        type: string
+                      name:
+                        description: Name is the name of resource being referenced
+                        type: string
+                    required:
+                    - kind
+                    - name
+                    type: object
+                  clientID:
+                    description: ClientID of the remote mesh.  This is used to authenticate
+                      incoming requrests from the remote mesh's discovery client.
+                    type: string
+                  trustDomain:
+                    description: TrustDomain of remote mesh.
+                    type: string
+                type: object
+            type: object
+          status:
+            description: ServiceMeshPeerStatus provides information related to the
+              other mesh.
+            properties:
+              discoveryStatus:
+                description: DiscoveryStatus represents the discovery status of each
+                  pilot/istiod pod in the mesh.
+                properties:
+                  active:
+                    description: Active represents the pilot/istiod pods actively
+                      watching the other mesh for discovery.
+                    items:
+                      description: PodPeerDiscoveryStatus provides discovery details
+                        related to a specific pilot/istiod pod.
+                      properties:
+                        pod:
+                          description: Pod is the pod name to which these details
+                            apply.  This maps to a a pilot/istiod pod.
+                          type: string
+                        remotes:
+                          description: Remotes represents details related to the inbound
+                            connections from remote meshes.
+                          items:
+                            description: DiscoveryRemoteStatus represents details
+                              related to an inbound connection from a remote mesh.
+                            properties:
+                              connected:
+                                description: Connected identfies an active connection
+                                  with the remote mesh.
+                                type: boolean
+                              lastConnected:
+                                description: LastConnected represents the last time
+                                  a connection with the remote mesh was successful.
+                                format: date-time
+                                type: string
+                              lastDisconnect:
+                                description: LastDisconnect represents the last time
+                                  the connection with the remote mesh was disconnected.
+                                format: date-time
+                                type: string
+                              lastDisconnectStatus:
+                                description: LastDisconnectStatus is the status returned
+                                  the last time the connection with the remote mesh
+                                  was terminated.
+                                type: string
+                              lastEvent:
+                                description: LastEvent represents the last time an
+                                  event was received from the remote mesh.
+                                format: date-time
+                                type: string
+                              lastFullSync:
+                                description: LastFullSync represents the last time
+                                  a full sync was performed with the remote mesh.
+                                format: date-time
+                                type: string
+                              source:
+                                description: Source represents the source of the remote
+                                  watch.
+                                type: string
+                            required:
+                            - connected
+                            - source
+                            type: object
+                          type: array
+                          x-kubernetes-list-map-keys:
+                          - source
+                          x-kubernetes-list-type: map
+                        watch:
+                          description: Watch represents details related to the outbound
+                            connection to the remote mesh.
                           properties:
                             connected:
-                              description: Connected identfies an active connection with the remote mesh.
+                              description: Connected identfies an active connection
+                                with the remote mesh.
                               type: boolean
                             lastConnected:
-                              description: LastConnected represents the last time a connection with the remote mesh was successful.
+                              description: LastConnected represents the last time
+                                a connection with the remote mesh was successful.
                               format: date-time
                               type: string
                             lastDisconnect:
-                              description: LastDisconnect represents the last time the connection with the remote mesh was disconnected.
+                              description: LastDisconnect represents the last time
+                                the connection with the remote mesh was disconnected.
                               format: date-time
                               type: string
                             lastDisconnectStatus:
-                              description: LastDisconnectStatus is the status returned the last time the connection with the remote mesh was terminated.
+                              description: LastDisconnectStatus is the status returned
+                                the last time the connection with the remote mesh
+                                was terminated.
                               type: string
                             lastEvent:
-                              description: LastEvent represents the last time an event was received from the remote mesh.
+                              description: LastEvent represents the last time an event
+                                was received from the remote mesh.
                               format: date-time
                               type: string
                             lastFullSync:
-                              description: LastFullSync represents the last time a full sync was performed with the remote mesh.
+                              description: LastFullSync represents the last time a
+                                full sync was performed with the remote mesh.
                               format: date-time
                               type: string
-                            source:
-                              description: Source represents the source of the remote watch.
-                              type: string
                           required:
                           - connected
-                          - source
                           type: object
-                        type: array
-                        x-kubernetes-list-map-keys:
-                        - source
-                        x-kubernetes-list-type: map
-                      watch:
-                        description: Watch represents details related to the outbound connection to the remote mesh.
-                        properties:
-                          connected:
-                            description: Connected identfies an active connection with the remote mesh.
-                            type: boolean
-                          lastConnected:
-                            description: LastConnected represents the last time a connection with the remote mesh was successful.
-                            format: date-time
-                            type: string
-                          lastDisconnect:
-                            description: LastDisconnect represents the last time the connection with the remote mesh was disconnected.
-                            format: date-time
-                            type: string
-                          lastDisconnectStatus:
-                            description: LastDisconnectStatus is the status returned the last time the connection with the remote mesh was terminated.
-                            type: string
-                          lastEvent:
-                            description: LastEvent represents the last time an event was received from the remote mesh.
-                            format: date-time
-                            type: string
-                          lastFullSync:
-                            description: LastFullSync represents the last time a full sync was performed with the remote mesh.
-                            format: date-time
-                            type: string
-                        required:
-                        - connected
-                        type: object
-                    required:
+                      required:
+                      - pod
+                      type: object
+                    nullable: true
+                    type: array
+                    x-kubernetes-list-map-keys:
                     - pod
-                    type: object
-                  nullable: true
-                  type: array
-                  x-kubernetes-list-map-keys:
-                  - pod
-                  x-kubernetes-list-type: map
-                inactive:
-                  description: Inactive represents the pilot/istiod pods not actively watching the other mesh for discovery.
-                  items:
-                    description: PodPeerDiscoveryStatus provides discovery details related to a specific pilot/istiod pod.
-                    properties:
-                      pod:
-                        description: Pod is the pod name to which these details apply.  This maps to a a pilot/istiod pod.
-                        type: string
-                      remotes:
-                        description: Remotes represents details related to the inbound connections from remote meshes.
-                        items:
-                          description: DiscoveryRemoteStatus represents details related to an inbound connection from a remote mesh.
+                    x-kubernetes-list-type: map
+                  inactive:
+                    description: Inactive represents the pilot/istiod pods not actively
+                      watching the other mesh for discovery.
+                    items:
+                      description: PodPeerDiscoveryStatus provides discovery details
+                        related to a specific pilot/istiod pod.
+                      properties:
+                        pod:
+                          description: Pod is the pod name to which these details
+                            apply.  This maps to a a pilot/istiod pod.
+                          type: string
+                        remotes:
+                          description: Remotes represents details related to the inbound
+                            connections from remote meshes.
+                          items:
+                            description: DiscoveryRemoteStatus represents details
+                              related to an inbound connection from a remote mesh.
+                            properties:
+                              connected:
+                                description: Connected identfies an active connection
+                                  with the remote mesh.
+                                type: boolean
+                              lastConnected:
+                                description: LastConnected represents the last time
+                                  a connection with the remote mesh was successful.
+                                format: date-time
+                                type: string
+                              lastDisconnect:
+                                description: LastDisconnect represents the last time
+                                  the connection with the remote mesh was disconnected.
+                                format: date-time
+                                type: string
+                              lastDisconnectStatus:
+                                description: LastDisconnectStatus is the status returned
+                                  the last time the connection with the remote mesh
+                                  was terminated.
+                                type: string
+                              lastEvent:
+                                description: LastEvent represents the last time an
+                                  event was received from the remote mesh.
+                                format: date-time
+                                type: string
+                              lastFullSync:
+                                description: LastFullSync represents the last time
+                                  a full sync was performed with the remote mesh.
+                                format: date-time
+                                type: string
+                              source:
+                                description: Source represents the source of the remote
+                                  watch.
+                                type: string
+                            required:
+                            - connected
+                            - source
+                            type: object
+                          type: array
+                          x-kubernetes-list-map-keys:
+                          - source
+                          x-kubernetes-list-type: map
+                        watch:
+                          description: Watch represents details related to the outbound
+                            connection to the remote mesh.
                           properties:
                             connected:
-                              description: Connected identfies an active connection with the remote mesh.
+                              description: Connected identfies an active connection
+                                with the remote mesh.
                               type: boolean
                             lastConnected:
-                              description: LastConnected represents the last time a connection with the remote mesh was successful.
+                              description: LastConnected represents the last time
+                                a connection with the remote mesh was successful.
                               format: date-time
                               type: string
                             lastDisconnect:
-                              description: LastDisconnect represents the last time the connection with the remote mesh was disconnected.
+                              description: LastDisconnect represents the last time
+                                the connection with the remote mesh was disconnected.
                               format: date-time
                               type: string
                             lastDisconnectStatus:
-                              description: LastDisconnectStatus is the status returned the last time the connection with the remote mesh was terminated.
+                              description: LastDisconnectStatus is the status returned
+                                the last time the connection with the remote mesh
+                                was terminated.
                               type: string
                             lastEvent:
-                              description: LastEvent represents the last time an event was received from the remote mesh.
+                              description: LastEvent represents the last time an event
+                                was received from the remote mesh.
                               format: date-time
                               type: string
                             lastFullSync:
-                              description: LastFullSync represents the last time a full sync was performed with the remote mesh.
+                              description: LastFullSync represents the last time a
+                                full sync was performed with the remote mesh.
                               format: date-time
                               type: string
-                            source:
-                              description: Source represents the source of the remote watch.
-                              type: string
                           required:
                           - connected
-                          - source
                           type: object
-                        type: array
-                        x-kubernetes-list-map-keys:
-                        - source
-                        x-kubernetes-list-type: map
-                      watch:
-                        description: Watch represents details related to the outbound connection to the remote mesh.
-                        properties:
-                          connected:
-                            description: Connected identfies an active connection with the remote mesh.
-                            type: boolean
-                          lastConnected:
-                            description: LastConnected represents the last time a connection with the remote mesh was successful.
-                            format: date-time
-                            type: string
-                          lastDisconnect:
-                            description: LastDisconnect represents the last time the connection with the remote mesh was disconnected.
-                            format: date-time
-                            type: string
-                          lastDisconnectStatus:
-                            description: LastDisconnectStatus is the status returned the last time the connection with the remote mesh was terminated.
-                            type: string
-                          lastEvent:
-                            description: LastEvent represents the last time an event was received from the remote mesh.
-                            format: date-time
-                            type: string
-                          lastFullSync:
-                            description: LastFullSync represents the last time a full sync was performed with the remote mesh.
-                            format: date-time
-                            type: string
-                        required:
-                        - connected
-                        type: object
-                    required:
+                      required:
+                      - pod
+                      type: object
+                    nullable: true
+                    type: array
+                    x-kubernetes-list-map-keys:
                     - pod
-                    type: object
-                  nullable: true
-                  type: array
-                  x-kubernetes-list-map-keys:
-                  - pod
-                  x-kubernetes-list-type: map
-              type: object
-          type: object
-      type: object
-  version: v1
-  versions:
-  - name: v1
+                    x-kubernetes-list-type: map
+                type: object
+            type: object
+        type: object
     served: true
     storage: true
+    subresources:
+      status: {}
 status:
   acceptedNames:
     kind: ""
diff --git a/manifests/charts/base/crds/maistra.io_servicemeshextensions.yaml b/manifests/charts/base/crds/maistra.io_servicemeshextensions.yaml
index 7f4de0c952..4e22665311 100644
--- a/manifests/charts/base/crds/maistra.io_servicemeshextensions.yaml
+++ b/manifests/charts/base/crds/maistra.io_servicemeshextensions.yaml
@@ -1,9 +1,9 @@
 
-apiVersion: apiextensions.k8s.io/v1beta1
+apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
+    controller-gen.kubebuilder.io/version: v0.6.2
   creationTimestamp: null
   name: servicemeshextensions.maistra.io
 spec:
@@ -17,27 +17,28 @@ spec:
     shortNames:
     - sme
     singular: servicemeshextension
-  preserveUnknownFields: false
   scope: Namespaced
-  subresources:
-    status: {}
-  version: v1
   versions:
   - additionalPrinterColumns:
-    - JSONPath: .status.deployment.ready
-      description: Whether this extension is ready to be consumed
+    - description: Whether this extension is ready to be consumed
+      jsonPath: .status.deployment.ready
       name: Ready
       type: boolean
     name: v1
     schema:
       openAPIV3Schema:
-        description: ServiceMeshExtension is the Schema for the servicemeshextensions API
+        description: ServiceMeshExtension is the Schema for the servicemeshextensions
+          API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
             type: string
           metadata:
             type: object
@@ -50,14 +51,17 @@ spec:
               image:
                 type: string
               imagePullPolicy:
-                description: PullPolicy describes a policy for if/when to pull a container image
+                description: PullPolicy describes a policy for if/when to pull a container
+                  image
                 type: string
               imagePullSecrets:
                 items:
-                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
+                  description: LocalObjectReference contains enough information to
+                    let you locate the referenced object inside the same namespace.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
+                        TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
                 type: array
@@ -67,7 +71,8 @@ spec:
               priority:
                 type: integer
               workloadSelector:
-                description: WorkloadSelector is used to match workloads based on pod labels
+                description: WorkloadSelector is used to match workloads based on
+                  pod labels
                 properties:
                   labels:
                     additionalProperties:
@@ -80,7 +85,8 @@ spec:
             - phase
             type: object
           status:
-            description: ServiceMeshExtensionStatus defines the observed state of ServiceMeshExtension
+            description: ServiceMeshExtensionStatus defines the observed state of
+              ServiceMeshExtension
             properties:
               deployment:
                 properties:
@@ -107,16 +113,23 @@ spec:
         type: object
     served: true
     storage: true
+    subresources:
+      status: {}
   - name: v1alpha1
     schema:
       openAPIV3Schema:
-        description: ServiceMeshExtension is the Schema for the servicemeshextensions API
+        description: ServiceMeshExtension is the Schema for the servicemeshextensions
+          API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
             type: string
           metadata:
             type: object
@@ -128,14 +141,17 @@ spec:
               image:
                 type: string
               imagePullPolicy:
-                description: PullPolicy describes a policy for if/when to pull a container image
+                description: PullPolicy describes a policy for if/when to pull a container
+                  image
                 type: string
               imagePullSecrets:
                 items:
-                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
+                  description: LocalObjectReference contains enough information to
+                    let you locate the referenced object inside the same namespace.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
+                        TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
                 type: array
@@ -145,7 +161,8 @@ spec:
               priority:
                 type: integer
               workloadSelector:
-                description: WorkloadSelector is used to match workloads based on pod labels
+                description: WorkloadSelector is used to match workloads based on
+                  pod labels
                 properties:
                   labels:
                     additionalProperties:
@@ -158,7 +175,8 @@ spec:
             - phase
             type: object
           status:
-            description: ServiceMeshExtensionStatus defines the observed state of ServiceMeshExtension
+            description: ServiceMeshExtensionStatus defines the observed state of
+              ServiceMeshExtension
             properties:
               deployment:
                 properties:
@@ -185,6 +203,8 @@ spec:
         type: object
     served: true
     storage: false
+    subresources:
+      status: {}
 status:
   acceptedNames:
     kind: ""
diff --git a/manifests/charts/base/files/gen-istio-cluster.yaml b/manifests/charts/base/files/gen-istio-cluster.yaml
index 69281d8404..95e33903ef 100644
--- a/manifests/charts/base/files/gen-istio-cluster.yaml
+++ b/manifests/charts/base/files/gen-istio-cluster.yaml
@@ -5996,12 +5996,11 @@ spec:
 ---
 # Source: crds/federation.maistra.io_exportedservicesets.yaml
 
----
-apiVersion: apiextensions.k8s.io/v1beta1
+apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
+    controller-gen.kubebuilder.io/version: v0.6.2
   creationTimestamp: null
   name: exportedservicesets.federation.maistra.io
 spec:
@@ -6011,150 +6010,206 @@ spec:
     listKind: ExportedServiceSetList
     plural: exportedservicesets
     singular: exportedserviceset
-  preserveUnknownFields: false
   scope: Namespaced
-  subresources:
-    status: {}
-  validation:
-    openAPIV3Schema:
-      description: ExportedServiceSet is the Schema for configuring exported services.  The name of the ExportedServiceSet resource must match the name of a ServiceMeshPeer resource defining the remote mesh to which the services will be exported.
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: Spec defines rules for matching services to be exported.
-          properties:
-            exportRules:
-              description: ExportRules are the rules that determine which services are exported from the mesh.  The list is processed in order and the first spec in the list that applies to a service is the one that will be applied.  This allows more specific selectors to be placed before more general selectors.
-              items:
-                properties:
-                  labelSelector:
-                    description: LabelSelector provides a mechanism for selecting services to export by using a label selector to match Service resources for export.
-                    properties:
-                      aliases:
-                        description: 'Aliases is a map of aliases to apply to exported services.  If a name is not found in the map, the original service name is exported.  A ''*'' will match any name. The Aliases list will be processed in order, with the first match found being applied to the exported service. Examples: */foo->*/bar will match foo service in any namesapce, exporting it as bar from its original namespace. */foo->bar/bar will match foo service in any namespace, exporting it as bar/bar. foo/*->bar/* will match any service in foo namespace, exporting it from the bar namespace with its original name */*->bar/* will match any service and export it from the bar namespace with its original name. */*->*/* is the same as not specifying anything'
-                        items:
+  versions:
+  - name: v1
+    schema:
+      openAPIV3Schema:
+        description: ExportedServiceSet is the Schema for configuring exported services.
+          It must be created in the same namespace as the control plane. The name
+          of the ExportedServiceSet resource must match the name of a ServiceMeshPeer
+          resource defining the remote mesh to which the services will be exported.
+          This implies there will be at most one ExportedServiceSet resource per peer
+          and control plane.
+        properties:
+          apiVersion:
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            type: string
+          kind:
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            type: string
+          metadata:
+            type: object
+          spec:
+            description: Spec defines rules for matching services to be exported.
+            properties:
+              exportRules:
+                description: ExportRules are the rules that determine which services
+                  are exported from the mesh.  The list is processed in order and
+                  the first spec in the list that applies to a service is the one
+                  that will be applied.  This allows more specific selectors to be
+                  placed before more general selectors.
+                items:
+                  properties:
+                    labelSelector:
+                      description: LabelSelector provides a mechanism for selecting
+                        services to export by using a label selector to match Service
+                        resources for export.
+                      properties:
+                        aliases:
+                          description: 'Aliases is a map of aliases to apply to exported
+                            services.  If a name is not found in the map, the original
+                            service name is exported.  A ''*'' will match any name.
+                            The Aliases list will be processed in order, with the
+                            first match found being applied to the exported service.
+                            Examples: */foo->*/bar will match foo service in any namesapce,
+                            exporting it as bar from its original namespace. */foo->bar/bar
+                            will match foo service in any namespace, exporting it
+                            as bar/bar. foo/*->bar/* will match any service in foo
+                            namespace, exporting it from the bar namespace with its
+                            original name */*->bar/* will match any service and export
+                            it from the bar namespace with its original name. */*->*/*
+                            is the same as not specifying anything'
+                          items:
+                            properties:
+                              alias:
+                                properties:
+                                  name:
+                                    type: string
+                                  namespace:
+                                    type: string
+                                type: object
+                              name:
+                                type: string
+                              namespace:
+                                type: string
+                            type: object
+                          type: array
+                        namespace:
+                          description: Namespace specifies to which namespace the
+                            selector applies.  An empty value applies to all namespaces
+                            in the mesh.
+                          type: string
+                        selector:
+                          description: Selector used to select Service resources in
+                            the namespace/mesh.  An empty selector selects all services.
                           properties:
-                            alias:
-                              properties:
-                                name:
-                                  type: string
-                                namespace:
-                                  type: string
+                            matchExpressions:
+                              description: matchExpressions is a list of label selector
+                                requirements. The requirements are ANDed.
+                              items:
+                                description: A label selector requirement is a selector
+                                  that contains values, a key, and an operator that
+                                  relates the key and values.
+                                properties:
+                                  key:
+                                    description: key is the label key that the selector
+                                      applies to.
+                                    type: string
+                                  operator:
+                                    description: operator represents a key's relationship
+                                      to a set of values. Valid operators are In,
+                                      NotIn, Exists and DoesNotExist.
+                                    type: string
+                                  values:
+                                    description: values is an array of string values.
+                                      If the operator is In or NotIn, the values array
+                                      must be non-empty. If the operator is Exists
+                                      or DoesNotExist, the values array must be empty.
+                                      This array is replaced during a strategic merge
+                                      patch.
+                                    items:
+                                      type: string
+                                    type: array
+                                required:
+                                - key
+                                - operator
+                                type: object
+                              type: array
+                            matchLabels:
+                              additionalProperties:
+                                type: string
+                              description: matchLabels is a map of {key,value} pairs.
+                                A single {key,value} in the matchLabels map is equivalent
+                                to an element of matchExpressions, whose key field
+                                is "key", the operator is "In", and the values array
+                                contains only "value". The requirements are ANDed.
                               type: object
+                          type: object
+                      type: object
+                    nameSelector:
+                      description: NameSelector provides a simple name matcher for
+                        exporting services in the mesh.
+                      properties:
+                        alias:
+                          properties:
                             name:
                               type: string
                             namespace:
                               type: string
                           type: object
-                        type: array
-                      namespace:
-                        description: Namespace specifies to which namespace the selector applies.  An empty value applies to all namespaces in the mesh.
-                        type: string
-                      selector:
-                        description: Selector used to select Service resources in the namespace/mesh.  An empty selector selects all services.
-                        properties:
-                          matchExpressions:
-                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
-                            items:
-                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
-                              properties:
-                                key:
-                                  description: key is the label key that the selector applies to.
-                                  type: string
-                                operator:
-                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
-                                  type: string
-                                values:
-                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
-                                  items:
-                                    type: string
-                                  type: array
-                              required:
-                              - key
-                              - operator
-                              type: object
-                            type: array
-                          matchLabels:
-                            additionalProperties:
-                              type: string
-                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
-                            type: object
-                        type: object
-                    type: object
-                  nameSelector:
-                    description: NameSelector provides a simple name matcher for exporting services in the mesh.
-                    properties:
-                      alias:
-                        properties:
-                          name:
-                            type: string
-                          namespace:
-                            type: string
-                        type: object
-                      name:
-                        type: string
-                      namespace:
-                        type: string
-                    type: object
-                  type:
-                    description: Type of rule.  One of Name or Label.
-                    type: string
-                required:
-                - type
-                type: object
-              type: array
-          type: object
-        status:
-          properties:
-            exportedServices:
-              description: Exports provides details about the services exported by this mesh.
-              items:
-                description: PeerServiceMapping represents the name mapping between an exported service and its local counterpart.
-                properties:
-                  exportedName:
-                    description: ExportedName represents the fully qualified domain name (FQDN) of an exported service.  For an exporting mesh, this is the name that is exported to the remote mesh. For an importing mesh, this would be the name of the service exported by the remote mesh.
-                    type: string
-                  localService:
-                    description: LocalService represents the service in the local (i.e. this) mesh. For an exporting mesh, this would be the service being exported. For an importing mesh, this would be the imported service.
-                    properties:
-                      hostname:
-                        description: Hostname represents fully qualified domain name (FQDN) used to access the service.
-                        type: string
-                      name:
-                        description: Name represents the simple name of the service, e.g. the metadata.name field of a kubernetes Service.
-                        type: string
-                      namespace:
-                        description: Namespace represents the namespace within which the service resides.
-                        type: string
-                    required:
-                    - hostname
-                    - name
-                    - namespace
-                    type: object
-                required:
+                        name:
+                          type: string
+                        namespace:
+                          type: string
+                      type: object
+                    type:
+                      description: Type of rule.  One of NameSelector or LabelSelector.
+                      type: string
+                  required:
+                  - type
+                  type: object
+                type: array
+            type: object
+          status:
+            properties:
+              exportedServices:
+                description: Exports provides details about the services exported
+                  by this mesh.
+                items:
+                  description: PeerServiceMapping represents the name mapping between
+                    an exported service and its local counterpart.
+                  properties:
+                    exportedName:
+                      description: ExportedName represents the fully qualified domain
+                        name (FQDN) of an exported service.  For an exporting mesh,
+                        this is the name that is exported to the remote mesh. For
+                        an importing mesh, this would be the name of the service exported
+                        by the remote mesh.
+                      type: string
+                    localService:
+                      description: LocalService represents the service in the local
+                        (i.e. this) mesh. For an exporting mesh, this would be the
+                        service being exported. For an importing mesh, this would
+                        be the imported service.
+                      properties:
+                        hostname:
+                          description: Hostname represents fully qualified domain
+                            name (FQDN) used to access the service.
+                          type: string
+                        name:
+                          description: Name represents the simple name of the service,
+                            e.g. the metadata.name field of a kubernetes Service.
+                          type: string
+                        namespace:
+                          description: Namespace represents the namespace within which
+                            the service resides.
+                          type: string
+                      required:
+                      - hostname
+                      - name
+                      - namespace
+                      type: object
+                  required:
+                  - exportedName
+                  - localService
+                  type: object
+                type: array
+                x-kubernetes-list-map-keys:
                 - exportedName
-                - localService
-                type: object
-              type: array
-              x-kubernetes-list-map-keys:
-              - exportedName
-              x-kubernetes-list-type: map
-          required:
-          - exportedServices
-          type: object
-      type: object
-  version: v1
-  versions:
-  - name: v1
+                x-kubernetes-list-type: map
+            required:
+            - exportedServices
+            type: object
+        type: object
     served: true
     storage: true
+    subresources:
+      status: {}
 status:
   acceptedNames:
     kind: ""
@@ -6165,12 +6220,11 @@ status:
 ---
 # Source: crds/federation.maistra.io_importedservicesets.yaml
 
----
-apiVersion: apiextensions.k8s.io/v1beta1
+apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
+    controller-gen.kubebuilder.io/version: v0.6.2
   creationTimestamp: null
   name: importedservicesets.federation.maistra.io
 spec:
@@ -6180,118 +6234,156 @@ spec:
     listKind: ImportedServiceSetList
     plural: importedservicesets
     singular: importedserviceset
-  preserveUnknownFields: false
   scope: Namespaced
-  subresources:
-    status: {}
-  validation:
-    openAPIV3Schema:
-      description: ImportedServiceSet is the Schema for configuring imported services.  The name of the ImportedServiceSet resource must match the name of a ServiceMeshPeer resource defining the remote mesh from which the services will be imported.
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: Spec defines rules for matching services to be imported.
-          properties:
-            domainSuffix:
-              description: 'DomainSuffix specifies the domain suffix to be applies to imported services.  If no domain suffix is specified, imported services will be named as follows:    <imported-name>.<imported-namespace>.svc.<mesh-name>-imports.local If a domain suffix is specified, imported services will be named as follows:    <imported-name>.<imported-namespace>.<domain-suffix>'
-              type: string
-            importRules:
-              description: ImportRules are the rules that determine which services are imported to the mesh.  The list is processed in order and the first spec in the list that applies to a service is the one that will be applied.  This allows more specific selectors to be placed before more general selectors.
-              items:
+  versions:
+  - name: v1
+    schema:
+      openAPIV3Schema:
+        description: ImportedServiceSet is the Schema for configuring imported services.
+          It must be created in the same namespace as the control plane. The name
+          of the ImportedServiceSet resource must match the name of a ServiceMeshPeer
+          resource defining the remote mesh from which the services will be imported.
+          This implies there will be at most one ImportedServiceSet resource per peer
+          and control plane.
+        properties:
+          apiVersion:
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            type: string
+          kind:
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            type: string
+          metadata:
+            type: object
+          spec:
+            description: Spec defines rules for matching services to be imported.
+            properties:
+              domainSuffix:
+                description: 'DomainSuffix specifies the domain suffix to be applies
+                  to imported services.  If no domain suffix is specified, imported
+                  services will be named as follows:    <imported-name>.<imported-namespace>.svc.<mesh-name>-imports.local
+                  If a domain suffix is specified, imported services will be named
+                  as follows:    <imported-name>.<imported-namespace>.<domain-suffix>'
+                type: string
+              importRules:
+                description: ImportRules are the rules that determine which services
+                  are imported to the mesh.  The list is processed in order and the
+                  first spec in the list that applies to a service is the one that
+                  will be applied.  This allows more specific selectors to be placed
+                  before more general selectors.
+                items:
+                  properties:
+                    domainSuffix:
+                      description: DomainSuffix applies the specified suffix to services
+                        imported by this rule.  The behavior is identical to that
+                        of ImportedServiceSetSpec.DomainSuffix.
+                      type: string
+                    importAsLocal:
+                      description: ImportAsLocal imports the service as a local service
+                        in the mesh.  For example, if an exported service, foo/bar
+                        is imported as some-ns/service, the service will be imported
+                        as service.some-ns.svc.cluster.local in the some-ns namespace.  If
+                        a service of this name already exists in the mesh, the imported
+                        service's endpoints will be aggregated with any other workloads
+                        associated with the service.  This setting overrides DomainSuffix.
+                      type: boolean
+                    nameSelector:
+                      description: NameSelector provides a simple name matcher for
+                        importing services in the mesh.
+                      properties:
+                        alias:
+                          properties:
+                            name:
+                              type: string
+                            namespace:
+                              type: string
+                          type: object
+                        name:
+                          type: string
+                        namespace:
+                          type: string
+                      type: object
+                    type:
+                      description: Type of rule.  Only NameSelector type is supported.
+                      type: string
+                  required:
+                  - type
+                  type: object
+                type: array
+              locality:
+                description: Locality within which imported services should be associated.
                 properties:
-                  domainSuffix:
-                    description: DomainSuffix applies the specified suffix to services imported by this rule.  The behavior is identical to that of ImportedServiceSetSpec.DomainSuffix.
+                  region:
+                    description: Region within which imported services are located.
                     type: string
-                  importAsLocal:
-                    description: ImportAsLocal imports the service as a local service in the mesh.  For example, if an exported service, foo/bar is imported as some-ns/service, the service will be imported as service.some-ns.svc.cluster.local in the some-ns namespace.  If a service of this name already exists in the mesh, the imported service's endpoints will be aggregated with any other workloads associated with the service.  This setting overrides DomainSuffix.
-                    type: boolean
-                  nameSelector:
-                    description: NameSelector provides a simple name matcher for importing services in the mesh.
-                    properties:
-                      alias:
-                        properties:
-                          name:
-                            type: string
-                          namespace:
-                            type: string
-                        type: object
-                      name:
-                        type: string
-                      namespace:
-                        type: string
-                    type: object
-                  type:
-                    description: Type of rule.  Only Name type is supported.
+                  subzone:
+                    description: Subzone within which imported services are located.  If
+                      Subzone is specified, Zone must also be specified.
                     type: string
-                required:
-                - type
-                type: object
-              type: array
-            locality:
-              description: Locality within which imported services should be associated.
-              properties:
-                region:
-                  description: Region within which imported services are located.
-                  type: string
-                subzone:
-                  description: Subzone within which imported services are located.  If Subzone is specified, Zone must also be specified.
-                  type: string
-                zone:
-                  description: Zone within which imported services are located.  If Zone is specified, Region must also be specified.
-                  type: string
-              type: object
-          type: object
-        status:
-          properties:
-            importedServices:
-              description: Imports provides details about the services imported by this mesh.
-              items:
-                description: PeerServiceMapping represents the name mapping between an exported service and its local counterpart.
-                properties:
-                  exportedName:
-                    description: ExportedName represents the fully qualified domain name (FQDN) of an exported service.  For an exporting mesh, this is the name that is exported to the remote mesh. For an importing mesh, this would be the name of the service exported by the remote mesh.
+                  zone:
+                    description: Zone within which imported services are located.  If
+                      Zone is specified, Region must also be specified.
                     type: string
-                  localService:
-                    description: LocalService represents the service in the local (i.e. this) mesh. For an exporting mesh, this would be the service being exported. For an importing mesh, this would be the imported service.
-                    properties:
-                      hostname:
-                        description: Hostname represents fully qualified domain name (FQDN) used to access the service.
-                        type: string
-                      name:
-                        description: Name represents the simple name of the service, e.g. the metadata.name field of a kubernetes Service.
-                        type: string
-                      namespace:
-                        description: Namespace represents the namespace within which the service resides.
-                        type: string
-                    required:
-                    - hostname
-                    - name
-                    - namespace
-                    type: object
-                required:
-                - exportedName
-                - localService
                 type: object
-              type: array
-              x-kubernetes-list-map-keys:
-              - exportedName
-              x-kubernetes-list-type: map
-          required:
-          - importedServices
-          type: object
-      type: object
-  version: v1
-  versions:
-  - name: v1
+            type: object
+          status:
+            properties:
+              importedServices:
+                description: Imports provides details about the services imported
+                  by this mesh.
+                items:
+                  description: PeerServiceMapping represents the name mapping between
+                    an exported service and its local counterpart.
+                  properties:
+                    exportedName:
+                      description: ExportedName represents the fully qualified domain
+                        name (FQDN) of an exported service.  For an exporting mesh,
+                        this is the name that is exported to the remote mesh. For
+                        an importing mesh, this would be the name of the service exported
+                        by the remote mesh.
+                      type: string
+                    localService:
+                      description: LocalService represents the service in the local
+                        (i.e. this) mesh. For an exporting mesh, this would be the
+                        service being exported. For an importing mesh, this would
+                        be the imported service.
+                      properties:
+                        hostname:
+                          description: Hostname represents fully qualified domain
+                            name (FQDN) used to access the service.
+                          type: string
+                        name:
+                          description: Name represents the simple name of the service,
+                            e.g. the metadata.name field of a kubernetes Service.
+                          type: string
+                        namespace:
+                          description: Namespace represents the namespace within which
+                            the service resides.
+                          type: string
+                      required:
+                      - hostname
+                      - name
+                      - namespace
+                      type: object
+                  required:
+                  - exportedName
+                  - localService
+                  type: object
+                type: array
+                x-kubernetes-list-map-keys:
+                - exportedName
+                x-kubernetes-list-type: map
+            required:
+            - importedServices
+            type: object
+        type: object
     served: true
     storage: true
+    subresources:
+      status: {}
 status:
   acceptedNames:
     kind: ""
@@ -6302,12 +6394,11 @@ status:
 ---
 # Source: crds/federation.maistra.io_servicemeshpeers.yaml
 
----
-apiVersion: apiextensions.k8s.io/v1beta1
+apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
+    controller-gen.kubebuilder.io/version: v0.6.2
   creationTimestamp: null
   name: servicemeshpeers.federation.maistra.io
 spec:
@@ -6319,265 +6410,336 @@ spec:
     listKind: ServiceMeshPeerList
     plural: servicemeshpeers
     singular: servicemeshpeer
-  preserveUnknownFields: false
   scope: Namespaced
-  subresources:
-    status: {}
-  validation:
-    openAPIV3Schema:
-      description: ServiceMeshPeer is the Schema for joining two meshes together.  The resource name will be used to identify the 'cluster' to which imported services belong.
-      properties:
-        apiVersion:
-          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
-          type: string
-        kind:
-          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
-          type: string
-        metadata:
-          type: object
-        spec:
-          description: ServiceMeshPeerSpec configures details required to support federation with another service mesh.
-          properties:
-            gateways:
-              description: Gateways configures the gateways used to facilitate ingress and egress with the other mesh.
-              properties:
-                egress:
-                  description: Gateway through which outbound federated service traffic will travel. This is not required if AllowDirectOutbound is set to true.
-                  properties:
-                    name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
-                      type: string
-                  type: object
-                ingress:
-                  description: Gateway through which inbound federated service traffic will travel.
-                  properties:
-                    name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
-                      type: string
-                  type: object
-              type: object
-            remote:
-              description: Remote configures details related to the remote mesh with which this mesh is federating.
-              properties:
-                addresses:
-                  description: Addresses are the addresses to which discovery and service requests should be sent (i.e. the addresses of ingress gateways on the remote mesh).  These may be specified as resolveable DNS names or IP addresses.
-                  items:
-                    type: string
-                  type: array
-                discoveryPort:
-                  description: DiscoveryPort is the port on which the addresses are handling discovery requests.  Defaults to 8188, if unspecified.
-                  format: int32
-                  type: integer
-                servicePort:
-                  description: ServicePort is the port on which the addresses are handling service requests.  Defaults to 15443, if unspecified.
-                  format: int32
-                  type: integer
-              type: object
-            security:
-              description: Security configures details for securing communication with the other mesh.
-              properties:
-                certificateChain:
-                  description: Name of ConfigMap containing certificate chain to be used to validate the remote.  This is also used to validate certificates used by the remote services (both client and server certificates).  The name of the entry should be root-cert.pem.  If unspecified, it will look for a ConfigMap named <meshfederation-name>-ca-root-cert, e.g. if this resource is named mesh1, it will look for a ConfigMap named mesh1-ca-root-cert.
-                  properties:
-                    apiGroup:
-                      description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
-                      type: string
-                    kind:
-                      description: Kind is the type of resource being referenced
-                      type: string
-                    name:
-                      description: Name is the name of resource being referenced
+  versions:
+  - name: v1
+    schema:
+      openAPIV3Schema:
+        description: ServiceMeshPeer is the Schema for joining two meshes together.  The
+          resource name will be used to identify the 'cluster' to which imported services
+          belong.
+        properties:
+          apiVersion:
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            type: string
+          kind:
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            type: string
+          metadata:
+            type: object
+          spec:
+            description: ServiceMeshPeerSpec configures details required to support
+              federation with another service mesh.
+            properties:
+              gateways:
+                description: Gateways configures the gateways used to facilitate ingress
+                  and egress with the other mesh.
+                properties:
+                  egress:
+                    description: Gateway through which outbound federated service
+                      traffic will travel.
+                    properties:
+                      name:
+                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
+                          TODO: Add other useful fields. apiVersion, kind, uid?'
+                        type: string
+                    type: object
+                  ingress:
+                    description: Gateway through which inbound federated service traffic
+                      will travel.
+                    properties:
+                      name:
+                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
+                          TODO: Add other useful fields. apiVersion, kind, uid?'
+                        type: string
+                    type: object
+                type: object
+              remote:
+                description: Remote configures details related to the remote mesh
+                  with which this mesh is federating.
+                properties:
+                  addresses:
+                    description: Addresses are the addresses to which discovery and
+                      service requests should be sent (i.e. the addresses of ingress
+                      gateways on the remote mesh).  These may be specified as resolveable
+                      DNS names or IP addresses.
+                    items:
                       type: string
-                  required:
-                  - kind
-                  - name
-                  type: object
-                clientID:
-                  description: ClientID of the remote mesh.  This is used to authenticate incoming requrests from the remote mesh's discovery client.
-                  type: string
-                trustDomain:
-                  description: TrustDomain of remote mesh.
-                  type: string
-              type: object
-          type: object
-        status:
-          description: ServiceMeshPeerStatus provides information related to the other mesh.
-          properties:
-            discoveryStatus:
-              description: DiscoveryStatus represents the discovery status of each pilot/istiod pod in the mesh.
-              properties:
-                active:
-                  description: Active represents the pilot/istiod pods actively watching the other mesh for discovery.
-                  items:
-                    description: PodPeerDiscoveryStatus provides discovery details related to a specific pilot/istiod pod.
+                    type: array
+                  discoveryPort:
+                    description: DiscoveryPort is the port on which the addresses
+                      are handling discovery requests.  Defaults to 8188, if unspecified.
+                    format: int32
+                    type: integer
+                  servicePort:
+                    description: ServicePort is the port on which the addresses are
+                      handling service requests.  Defaults to 15443, if unspecified.
+                    format: int32
+                    type: integer
+                type: object
+              security:
+                description: Security configures details for securing communication
+                  with the other mesh.
+                properties:
+                  certificateChain:
+                    description: Name of ConfigMap containing certificate chain to
+                      be used to validate the remote.  This is also used to validate
+                      certificates used by the remote services (both client and server
+                      certificates).  The name of the entry should be root-cert.pem.  If
+                      unspecified, it will look for a ConfigMap named <meshfederation-name>-ca-root-cert,
+                      e.g. if this resource is named mesh1, it will look for a ConfigMap
+                      named mesh1-ca-root-cert.
                     properties:
-                      pod:
-                        description: Pod is the pod name to which these details apply.  This maps to a a pilot/istiod pod.
+                      apiGroup:
+                        description: APIGroup is the group for the resource being
+                          referenced. If APIGroup is not specified, the specified
+                          Kind must be in the core API group. For any other third-party
+                          types, APIGroup is required.
                         type: string
-                      remotes:
-                        description: Remotes represents details related to the inbound connections from remote meshes.
-                        items:
-                          description: DiscoveryRemoteStatus represents details related to an inbound connection from a remote mesh.
+                      kind:
+                        description: Kind is the type of resource being referenced
+                        type: string
+                      name:
+                        description: Name is the name of resource being referenced
+                        type: string
+                    required:
+                    - kind
+                    - name
+                    type: object
+                  clientID:
+                    description: ClientID of the remote mesh.  This is used to authenticate
+                      incoming requrests from the remote mesh's discovery client.
+                    type: string
+                  trustDomain:
+                    description: TrustDomain of remote mesh.
+                    type: string
+                type: object
+            type: object
+          status:
+            description: ServiceMeshPeerStatus provides information related to the
+              other mesh.
+            properties:
+              discoveryStatus:
+                description: DiscoveryStatus represents the discovery status of each
+                  pilot/istiod pod in the mesh.
+                properties:
+                  active:
+                    description: Active represents the pilot/istiod pods actively
+                      watching the other mesh for discovery.
+                    items:
+                      description: PodPeerDiscoveryStatus provides discovery details
+                        related to a specific pilot/istiod pod.
+                      properties:
+                        pod:
+                          description: Pod is the pod name to which these details
+                            apply.  This maps to a a pilot/istiod pod.
+                          type: string
+                        remotes:
+                          description: Remotes represents details related to the inbound
+                            connections from remote meshes.
+                          items:
+                            description: DiscoveryRemoteStatus represents details
+                              related to an inbound connection from a remote mesh.
+                            properties:
+                              connected:
+                                description: Connected identfies an active connection
+                                  with the remote mesh.
+                                type: boolean
+                              lastConnected:
+                                description: LastConnected represents the last time
+                                  a connection with the remote mesh was successful.
+                                format: date-time
+                                type: string
+                              lastDisconnect:
+                                description: LastDisconnect represents the last time
+                                  the connection with the remote mesh was disconnected.
+                                format: date-time
+                                type: string
+                              lastDisconnectStatus:
+                                description: LastDisconnectStatus is the status returned
+                                  the last time the connection with the remote mesh
+                                  was terminated.
+                                type: string
+                              lastEvent:
+                                description: LastEvent represents the last time an
+                                  event was received from the remote mesh.
+                                format: date-time
+                                type: string
+                              lastFullSync:
+                                description: LastFullSync represents the last time
+                                  a full sync was performed with the remote mesh.
+                                format: date-time
+                                type: string
+                              source:
+                                description: Source represents the source of the remote
+                                  watch.
+                                type: string
+                            required:
+                            - connected
+                            - source
+                            type: object
+                          type: array
+                          x-kubernetes-list-map-keys:
+                          - source
+                          x-kubernetes-list-type: map
+                        watch:
+                          description: Watch represents details related to the outbound
+                            connection to the remote mesh.
                           properties:
                             connected:
-                              description: Connected identfies an active connection with the remote mesh.
+                              description: Connected identfies an active connection
+                                with the remote mesh.
                               type: boolean
                             lastConnected:
-                              description: LastConnected represents the last time a connection with the remote mesh was successful.
+                              description: LastConnected represents the last time
+                                a connection with the remote mesh was successful.
                               format: date-time
                               type: string
                             lastDisconnect:
-                              description: LastDisconnect represents the last time the connection with the remote mesh was disconnected.
+                              description: LastDisconnect represents the last time
+                                the connection with the remote mesh was disconnected.
                               format: date-time
                               type: string
                             lastDisconnectStatus:
-                              description: LastDisconnectStatus is the status returned the last time the connection with the remote mesh was terminated.
+                              description: LastDisconnectStatus is the status returned
+                                the last time the connection with the remote mesh
+                                was terminated.
                               type: string
                             lastEvent:
-                              description: LastEvent represents the last time an event was received from the remote mesh.
+                              description: LastEvent represents the last time an event
+                                was received from the remote mesh.
                               format: date-time
                               type: string
                             lastFullSync:
-                              description: LastFullSync represents the last time a full sync was performed with the remote mesh.
+                              description: LastFullSync represents the last time a
+                                full sync was performed with the remote mesh.
                               format: date-time
                               type: string
-                            source:
-                              description: Source represents the source of the remote watch.
-                              type: string
                           required:
                           - connected
-                          - source
                           type: object
-                        type: array
-                        x-kubernetes-list-map-keys:
-                        - source
-                        x-kubernetes-list-type: map
-                      watch:
-                        description: Watch represents details related to the outbound connection to the remote mesh.
-                        properties:
-                          connected:
-                            description: Connected identfies an active connection with the remote mesh.
-                            type: boolean
-                          lastConnected:
-                            description: LastConnected represents the last time a connection with the remote mesh was successful.
-                            format: date-time
-                            type: string
-                          lastDisconnect:
-                            description: LastDisconnect represents the last time the connection with the remote mesh was disconnected.
-                            format: date-time
-                            type: string
-                          lastDisconnectStatus:
-                            description: LastDisconnectStatus is the status returned the last time the connection with the remote mesh was terminated.
-                            type: string
-                          lastEvent:
-                            description: LastEvent represents the last time an event was received from the remote mesh.
-                            format: date-time
-                            type: string
-                          lastFullSync:
-                            description: LastFullSync represents the last time a full sync was performed with the remote mesh.
-                            format: date-time
-                            type: string
-                        required:
-                        - connected
-                        type: object
-                    required:
+                      required:
+                      - pod
+                      type: object
+                    nullable: true
+                    type: array
+                    x-kubernetes-list-map-keys:
                     - pod
-                    type: object
-                  nullable: true
-                  type: array
-                  x-kubernetes-list-map-keys:
-                  - pod
-                  x-kubernetes-list-type: map
-                inactive:
-                  description: Inactive represents the pilot/istiod pods not actively watching the other mesh for discovery.
-                  items:
-                    description: PodPeerDiscoveryStatus provides discovery details related to a specific pilot/istiod pod.
-                    properties:
-                      pod:
-                        description: Pod is the pod name to which these details apply.  This maps to a a pilot/istiod pod.
-                        type: string
-                      remotes:
-                        description: Remotes represents details related to the inbound connections from remote meshes.
-                        items:
-                          description: DiscoveryRemoteStatus represents details related to an inbound connection from a remote mesh.
+                    x-kubernetes-list-type: map
+                  inactive:
+                    description: Inactive represents the pilot/istiod pods not actively
+                      watching the other mesh for discovery.
+                    items:
+                      description: PodPeerDiscoveryStatus provides discovery details
+                        related to a specific pilot/istiod pod.
+                      properties:
+                        pod:
+                          description: Pod is the pod name to which these details
+                            apply.  This maps to a a pilot/istiod pod.
+                          type: string
+                        remotes:
+                          description: Remotes represents details related to the inbound
+                            connections from remote meshes.
+                          items:
+                            description: DiscoveryRemoteStatus represents details
+                              related to an inbound connection from a remote mesh.
+                            properties:
+                              connected:
+                                description: Connected identfies an active connection
+                                  with the remote mesh.
+                                type: boolean
+                              lastConnected:
+                                description: LastConnected represents the last time
+                                  a connection with the remote mesh was successful.
+                                format: date-time
+                                type: string
+                              lastDisconnect:
+                                description: LastDisconnect represents the last time
+                                  the connection with the remote mesh was disconnected.
+                                format: date-time
+                                type: string
+                              lastDisconnectStatus:
+                                description: LastDisconnectStatus is the status returned
+                                  the last time the connection with the remote mesh
+                                  was terminated.
+                                type: string
+                              lastEvent:
+                                description: LastEvent represents the last time an
+                                  event was received from the remote mesh.
+                                format: date-time
+                                type: string
+                              lastFullSync:
+                                description: LastFullSync represents the last time
+                                  a full sync was performed with the remote mesh.
+                                format: date-time
+                                type: string
+                              source:
+                                description: Source represents the source of the remote
+                                  watch.
+                                type: string
+                            required:
+                            - connected
+                            - source
+                            type: object
+                          type: array
+                          x-kubernetes-list-map-keys:
+                          - source
+                          x-kubernetes-list-type: map
+                        watch:
+                          description: Watch represents details related to the outbound
+                            connection to the remote mesh.
                           properties:
                             connected:
-                              description: Connected identfies an active connection with the remote mesh.
+                              description: Connected identfies an active connection
+                                with the remote mesh.
                               type: boolean
                             lastConnected:
-                              description: LastConnected represents the last time a connection with the remote mesh was successful.
+                              description: LastConnected represents the last time
+                                a connection with the remote mesh was successful.
                               format: date-time
                               type: string
                             lastDisconnect:
-                              description: LastDisconnect represents the last time the connection with the remote mesh was disconnected.
+                              description: LastDisconnect represents the last time
+                                the connection with the remote mesh was disconnected.
                               format: date-time
                               type: string
                             lastDisconnectStatus:
-                              description: LastDisconnectStatus is the status returned the last time the connection with the remote mesh was terminated.
+                              description: LastDisconnectStatus is the status returned
+                                the last time the connection with the remote mesh
+                                was terminated.
                               type: string
                             lastEvent:
-                              description: LastEvent represents the last time an event was received from the remote mesh.
+                              description: LastEvent represents the last time an event
+                                was received from the remote mesh.
                               format: date-time
                               type: string
                             lastFullSync:
-                              description: LastFullSync represents the last time a full sync was performed with the remote mesh.
+                              description: LastFullSync represents the last time a
+                                full sync was performed with the remote mesh.
                               format: date-time
                               type: string
-                            source:
-                              description: Source represents the source of the remote watch.
-                              type: string
                           required:
                           - connected
-                          - source
                           type: object
-                        type: array
-                        x-kubernetes-list-map-keys:
-                        - source
-                        x-kubernetes-list-type: map
-                      watch:
-                        description: Watch represents details related to the outbound connection to the remote mesh.
-                        properties:
-                          connected:
-                            description: Connected identfies an active connection with the remote mesh.
-                            type: boolean
-                          lastConnected:
-                            description: LastConnected represents the last time a connection with the remote mesh was successful.
-                            format: date-time
-                            type: string
-                          lastDisconnect:
-                            description: LastDisconnect represents the last time the connection with the remote mesh was disconnected.
-                            format: date-time
-                            type: string
-                          lastDisconnectStatus:
-                            description: LastDisconnectStatus is the status returned the last time the connection with the remote mesh was terminated.
-                            type: string
-                          lastEvent:
-                            description: LastEvent represents the last time an event was received from the remote mesh.
-                            format: date-time
-                            type: string
-                          lastFullSync:
-                            description: LastFullSync represents the last time a full sync was performed with the remote mesh.
-                            format: date-time
-                            type: string
-                        required:
-                        - connected
-                        type: object
-                    required:
+                      required:
+                      - pod
+                      type: object
+                    nullable: true
+                    type: array
+                    x-kubernetes-list-map-keys:
                     - pod
-                    type: object
-                  nullable: true
-                  type: array
-                  x-kubernetes-list-map-keys:
-                  - pod
-                  x-kubernetes-list-type: map
-              type: object
-          type: object
-      type: object
-  version: v1
-  versions:
-  - name: v1
+                    x-kubernetes-list-type: map
+                type: object
+            type: object
+        type: object
     served: true
     storage: true
+    subresources:
+      status: {}
 status:
   acceptedNames:
     kind: ""
@@ -6588,11 +6750,11 @@ status:
 ---
 # Source: crds/maistra.io_servicemeshextensions.yaml
 
-apiVersion: apiextensions.k8s.io/v1beta1
+apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
 metadata:
   annotations:
-    controller-gen.kubebuilder.io/version: v0.4.1
+    controller-gen.kubebuilder.io/version: v0.6.2
   creationTimestamp: null
   name: servicemeshextensions.maistra.io
 spec:
@@ -6606,27 +6768,28 @@ spec:
     shortNames:
     - sme
     singular: servicemeshextension
-  preserveUnknownFields: false
   scope: Namespaced
-  subresources:
-    status: {}
-  version: v1
   versions:
   - additionalPrinterColumns:
-    - JSONPath: .status.deployment.ready
-      description: Whether this extension is ready to be consumed
+    - description: Whether this extension is ready to be consumed
+      jsonPath: .status.deployment.ready
       name: Ready
       type: boolean
     name: v1
     schema:
       openAPIV3Schema:
-        description: ServiceMeshExtension is the Schema for the servicemeshextensions API
+        description: ServiceMeshExtension is the Schema for the servicemeshextensions
+          API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
             type: string
           metadata:
             type: object
@@ -6639,14 +6802,17 @@ spec:
               image:
                 type: string
               imagePullPolicy:
-                description: PullPolicy describes a policy for if/when to pull a container image
+                description: PullPolicy describes a policy for if/when to pull a container
+                  image
                 type: string
               imagePullSecrets:
                 items:
-                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
+                  description: LocalObjectReference contains enough information to
+                    let you locate the referenced object inside the same namespace.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
+                        TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
                 type: array
@@ -6656,7 +6822,8 @@ spec:
               priority:
                 type: integer
               workloadSelector:
-                description: WorkloadSelector is used to match workloads based on pod labels
+                description: WorkloadSelector is used to match workloads based on
+                  pod labels
                 properties:
                   labels:
                     additionalProperties:
@@ -6669,7 +6836,8 @@ spec:
             - phase
             type: object
           status:
-            description: ServiceMeshExtensionStatus defines the observed state of ServiceMeshExtension
+            description: ServiceMeshExtensionStatus defines the observed state of
+              ServiceMeshExtension
             properties:
               deployment:
                 properties:
@@ -6696,16 +6864,23 @@ spec:
         type: object
     served: true
     storage: true
+    subresources:
+      status: {}
   - name: v1alpha1
     schema:
       openAPIV3Schema:
-        description: ServiceMeshExtension is the Schema for the servicemeshextensions API
+        description: ServiceMeshExtension is the Schema for the servicemeshextensions
+          API
         properties:
           apiVersion:
-            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
+            description: 'APIVersion defines the versioned schema of this representation
+              of an object. Servers should convert recognized schemas to the latest
+              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
             type: string
           kind:
-            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
+            description: 'Kind is a string value representing the REST resource this
+              object represents. Servers may infer this from the endpoint the client
+              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
             type: string
           metadata:
             type: object
@@ -6717,14 +6892,17 @@ spec:
               image:
                 type: string
               imagePullPolicy:
-                description: PullPolicy describes a policy for if/when to pull a container image
+                description: PullPolicy describes a policy for if/when to pull a container
+                  image
                 type: string
               imagePullSecrets:
                 items:
-                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
+                  description: LocalObjectReference contains enough information to
+                    let you locate the referenced object inside the same namespace.
                   properties:
                     name:
-                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
+                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
+                        TODO: Add other useful fields. apiVersion, kind, uid?'
                       type: string
                   type: object
                 type: array
@@ -6734,7 +6912,8 @@ spec:
               priority:
                 type: integer
               workloadSelector:
-                description: WorkloadSelector is used to match workloads based on pod labels
+                description: WorkloadSelector is used to match workloads based on
+                  pod labels
                 properties:
                   labels:
                     additionalProperties:
@@ -6747,7 +6926,8 @@ spec:
             - phase
             type: object
           status:
-            description: ServiceMeshExtensionStatus defines the observed state of ServiceMeshExtension
+            description: ServiceMeshExtensionStatus defines the observed state of
+              ServiceMeshExtension
             properties:
               deployment:
                 properties:
@@ -6774,6 +6954,8 @@ spec:
         type: object
     served: true
     storage: false
+    subresources:
+      status: {}
 status:
   acceptedNames:
     kind: ""
-- 
2.35.3

