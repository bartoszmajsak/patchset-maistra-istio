From eae2a0253f2e46a3d39edd3fae6834322ffca600 Mon Sep 17 00:00:00 2001
From: Istio Automation <istio-testing-bot@google.com>
Date: Wed, 10 Nov 2021 16:18:15 -0800
Subject: [release-1.12] Set sysctls for gateway ports (#36012)

* Set sysctls for gateway ports

Currently, we have two options for gateway ports:
* Use targetPort to bind >1024
* Run as root

Since Kubernetes 1.22, there is another option available, by
configuring the sysctls on the pod.

This is especially important in the gateway controller, as users do not
control the Service. This means we would either need to automagically
configure the targetPort, which becomes tricky (what if we set it to
8080 and then they also want to bind to 8080?) - especially since things
like AuthorizationPolicy use the target port! Even worse, we can never
change it without downtime, so we are locking ourselves into using
targetPort when its not even needed anymore on newer Kubernetes
versions.

This changes the *new* gateway injection template and the Gateway
controller to use this new option when 1.22+ is used. Both of these are
net-new in Istio 1.12, so there is no compatibility concerns at all.

Note: currently the gateway controller is running as root. So this is
dropping privileges, not adding them.

* update golden

* Update to env wg feedback

* add note

Co-authored-by: John Howard <howardjohn@google.com>
---
 manifests/charts/gateway/README.md            |  7 +++-
 .../charts/gateway/templates/deployment.yaml  | 37 +++++++++++++------
 manifests/charts/gateway/values.schema.json   | 10 +++++
 manifests/charts/gateway/values.yaml          | 11 ++++--
 .../kube/gateway/deploymentcontroller.go      | 11 +++++-
 .../kube/gateway/templates/deployment.yaml    | 31 ++++++++++++++++
 .../testdata/deployment/cluster-ip.yaml       | 14 +++++++
 .../testdata/deployment/manual-ip.yaml        | 14 +++++++
 .../gateway/testdata/deployment/simple.yaml   | 14 +++++++
 9 files changed, 131 insertions(+), 18 deletions(-)

diff --git a/manifests/charts/gateway/README.md b/manifests/charts/gateway/README.md
index 2aab11e1cf..31af55b443 100644
--- a/manifests/charts/gateway/README.md
+++ b/manifests/charts/gateway/README.md
@@ -100,7 +100,12 @@ It could be upgraded with
 helm upgrade istio-ingress manifests/charts/gateway -n istio-system --set name=istio-ingressgateway --set labels.app=istio-ingressgateway --set labels.istio=ingressgateway
 ```
 
-Note the name and labels are overridden to match the names of the existing installation
+Note the name and labels are overridden to match the names of the existing installation.
+
+Warning: the helm charts here default to using port 80 and 443, while the old charts used 8080 and 8443.
+If you have AuthorizationPolicies that reference port these ports, you should update them during this process,
+or customize the ports to match the old defaults.
+See the [security advisory](https://istio.io/latest/news/security/istio-security-2021-002/) for more information.
 
 #### Other migrations
 
diff --git a/manifests/charts/gateway/templates/deployment.yaml b/manifests/charts/gateway/templates/deployment.yaml
index 5a6f42175e..b7eff9b630 100644
--- a/manifests/charts/gateway/templates/deployment.yaml
+++ b/manifests/charts/gateway/templates/deployment.yaml
@@ -32,30 +32,45 @@ spec:
         {{- toYaml . | nindent 8 }}
       {{- end }}
       serviceAccountName: {{ include "gateway.serviceAccountName" . }}
-      {{- if not .Values.runAsRoot }}
       securityContext:
-        runAsUser: 1337
-        runAsGroup: 1337
-        runAsNonRoot: true
-        fsGroup: 1337
+      {{- if .Values.securityContext }}
+        {{- toYaml .Values.securityContext | nindent 8 }}
+      {{- else if (semverCompare ">=1.22-0" .Capabilities.KubeVersion.GitVersion) }}
+        # Safe since 1.22: https://github.com/kubernetes/kubernetes/pull/103326
+        sysctls:
+        - name: net.ipv4.ip_unprivileged_port_start
+          value: "0"
       {{- end }}
       containers:
         - name: istio-proxy
           image: auto
-          {{- if not .Values.runAsRoot }}
           securityContext:
-            allowPrivilegeEscalation: false
+          {{- if .Values.containerSecurityContext }}
+            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
+          {{- else if (semverCompare ">=1.22-0" .Capabilities.KubeVersion.GitVersion) }}
+            # Safe since 1.22: https://github.com/kubernetes/kubernetes/pull/103326
             capabilities:
               drop:
               - ALL
+            allowPrivilegeEscalation: false
             privileged: false
             readOnlyRootFilesystem: true
+            runAsUser: 1337
+            runAsGroup: 1337
+            runAsNonRoot: true
+          {{- else }}
+            capabilities:
+              drop:
+              - ALL
+              add:
+              - NET_BIND_SERVICE
+            runAsUser: 0
+            runAsGroup: 1337
+            runAsNonRoot: false
+            allowPrivilegeEscalation: true
+            readOnlyRootFilesystem: true
           {{- end }}
           env:
-          {{- if not .Values.runAsRoot }}
-          - name: ISTIO_META_UNPRIVILEGED_POD
-            value: "true"
-          {{- end }}
           {{- with .Values.networkGateway }}
           - name: ISTIO_META_REQUESTED_NETWORK_VIEW
             value: "{{.}}"
diff --git a/manifests/charts/gateway/values.schema.json b/manifests/charts/gateway/values.schema.json
index f7dbe20715..a0bce38c39 100644
--- a/manifests/charts/gateway/values.schema.json
+++ b/manifests/charts/gateway/values.schema.json
@@ -6,6 +6,12 @@
     "affinity": {
       "type": "object"
     },
+    "securityContext": {
+      "type": ["object", "null"]
+    },
+    "containerSecurityContext": {
+      "type": ["object", "null"]
+    },
     "annotations": {
       "additionalProperties": {
         "type": [
@@ -97,6 +103,10 @@
     "runAsRoot": {
       "type": "boolean"
     },
+    "unprivilegedPort": {
+      "type": ["string", "boolean"],
+      "enum": [true, false, "auto"]
+    },
     "service": {
       "type": "object",
       "properties": {
diff --git a/manifests/charts/gateway/values.yaml b/manifests/charts/gateway/values.yaml
index d6bff8a746..9b0889f1a9 100644
--- a/manifests/charts/gateway/values.yaml
+++ b/manifests/charts/gateway/values.yaml
@@ -26,8 +26,11 @@ podAnnotations:
   inject.istio.io/templates: "gateway"
   sidecar.istio.io/inject: "true"
 
-# Whether to run the gateway in a privileged container
-runAsRoot: false
+# Define the security context for the pod.
+# If unset, this will be automatically set to the minimum privileges required to bind to port 80 and 443.
+# On Kubernetes 1.22+, this only requires the `net.ipv4.ip_unprivileged_port_start` sysctl.
+securityContext: ~
+containerSecurityContext: ~
 
 service:
   # Type of service. Set to "None" to disable the service entirely
@@ -40,11 +43,11 @@ service:
   - name: http2
     port: 80
     protocol: TCP
-    targetPort: 8080
+    targetPort: 80
   - name: https
     port: 443
     protocol: TCP
-    targetPort: 8443
+    targetPort: 443
   annotations: {}
   loadBalancerIP: ""
   loadBalancerSourceRanges: []
diff --git a/pilot/pkg/config/kube/gateway/deploymentcontroller.go b/pilot/pkg/config/kube/gateway/deploymentcontroller.go
index 698bee4b75..f4e435c9ed 100644
--- a/pilot/pkg/config/kube/gateway/deploymentcontroller.go
+++ b/pilot/pkg/config/kube/gateway/deploymentcontroller.go
@@ -184,12 +184,14 @@ func (d *DeploymentController) configureIstioGateway(log *istiolog.Scope, gw gat
 	}
 	log.Info("reconciling")
 
-	if err := d.ApplyTemplate("service.yaml", serviceInput{gw, extractServicePorts(gw)}); err != nil {
+	svc := serviceInput{Gateway: gw, Ports: extractServicePorts(gw)}
+	if err := d.ApplyTemplate("service.yaml", svc); err != nil {
 		return fmt.Errorf("update service: %v", err)
 	}
 	log.Info("service updated")
 
-	if err := d.ApplyTemplate("deployment.yaml", gw); err != nil {
+	dep := deploymentInput{Gateway: gw, KubeVersion122: kube.IsAtLeastVersion(d.client, 22)}
+	if err := d.ApplyTemplate("deployment.yaml", dep); err != nil {
 		return fmt.Errorf("update deployment: %v", err)
 	}
 	log.Info("deployment updated")
@@ -279,6 +281,11 @@ type serviceInput struct {
 	Ports []corev1.ServicePort
 }
 
+type deploymentInput struct {
+	gateway.Gateway
+	KubeVersion122 bool
+}
+
 func extractServicePorts(gw gateway.Gateway) []corev1.ServicePort {
 	svcPorts := make([]corev1.ServicePort, 0, len(gw.Spec.Listeners)+1)
 	svcPorts = append(svcPorts, corev1.ServicePort{
diff --git a/pilot/pkg/config/kube/gateway/templates/deployment.yaml b/pilot/pkg/config/kube/gateway/templates/deployment.yaml
index 568c56d113..2923c2cfeb 100644
--- a/pilot/pkg/config/kube/gateway/templates/deployment.yaml
+++ b/pilot/pkg/config/kube/gateway/templates/deployment.yaml
@@ -32,9 +32,40 @@ spec:
           .Labels
           | nindent 8}}
     spec:
+      {{- if .KubeVersion122 }}
+      {{/* safe since 1.22: https://github.com/kubernetes/kubernetes/pull/103326. */}}
+      securityContext:
+        sysctls:
+        - name: net.ipv4.ip_unprivileged_port_start
+          value: "0"
+      {{- end }}
       containers:
       - image: auto
         name: istio-proxy
+        securityContext:
+        {{- if .KubeVersion122 }}
+          # Safe since 1.22: https://github.com/kubernetes/kubernetes/pull/103326
+          capabilities:
+            drop:
+            - ALL
+          allowPrivilegeEscalation: false
+          privileged: false
+          readOnlyRootFilesystem: true
+          runAsUser: 1337
+          runAsGroup: 1337
+          runAsNonRoot: true
+        {{- else }}
+          capabilities:
+            drop:
+            - ALL
+            add:
+            - NET_BIND_SERVICE
+          runAsUser: 0
+          runAsGroup: 1337
+          runAsNonRoot: false
+          allowPrivilegeEscalation: true
+          readOnlyRootFilesystem: true
+        {{- end }}
         ports:
         - containerPort: 15021
           name: status-port
diff --git a/pilot/pkg/config/kube/gateway/testdata/deployment/cluster-ip.yaml b/pilot/pkg/config/kube/gateway/testdata/deployment/cluster-ip.yaml
index 91930770f5..881c1c38e9 100644
--- a/pilot/pkg/config/kube/gateway/testdata/deployment/cluster-ip.yaml
+++ b/pilot/pkg/config/kube/gateway/testdata/deployment/cluster-ip.yaml
@@ -67,6 +67,20 @@ spec:
           periodSeconds: 2
           successThreshold: 1
           timeoutSeconds: 2
+        securityContext:
+          allowPrivilegeEscalation: false
+          capabilities:
+            drop:
+            - ALL
+          privileged: false
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsNonRoot: true
+          runAsUser: 1337
+      securityContext:
+        sysctls:
+        - name: net.ipv4.ip_unprivileged_port_start
+          value: "0"
 ---
 apiVersion: gateway.networking.k8s.io/v1alpha2
 kind: Gateway
diff --git a/pilot/pkg/config/kube/gateway/testdata/deployment/manual-ip.yaml b/pilot/pkg/config/kube/gateway/testdata/deployment/manual-ip.yaml
index 63286c9841..5810ed3249 100644
--- a/pilot/pkg/config/kube/gateway/testdata/deployment/manual-ip.yaml
+++ b/pilot/pkg/config/kube/gateway/testdata/deployment/manual-ip.yaml
@@ -62,6 +62,20 @@ spec:
           periodSeconds: 2
           successThreshold: 1
           timeoutSeconds: 2
+        securityContext:
+          allowPrivilegeEscalation: false
+          capabilities:
+            drop:
+            - ALL
+          privileged: false
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsNonRoot: true
+          runAsUser: 1337
+      securityContext:
+        sysctls:
+        - name: net.ipv4.ip_unprivileged_port_start
+          value: "0"
 ---
 apiVersion: gateway.networking.k8s.io/v1alpha2
 kind: Gateway
diff --git a/pilot/pkg/config/kube/gateway/testdata/deployment/simple.yaml b/pilot/pkg/config/kube/gateway/testdata/deployment/simple.yaml
index a6e00dcc70..874c0b79b8 100644
--- a/pilot/pkg/config/kube/gateway/testdata/deployment/simple.yaml
+++ b/pilot/pkg/config/kube/gateway/testdata/deployment/simple.yaml
@@ -61,6 +61,20 @@ spec:
           periodSeconds: 2
           successThreshold: 1
           timeoutSeconds: 2
+        securityContext:
+          allowPrivilegeEscalation: false
+          capabilities:
+            drop:
+            - ALL
+          privileged: false
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsNonRoot: true
+          runAsUser: 1337
+      securityContext:
+        sysctls:
+        - name: net.ipv4.ip_unprivileged_port_start
+          value: "0"
 ---
 apiVersion: gateway.networking.k8s.io/v1alpha2
 kind: Gateway
-- 
2.35.3

