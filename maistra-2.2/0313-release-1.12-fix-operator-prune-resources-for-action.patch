From 04856cb756130d2cc5cc4d5730fe44ce0d123056 Mon Sep 17 00:00:00 2001
From: Istio Automation <istio-testing-bot@google.com>
Date: Mon, 25 Apr 2022 08:36:47 -0700
Subject: [release-1.12] fix operator prune resources for action required case.
 (#38515)

* fix operator prune resources for action required case.

* add releasenote.

* Update releasenotes/notes/35657.yaml

Co-authored-by: Shamsher Ansari <shamshera@vmware.com>

Co-authored-by: morvencao <lcao@redhat.com>
Co-authored-by: Shamsher Ansari <shamshera@vmware.com>
---
 .../istiocontrolplane_controller.go           | 24 ++++++++++---------
 operator/pkg/helmreconciler/prune.go          | 11 ++++++++-
 operator/pkg/helmreconciler/reconciler.go     |  6 +++++
 releasenotes/notes/35657.yaml                 | 10 ++++++++
 4 files changed, 39 insertions(+), 12 deletions(-)
 create mode 100644 releasenotes/notes/35657.yaml

diff --git a/operator/pkg/controller/istiocontrolplane/istiocontrolplane_controller.go b/operator/pkg/controller/istiocontrolplane/istiocontrolplane_controller.go
index e45ebc7143..26f94ffe50 100644
--- a/operator/pkg/controller/istiocontrolplane/istiocontrolplane_controller.go
+++ b/operator/pkg/controller/istiocontrolplane/istiocontrolplane_controller.go
@@ -235,6 +235,16 @@ func (r *ReconcileIstioOperator) Reconcile(_ context.Context, request reconcile.
 		return reconcile.Result{}, nil
 	}
 
+	var err error
+	iopMerged := &iopv1alpha1.IstioOperator{}
+	*iopMerged = *iop
+	// get the merged values in iop on top of the defaults for the profile given by iop.profile
+	iopMerged.Spec, err = mergeIOPSWithProfile(iopMerged)
+	if err != nil {
+		scope.Errorf(errdict.OperatorFailedToMergeUserIOP, "failed to merge base profile with user IstioOperator CR %s, %s", iopName, err)
+		return reconcile.Result{}, err
+	}
+
 	deleted := iop.GetDeletionTimestamp() != nil
 	finalizers := sets.NewString(iop.GetFinalizers()...)
 	if deleted {
@@ -245,13 +255,15 @@ func (r *ReconcileIstioOperator) Reconcile(_ context.Context, request reconcile.
 		}
 		scope.Infof("Deleting IstioOperator %s", iopName)
 
-		reconciler, err := helmreconciler.NewHelmReconciler(r.client, r.clientSet, r.config, iop, nil)
+		reconciler, err := helmreconciler.NewHelmReconciler(r.client, r.clientSet, r.config, iopMerged, nil)
 		if err != nil {
 			return reconcile.Result{}, err
 		}
 		if err := reconciler.Delete(); err != nil {
+			scope.Errorf("Failed to delete resources with helm reconciler: %s.", err)
 			return reconcile.Result{}, err
 		}
+
 		finalizers.Delete(finalizer)
 		iop.SetFinalizers(finalizers.List())
 		finalizerError := r.client.Update(context.TODO(), iop)
@@ -296,16 +308,6 @@ func (r *ReconcileIstioOperator) Reconcile(_ context.Context, request reconcile.
 	}
 
 	scope.Info("Updating IstioOperator")
-	var err error
-	iopMerged := &iopv1alpha1.IstioOperator{}
-	*iopMerged = *iop
-	iopMerged.Spec, err = mergeIOPSWithProfile(iopMerged)
-
-	if err != nil {
-		scope.Errorf(errdict.OperatorFailedToMergeUserIOP, "failed to merge base profile with user IstioOperator CR %s, %s", iopName, err)
-		return reconcile.Result{}, err
-	}
-
 	if _, ok := iopMerged.Spec.Values["global"]; !ok {
 		iopMerged.Spec.Values["global"] = make(map[string]interface{})
 	}
diff --git a/operator/pkg/helmreconciler/prune.go b/operator/pkg/helmreconciler/prune.go
index 644c36710e..ab1e6729b2 100644
--- a/operator/pkg/helmreconciler/prune.go
+++ b/operator/pkg/helmreconciler/prune.go
@@ -119,8 +119,17 @@ func (h *HelmReconciler) PruneControlPlaneByRevisionWithController(iopSpec *v1al
 		return errStatus,
 			fmt.Errorf("failed to check proxy infos: %v", err)
 	}
+	pilotEnabled := false
+	// check wherther the istiod is enabled
+	for _, c := range enabledComponents {
+		if c == string(name.PilotComponentName) {
+			pilotEnabled = true
+			break
+		}
+	}
+
 	// TODO(richardwxn): add warning message together with the status
-	if len(pids) != 0 {
+	if len(pids) != 0 && pilotEnabled {
 		msg := fmt.Sprintf("there are proxies still pointing to the pruned control plane: %s.",
 			strings.Join(pids, " "))
 		st := &v1alpha1.InstallStatus{Status: v1alpha1.InstallStatus_ACTION_REQUIRED, Message: msg}
diff --git a/operator/pkg/helmreconciler/reconciler.go b/operator/pkg/helmreconciler/reconciler.go
index 5fbc0f8a24..975f7427d9 100644
--- a/operator/pkg/helmreconciler/reconciler.go
+++ b/operator/pkg/helmreconciler/reconciler.go
@@ -298,6 +298,12 @@ func (h *HelmReconciler) Delete() error {
 		return err
 	}
 
+	// check status here because terminating iop's status can't be updated.
+	if status.Status == v1alpha1.InstallStatus_ACTION_REQUIRED {
+		return fmt.Errorf("action is required before deleting the iop instance: %s", status.Message)
+	}
+
+	// updating status taking no effect for terminating resources.
 	if err := h.SetStatusComplete(status); err != nil {
 		return err
 	}
diff --git a/releasenotes/notes/35657.yaml b/releasenotes/notes/35657.yaml
new file mode 100644
index 0000000000..08f6d9d23a
--- /dev/null
+++ b/releasenotes/notes/35657.yaml
@@ -0,0 +1,10 @@
+apiVersion: release-notes/v2
+kind: bug-fix
+area: installation
+issue:
+- 35657
+
+releaseNotes:
+  - |
+    **Fixed** the in-cluster operator can't prune resources when the Istio control plane have active proxies connected.
+
-- 
2.35.3

