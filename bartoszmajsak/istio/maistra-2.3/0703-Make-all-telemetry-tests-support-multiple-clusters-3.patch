From c1a775f4ca448c0b8fb033010ac7098e59bf0613 Mon Sep 17 00:00:00 2001
From: zirain <hejianpeng2@huawei.com>
Date: Thu, 3 Mar 2022 14:18:08 +0800
Subject: Make all telemetry tests support multiple clusters (#37514)

---
 pkg/test/framework/components/echo/kube/deployment.go         | 4 ++--
 .../telemetry/outboundtrafficpolicy/traffic_test.go           | 1 -
 tests/integration/telemetry/policy/envoy_ratelimit_test.go    | 1 -
 tests/integration/telemetry/stackdriver/vm/main_test.go       | 1 -
 4 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/pkg/test/framework/components/echo/kube/deployment.go b/pkg/test/framework/components/echo/kube/deployment.go
index e0795bbcf6..efa66d4364 100644
--- a/pkg/test/framework/components/echo/kube/deployment.go
+++ b/pkg/test/framework/components/echo/kube/deployment.go
@@ -567,7 +567,7 @@ func (d *deployment) WorkloadReady(w *workload) {
 	// Deploy the workload entry to the primary cluster. We will read WorkloadEntry across clusters.
 	wle := d.workloadEntryYAML(w)
 	if err := d.ctx.ConfigKube(d.cfg.Cluster.Primary()).YAML(wle).Apply(d.cfg.Namespace.Name(), resource.NoCleanup); err != nil {
-		log.Warnf("failed deploying echo WLE for %s/%s to pimary cluster: %v",
+		log.Warnf("failed deploying echo WLE for %s/%s to primary cluster: %v",
 			d.cfg.Namespace.Name(),
 			d.cfg.Service,
 			err)
@@ -581,7 +581,7 @@ func (d *deployment) WorkloadNotReady(w *workload) {
 
 	wle := d.workloadEntryYAML(w)
 	if err := d.ctx.ConfigKube(d.cfg.Cluster.Primary()).YAML(wle).Delete(d.cfg.Namespace.Name()); err != nil {
-		log.Warnf("failed deleting echo WLE for %s/%s from pimary cluster: %v",
+		log.Warnf("failed deleting echo WLE for %s/%s from primary cluster: %v",
 			d.cfg.Namespace.Name(),
 			d.cfg.Service,
 			err)
diff --git a/tests/integration/telemetry/outboundtrafficpolicy/traffic_test.go b/tests/integration/telemetry/outboundtrafficpolicy/traffic_test.go
index 8968507bba..7faa3a14ca 100644
--- a/tests/integration/telemetry/outboundtrafficpolicy/traffic_test.go
+++ b/tests/integration/telemetry/outboundtrafficpolicy/traffic_test.go
@@ -33,7 +33,6 @@ func TestMain(m *testing.M) {
 	var ist istio.Instance
 	// nolint: staticcheck
 	framework.NewSuite(m).
-		RequireSingleCluster().
 		Label(label.CustomSetup).
 		Setup(istio.Setup(&ist, nil)).
 		Setup(setupPrometheus).
diff --git a/tests/integration/telemetry/policy/envoy_ratelimit_test.go b/tests/integration/telemetry/policy/envoy_ratelimit_test.go
index 8934c54c15..a6266097f3 100644
--- a/tests/integration/telemetry/policy/envoy_ratelimit_test.go
+++ b/tests/integration/telemetry/policy/envoy_ratelimit_test.go
@@ -96,7 +96,6 @@ func TestMain(m *testing.M) {
 	// nolint: staticcheck
 	framework.
 		NewSuite(m).
-		RequireSingleCluster().
 		Label(label.CustomSetup).
 		Setup(istio.Setup(&ist, nil)).
 		Setup(testSetup).
diff --git a/tests/integration/telemetry/stackdriver/vm/main_test.go b/tests/integration/telemetry/stackdriver/vm/main_test.go
index 1343b7f144..f133329d57 100644
--- a/tests/integration/telemetry/stackdriver/vm/main_test.go
+++ b/tests/integration/telemetry/stackdriver/vm/main_test.go
@@ -121,7 +121,6 @@ func TestMain(m *testing.M) {
 		// https://github.com/istio/istio/issues/35923. Since IPv6 has no external connectivity, we are "not on GCP"
 		// in the sense that we cannot access the metadata server
 		Label(label.IPv4).
-		RequireSingleCluster().
 		RequireMultiPrimary().
 		Setup(func(ctx resource.Context) error {
 			var err error
-- 
2.35.3

