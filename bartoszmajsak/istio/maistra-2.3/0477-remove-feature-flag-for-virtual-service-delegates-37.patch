From 96bee97a7e7e09605018e65b0d39b3c822b7965a Mon Sep 17 00:00:00 2001
From: Rama Chavali <rama.rao@salesforce.com>
Date: Wed, 2 Feb 2022 11:18:38 +0530
Subject: remove feature flag for virtual service delegates (#37080)

Signed-off-by: Rama Chavali <rama.rao@salesforce.com>
---
 pilot/pkg/features/pilot.go             |  5 -----
 pilot/pkg/model/push_context.go         |  3 ---
 pilot/pkg/model/virtualservice.go       |  7 -------
 pkg/config/validation/validation.go     | 12 ++----------
 pkg/config/validation/virtualservice.go | 11 +++--------
 5 files changed, 5 insertions(+), 33 deletions(-)

diff --git a/pilot/pkg/features/pilot.go b/pilot/pkg/features/pilot.go
index 1e0bc361d1..a258d9488f 100644
--- a/pilot/pkg/features/pilot.go
+++ b/pilot/pkg/features/pilot.go
@@ -352,11 +352,6 @@
 	EnableGatewayAPIDeploymentController = env.RegisterBoolVar("PILOT_ENABLE_GATEWAY_API_DEPLOYMENT_CONTROLLER", true,
 		"If this is set to true, gateway-api resources will automatically provision in cluster deployment, services, etc").Get()
 
-	EnableVirtualServiceDelegate = env.RegisterBoolVar(
-		"PILOT_ENABLE_VIRTUAL_SERVICE_DELEGATE",
-		true,
-		"If set to false, virtualService delegate will not be supported.").Get()
-
 	ClusterName = env.RegisterStringVar("CLUSTER_ID", "Kubernetes",
 		"Defines the cluster and service registry that this Istiod instance is belongs to").Get()
 
diff --git a/pilot/pkg/model/push_context.go b/pilot/pkg/model/push_context.go
index 494da2824c..eeaf099eed 100644
--- a/pilot/pkg/model/push_context.go
+++ b/pilot/pkg/model/push_context.go
@@ -844,9 +844,6 @@ func (ps *PushContext) VirtualServicesForGateway(proxy *Proxy, gateway string) [
 // DelegateVirtualServicesConfigKey lists all the delegate virtual services configkeys associated with the provided virtual services
 func (ps *PushContext) DelegateVirtualServicesConfigKey(vses []config.Config) []ConfigKey {
 	var out []ConfigKey
-	if !features.EnableVirtualServiceDelegate {
-		return out
-	}
 	for _, vs := range vses {
 		out = append(out, ps.virtualServiceIndex.delegates[ConfigKey{Kind: gvk.VirtualService, Namespace: vs.Namespace, Name: vs.Name}]...)
 	}
diff --git a/pilot/pkg/model/virtualservice.go b/pilot/pkg/model/virtualservice.go
index 1810bf942a..feb883bda1 100644
--- a/pilot/pkg/model/virtualservice.go
+++ b/pilot/pkg/model/virtualservice.go
@@ -20,7 +20,6 @@
 	"github.com/gogo/protobuf/jsonpb"
 
 	networking "istio.io/api/networking/v1alpha3"
-	"istio.io/istio/pilot/pkg/features"
 	"istio.io/istio/pilot/pkg/util/sets"
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/constants"
@@ -179,12 +178,6 @@ func mergeVirtualServicesIfNeeded(
 		out = append(out, vs)
 	}
 
-	// If `PILOT_ENABLE_VIRTUAL_SERVICE_DELEGATE` feature disabled,
-	// filter out invalid vs(root or delegate), this can happen after enable -> disable
-	if !features.EnableVirtualServiceDelegate {
-		return out, nil
-	}
-
 	delegatesByRoot := make(map[ConfigKey][]ConfigKey, len(rootVses))
 
 	// 2. merge delegates and root
diff --git a/pkg/config/validation/validation.go b/pkg/config/validation/validation.go
index cd5de99cd3..da4b8fd43d 100644
--- a/pkg/config/validation/validation.go
+++ b/pkg/config/validation/validation.go
@@ -1986,16 +1986,8 @@ func(cfg config.Config) (Warning, error) {
 			return nil, errors.New("cannot cast to virtual service")
 		}
 		errs := Validation{}
-		isDelegate := false
 		if len(virtualService.Hosts) == 0 {
-			if features.EnableVirtualServiceDelegate {
-				isDelegate = true
-			} else {
-				errs = appendValidation(errs, fmt.Errorf("virtual service must have at least one host"))
-			}
-		}
-
-		if isDelegate {
+			// This must be delegate - enforce delegate validations.
 			if len(virtualService.Gateways) != 0 {
 				// meaningless to specify gateways in delegate
 				errs = appendValidation(errs, fmt.Errorf("delegate virtual service must have no gateways specified"))
@@ -2079,7 +2071,7 @@ func(cfg config.Config) (Warning, error) {
 				errs = appendValidation(errs, errors.New("http route may not be null"))
 				continue
 			}
-			errs = appendValidation(errs, validateHTTPRoute(httpRoute, isDelegate))
+			errs = appendValidation(errs, validateHTTPRoute(httpRoute, len(virtualService.Hosts) == 0))
 		}
 		for _, tlsRoute := range virtualService.Tls {
 			errs = appendValidation(errs, validateTLSRoute(tlsRoute, virtualService))
diff --git a/pkg/config/validation/virtualservice.go b/pkg/config/validation/virtualservice.go
index 38dbde3e3f..47bfd5ade8 100644
--- a/pkg/config/validation/virtualservice.go
+++ b/pkg/config/validation/virtualservice.go
@@ -20,7 +20,6 @@
 	"strings"
 
 	networking "istio.io/api/networking/v1alpha3"
-	"istio.io/istio/pilot/pkg/features"
 	"istio.io/istio/pkg/config/labels"
 )
 
@@ -36,14 +35,10 @@ func getHTTPRouteType(http *networking.HTTPRoute, isDelegate bool) HTTPRouteType
 	if isDelegate {
 		return DelegateRoute
 	}
-
-	if features.EnableVirtualServiceDelegate {
-		// root vs's http route
-		if http.Delegate != nil {
-			return RootRoute
-		}
+	// root vs's http route
+	if http.Delegate != nil {
+		return RootRoute
 	}
-
 	return IndependentRoute
 }
 
-- 
2.35.3

