From 26fb8c391268be778ebdbf89af443351e47f5b18 Mon Sep 17 00:00:00 2001
From: Pengyuan Bian <bianpengyuan@google.com>
Date: Thu, 18 Nov 2021 11:30:46 -0800
Subject: Fix cronjob timestamp trimming. (#35655)

* Fix cronjob timestamp trimming.

* update.

* fix.
---
 pkg/kube/util.go      | 14 ++++----
 pkg/kube/util_test.go | 75 +++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 83 insertions(+), 6 deletions(-)

diff --git a/pkg/kube/util.go b/pkg/kube/util.go
index fb9387e772..4b0d3cf00f 100644
--- a/pkg/kube/util.go
+++ b/pkg/kube/util.go
@@ -18,7 +18,7 @@
 	"fmt"
 	"os"
 	"path/filepath"
-	"strconv"
+	"regexp"
 	"strings"
 
 	kubeApiCore "k8s.io/api/core/v1"
@@ -35,6 +35,8 @@
 	istioversion "istio.io/pkg/version"
 )
 
+var cronJobNameRegexp = regexp.MustCompile(`(.+)-\d{8,10}$`)
+
 // BuildClientConfig builds a client rest config from a kubeconfig filepath and context.
 // It overrides the current context with the one provided (empty to use default).
 //
@@ -229,11 +231,11 @@ func GetDeployMetaFromPod(pod *kubeApiCore.Pod) (metav1.ObjectMeta, metav1.TypeM
 				name := strings.TrimSuffix(controllerRef.Name, "-"+pod.Labels["pod-template-hash"])
 				deployMeta.Name = name
 				typeMetadata.Kind = "Deployment"
-			} else if typeMetadata.Kind == "Job" && len(controllerRef.Name) > 11 {
-				// If job name suffixed with `-<ten-digit-timestamp>`, trim the suffix and set kind to cron job.
-				l := len(controllerRef.Name)
-				if _, err := strconv.Atoi(controllerRef.Name[l-10:]); err == nil && string(controllerRef.Name[l-11]) == "-" {
-					deployMeta.Name = controllerRef.Name[:l-11]
+			} else if typeMetadata.Kind == "Job" {
+				// If job name suffixed with `-<digit-timestamp>`, where the length of digit timestamp is 8~10,
+				// trim the suffix and set kind to cron job.
+				if jn := cronJobNameRegexp.FindStringSubmatch(controllerRef.Name); len(jn) == 2 {
+					deployMeta.Name = jn[1]
 					typeMetadata.Kind = "CronJob"
 					// heuristically set cron job api version to v1beta1 as it cannot be derived from pod metadata.
 					// Cronjob is not GA yet and latest version is v1beta1: https://github.com/kubernetes/enhancements/pull/978
diff --git a/pkg/kube/util_test.go b/pkg/kube/util_test.go
index 33e7032ad1..7183fb5902 100644
--- a/pkg/kube/util_test.go
+++ b/pkg/kube/util_test.go
@@ -18,7 +18,11 @@
 	"fmt"
 	"os"
 	"path/filepath"
+	"reflect"
 	"testing"
+
+	kubeApiCore "k8s.io/api/core/v1"
+	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 )
 
 func TestBuildClientConfig(t *testing.T) {
@@ -141,3 +145,74 @@ func generateKubeConfig(cluster1Host string, cluster2Host string) (string, error
 	}
 	return filePath, nil
 }
+
+func TestCronJobMetadata(t *testing.T) {
+	tests := []struct {
+		name               string
+		jobName            string
+		wantTypeMetadata   metav1.TypeMeta
+		wantObjectMetadata metav1.ObjectMeta
+	}{
+		{
+			name:    "cron-job-name-sec",
+			jobName: "sec-1234567890",
+			wantTypeMetadata: metav1.TypeMeta{
+				Kind:       "CronJob",
+				APIVersion: "batch/v1beta1",
+			},
+			wantObjectMetadata: metav1.ObjectMeta{
+				Name:         "sec",
+				GenerateName: "sec-1234567890-pod",
+			},
+		},
+		{
+			name:    "cron-job-name-min",
+			jobName: "min-12345678",
+			wantTypeMetadata: metav1.TypeMeta{
+				Kind:       "CronJob",
+				APIVersion: "batch/v1beta1",
+			},
+			wantObjectMetadata: metav1.ObjectMeta{
+				Name:         "min",
+				GenerateName: "min-12345678-pod",
+			},
+		},
+		{
+			name:    "non-cron-job-name",
+			jobName: "job-123",
+			wantTypeMetadata: metav1.TypeMeta{
+				Kind:       "Job",
+				APIVersion: "v1",
+			},
+			wantObjectMetadata: metav1.ObjectMeta{
+				Name:         "job-123",
+				GenerateName: "job-123-pod",
+			},
+		},
+	}
+
+	for _, tt := range tests {
+		controller := true
+		t.Run(tt.name, func(t *testing.T) {
+			gotObjectMeta, gotTypeMeta := GetDeployMetaFromPod(
+				&kubeApiCore.Pod{
+					ObjectMeta: metav1.ObjectMeta{
+						GenerateName: tt.jobName + "-pod",
+						OwnerReferences: []metav1.OwnerReference{{
+							APIVersion: "v1",
+							Controller: &controller,
+							Kind:       "Job",
+							Name:       tt.jobName,
+						}},
+					},
+				},
+			)
+			if !reflect.DeepEqual(gotObjectMeta, tt.wantObjectMetadata) {
+				t.Errorf("Object metadata got %+v want %+v", gotObjectMeta, tt.wantObjectMetadata)
+			}
+			if !reflect.DeepEqual(gotTypeMeta, tt.wantTypeMetadata) {
+				t.Errorf("Type metadata got %+v want %+v", gotTypeMeta, tt.wantTypeMetadata)
+			}
+		})
+	}
+}
-- 
2.35.3

