From 098cc47dfcbdca202208bd241d9dee35cd230a4d Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Fri, 4 Mar 2022 09:30:28 -0800
Subject: Optimize injection and operator jobs (#37607)

* Optimize injection and operator jobs

For https://github.com/istio/istio/issues/37552

* Precompute

* Optimize operator tests

* Filter down rendered manifests

* fix

* lint

* fix
---
 istioctl/cmd/add-to-mesh.go                   |   20 +-
 istioctl/cmd/kubeinject.go                    |   24 +-
 istioctl/pkg/verifier/verifier.go             |    2 +-
 .../default/templates/mutatingwebhook.yaml    |   23 +-
 .../templates/mutatingwebhook.yaml            |   26 +-
 .../templates/mutatingwebhook.yaml            |   26 +-
 operator/cmd/mesh/manifest-generate.go        |    7 +-
 operator/cmd/mesh/manifest-generate_test.go   |   82 +-
 operator/cmd/mesh/manifest_shared_test.go     |   15 +-
 .../manifest-generate/data-snapshot.tar.gz    |  Bin 168320 -> 194700 bytes
 ...all_on.golden-show-in-gh-pull-request.yaml | 1553 +++++++++++------
 .../output/flag_output.golden.yaml            |    2 +
 .../output/flag_output_set_values.golden.yaml |   10 +-
 .../output/helm_values_enablement.golden.yaml |   10 +-
 .../ingressgateway_k8s_settings.golden.yaml   |   20 +-
 .../output/install_package_path.golden.yaml   |    2 +
 .../output/pilot_default.golden.yaml          |  733 +++-----
 .../output/pilot_k8s_settings.golden.yaml     |    2 +
 .../output/pilot_override_values.golden.yaml  |    2 +
 .../output/sidecar_template.golden.yaml       |  153 +-
 .../operator/output/operator-dump.json        |    1 +
 .../operator/output/operator-dump.yaml        |    1 +
 .../operator/output/operator-init.yaml        |    1 +
 .../testdata/profile-dump/output/all_off.txt  |    1 +
 .../testdata/profile-dump/output/all_off.yaml |    4 +-
 operator/cmd/mesh/uninstall.go                |    2 +-
 operator/pkg/component/component.go           |    7 +-
 operator/pkg/controlplane/control_plane.go    |    4 +-
 .../pkg/controlplane/control_plane_test.go    |    2 +-
 operator/pkg/helmreconciler/reconciler.go     |   11 +-
 operator/pkg/helmreconciler/render.go         |    2 +-
 operator/pkg/manifest/shared.go               |    4 +-
 operator/pkg/translate/translate.go           |   45 +-
 operator/pkg/util/yaml.go                     |   11 +
 operator/pkg/util/yaml_test.go                |    9 -
 pilot/pkg/bootstrap/server.go                 |    2 +-
 pkg/kube/inject/inject.go                     |   94 +-
 pkg/kube/inject/inject_test.go                |   58 +-
 pkg/kube/inject/template.go                   |    4 +-
 .../custom-template.yaml.34.mesh.gen.yaml     |    9 +
 .../custom-template.yaml.34.template.gen.yaml | 1029 +++++++++++
 .../custom-template.yaml.34.values.gen.yaml   |  137 ++
 .../testdata/inputs/default.mesh.gen.yaml     |    9 +
 .../testdata/inputs/default.template.gen.yaml | 1001 +++++++++++
 .../testdata/inputs/default.values.gen.yaml   |  135 ++
 .../enable-core-dump.yaml.5.mesh.gen.yaml     |    9 +
 .../enable-core-dump.yaml.5.template.gen.yaml | 1001 +++++++++++
 .../enable-core-dump.yaml.5.values.gen.yaml   |  135 ++
 ...g-cncf-networks-json.yaml.16.mesh.gen.yaml |    9 +
 ...cf-networks-json.yaml.16.template.gen.yaml | 1001 +++++++++++
 ...cncf-networks-json.yaml.16.values.gen.yaml |  136 ++
 ...isting-cncf-networks.yaml.15.mesh.gen.yaml |    9 +
 ...ng-cncf-networks.yaml.15.template.gen.yaml | 1001 +++++++++++
 ...ting-cncf-networks.yaml.15.values.gen.yaml |  136 ++
 ...lo-image-pull-secret.yaml.11.mesh.gen.yaml |    9 +
 ...mage-pull-secret.yaml.11.template.gen.yaml | 1001 +++++++++++
 ...-image-pull-secret.yaml.11.values.gen.yaml |  137 ++
 ...lication-ProxyConfig.yaml.20.mesh.gen.yaml |    9 +
 ...tion-ProxyConfig.yaml.20.template.gen.yaml | 1001 +++++++++++
 ...cation-ProxyConfig.yaml.20.values.gen.yaml |  135 ++
 .../inputs/hello-probes.yaml.18.mesh.gen.yaml |    9 +
 .../hello-probes.yaml.18.template.gen.yaml    | 1001 +++++++++++
 .../hello-probes.yaml.18.values.gen.yaml      |  135 ++
 .../inputs/hello.yaml.0.mesh.gen.yaml         |    9 +
 .../inputs/hello.yaml.0.template.gen.yaml     | 1001 +++++++++++
 .../inputs/hello.yaml.0.values.gen.yaml       |  136 ++
 .../inputs/hello.yaml.1.mesh.gen.yaml         |    9 +
 .../inputs/hello.yaml.1.template.gen.yaml     | 1001 +++++++++++
 .../inputs/hello.yaml.1.values.gen.yaml       |  135 ++
 .../inputs/hello.yaml.10.mesh.gen.yaml        |    9 +
 .../inputs/hello.yaml.10.template.gen.yaml    | 1001 +++++++++++
 .../inputs/hello.yaml.10.values.gen.yaml      |  137 ++
 .../inputs/hello.yaml.12.mesh.gen.yaml        |    9 +
 .../inputs/hello.yaml.12.template.gen.yaml    | 1001 +++++++++++
 .../inputs/hello.yaml.12.values.gen.yaml      |  139 ++
 .../inputs/hello.yaml.13.mesh.gen.yaml        |    9 +
 .../inputs/hello.yaml.13.template.gen.yaml    | 1001 +++++++++++
 .../inputs/hello.yaml.13.values.gen.yaml      |  135 ++
 .../inputs/hello.yaml.14.mesh.gen.yaml        |    9 +
 .../inputs/hello.yaml.14.template.gen.yaml    | 1001 +++++++++++
 .../inputs/hello.yaml.14.values.gen.yaml      |  136 ++
 .../inputs/hello.yaml.17.mesh.gen.yaml        |    9 +
 .../inputs/hello.yaml.17.template.gen.yaml    | 1001 +++++++++++
 .../inputs/hello.yaml.17.values.gen.yaml      |  135 ++
 .../inputs/hello.yaml.3.mesh.gen.yaml         |    9 +
 .../inputs/hello.yaml.3.template.gen.yaml     | 1001 +++++++++++
 .../inputs/hello.yaml.3.values.gen.yaml       |  135 ++
 .../inputs/hello.yaml.4.mesh.gen.yaml         |    9 +
 .../inputs/hello.yaml.4.template.gen.yaml     | 1001 +++++++++++
 .../inputs/hello.yaml.4.values.gen.yaml       |  135 ++
 .../kubevirtInterfaces.yaml.9.mesh.gen.yaml   |    9 +
 ...ubevirtInterfaces.yaml.9.template.gen.yaml | 1001 +++++++++++
 .../kubevirtInterfaces.yaml.9.values.gen.yaml |  135 ++
 .../inputs/status_params.yaml.8.mesh.gen.yaml |    9 +
 .../status_params.yaml.8.template.gen.yaml    | 1001 +++++++++++
 .../status_params.yaml.8.values.gen.yaml      |  135 ++
 .../traffic-params.yaml.7.mesh.gen.yaml       |    9 +
 .../traffic-params.yaml.7.template.gen.yaml   | 1001 +++++++++++
 .../traffic-params.yaml.7.values.gen.yaml     |  135 ++
 pkg/kube/inject/watcher.go                    |   18 +-
 pkg/kube/inject/watcher_test.go               |    3 +-
 pkg/kube/inject/webhook.go                    |  133 +-
 pkg/kube/inject/webhook_test.go               |   67 +-
 .../components/echo/echoboot/echoboot.go      |    9 +-
 tests/fuzz/inject_fuzzer.go                   |   10 +-
 tests/fuzz/misc_fuzzers.go                    |    2 +-
 106 files changed, 24843 insertions(+), 1316 deletions(-)
 create mode 100644 pkg/kube/inject/testdata/inputs/custom-template.yaml.34.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/custom-template.yaml.34.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/custom-template.yaml.34.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/default.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/default.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/default.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.0.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.0.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.0.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.1.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.1.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.1.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.10.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.10.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.10.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.12.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.12.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.12.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.13.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.13.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.13.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.14.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.14.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.14.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.17.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.17.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.17.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.3.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.3.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.3.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.4.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.4.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/hello.yaml.4.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/status_params.yaml.8.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/status_params.yaml.8.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/status_params.yaml.8.values.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.mesh.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.template.gen.yaml
 create mode 100644 pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.values.gen.yaml

diff --git a/istioctl/cmd/add-to-mesh.go b/istioctl/cmd/add-to-mesh.go
index 2dc8cbe0b0..a1d906a731 100644
--- a/istioctl/cmd/add-to-mesh.go
+++ b/istioctl/cmd/add-to-mesh.go
@@ -152,7 +152,7 @@ func deploymentMeshifyCmd() *cobra.Command {
 			writer := cmd.OutOrStdout()
 
 			var valuesConfig string
-			var sidecarTemplate inject.Templates
+			var sidecarTemplate inject.RawTemplates
 			meshConfig, err := setupParameters(&sidecarTemplate, &valuesConfig, opts.Revision)
 			if err != nil {
 				return err
@@ -207,7 +207,7 @@ func svcMeshifyCmd() *cobra.Command {
 			writer := cmd.OutOrStdout()
 
 			var valuesConfig string
-			var sidecarTemplate inject.Templates
+			var sidecarTemplate inject.RawTemplates
 			meshConfig, err := setupParameters(&sidecarTemplate, &valuesConfig, opts.Revision)
 			if err != nil {
 				return err
@@ -231,7 +231,7 @@ func svcMeshifyCmd() *cobra.Command {
 	return cmd
 }
 
-func injectSideCarIntoDeployments(client kubernetes.Interface, deps []appsv1.Deployment, sidecarTemplate inject.Templates, valuesConfig,
+func injectSideCarIntoDeployments(client kubernetes.Interface, deps []appsv1.Deployment, sidecarTemplate inject.RawTemplates, valuesConfig,
 	name, namespace string, revision string, meshConfig *meshconfig.MeshConfig, writer io.Writer, warningHandler func(string)) error {
 	var errs error
 	for _, dep := range deps {
@@ -289,7 +289,7 @@ func externalSvcMeshifyCmd() *cobra.Command {
 	return cmd
 }
 
-func setupParameters(sidecarTemplate *inject.Templates, valuesConfig *string, revision string) (*meshconfig.MeshConfig, error) {
+func setupParameters(sidecarTemplate *inject.RawTemplates, valuesConfig *string, revision string) (*meshconfig.MeshConfig, error) {
 	var meshConfig *meshconfig.MeshConfig
 	var err error
 	injectConfigMapName = defaultInjectWebhookConfigName
@@ -327,12 +327,20 @@ func setupParameters(sidecarTemplate *inject.Templates, valuesConfig *string, re
 	return meshConfig, err
 }
 
-func injectSideCarIntoDeployment(client kubernetes.Interface, dep *appsv1.Deployment, sidecarTemplate inject.Templates, valuesConfig,
+func injectSideCarIntoDeployment(client kubernetes.Interface, dep *appsv1.Deployment, sidecarTemplate inject.RawTemplates, valuesConfig,
 	svcName, svcNamespace string, revision string, meshConfig *meshconfig.MeshConfig, writer io.Writer, warningHandler func(string)) error {
 	var errs error
 	log.Debugf("updating deployment %s.%s with Istio sidecar injected",
 		dep.Name, dep.Namespace)
-	newDep, err := inject.IntoObject(nil, sidecarTemplate, valuesConfig, revision, meshConfig, dep, warningHandler)
+	templs, err := inject.ParseTemplates(sidecarTemplate)
+	if err != nil {
+		return err
+	}
+	vc, err := inject.NewValuesConfig(valuesConfig)
+	if err != nil {
+		return err
+	}
+	newDep, err := inject.IntoObject(nil, templs, vc, revision, meshConfig, dep, warningHandler)
 	if err != nil {
 		errs = multierror.Append(errs, fmt.Errorf("failed to inject sidecar to deployment resource %s.%s for service %s.%s due to %v",
 			dep.Name, dep.Namespace, svcName, svcNamespace, err))
diff --git a/istioctl/cmd/kubeinject.go b/istioctl/cmd/kubeinject.go
index b1c6150666..36324ffb7a 100644
--- a/istioctl/cmd/kubeinject.go
+++ b/istioctl/cmd/kubeinject.go
@@ -287,10 +287,10 @@ func getValuesFromConfigMap(kubeconfig, revision string) (string, error) {
 	return valuesData, nil
 }
 
-func readInjectConfigFile(f []byte) (inject.Templates, error) {
+func readInjectConfigFile(f []byte) (inject.RawTemplates, error) {
 	var injectConfig inject.Config
 	err := yaml.Unmarshal(f, &injectConfig)
-	if err != nil || len(injectConfig.Templates) == 0 {
+	if err != nil || len(injectConfig.RawTemplates) == 0 {
 		// This must be a direct template, instead of an inject.Config. We support both formats
 		return map[string]string{inject.SidecarTemplateName: string(f)}, nil
 	}
@@ -298,10 +298,10 @@ func readInjectConfigFile(f []byte) (inject.Templates, error) {
 	if err != nil {
 		return nil, err
 	}
-	return cfg.Templates, err
+	return cfg.RawTemplates, err
 }
 
-func getInjectConfigFromConfigMap(kubeconfig, revision string) (inject.Templates, error) {
+func getInjectConfigFromConfigMap(kubeconfig, revision string) (inject.RawTemplates, error) {
 	client, err := createInterface(kubeconfig)
 	if err != nil {
 		return nil, err
@@ -330,7 +330,7 @@ func getInjectConfigFromConfigMap(kubeconfig, revision string) (inject.Templates
 			injectConfigMapName, err)
 	}
 	log.Debugf("using inject template from configmap %q", injectConfigMapName)
-	return injectConfig.Templates, nil
+	return injectConfig.RawTemplates, nil
 }
 
 func setUpExternalInjector(kubeconfig, revision, injectorAddress string) (*ExternalInjector, error) {
@@ -370,7 +370,7 @@ func validateFlags() error {
 	return err
 }
 
-func setupKubeInjectParameters(sidecarTemplate *inject.Templates, valuesConfig *string,
+func setupKubeInjectParameters(sidecarTemplate *inject.RawTemplates, valuesConfig *string,
 	revision, injectorAddress string) (*ExternalInjector, *meshconfig.MeshConfig, error) {
 	var err error
 	injector := &ExternalInjector{}
@@ -574,7 +574,7 @@ func injectCommand() *cobra.Command {
 				}()
 			}
 			var valuesConfig string
-			var sidecarTemplate inject.Templates
+			var sidecarTemplate inject.RawTemplates
 			var meshConfig *meshconfig.MeshConfig
 			rev := opts.Revision
 			// if the revision is "default", render templates with an empty revision
@@ -591,7 +591,15 @@ func injectCommand() *cobra.Command {
 				return err
 			}
 			var warnings []string
-			retval := inject.IntoResourceFile(injector, sidecarTemplate, valuesConfig, rev, meshConfig,
+			templs, err := inject.ParseTemplates(sidecarTemplate)
+			if err != nil {
+				return err
+			}
+			vc, err := inject.NewValuesConfig(valuesConfig)
+			if err != nil {
+				return err
+			}
+			retval := inject.IntoResourceFile(injector, templs, vc, rev, meshConfig,
 				reader, writer, func(warning string) {
 					warnings = append(warnings, warning)
 				})
diff --git a/istioctl/pkg/verifier/verifier.go b/istioctl/pkg/verifier/verifier.go
index d2648425bd..5b70c3b4eb 100644
--- a/istioctl/pkg/verifier/verifier.go
+++ b/istioctl/pkg/verifier/verifier.go
@@ -215,7 +215,7 @@ func (v *StatusVerifier) verifyInstall() error {
 func (v *StatusVerifier) verifyPostInstallIstioOperator(iop *v1alpha1.IstioOperator, filename string) (int, int, error) {
 	t := translate.NewTranslator()
 
-	cp, err := controlplane.NewIstioControlPlane(iop.Spec, t)
+	cp, err := controlplane.NewIstioControlPlane(iop.Spec, t, nil)
 	if err != nil {
 		return 0, 0, err
 	}
diff --git a/manifests/charts/default/templates/mutatingwebhook.yaml b/manifests/charts/default/templates/mutatingwebhook.yaml
index 7dc189da13..11c029bd04 100644
--- a/manifests/charts/default/templates/mutatingwebhook.yaml
+++ b/manifests/charts/default/templates/mutatingwebhook.yaml
@@ -1,15 +1,20 @@
 # Adapted from istio-discovery/templates/mutatingwebhook.yaml
 # Removed paths for legacy and default selectors since a revision tag
 # is inherently created from a specific revision
+{{/* Copy just what we need to avoid expensive deepCopy */}}
+{{- $whv := dict
+ "revision" .Values.revision
+  "injectionURL" .Values.istiodRemote.injectionURL
+  "namespace" .Release.Namespace }}
 {{- define "core" }}
 - name: {{.Prefix}}sidecar-injector.istio.io
   clientConfig:
-    {{- if .Values.istiodRemote.injectionURL }}
-    url: {{ .Values.istiodRemote.injectionURL }}
+    {{- if .injectionURL }}
+    url: {{ .injectionURL }}
     {{- else }}
     service:
-      name: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}
-      namespace: {{ .Release.Namespace }}
+      name: istiod{{- if not (eq .revision "") }}-{{ .revision }}{{- end }}
+      namespace: {{ .namespace }}
       path: "/inject"
     {{- end }}
   sideEffects: None
@@ -34,7 +39,7 @@ metadata:
     app: sidecar-injector
     release: {{ .Release.Name }}
 webhooks:
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "rev.namespace.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "rev.namespace.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio.io/rev
@@ -49,7 +54,7 @@ webhooks:
       operator: NotIn
       values:
       - "false"
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "rev.object.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "rev.object.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio.io/rev
@@ -68,7 +73,7 @@ webhooks:
       - "default"
 
 {{- /* Case 1: Namespace selector enabled, and object selector is not injected */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "namespace.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "namespace.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
@@ -83,7 +88,7 @@ webhooks:
       - "false"
 
 {{- /* Case 2: no namespace label, but object selector is enabled (and revision label is not, which has priority) */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "object.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "object.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
@@ -101,7 +106,7 @@ webhooks:
 
 {{- if .Values.sidecarInjectorWebhook.enableNamespacesByDefault }}
 {{- /* Special case 3: no labels at all */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "auto.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "auto.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
diff --git a/manifests/charts/istio-control/istio-discovery/templates/mutatingwebhook.yaml b/manifests/charts/istio-control/istio-discovery/templates/mutatingwebhook.yaml
index 2b896b8e0b..e9b0f2c163 100644
--- a/manifests/charts/istio-control/istio-discovery/templates/mutatingwebhook.yaml
+++ b/manifests/charts/istio-control/istio-discovery/templates/mutatingwebhook.yaml
@@ -1,16 +1,22 @@
 {{- /* Core defines the common configuration used by all webhook segments */}}
+{{/* Copy just what we need to avoid expensive deepCopy */}}
+{{- $whv := dict
+ "revision" .Values.revision
+  "injectionPath" .Values.istiodRemote.injectionPath
+  "injectionURL" .Values.istiodRemote.injectionURL
+  "namespace" .Release.Namespace }}
 {{- define "core" }}
 {{- /* Kubernetes unfortunately requires a unique name for the webhook in some newer versions, so we assign
 a unique prefix to each. */}}
 - name: {{.Prefix}}sidecar-injector.istio.io
   clientConfig:
-    {{- if .Values.istiodRemote.injectionURL }}
-    url: "{{ .Values.istiodRemote.injectionURL }}"
+    {{- if .injectionURL }}
+    url: "{{ .injectionURL }}"
     {{- else }}
     service:
-      name: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}
-      namespace: {{ .Release.Namespace }}
-      path: "{{ .Values.istiodRemote.injectionPath }}"
+      name: istiod{{- if not (eq .revision "") }}-{{ .revision }}{{- end }}
+      namespace: {{ .namespace }}
+      path: "{{ .injectionPath }}"
       port: 443
     {{- end }}
   sideEffects: None
@@ -43,7 +49,7 @@ webhooks:
 
 {{- /* Case 1: namespace selector matches, and object doesn't disable */}}
 {{- /* Note: if both revision and legacy selector, we give precedence to the legacy one */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "rev.namespace.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "rev.namespace.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio.io/rev
@@ -64,7 +70,7 @@ webhooks:
       - "false"
 
 {{- /* Case 2: No namespace selector, but object selects our revision (and doesn't disable) */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "rev.object.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "rev.object.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio.io/rev
@@ -91,7 +97,7 @@ webhooks:
 {{- if (eq .Values.revision "") }}
 
 {{- /* Case 1: Namespace selector enabled, and object selector is not injected */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "namespace.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "namespace.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
@@ -106,7 +112,7 @@ webhooks:
       - "false"
 
 {{- /* Case 2: no namespace label, but object selector is enabled (and revision label is not, which has priority) */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "object.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "object.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
@@ -124,7 +130,7 @@ webhooks:
 
 {{- if .Values.sidecarInjectorWebhook.enableNamespacesByDefault }}
 {{- /* Special case 3: no labels at all */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "auto.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "auto.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
diff --git a/manifests/charts/istiod-remote/templates/mutatingwebhook.yaml b/manifests/charts/istiod-remote/templates/mutatingwebhook.yaml
index 2b896b8e0b..e9b0f2c163 100644
--- a/manifests/charts/istiod-remote/templates/mutatingwebhook.yaml
+++ b/manifests/charts/istiod-remote/templates/mutatingwebhook.yaml
@@ -1,16 +1,22 @@
 {{- /* Core defines the common configuration used by all webhook segments */}}
+{{/* Copy just what we need to avoid expensive deepCopy */}}
+{{- $whv := dict
+ "revision" .Values.revision
+  "injectionPath" .Values.istiodRemote.injectionPath
+  "injectionURL" .Values.istiodRemote.injectionURL
+  "namespace" .Release.Namespace }}
 {{- define "core" }}
 {{- /* Kubernetes unfortunately requires a unique name for the webhook in some newer versions, so we assign
 a unique prefix to each. */}}
 - name: {{.Prefix}}sidecar-injector.istio.io
   clientConfig:
-    {{- if .Values.istiodRemote.injectionURL }}
-    url: "{{ .Values.istiodRemote.injectionURL }}"
+    {{- if .injectionURL }}
+    url: "{{ .injectionURL }}"
     {{- else }}
     service:
-      name: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}
-      namespace: {{ .Release.Namespace }}
-      path: "{{ .Values.istiodRemote.injectionPath }}"
+      name: istiod{{- if not (eq .revision "") }}-{{ .revision }}{{- end }}
+      namespace: {{ .namespace }}
+      path: "{{ .injectionPath }}"
       port: 443
     {{- end }}
   sideEffects: None
@@ -43,7 +49,7 @@ webhooks:
 
 {{- /* Case 1: namespace selector matches, and object doesn't disable */}}
 {{- /* Note: if both revision and legacy selector, we give precedence to the legacy one */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "rev.namespace.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "rev.namespace.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio.io/rev
@@ -64,7 +70,7 @@ webhooks:
       - "false"
 
 {{- /* Case 2: No namespace selector, but object selects our revision (and doesn't disable) */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "rev.object.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "rev.object.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio.io/rev
@@ -91,7 +97,7 @@ webhooks:
 {{- if (eq .Values.revision "") }}
 
 {{- /* Case 1: Namespace selector enabled, and object selector is not injected */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "namespace.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "namespace.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
@@ -106,7 +112,7 @@ webhooks:
       - "false"
 
 {{- /* Case 2: no namespace label, but object selector is enabled (and revision label is not, which has priority) */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "object.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "object.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
@@ -124,7 +130,7 @@ webhooks:
 
 {{- if .Values.sidecarInjectorWebhook.enableNamespacesByDefault }}
 {{- /* Special case 3: no labels at all */}}
-{{- include "core" (mergeOverwrite (deepCopy .) (dict "Prefix" "auto.") ) }}
+{{- include "core" (mergeOverwrite (deepCopy $whv) (dict "Prefix" "auto.") ) }}
   namespaceSelector:
     matchExpressions:
     - key: istio-injection
diff --git a/operator/cmd/mesh/manifest-generate.go b/operator/cmd/mesh/manifest-generate.go
index aab3875080..a279ef9821 100644
--- a/operator/cmd/mesh/manifest-generate.go
+++ b/operator/cmd/mesh/manifest-generate.go
@@ -47,6 +47,8 @@ type ManifestGenerateArgs struct {
 	Revision string
 	// Components is a list of strings specifying which component's manifests to be generated.
 	Components []string
+	// Filter is the list of components to render
+	Filter []string
 }
 
 func (a *ManifestGenerateArgs) String() string {
@@ -70,6 +72,8 @@ func addManifestGenerateFlags(cmd *cobra.Command, args *ManifestGenerateArgs) {
 	cmd.PersistentFlags().StringVarP(&args.ManifestsPath, "manifests", "d", "", ManifestsFlagHelpStr)
 	cmd.PersistentFlags().StringVarP(&args.Revision, "revision", "r", "", revisionFlagHelpStr)
 	cmd.PersistentFlags().StringSliceVar(&args.Components, "component", nil, ComponentFlagHelpStr)
+	cmd.PersistentFlags().StringSliceVar(&args.Filter, "filter", nil, "")
+	_ = cmd.PersistentFlags().MarkHidden("filter")
 }
 
 func ManifestGenerateCmd(rootArgs *RootArgs, mgArgs *ManifestGenerateArgs, logOpts *log.Options) *cobra.Command {
@@ -111,7 +115,8 @@ func ManifestGenerate(args *RootArgs, mgArgs *ManifestGenerateArgs, logopts *log
 		return fmt.Errorf("could not configure logs: %s", err)
 	}
 
-	manifests, _, err := manifest.GenManifests(mgArgs.InFilenames, applyFlagAliases(mgArgs.Set, mgArgs.ManifestsPath, mgArgs.Revision), mgArgs.Force, nil, l)
+	manifests, _, err := manifest.GenManifests(mgArgs.InFilenames, applyFlagAliases(mgArgs.Set, mgArgs.ManifestsPath, mgArgs.Revision),
+		mgArgs.Force, mgArgs.Filter, nil, l)
 	if err != nil {
 		return err
 	}
diff --git a/operator/cmd/mesh/manifest-generate_test.go b/operator/cmd/mesh/manifest-generate_test.go
index fb36c46bb1..915a7828d9 100644
--- a/operator/cmd/mesh/manifest-generate_test.go
+++ b/operator/cmd/mesh/manifest-generate_test.go
@@ -23,6 +23,7 @@
 	"strings"
 	"testing"
 
+	"github.com/google/go-cmp/cmp"
 	. "github.com/onsi/gomega"
 	v1 "k8s.io/api/admissionregistration/v1"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
@@ -93,6 +94,7 @@ type testGroup []struct {
 	flags                       string
 	noInput                     bool
 	outputDir                   string
+	fileSelect                  []string
 	diffSelect                  string
 	diffIgnore                  string
 	chartSource                 chartSourceType
@@ -108,7 +110,7 @@ func TestMain(m *testing.M) {
 func TestManifestGenerateComponentHubTag(t *testing.T) {
 	g := NewWithT(t)
 
-	objs, err := runManifestCommands("component_hub_tag", "", liveCharts)
+	objs, err := runManifestCommands("component_hub_tag", "", liveCharts, []string{"templates/deployment.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -148,7 +150,7 @@ func TestManifestGenerateGateways(t *testing.T) {
 	flags := "-s components.ingressGateways.[0].k8s.resources.requests.memory=999Mi " +
 		"-s components.ingressGateways.[name:user-ingressgateway].k8s.resources.requests.cpu=555m"
 
-	objss, err := runManifestCommands("gateways", flags, liveCharts)
+	objss, err := runManifestCommands("gateways", flags, liveCharts, nil)
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -242,7 +244,7 @@ func TestManifestGenerateWithDuplicateMutatingWebhookConfig(t *testing.T) {
 	for _, tc := range testCases {
 		t.Run(tc.name, func(t *testing.T) {
 			g := NewWithT(t)
-			objs, err := fakeControllerReconcile(testResourceFile, liveCharts, &helmreconciler.Options{Force: tc.force})
+			objs, err := fakeControllerReconcile(testResourceFile, liveCharts, &helmreconciler.Options{Force: tc.force, SkipPrune: true})
 			tc.assertFunc(g, objs, err)
 		})
 	}
@@ -251,7 +253,7 @@ func TestManifestGenerateWithDuplicateMutatingWebhookConfig(t *testing.T) {
 func TestManifestGenerateIstiodRemote(t *testing.T) {
 	g := NewWithT(t)
 
-	objss, err := runManifestCommands("istiod_remote", "", liveCharts)
+	objss, err := runManifestCommands("istiod_remote", "", liveCharts, nil)
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -287,7 +289,7 @@ func TestManifestGenerateIstiodRemote(t *testing.T) {
 
 func TestManifestGenerateAllOff(t *testing.T) {
 	g := NewWithT(t)
-	m, _, err := generateManifest("all_off", "", liveCharts)
+	m, _, err := generateManifest("all_off", "", liveCharts, nil)
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -301,7 +303,7 @@ func TestManifestGenerateAllOff(t *testing.T) {
 func TestManifestGenerateFlagsMinimalProfile(t *testing.T) {
 	g := NewWithT(t)
 	// Change profile from empty to minimal using flag.
-	m, _, err := generateManifest("empty", "-s profile=minimal", liveCharts)
+	m, _, err := generateManifest("empty", "-s profile=minimal", liveCharts, []string{"templates/deployment.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -315,7 +317,7 @@ func TestManifestGenerateFlagsMinimalProfile(t *testing.T) {
 
 func TestManifestGenerateFlagsSetHubTag(t *testing.T) {
 	g := NewWithT(t)
-	m, _, err := generateManifest("minimal", "-s hub=foo -s tag=bar", liveCharts)
+	m, _, err := generateManifest("minimal", "-s hub=foo -s tag=bar", liveCharts, []string{"templates/deployment.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -332,7 +334,8 @@ func TestManifestGenerateFlagsSetHubTag(t *testing.T) {
 
 func TestManifestGenerateFlagsSetValues(t *testing.T) {
 	g := NewWithT(t)
-	m, _, err := generateManifest("default", "-s values.global.proxy.image=myproxy -s values.global.proxy.includeIPRanges=172.30.0.0/16,172.21.0.0/16", liveCharts)
+	m, _, err := generateManifest("default", "-s values.global.proxy.image=myproxy -s values.global.proxy.includeIPRanges=172.30.0.0/16,172.21.0.0/16", liveCharts,
+		[]string{"templates/deployment.yaml", "templates/istiod-injector-configmap.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -362,6 +365,7 @@ func TestManifestGenerateFlags(t *testing.T) {
 		{
 			desc:       "flag_values_enable_egressgateway",
 			diffSelect: "Service:*:istio-egressgateway",
+			fileSelect: []string{"templates/service.yaml"},
 			flags:      "--set values.gateways.istio-egressgateway.enabled=true",
 			noInput:    true,
 		},
@@ -369,18 +373,21 @@ func TestManifestGenerateFlags(t *testing.T) {
 			desc:       "flag_output",
 			flags:      "-o " + flagOutputDir,
 			diffSelect: "Deployment:*:istiod",
+			fileSelect: []string{"templates/deployment.yaml"},
 			outputDir:  flagOutputDir,
 		},
 		{
 			desc:       "flag_output_set_values",
 			diffSelect: "Deployment:*:istio-ingressgateway",
 			flags:      "-s values.global.proxy.image=mynewproxy -o " + flagOutputValuesDir,
+			fileSelect: []string{"templates/deployment.yaml"},
 			outputDir:  flagOutputValuesDir,
 			noInput:    true,
 		},
 		{
 			desc:       "flag_force",
 			diffSelect: "no:resources:selected",
+			fileSelect: []string{""},
 			flags:      "--force",
 		},
 	})
@@ -397,20 +404,27 @@ func TestManifestGeneratePilot(t *testing.T) {
 		{
 			desc:       "pilot_k8s_settings",
 			diffSelect: "Deployment:*:istiod,HorizontalPodAutoscaler:*:istiod",
+			fileSelect: []string{"templates/deployment.yaml", "templates/autoscale.yaml"},
 		},
 		{
 			desc:       "pilot_override_values",
 			diffSelect: "Deployment:*:istiod,HorizontalPodAutoscaler:*:istiod",
+			fileSelect: []string{"templates/deployment.yaml", "templates/autoscale.yaml"},
 		},
 		{
 			desc:       "pilot_override_kubernetes",
 			diffSelect: "Deployment:*:istiod, Service:*:istiod,MutatingWebhookConfiguration:*:istio-sidecar-injector,ClusterRoleBinding::istio-reader-istio-system",
+			fileSelect: []string{
+				"templates/deployment.yaml", "templates/mutatingwebhook.yaml",
+				"templates/service.yaml", "templates/reader-clusterrolebinding.yaml", "templates/clusterrolebinding.yaml",
+			},
 		},
 		// TODO https://github.com/istio/istio/issues/22347 this is broken for overriding things to default value
 		// This can be seen from REGISTRY_ONLY not applying
 		{
 			desc:       "pilot_merge_meshconfig",
 			diffSelect: "ConfigMap:*:istio$",
+			fileSelect: []string{"templates/configmap.yaml"},
 		},
 		{
 			desc:       "pilot_disable_tracing",
@@ -443,11 +457,11 @@ func TestManifestGenerateOrdered(t *testing.T) {
 	// Since this is testing the special case of stable YAML output order, it
 	// does not use the established test group pattern
 	inPath := filepath.Join(testDataDir, "input/all_on.yaml")
-	got1, err := runManifestGenerate([]string{inPath}, "", snapshotCharts)
+	got1, err := runManifestGenerate([]string{inPath}, "", snapshotCharts, nil)
 	if err != nil {
 		t.Fatal(err)
 	}
-	got2, err := runManifestGenerate([]string{inPath}, "", snapshotCharts)
+	got2, err := runManifestGenerate([]string{inPath}, "", snapshotCharts, nil)
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -460,11 +474,11 @@ func TestManifestGenerateOrdered(t *testing.T) {
 
 func TestManifestGenerateFlagAliases(t *testing.T) {
 	inPath := filepath.Join(testDataDir, "input/all_on.yaml")
-	gotSet, err := runManifestGenerate([]string{inPath}, "--set revision=foo", snapshotCharts)
+	gotSet, err := runManifestGenerate([]string{inPath}, "--set revision=foo", snapshotCharts, []string{"templates/deployment.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
-	gotAlias, err := runManifestGenerate([]string{inPath}, "--revision=foo", snapshotCharts)
+	gotAlias, err := runManifestGenerate([]string{inPath}, "--revision=foo", snapshotCharts, []string{"templates/deployment.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -478,7 +492,7 @@ func TestManifestGenerateFlagAliases(t *testing.T) {
 func TestMultiICPSFiles(t *testing.T) {
 	inPathBase := filepath.Join(testDataDir, "input/all_off.yaml")
 	inPathOverride := filepath.Join(testDataDir, "input/helm_values_enablement.yaml")
-	got, err := runManifestGenerate([]string{inPathBase, inPathOverride}, "", snapshotCharts)
+	got, err := runManifestGenerate([]string{inPathBase, inPathOverride}, "", snapshotCharts, []string{"templates/deployment.yaml", "templates/service.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -501,7 +515,7 @@ func TestMultiICPSFiles(t *testing.T) {
 
 func TestBareSpec(t *testing.T) {
 	inPathBase := filepath.Join(testDataDir, "input/bare_spec.yaml")
-	_, err := runManifestGenerate([]string{inPathBase}, "", liveCharts)
+	_, err := runManifestGenerate([]string{inPathBase}, "", liveCharts, []string{"templates/deployment.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -509,7 +523,7 @@ func TestBareSpec(t *testing.T) {
 
 func TestMultipleSpecOneFile(t *testing.T) {
 	inPathBase := filepath.Join(testDataDir, "input/multiple_iops.yaml")
-	_, err := runManifestGenerate([]string{inPathBase}, "", liveCharts)
+	_, err := runManifestGenerate([]string{inPathBase}, "", liveCharts, []string{"templates/deployment.yaml"})
 	if !strings.Contains(err.Error(), "contains multiple IstioOperator CRs, only one per file is supported") {
 		t.Fatalf("got %v, expected error for file with multiple IOPs", err)
 	}
@@ -520,12 +534,12 @@ func TestBareValues(t *testing.T) {
 	// As long as the generate doesn't panic, we pass it.  bare_values.yaml doesn't
 	// overlay well because JSON doesn't handle null values, and our charts
 	// don't expect values to be blown away.
-	_, _ = runManifestGenerate([]string{inPathBase}, "", liveCharts)
+	_, _ = runManifestGenerate([]string{inPathBase}, "", liveCharts, []string{"templates/deployment.yaml"})
 }
 
 func TestBogusControlPlaneSec(t *testing.T) {
 	inPathBase := filepath.Join(testDataDir, "input/bogus_cps.yaml")
-	_, err := runManifestGenerate([]string{inPathBase}, "", liveCharts)
+	_, err := runManifestGenerate([]string{inPathBase}, "", liveCharts, []string{"templates/deployment.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -564,14 +578,14 @@ func TestInstallPackagePath(t *testing.T) {
 // This is important because `kubectl edit` and other commands will get escaped if they are present
 // making it hard to read/edit
 func TestTrailingWhitespace(t *testing.T) {
-	got, err := runManifestGenerate([]string{}, "--set values.gateways.istio-egressgateway.enabled=true", liveCharts)
+	got, err := runManifestGenerate([]string{}, "--set values.gateways.istio-egressgateway.enabled=true", liveCharts, nil)
 	if err != nil {
 		t.Fatal(err)
 	}
 	lines := strings.Split(got, "\n")
 	for i, l := range lines {
 		if strings.HasSuffix(l, " ") {
-			t.Errorf("Line %v has a trailing space: [%v]. Context: %v", i, l, strings.Join(lines[i-5:i+5], "\n"))
+			t.Errorf("Line %v has a trailing space: [%v]. Context: %v", i, l, strings.Join(lines[i-25:i+25], "\n"))
 		}
 	}
 }
@@ -604,7 +618,14 @@ func validateReferentialIntegrity(t *testing.T, objs object.K8sObjects, cname st
 
 // This test enforces that objects that reference other objects do so properly, such as Service selecting deployment
 func TestConfigSelectors(t *testing.T) {
-	got, err := runManifestGenerate([]string{}, "--set values.gateways.istio-egressgateway.enabled=true", liveCharts)
+	selectors := []string{
+		"templates/deployment.yaml",
+		"templates/service.yaml",
+		"templates/poddisruptionbudget.yaml",
+		"templates/autoscale.yaml",
+		"templates/serviceaccount.yaml",
+	}
+	got, err := runManifestGenerate([]string{}, "--set values.gateways.istio-egressgateway.enabled=true", liveCharts, selectors)
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -612,7 +633,7 @@ func TestConfigSelectors(t *testing.T) {
 	if err != nil {
 		t.Fatal(err)
 	}
-	gotRev, e := runManifestGenerate([]string{}, "--set revision=canary", liveCharts)
+	gotRev, e := runManifestGenerate([]string{}, "--set revision=canary", liveCharts, selectors)
 	if e != nil {
 		t.Fatal(e)
 	}
@@ -724,7 +745,7 @@ func runTestGroup(t *testing.T, tests testGroup) {
 			if tt.chartSource != "" {
 				csource = tt.chartSource
 			}
-			got, err := runManifestGenerate(filenames, tt.flags, csource)
+			got, err := runManifestGenerate(filenames, tt.flags, csource, tt.fileSelect)
 			if err != nil {
 				t.Fatal(err)
 			}
@@ -754,24 +775,25 @@ func runTestGroup(t *testing.T, tests testGroup) {
 				t.Fatal(err)
 			}
 
-			for _, v := range []bool{true, false} {
+			if got != want {
 				diff, err := compare.ManifestDiffWithRenameSelectIgnore(got, want,
-					"", diffSelect, tt.diffIgnore, v)
+					"", diffSelect, tt.diffIgnore, false)
 				if err != nil {
 					t.Fatal(err)
 				}
 				if diff != "" {
-					t.Errorf("%s: got:\n%s\nwant:\n%s\n(-got, +want)\n%s\n", tt.desc, "", "", diff)
+					t.Fatalf("%s: got:\n%s\nwant:\n%s\n(-got, +want)\n%s\n", tt.desc, "", "", diff)
 				}
+				t.Fatalf(cmp.Diff(got, want))
 			}
 		})
 	}
 }
 
 // nolint: unparam
-func generateManifest(inFile, flags string, chartSource chartSourceType) (string, object.K8sObjects, error) {
+func generateManifest(inFile, flags string, chartSource chartSourceType, fileSelect []string) (string, object.K8sObjects, error) {
 	inPath := filepath.Join(testDataDir, "input", inFile+".yaml")
-	manifest, err := runManifestGenerate([]string{inPath}, flags, chartSource)
+	manifest, err := runManifestGenerate([]string{inPath}, flags, chartSource, fileSelect)
 	if err != nil {
 		return "", nil, fmt.Errorf("error %s: %s", err, manifest)
 	}
@@ -781,8 +803,8 @@ func generateManifest(inFile, flags string, chartSource chartSourceType) (string
 
 // runManifestGenerate runs the manifest generate command. If filenames is set, passes the given filenames as -f flag,
 // flags is passed to the command verbatim. If you set both flags and path, make sure to not use -f in flags.
-func runManifestGenerate(filenames []string, flags string, chartSource chartSourceType) (string, error) {
-	return runManifestCommand("generate", filenames, flags, chartSource)
+func runManifestGenerate(filenames []string, flags string, chartSource chartSourceType, fileSelect []string) (string, error) {
+	return runManifestCommand("generate", filenames, flags, chartSource, fileSelect)
 }
 
 func mustGetWebhook(t test.Failer, obj object.K8sObject) []v1.MutatingWebhook {
@@ -801,7 +823,7 @@ func mustGetWebhook(t test.Failer, obj object.K8sObject) []v1.MutatingWebhook {
 
 func getWebhooks(t *testing.T, setFlags string, webhookName string) []v1.MutatingWebhook {
 	t.Helper()
-	got, err := runManifestGenerate([]string{}, setFlags, liveCharts)
+	got, err := runManifestGenerate([]string{}, setFlags, liveCharts, []string{"templates/mutatingwebhook.yaml"})
 	if err != nil {
 		t.Fatal(err)
 	}
diff --git a/operator/cmd/mesh/manifest_shared_test.go b/operator/cmd/mesh/manifest_shared_test.go
index 4da67e1d53..13b51be65d 100644
--- a/operator/cmd/mesh/manifest_shared_test.go
+++ b/operator/cmd/mesh/manifest_shared_test.go
@@ -138,7 +138,7 @@ func recreateSimpleTestEnv() {
 // runManifestCommands runs all testedManifestCmds commands with the given input IOP file, flags and chartSource.
 // It returns an ObjectSet for each cmd type.
 // nolint: unparam
-func runManifestCommands(inFile, flags string, chartSource chartSourceType) (map[cmdType]*ObjectSet, error) {
+func runManifestCommands(inFile, flags string, chartSource chartSourceType, fileSelect []string) (map[cmdType]*ObjectSet, error) {
 	out := make(map[cmdType]*ObjectSet)
 	for _, cmd := range testedManifestCmds {
 		log.Infof("\nRunning test command using %s\n", cmd)
@@ -157,7 +157,7 @@ func runManifestCommands(inFile, flags string, chartSource chartSourceType) (map
 		var err error
 		switch cmd {
 		case cmdGenerate:
-			m, _, err := generateManifest(inFile, flags, chartSource)
+			m, _, err := generateManifest(inFile, flags, chartSource, fileSelect)
 			if err != nil {
 				return nil, err
 			}
@@ -183,7 +183,7 @@ func runManifestCommands(inFile, flags string, chartSource chartSourceType) (map
 // fakeApplyManifest runs istioctl install.
 func fakeApplyManifest(inFile, flags string, chartSource chartSourceType) (*ObjectSet, error) {
 	inPath := filepath.Join(testDataDir, "input", inFile+".yaml")
-	manifest, err := runManifestCommand("install", []string{inPath}, flags, chartSource)
+	manifest, err := runManifestCommand("install", []string{inPath}, flags, chartSource, nil)
 	if err != nil {
 		return nil, fmt.Errorf("error %s: %s", err, manifest)
 	}
@@ -278,7 +278,7 @@ func applyWithReconciler(reconciler *helmreconciler.HelmReconciler, manifest str
 
 // runManifestCommand runs the given manifest command. If filenames is set, passes the given filenames as -f flag,
 // flags is passed to the command verbatim. If you set both flags and path, make sure to not use -f in flags.
-func runManifestCommand(command string, filenames []string, flags string, chartSource chartSourceType) (string, error) {
+func runManifestCommand(command string, filenames []string, flags string, chartSource chartSourceType, fileSelect []string) (string, error) {
 	var args string
 	if command == "install" {
 		args = "install"
@@ -291,6 +291,13 @@ func runManifestCommand(command string, filenames []string, flags string, chartS
 	if flags != "" {
 		args += " " + flags
 	}
+	if fileSelect != nil {
+		filters := []string{}
+		filters = append(filters, fileSelect...)
+		// Everything needs these
+		filters = append(filters, "templates/_affinity.tpl")
+		args += " --filter " + strings.Join(filters, ",")
+	}
 	args += " --set installPackagePath=" + string(chartSource)
 	return runCommand(args)
 }
diff --git a/operator/cmd/mesh/testdata/manifest-generate/data-snapshot.tar.gz b/operator/cmd/mesh/testdata/manifest-generate/data-snapshot.tar.gz
index 6685c4f2f0f00ce446e3ed5d133d0e252b86ab56..bff7940d0ca61e982dfa69659e1b78cbedd0e7a5 100644
GIT binary patch
literal 194700
zcmbrEV{;~4)Mn#!Y}>Y-j_r<ZJ00haZQHhOqhs5)oqL{lW~$}~%=vgeon3Y6+H2R^
zL{Yy${`UdD60mXE<W79AHV8;+n@pmMYW&JxTwcjFro%D7U$<CiYe|`+L57jmRfPyc
zTF;dG`E&!{%UT+0z!(!%qe%Ug5Bh``1I1C&%43{+%V8j(wI1T^<MC!)=jPb#-u-Fq
zetY-k=wQIFas21f(BakN_RRw;uMH6~4pBd0s4PoG7i_kSk))3DE4FjA?`@dT{<Qrh
zx%07M3fuziaYHFX;%Sv?$rqPXGw(;TE36CSn@idGiA!Mj2w|I(C=P9<40wM(pezoQ
zPlkMYU0-S_pY7G6s+I@#tla-D0dlFR7xvkMrlwyyM<K{>GG8}vmZ{n-v&8pH3eTZ_
z5M2>nnVkV#+jqUh|K>UG8@)#@=JB4?{d<<PZ;Rk7?vwxr4C*~1!P*+yv<Z1<PGmKy
zUt|8-rKCzktMy0Qky0p^&rn3TSo|A<oTZ?ZB}NaSNY87U8s-+PG$yTqdcYc`jP&92
zF49c*E`AA${_tF7Nt}6zuFIKJ<5!~I&yUcX#clUM#j+L-m8y7gAu4cT3+}`qdx+>#
zF{{TAIC^WF?mc8ih@_iSLM%$)GJ=nq5B|9l8u`nWuz02nu`T1eP5OJ7^O6HSjgE7$
z1w3_^<dD9frFpWT9i&K~`3q~&x8G8<<(AFe{Gz((lE402gme#Ww!jNCcf>?jt!Td7
z_kDr*gjxi`6^fm2$(6%=v0wz=_N^FyG5(MPwUTm345Tl?oP7CI(jtwjfF2%*ZktY?
zw1;bsheO$@6&Z&=i$l%E+OJ=%4*+4SnG|Q<h_uZ!uO&+NB~17iv5t|5Ncn7PU7nti
zxOiV-^_itAW!(P!lyLS?^r$LlBqC#_D|UQamTas-v3}<5tvTCOeFS`EtnKoh?t3NT
z97P2Z>HZW&1N-^_K5Fm4Eb3>lu`Y#f;nj@O7_h0#Ft2bNpn8>_3z)oKmR!fwFM@}D
zs-NHxzc0l5Z64U?-SJ>8RWO3@embX{KUpk~F#b%oPdyEf4^uJ^x6(a|B|8Q-w{d0}
zUqnO%rbocLv%CDn|9(>OBYKAv4qu+r;3y`MiY&Nm^g4xQxZtARi8poKx`o~RYROA_
z%>scy%o^l$dr(ANlqlk5*EgV{Uo7#5ZUVrawF`c;*fIjB_#z@Sy9Vy>57<-u_xKPJ
zBI#@3Z)<Nez8Vk3T-#pqRx%w<2%;M5irgVr2&gS9DJ!@3{bSCG3~3X*cvO5T>FTl|
z(<dVcf?!dwOcjGX*IR<KC>xc@e3S^KtnBrJgo|yo%MMrhwY;}Sv?#CK%G`*E=H)i1
z`;&V43{G47`cT9e`5f(87sW>Hue?n%7yc4NL4fP~uEVw2ECBKKl@16X6Thy43=mSH
zqC1Eh)^Zj%b4<hALJrb7!hMmU>R~fx1IBi>i5)OIiZ=(nWh)K!3$>RyR~y=HKpdg|
zglXUPQ9=BPlz_lril#in2&Th8rbqM2%mtIZkz3P1Fv`Px!%rr#CRv;1*@983ML_5T
z`+&A)1z)d{|FNYOml#hwLnCpstnw&Aq}yD6X;Js3S_i=ats<Q)t@`e0D&IIb3>Y#0
zR|!WdwVktcKevZ}3HsO(8?cW6;$A-K6h5%`b+Em6(kyhAovZKm`8|-|E1H;NA4K9}
zbPT^qm4>q{<0@r&>#*ah$mr!TyMwTko8!*Jx7tTMY|Ax#GS>_pdY;Mv_S3_1t-3f}
zE%IdX+KGW}i!6<<a6<-`DEPE1cjy=PHT@#>c}r7XX+rLNrXb2xf3*e~CPKXMA+{*O
zeNg42AV^XA*n$Zd6sE5q%q&>r-ovFy>*lPmC~{AzsL+Tsa~naGwij!WFfvugWO@o5
z+<V?Nq0RS`X4i`Wn_XzCn4~qM0M6#y!v3)62tAQa8UvA%1YX&Gh?=Wj0C+TKiT*>#
zjlauh`S$~|NtlA;;;EG8^K;E_5DN%9Oj7@B4k|j?JlQ9oiu|UaRt(;pQ{ZM+jill(
zM9e{a3#Ww^z>?XK<jg1smy}<RR~-oOJt>oeFK4Xl7?%A5Yv-$~;#iMGGnQtnI*8Dg
zwo8{sHP`g(cL4a3p)XOW@nMH;+)N&Kf14pBS7Csd*@N^iFPU2hTi&A5kXrGq<~`5y
z*d-rS@-gF*($;jZL8wfqMJq6*(wMOv|6r6Besv9m3Og4A?o*gG6?0)Qdi$cJYefiP
zUU`h)7<2x62tsY^EJLY}cRFF;rgT4uoiiQe*gn)GGKEn&h&w2P{jI<9GZ<FAs2tI(
zbhnthWC%%knPNH$F=B|)I~uIYl{dL5D#+CVC<4@dMuI=c48A{P*ak-Zeo{r1Ucg{N
zFuaNsgM~=Tni*zv5#^@;dE3OxOK15A4M^p9$y7i(8m32aUDuM4bg`sePC16ilb9&>
zvO9RI-op4kBjN@x1ez+7jp#Rwzttew>Qc}3@Rouw=)KjxDXgxMun3hs&Ec}}4<N8d
zcj-nE`7d~I+!wx#<u8MGRj>jX(gtF*vLemEP1WRm{VWh6h}TNNlR<PeKz>_&1iU}b
z0xM|;33+dTjv{~F5G|8AV*0)%`S`}6?=t5;_b5yAje!5F%HiOsJIZbnihF_)*{DLS
z*VM^1n6i%9*->)Ws~pl7hWQowkS{BkCib>!cOEa#IY#H6Kj<Q7*$GiJc7B#Gnp!K#
zNOtH2vf9~Ni7;G$FzAuQ!8cX8aK7lE)CWGXa2YSLoCV5TJ@^#?Rqw6GwK>}~G1RKK
zlA;BohmU0_g91WbgtF>aT?b^TyY)t(1+GspDPe-3^79Pjl;;G9s02~l6n2_`+BB&m
zNg4NHC8-1WH}sl_>Z+-9>F?!Kr0n<vs|HtF@;>m$?X){`S^0jlXLA9HoC76Vnh3+_
zdzA77xo#d?tu!OOIU72+EQq0C&l&s(qvO@O>A?h4PJssE=F4k2@4VQlu>MKQh5HWN
zJqT=uk}|NV&ZE?dSy`kTH8;O?Co{n``Wp@2u|QB(SY^yKW$^a#$NoTgEk0#Yh}}LD
zzYmgMO-irwS3E#69jbpLv-M=sb}7%oQbLaKU9<fz;9Z9mTP52*(+Jc-gOP-7b=+YC
z!2)v2L9H2}vT+#+l6q<>65!m9dp)9`aWpehP%h~LHdrMK148gK-H`RtryTS;V*JNs
z=R5vS6eWnsafsnhXry5j=zNxf{o(8RtM7Bu`PyQ1kAn$$3O(r$#|diLDT5*r+T$|~
zt35y02N&PM60ebzADH~1^kg9<X-G?+vnRAk3_3F4C+noP+JdNEmNP+%O;yI#U@ByP
z=1qHdhI{xyR-(O7TFuB=gSJ#pG<_Ij*oYT7=a$VTdI-wl$}t+O%)g2}O8Z=AytWrX
zXWkyZPPVli#5v=IA>X6+^xc^FEHr}b>mE<Ky*qLL>EeEh%=JVq+SBY}HVuuNrYa9Y
z7v89p6S^L=n@XA9iK}wocAw`WF)}H9mcY?#=B+{M1vbnuI!5*HXyMcQ4@CngD1+fJ
zJK>^AT{Z-6_1#x<<3Oe(DU$;LZi{%XA3=)>uS4QES$j)ZVCQ)`e-(K(f)wi9owhp!
z=|Yk>3&#0dLi%UDELO|OYZEH!R_3f>G4>wbsR|C!D%v2ydpkNkcCSe$G1$6qe_RN*
zko5efZ2NoGT7puw-MbC=PPvY4ba@NQ72|jg)tSwR<~Uw9GCJh$E6@{9g1!Bc_<EJ}
z_TbGaNy=hyF)naJJ3ksg)MVgN!Gbm@`puW@0wEnRA(t2H=>=!{BU=wcQn`1k({At&
zDFK1#S&JUGYa3BM<i}wrB-FbyTA@{c3`@3#LdFEOVk2XneYR$p+a9_M5_fYPxkKW$
z@n8C=OQ-)C=}$uI-AKy<I$HVwx))|x8WKP3+TqokS;=N@C*ibTxbg}`iw;srNh{H2
zm{j1uJEMts(-4}WMu;(U9cm%k0P8$7Q2O}e3Z??b<5U=q){=;tT#5Q@9yad+t_`)~
z+qCQ^UT|ctW|MI8<qz3NxCEhCh?%PsbV!}8msO4d17%r@f}j}s+$G)C2J9tZS@%70
zJ}PG0pSwsrpt`9*H^=lT;Lc{v4Zxw8|LZ~5?Y`@Y*4&WAiH)^;<D{SleT8`+vQT}X
zz4DDX@bb=TbgQ5ej}3s9)~L}FqnF@HBfSrUs>YuZ984uV`hi%X1A+(K+2^74i`Oyv
zItq?EYOu=j(H2C^8aV3pB!43p_24!?Il2CTF^C&?kI2f#*pzmQw+Lrl(Fvd+C-c!p
zsGpOs5{c!psbL{)^Vk=L?022f6D5$O`AZkb)NZ^^noK`j^`_>1-(d&$C6uB1Ri9j^
zrgZ=$xFNu|_!6?zdjGFs3R^mLQDO(q4Cs|Aj$I_dmXOaX8fhejvk23v&C=50>BMpi
zuB*`W8EJca=t9J&UyfbyO*$&JVt$7`O4&vFyf7ya%oa$LUcRHAghLZ&ke=rx+y#r<
z&9q9r<_<!IM$Bdum2g^JbGpJ#?cu)sM#wj3jLR$9;sBfb1s$`W2}MTu=&SUhFHhJM
zg#-JIZ)a*WmWHT1>MdVB2}SC%m`FWs<`Tx0M1EoV6W|q0^|_y<?X&}%8*G$sK)!mL
zFQ515zXs3sg9b{SlLA(HRTb>UnfQiP2_hj0ft=}sAS;Gj!H+O6uRJUYj!m%>Vim~p
zUQ{d?T>W9w!Y%J_yn+s+<_~7j2WrB{Xp){6U_!MOakmicAIm+{S8W`{Y*!sJ1zmrn
za>Ni`pS)+4;T-R~D=n3BrYYyB<AZv!KdF+&;g|T9cwe-7QBCg@OX(frgXgTZCTlL;
z^Am>MI13tPxH>*w$adp(MAZ-u7q<Q#!Si5X0`*HN)*~Q@Y7MnG9r8_vvFyWCQVHRX
z4CL?wQeIvfF(;DD((SC&*wXkc*6h9ue&S#W!T%JBlabVkSpZVQNYXJCw%CK)H=49R
z&C2hg<td_#9|^0M@rI9lmCk_;WjiY6Pj&5Z+Swc3JhxzA<Z7tB-U&M;>@p~doalG}
zSSFvORg^bj!z$+5ujybv0CSQ4-07+sH%k}Xa9tm?W#G_T!VN@u{@=2TPxRs8oG3}6
zf0+w*d;FQIju;gbL)YYpZE*kMz_6rFQRU_bc!$tCJzxQ&1%(&{Y?_EJsHls{?zFNS
zA+Ib*EKY^3;<X}Wyi1sb>$wvQgRSK8b2W(Ect+;Gxnq|wj_e1o<}UJ+6@O1;=8q3y
zkP5A*M`C{5CW5w(>uA0(y~)5l6&b~dE`m+0SSN5X;!Qfb>qs{@vwA@IYpUYRTE6pF
zL@vdOm@D%RAj^%2(UJ#UruRnc4ZshS*$tp>rW=RD#AV_dNrVPi;Sdipo|%<*qt%0m
zn{1~zw4vZL^wB{7vk)0sR%sem4KCDzB|$FWH5>Wx;IL&+lMkMTqK(KGlmb|4h1rT&
zQ2Mh8cyES{<(`MazOgS-LexRUH2aNp7P%<q4rRx9ZS@U{sp?b<xKpB3&Np2x19Z_w
za~Em7!}7HxDDTy}M7l_Y!FZGk$cS}o<U(`8nm9tfA5HD6rzHNFwaygd%Ei%W#6_cD
zkEn44ktI6DyCNxBmyWWt{yh)haHWz14ZfX$*bNhLOP{_x2$95kf)5gZ{c*hkLnUCm
zu4?9?J{Ni(5NuKg>G^%_^6o{+vyWt0gNz89ElgRhmr+076$mO;$x5s1kJeZ>HR^BX
zo?EE-_5t;9pX9&$%bR2HBu0l*k<Eg1cWsc2<Q(1<2|p!vs<JzKW{SG!_L{P9t<ezZ
z9*9I}^x5|HjWo9Y2DogG1Ui(O+S^Ku>2e$g(=EoVY+-6Zmft`h;5Klv5I|prICuQP
zt|hT0Xhy3<_~M59Mnd}nF~}T%I^hF<I@<_#R0ZuSPg=5U(c&&iZLPXq$)Bh@r!uT|
zU3K-jm)h_-QZM*Q+_5envdOQ#X}2ji)MgDV?_E|2@cc()$CYK0Zps|YaL|lnM{oTP
zN|C6Z{iN4q*$~cZ%yT6{^?%X>Vg(J?L;lWF*B&=!1#q=JBs2}W`O{++XBO~f;Ko-*
z)VZ<rw!)G+4zLk&|5@GGth)i)728rQ+=Sr6)EHDv5VXfvB$9v2HXJVZ6C^ri#JwrC
zq&Vd{8RA|oDw;Kt*pv8=p>oUL0ft|KwGrMy-f!IyO0>Ey5y@n4)Sx^E7O~c&1O98t
zLlYU{yuLqQILGjc@WVRCy48beG~vpN59>;uGLJqtfn!B6JVZliV^6{5veHuh3Hyfl
zMe2BaUP2OX_YZdoC-O&)cTsN+{xO+#A;u~ZY-gU3#+Q^UY{+oDQLlWY>)OgBGgC^R
zUip&6Jj<-XbaH}{fu9{Yl9InDR$`p;i;c<xrHoT7q<I5Bzj)>k*l@wq_N~)vzSNzR
z<?jbh3qM)%OvEs@!~?F68P23kVEL?EwecoB?P9?%R5mUCSq`rTkme&qz5<4?(f3kk
zJF0l|l32*EwazwA)hD0&wycF_9Q><+pGaMjbKM``VF<|-PiedGi;FB!f&grxYDHks
zwt7_|ka9Bf2{7j{_}>NDnbJG}?Rennb>O{UXYp};C%>dc8x9OI>KiyTw0-p{^r9o_
zz5Kb$siKyM)LCNmAS1R;Jx^u8wkc~4YScT2dG3@qkyGz++Y~mYi|s%BsB<AdR0KX~
zcdv4OCjgq8D(@tVkknphkmz2_IK3}$ZyCj66QO~5Rn=WoD{%POX3PueDQVn_z_SVU
z;QWS$xkV+^u>1Hf^88_wE>=XH@@uy&MXGbA+IF%#f*)^Hcjo)wrX=evwN{1V2j=ib
zosCy<Uf-`>C1R85wDfm0B5l>NhLhE9dB2X{-r?0UJ@=uisDm0(r;X;?8>sj@%GHtS
z=d7qKeV+-W_I<zHe@&Q3r0Q!weJj91#*f!GaYT>Me%ljDK53P_y#xzh3mtXS+q;S*
zpHR8t3Ci5kb_G$tvCmA-MW-fqkPuiMnYP@3eaNA<kbc>IGR=JVy|Mgk_D0i>bj=s7
zy4{{m!tV3lp7uxw+X)@8mMh`J@xW6ww>K|LG9Pe5>&R!I%I)=#(0YxtA-5VDMpNqF
z80L>&yfZ&ouoWb*Raz*LRRq&80djMqVrBnK(X4BmzJXozxvh(O^l2hE*qMIz<Z>jC
z8c{idi56M2LUg_3=y+u&?Z~f4+Nska!(vcIVLBL`$p_Ky;9=R#M2do-)N^s3OSqKc
z!jP&<+3(DrZ9D{}x8!_7B=GwU(TwnTUumNyL?<3cT~5~9qBdSk2DW$Bfh*WYtoFp`
z;Zxvsz{<M>#BkcCA0tuKT_#WJdb1LJ;UvZytp)TXX5iM&^lnvD6khmiNOMFoE(yU!
z2Ipr-K6viPHc1LIrhVxn^@8}RghH+<3RZVyRq&*#N<;V+C60PzNk;~Itu{9d%RMT4
zO4D%R$Yy|<z)qpuCaWFiUGP`w=+wpZ(mxZZ56UX{m8xicvnRsMvy2zGR!?iE-I1e|
z)=)dP$_LOLBz!q+j&weM&}x!phf5Wtw3k0j<U^~#RCXGJSX`e<kE*@z(e+l+btz`y
z^!M;7G$sX@Hd&%J#Tkc>{9!1IvdughtQz9Up(S!=pJj|QRf#h2umTz-oYYd~E4FbJ
zxiN8$JlH&kHSmf0!&3ZsR+PH0xJjVq0MKK#<K|~2!hlufogigbxsjKC*&L7kJN@G-
zb_ReScgT}IhHSMw+RYk$$#9VcZ}N~nxVkD>;<3aAjoqi5!)JT4MdCAZ2nRO^0*5e6
z{!=L^8y-%p`#?HK@n>8#nf9n5(<bbq4%WNd^tLwF?KX0_l>hFYxCsbuim&z;NOS!&
zg{Yy{0g5+^5Pq$O5n2wv%!OBZN>p5TrD~SvSMK=XQZJhY7oqV|-Y7Z0b=dFmP6t#S
zhIag@+0X26Q_P4Xid7aLBNF26mE)t5u0}*>N-p(Cei|h*jQT!2!3j?G-XUB-Gs6px
z0-z|UsK77Ih*X#;m37YWI~d;IW1sv{1R~1NJR$24%zx_s9nGWjL?yBu=;Ta9s?V0r
z9d=G)f<vrBF-K(~f88YbBf^s^voEL`@(HFOOH}AE<U@DAxp6~W=Jy+;mOU5ae2d^g
zn4*?CesQ0V&Mc(IR^Gr*_zfOi;H7%OjjrYgzQyZULMReXuVU}?#?}Pnie`bYig`tq
z($mj{*ybKbck+fY%GfOW7IiU;tDC~SZTzg(<t?=_O19c~RG+>n95}nvciR?24pVsd
zRa4f#z+uxRn9%vIQq#oIH<W0qv)wq1asIIM@-&GIqimS~f(JrTRb>M>C78j>rFthN
zWeb3a2VwoKlxlZ$^;gSKpVT42DX#F<ae38IK!$6?q<qwX63J+UZEcTC^8teM8$>W1
zz2Zwt=deiqtvH3>l5#fV-bDQ=dD((eMO7Daq+~>bAr$RcXV}pi^Bqsz(I8;$L`N)B
z+&G;nmhF;wqWP&rJhsp$YP^90sQqwTMGQoLFI1Jah?+K{$simKq#CA=#%{?$Kpd+~
z3FRMD$|~hOsME-Z_g-8n6qBmAJaPK`>-H;7nlAqf7P;R~cMBBi@s^Pif1weJF^ak1
zUDDc@I&pIlt_*)l$@GU<#BrUGohJ{Ap2KiV1vl^n_+BEa-c~Z8!uRtznAd-5D9zK(
zn3hzbnod{C3S5lZmiuyllgt8M|CR~0HttaN&fdd*OB(Ws0~mSh3bV4}gQ*=*AP4bf
zOQ|($AV;~5Qcj};dL?JbMT4%B_iM&*7md=psl+89`NhZ2{p5tX)=MR4T=2{&)4BIN
z+4H}V-0<$2W$z=#fA;6Rqj*Pqn3sQn4GSAX*W0X-Q_`H)uJ*NT<JjNzwtyRmSn`H~
zzM}mek7%}kPmz67mTU=u+5OWq?6l0^lpd&GS^Q-Fw!n4el(zAf2i?>Uah^tx;bR09
z5Bt>@1)SLfrq#V_e*uxjNB0Lx1a8)+&Nh&?0F6hkTtXqy@2A+`{?{KoS07Bat8ge@
z8oVU9<9gt2?ly&wDz@Q!IeZ#xs4E8y_6`#=!ZlkWJ_DZMO|n|~uhQYu#Ij{&rI5@%
z7SFlsq$IFZB$mzS^@)x$(LeMLIB8gIl-Y=4qjnCCKF*w-+`QL7XJ^-el54E*f%}pD
z`Msm7wpYorqNt#z#rgO3iHZ4lm;H}-e%TCmpURG+(*Afhs<&Fi*C9nAp2H9-ABNM-
zJ69^ZK6V){+Lm2F?ukB?kjL_8-z#Yn(9Xfz!J*9;NK|P004QTzE81UXm8110djq}l
z27xkai2u`?gmiXkE&k)+C{~5{A7Eo$qHYUe-Y8AnOkSy-XOXs#gb;}}9Do8rQtyvn
zW;iXz*E}<zqMTkI$(wUE{ke1(c*toV$B90hd~IBr$K9H;E<#nH-Khv)*oboAwGd4`
zS~?5(p0gu3{svz78Fa6yK6#z$>VN(qJo(tnZowp77z^^Re)6eu+)4OTl`61@|Mscj
zNWkhK>2le1G0Ka-@-(KHN2lj$mTp~Sr^?;_%}}b7bv(nmrATl5K@-*J=BcQaoA+Sy
zwuFil@H~oCtrIGnzcZ}$@5@`xg+SXKF^Qnw4t&qb*K?bYD2O$7v#l4dOg#I(7>zsU
z5HEqi+t%AZa@m55?AP1E+jB$O#%&)r`}TNl=&_pc$S3e)*<Ssp>+#?@>g5{{{xE!@
zcqI;j^#Y5W@TYtCkwP$eC%H&=<35IJrGqUj6KyF+KP>s!??mqUUSQkNDF*TZ4E@yW
zu6$EH+IjCun91=`?{))buW<IJ#%XVjMXWUhDc1Wq_E191Ms$~PuWM!v317rXFV+|U
z?BU7>5dwS-n7F&+P^RfiEalDWVqXiZjGL9ihw3}|p-6BYI}C(9q6J_|uhQBePHDR)
zr>7jwd@te6v&WPeF2kMCdwCd=xs`JGd!2hy9L8K5r0zh3j1znjwC$f=M5c3JqU(nt
zEV<91Hic*|BK857FYvR8K)ZG$4mV&|FaX!C#dX=vCAV#S_e_Dog|~13)CDGuRz4jl
zMAf4k9fv)|VoWL*u3?24qvz}{*SO*-;a7$W-AwXtzWSaDlW!2Jbg826yc(iL9Tu>y
z^c2ZqGN>8!R8FNR@}0-amjt~waIF@``QxwTe$e;d4Hf^E3h;KoxrA<qA-IH$^>9KC
ze@B*)uB|6GL`l$nsQR{7R#=^dB9_62B-&2YIJ-Q(AlZ<&H;q$ES^?w9T6k(PSiHOM
zZFwS;cbYoDpQtl?w;}D1G-oMeo4D_=URRK2_mSM;k=ex78hGo~da$9NK-~Ce?+k{z
zOHa=p!7#)0p#78`vOm9<LhtaX)Qxv}F_%~~EQY-b8I91bZ1_3|yR^Lc&Y$Mo2UUf5
zKj1O;CG#LeppYL+6kj3`Qt+ThsYCN3u<+JlI0M}5Ma@TgCsXWy#^+D$zAb&b|MDA?
z?@1O5pjLxsPv#(ONgTP*4x_rqTjJT0&Haw{_1ijlL+~Qh<11LA?0!jO+snXDA0;hx
zC4JpVZ}@Fqtj-FX?@j*eAY!CnD9(Tq<Ot+0yagPNfXwK3a0EP6mRMl}fr4M~vT$OM
z9p0SbL_J;hy9A5k#5n^$jL)ROhgcb>g*%ZtuNKq`wY_%QlvE4N;MD<+y|&L&Il^v}
z{N>FCB;n@<B7>p2&syr|>GYL>%bN_*^U|P;&F1z&jrgjsuWm}9hVE(l#oipg3v9rm
z-_{Xj@5DaSYZyK>MYu({T%rK@0$%J2ApwJgnbzOn-yB&yzg}1$`c6&ic^$PV4`j16
zR#Jh(=8bJ#SbRM>SQMoB&hN8R8s1$@O%Hh*-ZkH2LFlo8cYh}Egrg)St#BD|z$PP>
zl?LrHwdC10?r?klsCcgFH!IM@4bzn9m#<+Nl<3H0CAP{-)1`2ZO=%<_mc*0+<;NBQ
z`CpfGA(wVU0<_mfSZSOER<*zue$OgX6NjXN)(IsvC3Onn4Y6{D@B2B>5}nQ<8Cmz?
z<1XXYKB>XZKh&{fcl?67ja{iM4n(8L0_{qwVkRaGBfMb2ZC=nD%g+}C))aw&FOhW4
z*&E)+tJZ_WFiL&x1n3m?Bcsf*b_{Qytfd?)T$3-CWeXr(J-6lVw_ES$ZfkpC3xbE^
zrvFin^$7B{Xv>4>^IOQ%_2*KrqCpDxH%qrH5*4b$ZqbWCq>+Y%9K)s$&-<vTX`E%r
zVT|mUJnJa+qIs*tcQ?NXUl6C$vwL=XXZVE`Z=Tycw_G4#-$%cFz?Zgfbf@at?wGEb
zQlx6yyC#LHvPIjW;bS#uxeqkOHb}}BL0T@$S13{?t9D+$*Vl`^cB;t3v);_6cuSBi
z?k>YBBWx*~Fw)bq0q8#Lkw5H2@X}nf<(Q-1LMMxONv_R=jAw1C3z#?8bzrLnK;o>X
zcsv{JZ1XaeIU|<TnP<)UVsO%MjQnA?)D~GKRZ{L1hp06F>7)93S9)lGPKa&s=+rHJ
z9+`I~=+4G8YkAX5c0eI&gRqmGYlX0*g{gKvw{4iFSDXr3OAmSRVHwgTwsqvruX#H|
zfePZ_V1Dz$5bB_EVSvqpAhOt*anRU(OlRkwtOEhP8XF-nWCk)mdtvmXXa&Pe3#nX+
z?yR9s{B0aj8oMLb248pP`44vBGIhpOGHC(l$R7r7S|mU+>$4-%*AN^K+6SSV9=~s1
zG$7#hSRo5|{~NYcDl=~AXD?ml$_SHBXq;R&lyBV|z})RGgXJ(gD+upD89KIe?7jQB
zWww6Ft3_MGyy%m7s-VDO5O3d^C1gEK?#VR6lUEv?XxoL4{-K>o&ZFS4mePpjEVnkY
zL?<=~gIbmJh01$KVSc0hT}td#V&Ie$(BL>`TY$k~$+xhpT7e2U!a?6JHCPC%Kr?y~
zEzY{@bC>c}%Bf|gGO1+KJP5h<QVwUJfjOj{iG9#p=wn%e`X+Pq|1ei_X=V!o7yEON
z%vF8Q?O0gP7+<+8>uwg&t4UO-N+-lu4yHHlgQwNe5BWwv5`GsZHgm^Us9DL9Z3AEw
zR5n&kYcyKPv5u~jg^GE#kib)MDW?Ab(H3RF-2J;Z!D7+AqIrju>W={A2-t)KYP<Qk
z*9!GI^I;WKy8HPJVa%AH++f~nAMJAM3s=av1l>Q=o(V<;rd&1`4@*biRpL?%O)FUZ
zln9W02;5z*vrxpyyQ*WX1(FPR^ibnEEYk8*O^p;=?od>y|4}kUy)9{nyf&E{_+72h
zz8&hg{V@DAEsSZ=C@#|>_zgXKN5Q`zt|;3C&{zQQ@ojc|De~26f873#B<Tos-S`jU
zqQ*IL{w;ewu(te)Cd0**jk3(LjJIK~aXE$6iHy>2#8;xzig}jHH8EBYX`Bze!nlkZ
z6Rh86uW+M)=hA&=@(tfq=~@~E-bZbJe{Rcben6=01Fx~(zW{t)3_pPI#DW9tp*TJ-
zM2K<tm#;InIjYlMB7&!;E8oH4MJ*2pCUgg|XDN%~OGAxq7GeZ$%jp6-0fDeD&g5Q5
z&4SjOAY8nXYzM)^ZcTvp&CXy(*(lBKK0pho`H`?VsoIyekpI;dk5^s{bZ>kEj=bDl
zVgiN4Dwt|(48eP4D(nO}g;R|H=N!xy_z>~BQlS#a71j(ycMSi*FYw9MmHkRQujqoM
z@(x&q<!$xV_xUjrrT+6sT(Vexmv0gxi%Mv~V38~sL~Ug8u*=CQ(F=J-dsp2-#GUGU
z&O}Dn`4>WDr@7ES+S9MTHfKFMkbrRr3@m3ggBN8qN>zP>8}b3m%PD>5TJm!4f7olP
zb*E9vn_ktky{`phaly5|s3t-Pu}y?Zo3Zt3BAA`!rFu&6j@egd>6p5`%@J4lpH2e7
zPO$nBnvzE`=_H9UsIOoda2!nMMfh725%jqoviN;Dh3|${r?6uPrAb|<Kz3`vVGy37
zGuHhWJScFeX6sGzGMgQyd6PP+^^0zbQ1Ye*T#{UuQHcgTY6MB7-HPDL%akECO@szp
z<*%2nX}=O0v=+5Zr)!9nG^AzWW{pR&{Z~a{&*>HpV`1N~HpczB8`6H9Sb~o4Q9Pmg
z+EmbLQN!QQ6t&1~^DqQds|{|ax}o+*)vteQVt`bxd5*Au4uJnn7LQ&Ir{d~AP2bjK
zBS0i&(+?tyY?ulFw!<B5;!n$jW8=ejowg~OqW{!Xr51*6Pyb74?DJ5JOP|%Zqs{D`
z2NlDKG~+o8Lk<Y+^2r?hk7;Vi67DsG83shgJ*^M8=4wC6`~F%kkII)u33Ec#7*c$N
z;UQc|hX`XzO?B&S6TM0%ud4k|6eU@`ERj?n%|F|dm(zXLblys3&F|N431b^1J3)_^
zn(G-yg%XAmFMRT~0v20#yu9cP#p1`zb}jD8sKowwfi*fpyA(Rnn{u;%{gA1rstNW&
zsan?RwEh}Uo;6&kaI+VwPZwU}oMWKHhmjkrtA=5R2;=mblc!=0e`JVI1bpi6sI0`4
zBH>}fngsfxS!w9x_4h0KeYl~V*3MoPE*28@d&8*_;G)%Vg&QB8y-&r<@)fuduOKrg
zO*GR{r4asVM|2wwd`y_);DXTtx$-?GZASeBh0NTg1DQgM7q<)Cw&G2ai=p2y{Ya=Q
zTCIdx-=1b-YMVU1Bmd17BVQfB1*t{<BJegBko<}6qLUg^{3zcR+FeUlyL3e`jo283
z`SqI!<|8PBAhdDe*R179S@X7^G&I5T7xtlJ|F_|Rs4Ir^#L>*oj?E9ox!We>5tZIJ
zW7)Ftg`Qlv24c;OI#rXT@Sy^mpu-c5K!U3tqW6qeZT<f9gUaA+#_|9W@Xe&kkR7IG
z(PFsrv!gRXfPoMM@Q=RTtH^42z?st|7b9|lLWuUb=>0|JRFE${v@uO=RR*4$ui|$5
zW-Bb~tf)>5zzXBHLq)CyBIMqDHI2X5yeMj{ai+1)R5ZfcnU5=UY7u`)!h%nS-$;~b
zQ0&aj*Zs!#Rjv<J&3=FC$gE2A=XDI|!<2YVpb~W;ADqTJBqlYr)xy`&kX$W!ueCo8
zXwB}_PtQXJ?w@X<q-dkpj>a6)UuAe-5*NrQ!y_7>HvTM0&r)!Sh+jtQAZv}5DjG$r
zLOl@!o4*%ZpZI#l6NFwYK3C2Rl~z!Z&SB*ZY&gUjpqk-C^Vt~L^d+gaJuk)1<BsIr
zdmIud9|b>?ye3W4?Pd{kGJJ(xK~`XxS@^8p@P%)a-o|>C;?C$H-5GzLOP;C@w@X*^
zjBX!`4C2DZEXpeU+AXxovg?0_f%h~`tA&?B0DL|88HHFRKUKHfJ`X@&lv=rxD;KvQ
z51t-=KHkCJ*VXFb&{|Vdp#g6lv;y+L$~IUBCi)ZLuZPnH0FZq9gfJJnKHcM-vmQ+M
zxIketnE0K6i+E=FYo;s=Bw3gp{|TuVT{E}{y&fTM1|T5F-FZfYpY6*{Ab{^Gwe<2Z
zoB=l6=ks=aws-Y3eXq03v)<VfRAYE<=hTPPUgjd?+`gZ&BodLZ&sn0FKp2#4Lun|V
zUR)TJZjuG-^Io-+NbQe6;GFi<n8nE(rs~de)kl<#pGTX<45T*Y)0oS74~SLx?90aA
zFCok!$j;G)SB%^34j^IL$);)aOpYaL3Je|!%Z=(Dd5R&DasvBPE(0E4?d>7J9oxgo
z92-_-(*F28BuZgzll*;#p-k3u_g5}>*M3>#S@Dyq4<Rn>j}0l^6P1tMN3K8@(ssQe
zMdH8lkXMpLz7BY2RhZvBW?~$9KaJh4V6zd~%%A2IKgi-L5<lKJak*+AX&8_<x{;#|
zc&f(PaTBitrvm{3tLJpyb+Dei^vNIA$n9-6|1x+bsdbNMzR4@3mc=uV|7C3#t?%HK
z6YUH+&tP;kf&{z_A^FFuUKKv+<fbM2@jnaT|DL~H(_c%wfgdNK`qzt@)Nf$g=T`GG
z5%F}rlE-j5<LyJBa{YcH^GYe{<63CLmF|l57kS%#-$gQ}EBzu8zf`6EpOf5++Ho#+
zB>}AlZyQuec+%Hqm+4uh0QYK3$tc#hQ_=chFLO#pr2@&*`Jc`J?=)|XsRFaQh98v-
zY@E{pa-Ee*@o`}8CfVPs1GLv+T%JRl*^ueXZM4xBe2YQ$SI0?_J#b2pp<~v@tzR*S
zm<8e$Pzek>k<?*dOSpuHhd-gKKhB&DjPvzIi1c5>jddXNT8Pe%a};WltMm13B$Q|W
zu;#xDvLc~a-6?NSYahMO$fP`y3Y%IsN@%*6`|S#vmomoZM$$ER!tEu9xd#2vU5}g(
zcyl-M>9d0caC@O!8j~?GVK2nESx)lxudeMKPH9<Z7=;S9JUxta7}5jAdRu~FT+6VD
zM=8A_gi_nFwnhG8smO{ND8SuR6U9;J#ZP8w3d&4C&LC*q5~l79G%$b9N@i&F9rry!
zk3zmLbUxKJEVTmn+H!QFY7c---?SFMp2yB-pl5pF)9C~byvDEbuxQGD@APlV!BMsq
zouVN0sqLxl$0Z^p`?N+0tR<%4e(PNTXC32W>Bn!b7ijhuphrZSfG_Y>zt8eph_IOY
z$~*YP^hQFolwas13;*+7%Z(p&UF+cE?QPFT8n3Z#$GjT7sD2sv{aQm*vya_L4z7zj
z7hmwOyMHtUz`|U-Nr2!IBlQ4NE$TdIbTEGI&!8Wxj+^@~TWs>%BK^-If3EZ~Gvdwp
z9OAKPR1GPpgh8`+V|z1x@yX>?#L*XuLmz@Ph~MUmjS%$*A#W!!vZPjb_gmQ^Z=UGz
z_qL57q7sOL?9lSHX02?u@bzNKi)JDqRSX!@6^f$0#9@xX4~_I0F!Zn#m9g-ntrTXK
z&E#ly#ozmRB%`4A!s?k41f(?Al;MZ*AFDMTC)LeRIuSZO$~MPRDHc+--)PiASM>%1
z1MI*2y+Q#AzK|;4U!)|${C|n;ArI}|K=ELT?UZdv1Rb0{h8YhH*WNMU1Mf5Q6A84?
z@=n0BvFa1-gE2SZEUxqmD0(bANHpmp#FTEGnV?aG?$>WW@jMHEH_7gpaFr6V${DO^
zl5jOYYX~mvCVogiiWl_eotMlrCI(PzuQl;~3YzXtM!UnFlv(E{@${kwc~V=J3#1mh
z-78(~@ieX{*<NUt+R|X_&zlT}{zb)rkJ?epkwKi2!6X7gKzR6=h5T%RqDKmWW$M)9
ziHQ&*<)9hsh7A&KHhtmHl6qp3k*aasZ)}Nnt^aEzvqfeZJ~NWPpm8HBXATy%tF?6>
zmAHnlR}5%7gN7!YUAsyIw)Qm<nGjTo=IdVRew`m|y^k$G`uLE{T#4^y>E4aK9rWNO
z-dC`l|F=@+?zeDGAsmCO9&3N{f*{I})>hkh)J8~o0d){!!U#Kez)HLie;HN;n9xLj
zJwp2eV$*`6h>YdW4tY2^UPn7H#vT{^ydA3kH7H^?Mur$_A^3r8Ek4j3i8&k#vxMy>
z{6ZVG8sU>)c-ql{&ON64I#ush)SE|AZqL~oQOX!thDzqco$yx(IaC47|9ZW_0^`<<
z4rmYR%R!%;I5qB1;zfd@*|K1o1eGzE+ApSsGAxBBp$m|u%Ux>Mz%_g(MyMJCRJZ~w
z9)RoXeku3Btso`_;43jC60$c5vzv$q!6UJ-2^kzRaa#Ys2mfAp|1z!oJp!U$>K_8}
z<D+E@76H?^SH~OO{i(CDUOUxx_$k@Q5(37pDmuxpQ&g$)nvNLWeTFq;2QY6Gdj#k)
zhaG&kI3(}KiKOiu#u!RGm<4EauwT&$;gYhji8G<>G3gxS?JR})W^A<BqW7NsP`fol
z=7~!Z+UfeW&ERF}yJI$Eq8Kn<-G%035?HHr6#_Q0b%3)qP$jT6vOWI{2Ks`C)kf8z
z&fnPgDB(!I#h^b;pnoCbQXzlmJx#2)uwMyO-EOmSp+m^ys=5|hkA#U&V`X8|){8)Z
zj=6$`xhFG6oZ~d5NS9E~O&KUz)@ETfPN;qUrq%7xmWwbUB%(~u{mCt-ezTp<?)-&8
zj9u0(b33XD%GwIUjC}aSE243fT*~`HYom~>X}Jn_8M_LT_6lKxP>{+2(aZ<Fvj~bg
zoK{q`Ssh|60w1W)uNJo|Pq%8Q<h;=;WiciOlAu^SCA$<e7@w{AS0+E7F?~f5F0t6p
zd?0~qQF9s48HLAny*wnCQhN$4q-AcyF>#1qNq8n=GIlo48@L3SWeclVt>7Nc`4;L~
zTTiG!N{T4bwKz~zWjo!KDf1h@(EP5rBVEnmy47R3pFx`4$w83B8Vfr86uQ3ZRq4pF
zl9N_&BT<z7$j!xVQieSj;l*S#8DqnfKzk!Ia(hFV-XOjAEO}Ti)E4q(IzuzzuxVy;
zTv!M)w+9I7%`oNcT~!i+BK(r8Na|{NYiwXV`1b#sDv59|ppeP92Zt}HcmT$5Ox*eS
zN0d4zdi(l%Mten+0)I{~zMTQr)I<5XQ>rlr7cR;9m(J&8cUTw9)dWgb#`(rSEt}~O
z>6kwzRtxo+^szAd_gJy+dmj6&<i%-&3OYjC4)NiEtHi1d@>g0K0YYu4gCnrMl=IKI
zVDoT`op4*!ff`o}8Sn0LjEQ%SLe$iG=+_H}>>&##O2?Yd-Xv~?lz{XCOd5ob_0_(9
zSKhy8Cmu@m0N?YHe5~8Zs27$}sMv+iSL7O1KI?1QNlOkPju<1kPmSEHM9?hGz3HF|
z=G{M^?QA2{l6#s;!eO^uxx@uL^-Q35@+6xkM>wM<U2ase?fY^xqS^11_sA~J9r6>T
z#c0#B^wD9OV3_!E`y48tj99;9%3dd58Q3{9T?9k`j@?!Re>x~h%CEIRFUaro4=YYM
z?oy?NBT%|lko@)(^k#E=#@4Ta@E8FxS;Je@lfrjk3udTxC*6$G7tsd4sTR|Wb4833
z`5q3JF|uk1U3$Fa7QzUMQJVNn=)HXSJYtbh6?J)|lRCOBqNl*xF)s<A?t@At!$f`7
z>gQ=3hMvtw_>0Ta%e6g*jCJnSn!v<mFquZSS>>3DAfT96TQEH~T~J87$bhJhC4b7T
z_+IUQW=fQmDNk3@Ftu9#6L<zcRS9oVX|(URmp(sX+gLT<yFtly#K6@fmf`qiX;Knr
zKLHe8ap|!v)7A}-YAfqs5A2sNQ)sjOLLoSENoXB*+;!7XNqVP8&rdmDEb-(5+(KeE
zsX@5fCiz-S;A6e}yg;45KGOE15N`tuMdd*+|6WVm+vGN9(+0t!&v;hYLK1@vBY<4N
zkL@j=Wj%R+^U%cLc!lH^7{lLKbg`hE%<Y<J4mtmH9B?j6A8<xB4cVD54i1Eo_mzMB
zkug(`7n08rlyA5d!YqxWb^iUuyDB;<Cr+B)G}Pof@ej@(184uceWWO-@O&bNFAL;C
z_>pbU*=cR^z$}_4tdw<!W-f@9NauRkBMy|g_e3*|k!-`xjcU#dpTfxoMnekb9i93%
z!1)U$nuS1uU!WhE#alcE!iE&wB-@Q8C6Xn@f@NZ>9C~A@gvj)5J1Y@c)+=0ngkl2G
zoLPe93qSHB15E=*HGBKtoKUGsSIRbTjwh(vR~!peWu?&K=*eiFllhlKH1IdjirQ*s
z$}*|NjDWnnJ%?C-N_ICc{zdBvJuVeZ>;|Jk4K4vP4c0hSv!a#n*)rm%LCn0SNYx6i
ze6_z%T=iGZhR=2ilP2uM1IB)PtL^D@X%vXj!KxZ0>5LXdxii`rbpH6%%o5?Qd&m+E
z0#BAt_iv(h>Tn0OBNKUc6N&Y?JfYa?wP){|3Z5yWeN3ONf;W;x4_J>gPKtS~U})?}
zdkh=W?X&dP&1gGJZ*8nz>UGCl58c_l={b|gs6^v3g$zEP+S-4tE=c->&DNb(3_gYu
zj5MZ#fbBU|^|du!h9a}Qv;F1=`ib>r`5CgnUvj-Elgl<GgEL%tpKa;?RLOx1!70bj
zc8Dtv`~&M0=nKlywD<H6VJJ}Ns=riJK(%*XBqfPH`w~o#?<^giUp7CB7UxF>*3Zwr
zu8xk*zB+!Xe)#A$Vi<8`cjp)cg_m%1JmT_%lV`SO)@TVqu*}<k*N{Z`*u6X81HJ!z
z?q26;)HU4$+YEX(Y>xYol;6xG2RYE7x$$;;_D)~#Brv{B0W-!7_jsX-9osz+#pLlA
ztN%cE1@5SP=f&^-91*^?K1w%IFPnb5=;L<?bzLg$J~v-<ZGj~J;I4xjPIE&P&<a5M
z&6bq+$6fLeQop;5eJw}auw1l<f2R!21t#qm7-P!*xQnq}fPX+-9El#yyt&k9qFFA{
zRrXSf+uD5*!HGM#GyV1A^QM>;=J^4<TRU*&0p07CfdW#>dqA<RYf~k_!_;-HEoJB_
zss{m44u~?G$a<GZ^Q^EwG<F#uU$#zRz%5E1S+c1S6J4Jy0@=uSnndz_phzaX<zOyD
z?X|#9JHBVz&o>^J<b6JJvmTTk)~s_AO5~C>%EAp2#el@*W^s+=Q*I-AaLgJ?1XUo+
z64cQKj;tMs!|aWuApd>Q{NBOz{RA~4yxa{<gxPC)n0RyOSePWVuehT!>us|9z`3Xo
zdhX9{4p2n*>2R?fc3}&9QPzIA^<!`2FB{6_8q#{X*;TSDKEIfNIt99OC}HkvloP(z
zXP{HTfB7ic-tAL#)t&Es)f$HSQ(PtP)v&fHzbGh3V7zo}5WAC|L**2%ML!dBC2X5?
z{!g}Ve~7aKyKKu!^ZaY~O~)dy@~N~}C`7cyQB=i|kqWL$QfTYuNn#C}xp&Gb`2rNs
zrwPU8hGn~xh)U4{5zgb)=G_x_x2smxv2LV15C_RL6T-KzK`^wVn!Kvplf1&c8`F$U
zu&lP0CjhJL*U^2!LISc~aOEjgYWOXCubL<;0sBuS7z<~~5*i0Y<~m~io*LUq)X@s$
zSObpf<=A;60<G8<b9tzxTN7d?<rBwdu|q|Eu@M$T$vh?=&_<dE=3m_oB5k^o7dfT^
z@o0Mdx3(MeJ`Q(`_7xFb9zyX`dF4x+abRHx`{5I_i^G-gt!?L8F%k-04bvS4#+%Tb
z7;h>ir9o(7n@W8=Pvsk}KrV~~6INu>mLPGnn?k5o02BgLzg})cve5Qn$C=Z{UZoZq
zztRO|;aff?Z6u3kJPEvcp(-uLbX(Btx=4eWk3KUl_tJOBfiQ0i%ku%&=8;(yYt;{1
zPggbd84la<uT`7_FFX=f>#+)S`O9h`?a1PO&}@kBfS;9orXUn+DY)YRhZ?s)GsZd0
z-}5@fr1)D!pgOnJ4jEd+c#ixRACuVX=ljT@G->}3=$}RS>hjlytF%4=C|GhAe4<DY
zn$81;@A(BH+$ZQ&iB{LJ<plzUrkb$xkck-$Q78V;Q)PPXsq{9aqV-~RFKjaoadyrX
z74}LO|NE|*oqeMx#4^dEIEz!j`${mgV=&{d@Y@t~6u9|F*<KhYX}X8}g-HG<DLyek
z&Dx<(=?$;egMyn~BqUKw?sr}PLB8+n>iZ2~^B{7Cb8o;7Jkh-pL$n!bc@k;)5No0B
zR`pZR_s_x8*d3!lwp6!o+{P<)s2<K<o$ceXW3Nr~7?w%%!u?6f;h!}gjOA<^^jYpw
z%i->OI>UxOeLnC8m$)nu?WC4~^e?X8<P)pR^7PoMlJuD4BmeRgKy|aTgT-N?F`~v3
zgR<*Kv3Uwa{;#|H9tmb*i*0+g_SSiat%;bU)#`?3;Vl=8upvRJ-j!uPS}W^jR%hfe
zw`qwj8M%l<uL6M6u0ths);|xX6W4R|;3HwHz(s3Cufg4W^}Gf-r2RZLboTgsK3VFf
zN!~vgPOV6F_?i>$vn{eBRqzO)Kh7BgZ^Q3}BMy15taLi|d26gSQt?yi1XLCMQr4Is
zZ#23;-nshrMl^a}DK}=8l63EhEpjU>$J)<m^q)!e<5E@c5v%UgCh&Cc!MNUjQoDQQ
z`+6?YUjLsDJi*=lH;C1A)Whz{5VJd3nARwml`MO&gcVdu;mQDpajYYjZ+!yv9?V0c
zAo4~&*NiHgGSfD|mtP&2vQk!$iW7gwym$KFZcujahr~iwi7|(v)pKul>;C)y7{UOQ
ziLU=2Lzpm(u_JS=8Oj?9J&!w{IyLd$tvR>Fo4TOJ1Ds_dQ2VB%Z8-#9lK-5P&;qA!
zrsRIowpZ(3^jq%#Tdct@O{SfuSe82|7uk?hxLkJ>si3L|o;yGCC%tdMQ|aW)^<FL*
z-q~>lM@!r>Cbao!f2xj)ZGph8-ZV=ryCHAC1uJY8AxaHh9o)fezY$K5^TNw~cY1vP
zWQF<Hj)ihE2-d&z20GUvNI}YX_L%Lm-tdq!j&r1$$S=0aMSsdM+T0I$U^#eWT*%vS
zIfWcHD9*=EpaRPW2cs@%F#^Hq=4?6wv)B8i_l_xR_mw9tV(@~Vd<e|R>FLS&pGtDB
zbN)vp{qF91E^^z0MwE5E4t5O)*vbJnRzUd|zC!I(A&@m<$>Lg?j57P-6cx^VVe2%@
zYPF-cc_)Nee~Ea^)8gPOoIG<1x$xG;UD%Yr(e1SQv48WivH@JrY#--$9fq5q=)v)q
z=dFEpAGHQe^2|{)8V7D=e4>n&BwQ5Z`f>|ZScCtmm;NGjgI%)>&aTN_#u-xiJ1nV*
zKvQ+G(De{xc|HJ{xg8}pT3|MWbR(3C*yEkN#rk}+H^nl>(d_~@oc|<cci;j>XA_pr
z=}vYN_}+S;&G+)wIfmIfm3O`ixJ5X775dpTy6&{CRDohP-Lhc3Itv(v`85&J&HTUU
zdZ*}0+NfPSwr$&XveL2D>Dcbrw!LDnI33%zjZVk5tqyj--}fK<V~??qYM#|e)u{Q*
zdEHluiAf?6*VASi3PwGtVHDqDg$Fa!6_Kh_q){Y&d!SB4Hpr6dgLuDp!_gAL#Q=tu
z1D>mKS)VXYlG#U|Smhl!#7T(H_bEv9^}hjb%0O=<9p!TL45m*x)DA*?fHPpcgo*Tz
zqp?uDqS{u$u*{9yzp0lqX+eW8J$~oN@9>6~@TI0R^p6f50J*jZ2L?BgaqdnP$!OH|
zE!G}<!yfeY!bn>=0R_koDgTk_6{eViXi+|&a5pnBATC7qMX3E0KZ>*TN<ymRnM&|=
z>`F8P`)fEEDW^PUyd`z$%;!_$)&Rv!j|RP-2v5lAb#mH_ee;Ioi0gW2i5}3fdBJTh
zr<IX@Q0+Ce=UP3D2v>fKt7MJmg0T8nb%f7na+KTTXcLZ-(1R$pM!qy`Fp&E=g1iHb
zgrD@yo0K(HD@(D9Bk?7xN~z1$RdEOmmaVI~k=48dcb~0*ev9)!&UfM+nX3cSTY0xv
z0Ww#Q|0G%x5C-XTD!p(xvdjeX-gu-DVg2q~GEcaj$wv~4c#WWxtQp3gdesQa8-M`_
zoIO%vb5pr?!fi`56^_~V_T9@H+`btYbg$DwdRU;v>x7MX@(RZ#a&CLVj60h@hNhXM
zc^^5P<emBOKQsHql|Dz{m{V09i#d1iqwXBxIc(pcueR7!Q<k0dM;4dmw}g9_{La+~
z>vxm~@fEF=zM@$bbbqsTyE>NlDq7r-|0R30N@^nO5=F8*SEQVTc<I9g0BIMdR{hON
zC|jIDUYU@8yXM7*r3{awCTu4)+d+osmr=9E3Jhdo*bd?ZAZxJ9;kHt**h%gr`dGp*
zI5?21><fNm@h=qTqKx_j8Jt{9k#kl*g+{H><a!izT7;CrCrPWMJoZ=OZ4c|gR%C-N
z8(f(!8^KWC*+*l`tL#C^>0NTa6g9+vYP*ma4_uJXgOduvRuwlm>`_Lt3lX!UVDO7T
zMDGTvGg0E4)L<B=`z5}kmt))0i6guBp9ab#FD^GMw&%xZUo;I^C4X=o;vIyNmiKg5
zk_IR~Y6gX<5XOf9A67%N!(LVogKqo(8flJ|WO?HigU^Z94C*}I^xk&@(nJJ!1)YI@
zWsSzdIPNpFdWheO+~v%~vO|bv{`-uuTv5E=2)UOC-1k}R_leK6uRqwbHg*3f?KrO9
ztUMV-!f|K!m2K;r&h?0nrHY?zg-_J8a2Ab2DNQ$CJOrk@pM(o1**7qYqsRw~B~er!
zjPV`ZtQpQ2A!W=j)z?4-#CHoww15w_t;-BN!;Y4PYOU<Oj^(J^QpPdC7q`pk=-f4Q
zcs)^47Vs=P+2}yh_z{+OXzvEw28Dqj+QoECkYki#%tWCezYW@X+~|4ANqPW@{m5r6
zuA8V9<AeII71}^=55|sk0di1V<vInN1{4J#5rI9;FdCsp9}|R<ckKq6$qyF9_3v>4
z0GcPYr~`fNLwMOuCsiTDbQdYa%$%n8EFH?9C9jNv`#iVGRf4!>3cp@0&Ys3vMRw8h
zBG-#I#lz6z?__N+OE+-twsy#veE-C72xiR_5-AIlnVjOLiVVsW1^)h_Zi>D+rqLMr
zRJ3)s0hz`H8ziX<(eJ@V8HT2RVAsP~g6{O)oNb!*qfaws?ZMFZ-u{117@gEGV22Oe
zlj-ZVPaF^1C`&e{y%BWpYh>=@+35(0Q42Tf4O8iul?BZ;KP|YYtp;r#pk)q?*X<NP
zNu$OCx>f2s4NK+&{-2DM<ih{WSlPr{t<Z=wzgM69PqTN>{|~r|Qqg@gHGeD8usTe;
z%3oL@c6zPJxMWSLv&W9!XBPsZreD;UPpwC=mt<mEM_buem1s$KooQT)c6Jzai&snB
z01e?5k5=_9b2l~g?&gN%|F^$WxW{WX0Xigia4MR{2GqP=1VH1!UUv4*czmtnXg0Ng
zquLWDbbYVJEA%VV@Gm3jP3ZB<TYEmO#3%)Xdz|h{>|OdS^+>Z{$fc(?Os9V*6q2z0
z)DYNebKRiYjNphdwON{-q-^4}`py?HN}rRhRNsh0P&S=Vl}cC2P3M4q^(Vx!7u@bA
zv2SNMQF7dI@=^oB-xhYi`rsRMGH=_}tn(JF4|J2qv{-wZ@8&VVr2O@95Or=D9xWzS
zZUkO6Ok)+vP3@x5C5hc$t<zf@77m{X4ZMKR{|IuMMaJ3zh2mdr2+{H}aXLt}6RnZE
zOH6mX(K|g5_0z49TropzhD4Uj-;#cw%Eu7>Ym*X9<v*Jbwl%+f!i(opoP%r|ULxvt
z;4fbxDAPSwcO0v9evVNhHUF%j{Pa$RZ|AjRmJ5Z7u^?%6(2TgrXoC3vF;rJ31LVv;
zyA5!dSpmh%5frq}0w|tpNRmgW6j14xV#)Vj_4(~?OeN%2+1kh1EaA7?+8ZAYX4lbb
z=wE)vk1^?|FV~&5?j9}cFW0E5xo}ObeO+x#UWF@m(Fj1UM7M|`ZgB%bLgieo2&dEn
zOyjc*$B;Ejfq?@H@*UC$L6{+!_gmEKAc8t~HN%V9zsr-zQ?1}ldn+PfdjckIYycP}
zFz)b4BLp~SOP{~n-?st(OElE^**qWiI`q~4nUv2h5^N}as70QNbTaZ;E-_tQ#?Du-
zYJ$#20Etn*fIij>GmR#}zBf3XVUJweH7d>QoBe6iX~CXh=Oxkw<Su(srt?E3ckgq@
z9Kyv=PkH+23bndeUco+teLcnGZFTaY?O2QM2J8UpIev!}3Ah!CR0)Z`kvm&n0r<o2
zFkw;XjJ!ohKc^6OtqoNT@~Hlj2QxXbUfc(^;@!bGyo=IJ>}@Wd3!vX(J^5aY6H`(n
zUu)&CKv~AhuF(2TK~Xi7E=uR7)Bc6*f6DGHc9oVVoBi_lz}zF5Hp+|_8Dz<YWDb}c
z)nfqrVkR-qe(|-rfJ*d%K4#wIe5mT5_sM}%narqw4uLS1OM}C#>gxwj5LY<&@|u0l
z=BS0@!kda0c)cI(MXE+U9!;Ss2TMDUSirma0=t11!xKQ4r&5d<y{lbN#~zTntcxcO
z|6FNCC-dRxpJL#H)CiEd<mGp8n{GwOgw0{2zB2>C(d>WpgV~7YO}2BM4imwgM-l__
zs|THS3<Q#0=qW$89cf}#G4MWLW@%H7k0zuYNJLsPcBep{iO?rFV^}Z4IOu6sUo7y`
zo+(19K_{jN40`9eZbaJYPg74fXZ`r$Pdrn;L@#Vkr*HGuJh~(Gq*8T}z8<6CH&$>c
z^2hdZwdp|--@Bc1!h|6Wz~+(Q!%$76ihz8^s4NU_3wa89@7A*t_A;Spt1O9xJ`i+M
zy?KHLp~AEQAhs)DJd^w5kT<X_wVLBfaIlDLf?b?)X<M&?yA?Nk8LORX%}p+sT6kP|
z`DKEFwN24UY7>7Gv3{{C=n)Bp{p(>PxDxS4ptj+Fy533FGXZJH^AkmTeaYlbqq>A+
zSaqh$`4k-Ml;3RFd7O=M`AEAb9f&hQ|9wfIywU6G_(~|=^H3l|6KNTlb?9QI2US}z
zNYBa&)d+!OTYF8j<Ftxcd1um|0+9Q@cZ;waH_6d6O3&xC2PRTA#7!h((z*)Jj$Wmr
zcHdD5TFBUS`*#<=I#)xSqQO-f6ygZA^3cD!y7g5?d%!_vKKjYw<>|Wx_&{#=0cOFi
z7?!`xpal~DRc{Dj3}s{o3(w6j{p0%;Z8Q=|svJX{j>$A<>SP-h4q|z&%%llwQSFuo
zOlCOd2kPI(bl-AtC6v?rBzISer+&ewnMq_!vJmF}07O>xJCXtC8@G(oj%HsRIiWmJ
zVWE`-9K{@2%HBYP`kYt{!Zdss>w8nuF&GeQ;7lg0N}AzOwcg__J5LGMg`7dWs30U+
zj3!pRPG<k#3UB+0#h)pg!zVbFX~kHLS9G%^OdP&QJ8oJpTcP@*KLH#uK#$+`qoIxz
zgc?jI+Sf*Ej(j}YQVlj>n?Y&mGuZNkPZAw4d^&X3ejAEy<H;B^yU>T%bHXh-gBs-1
z$I%C2!sn)4g6X1WG`dmr$Ul|3Uj66cu{zTf#B91HmGpTT)>?FkIb^d6rLhm#CB>z4
z(Nzm#&1y_Sp&W#J(Cf)KHa3j-4_?lOp9u-6o3+A}Xo7A;{zNGWEWGA_&IpN}p<oo-
z@A$l=X_L$EdD?B?Nx0>}T@0t>QT)CW@kw8K$MZ-S$B8&j95o$+&7GqUit*|pRx*u#
zZN!v;%S*(|$V&tSB`Rdlpb{tWUMPks=CU3`go%QBhX^e<Iq+$p>K50%Ucc5=j+<OK
zE|5(v@p2V%C;AFf=01iYBpV!4S&3hXiKBe2iN1x&pz@>7`#GxacqzAt%yf^`(b1+S
zR88ayogsLo;Ry~Y4o|nagK4twu42vvP;tD|ip640Rt~4P?Se?BXgKa}RgOqia8$GB
zWPOnU_4rg-p-_0s>$Imsb`7K8b=X&Fgvl6OQze5*DGj>Gv7+7Y3S>?hKINK&j})WX
zH;bmq_K9LSW+&E2&#wXCnGj>}@C7P4j^Fh3SoBfQB1rIu%qaGjql@>(4V;p6w^n6q
zFzo0=vL&c!Ri%?REjiz)MaHw|KvoWZd%pqb(6ew@GiM4CYCiEDE3ZIZxw*)LO&nc8
z!+h7gh7mbFVVLYZF4506t2W-I?c3`-rhtAPY<O1R$b5>88=~t(CMX8<74;I#52NFZ
zK~A}+$6DeZCaWPuJG#k|!o6)CJO}|;DG?Jg-N7Xm3jD5EI?{$5aCL!D=Yfqajtq7N
zp<WVp^A~Z^BIJabYfc=;fa8A|nRBXp0ZQb#D?Os0OU=+TshDg>(T%@fM7%Ei*=M4l
z8Q*(PU}T!>3LtUe>KOteppPfBWWS@u;hD!zWtw7!#{(ZD?vq1tdGuKnf+y1=?cHB*
zY_Uxh*%2TE{|rkbcfjd+Tk_(6P-<kd?%^0lGq<eh-pJWHl`Pc=rGw9oPl~wmm`DzM
zN_{rBZJO7@t*?B?lKyxjaTH)`Io^JJaR}|-nSL;p6U}k(-J}n3uH9kBzy^8>lY5FC
zIg3#M*_7akqdwU;T>(g-SL&`;if?SU4y(qmoSXaIazUa)jCmxn@<7j>1ih0(zBA{*
z(d0FnX6Tbw*=10?knb>-BV1k{0eEZi`%Gh<0ykwgHI*Cz$zd2`la?&(jKW6>yavwK
zlY~ZH%nvLKD3}m+@>buw13uc^&kV=&)9XZ3rV2p!u_3&vNf{27)B_Zl)1Ju&^-~UJ
zCLC3cczYNxJ~mA1%6;HpR6rpYTq(H>M|~Rp<j2L9*)oB>8<-$hSQO^==n9+%4A#GH
zV)U7`XI2G9k|LVP0RG=B_a*4Iw3sIb7~>60_JhpG*=kCE|6y&Pk*%Crnc(`6r!}=O
zB5+%Zv#6x=E`yNi%Q`K=_Tm(=^V?E%=P5!VmP+?Gn>A1M8<Vi41S`~x8NUVNIrDM4
z%phcAL$Q5L8Yh7br~myfYYe>!b3tTS2->r>v&#0`YFMcaerWeW+povkKu5#>pq&U1
za>|s;Iy{z}fW#%>aOwR!OStjRrVyD(gV2mzb{U1-$*`9;H5ahoVWXlqzj3;rNhXFv
zGhuwXiwh`yCaB3caqIXuLrsg37WB0WL)fmYp_ns`!h{j7b5=J7;3U{o-GhAyKZ)7$
z6fpWm6csc~P{hbOkb-<9{lF=YCF_uDU~37YAmQ5JnUVJ4FX^2<(@{2b{-E+qn5nXJ
z*A2t$11MF5?b(_dhsW$ws^PhjdtY{?ApGv6P)xeMw#dVjs{(iKu^hVjWFZe~Uz2A`
zN<}LM0-tjjKy86VDqW&eP|HeNjV!mS4?~3#2qbs97}X7FNoAqlN@m&J8J(i=#p!HG
zf$AMd<qxo<*~<gQV(Ed-rHc%ZES7=}PAJ(&%wxxlqw#5U(ELfgB)KT2kc0x8PpKhK
zA~KpqOYkhW97aG==$2gPZ_7hjFi&PtYHjeNEi$c63c@Y8d^nSCU;y|>u%uyLI(<~x
z6Q#<*@B;e)Kjl&ac<~V;GFM-DUhpZx6++gW^<98W&D2(_K_O10Ir>Ga<3$GRsQNvL
z0_H3enWNeQRkPFner1ZkYn~SA?a{yyMT@cC$y7acJFJ83wdz0mp-!Us!gYjGaA$#y
z!tZh^!5&TORws!A`ijNin$elkrAQr^<E}Kg+4#04j0v~+Q$Y#~RHnneszLWFv~Us)
zybpbM=GH!^&CR=|X^oz+<-_blHpX1>y<PE)f}Ak6B<R8e0@e_rhI!SfLwSZ5&X*0E
z#@9>sNpN={>{<W)*!jrNz8_z706&!jQ!pb`cd-99n^$^se{jq9&dj4!Ufd0zZcKGQ
zFX920j8Dnqc`QfrWO4>&_Nje{T})`$3c1bEps83eFIjf{j&$H!%#5~4tzil-vxvRQ
zJkTaCDKOLq;b;jkUQl>|v?pxlO%Sh!R`@q8#<|?*%xl~Ol`RZ&0OWGQCOIC{cg^G{
zwaYx`m%V(*F))3^Hq3!^5n)xr!i2nzrDY&d5$Nzj{Z~fK9c;WOy)Se+%}ti2(-}mv
zDB{W|P@wBK%<A6O)!_^f)XQ~7SnolCpeUvh(KS7BEqz8XZ&Zd9;(rdU&-nFwm!S=w
zM4AU-KL!BzBY##aM9W$FOD>)%Affnv^wb-R4IK0@GbpF4^h+s)E$B|1@qjc6CdmV9
zFRRSp=peH=W(J+EhX(PTcVCT7lsp0F;s)+pH-JAj=q=2M0Ry|?Usk}0E&7>@!XB5F
zS6d*KGvYhJ4!Y*UWK)@#Ow0%P-UY1%nxLNIC>7{QAu_iOA7YBUMHwwiF#Qr<WGQNa
zL!w-GPvY!~_y+1rf`0+YxZ!QUmr_PufDasNk42cK$rt7i+=%~-(j5AC=9|ZoQe4eM
ziQ+alFJ|fu{a-b~onWX(pmeYqvtY+?dlMuCqUY+ky`L-`(9yG&K>LB59kc?%;xw{(
z_q*L$?kZmQwp$p4)X>+F85SLfy4ohmU4Oj@UIyD#3^E9{)GfgVh27Q!U4q8Jb}fiF
zG=s)!$fOIHCy4BUMu;zOx#weg11XIDJ9K;5EdJe4z`LikU%$8FDEOQ^;f8<s$8a+q
zhd#PI|7AIbOhY?)zt#}7px(Cl53rL=6?cj>Y(W+}rM3!B;un@jHOgp#LLU(;-_JLN
z7g>w7QO#0+u0X}33eO6Gz<Pdh%t=uEFsisE5uYj^W|g?T69-9=@B)ph(a_S3_xnm%
zU>yf4FD<Z+GKX3G>KQ^ua~X>kgIlcZlpS+5FEq7mb!b#_;M)STSevtOK0nwG{ngxV
zdMb~b=RNP_*etND<FhD6?#7>&yT-AExyaz){C%t7y{|cyGB5akKq#mOOy{atm*ZNm
zJ2EHuPYSXm-JGqyObT$%yft<d(myhQpwj5pv*@!;!eavsrV;}`-`7YC;|8X`oEr)>
zwH6Tq{@yekJy$+Y7b32MDQgHXdY&NM$w-vQ$vmK^O=Mp9?k5R{E^+=F71r`)VS6>P
z!Q8Ann|=}p@@aa?4EN{H5WX${$Qd?zHk9|*jjM2!Xa=-w#IR)uJHC<6fvA65B36h9
zoOnx_QdW%bD_F32;KK}GAz7cJpI`Y>U-g-<f;41{*N5B*RG7uDC-sFiWiuE#s1wb@
z5bPB&^ZsIKV-VmlOuYYQ<w|MpA=xc__mZx8k?1RC<G(`JqA{7QSWcVJ>jj;7FbZ((
zc$(LNAf_k%>j~PS9mqG5Uzf@#7`k{rIYnrkrQ7H-h9b4&=PCt`y26GYs2C%aY41(p
zzF6766+i84+5S?0otmaBx|YNfmZnHogO#YNO^D7-6bvCnEyJluo*Rpj1!^IPZd|9L
z;jk5EyI}#Qpg*WLw55(lsku^MvH|1}BZ>w8+^}A~eL4tZ#v)5L^GI@1`)R6$%IvTw
z^M}bypr~1JU*+jGel-GdBDQYkyP^H2K8SJ+cd0p&1o@m3esUzm$dD8Jvxt59jG2hJ
zsIZDM$z)fjoNF^A^)W2F9M|-remW&nMw*qD*aG+oXE3cMTv13$7$sgO$aM(+9>g7w
zR|j3?8%SQbcx-IUZR069TU6S@tVNqq&-cHf{3cZ?ATl5_`D=(||0AYLA1=_CVI*vv
zH|FsJiMqzqx(qRCE$W$u2vPu54{*SBa=LnAMaoK`sZFz{U{N#HG7+C&jmtO)wh7@2
z#;l3LK9M94dJDcxZYN>#AR4QbuIpYOP?QXho@E(CX6Zd{^F}f)jd5N7h4FIIJ9jRB
zV|5WK+k)_Qdw;3qU|HHajYdkqM?vj(tP7dJ!O;%ODX1|17mxS%;p8H*IQ0gKkbv#S
z>a|rW;aA%@|GYeGI`#Ai0?!;O%|&UuA0#W_(-oDAt9P|c{$hqA$5RGOcDv22(gU6@
ztr67riHO3#0S2az){WmTz6!3Szs@YwQYilt5rPW0Iur%uLW&z;!ah|Dj>wpz$GzjA
z3I3B3kW)uE%G%mV*l-oU?>J%&Fz32n%&?z25p3VkZ=l$XEjqc&|1x&<b?=xp$G##m
zkLM{R!xNumf;Wm<Z7@tm$`lebD`J#txTEYlV7{=r3mV!q_AJ3o-d0#e5VthrM7mQC
zkb6ab5)Sl7HNj!?dW_N-q24&Su%a_gNMLuOz-2Tr)HR{fM%DAXq4E-=d_o(-Njv#;
z3w9Hv7Yhnu?GW5eH9`=jjeiD_-GtzM?lUg89&f0IYuU$97$tKVm<q^EzEYTzP>)SQ
zzC5D&r;wo1+))}#WG4x?Cd?&0V6UPY#1xT7bvEt9vwh>mJm&EE4u&)f*QKI%>W<Ij
z*hc>eX7j%B`qSsW^fIp{Q!x9UUo%8dT`R4S`~At(l2RD9)EB`zPRuNV_olb6ORs&O
z#Rr5gY+t|S{b%0yDKy*HZ63sK<X-zej#2pez;QWBhB~9_6}NNMwRL%E_q_Af;%;EK
zXV|${i{dbiME8?>nCc~m&sTwTCjx1o1eIy|FO9zF6A~h}{YI$3A*9~j595vKPz<%n
zoW6HcZ-*pOwZ9ZxC8vt}ad!Y`EhTGxiLIBD`(WZ0iNfaDcgs)7OzqDwiO1fn3ovGd
zPs!&~!#%s#^Z>W!em9@@wcBVSF8AF~DX+z(DhBE_`gZp*f(}m0==3CcZ`6!d&d2ok
zoOUnD)IE&fXqr4nVEx?fuA#e(Fa%@>p{{~YP}~mWza<WlaS3i`9ajF#bLW6;0(ic8
zKzOO7pH}Yt&IGS^m0XaVrzBmXF6Tx#<@9sW|3l70+(4lBM(Yh5jV<f$*>O$etRd?G
zI&~0j-p}3p!*uyTMf_u4gqn3yeyU-QRi2)!QBAC|?e|qn!|Kx&A`MS6wS*Z)JX?}#
z%5X~NpLpSz!2TZh5#Af`hgWf!^(lDT8dv2X2f^SCC6Q_5TX=X6hfnrhUSd_lR8y{7
zkSuSf+Lk0Jbq*hk`l6b2LRkjVHzX{9Ud@y~d&<1`a?iBz#thk>H#OjyI~BSPs4&^C
z|A?~F%hlEO<f52QBS&Z7IqA2ZfAN!(n-f>p4FEm@ISSXeGqe!X9aZrVXC8`k0ygjv
z&JkGHU}q=ln0+>{>$Z^TA7GE69K!8!RP^Es-|n=fJ`;k<$|mYeO-Squ7QAVGS{XA5
zr648mSD(^yeZf}ATW^y;(cc>`y#(8~y-N6#XEXTZ;zd!rVSw?Neo@I9H;@Gh^-|z7
zD0`hvD?1F^sWxL4?m?+oWQ=V3nMi(8@vIFh$Mb5xu-s}P6n!H{)VGN`l#Vjgx-+2a
zQ1R!Aw7M+li_1jrmkf;Xyi(>vCPercr`hKVMYkOAM{AAJACwC#76OLa%I+zcVYC+t
zX@6l*bMRnLwta<)d(8nq{>u2GLDz&FnD2GtO>l&3u`r)F(4^tzx}1-pZMWDII9tZd
z(Q?U3M|{t{^~r0~Vuuf%k^(c^(;M!w%y~)M5Wx6JEG=cLFg}|x9p5#5agmrJq20oF
z${rB>rcuzmzraygqVjtpYB0sLPx{x_v>GO6frWV%E62VO1p-DH8MIaMb5XLC(UK(x
zs(<v&*!U+J5gLu4{CM=l(a3YeWWtapjiRPv{0||cM+CE=i_nBUXu;sW`$~Ao_s2j=
zf2E8AR1f4R9sA{PF41v%Y=NWAgkXlq_ubc@A1r5cVs2x4Vs8_AMnzh?Np{0Klz_2)
zaZx9p*rCtDh_eaFucG}GXZ%&}*$>!E>_TNm9}O7@--sIVi%)T%0(7xz{w@dfMXrPd
z&=Yf|zVy31LqFVfU>V^E`^;6Vkwg=@DS;7z@U?OH8?rwO#)d_*7|{&gA{;s+0^`Ik
zC4jC_6LXc{5YE10tE87Wvxthl1e*{C(v4HnVIWerb)E~F1yb`{Nw#63`F!Z#IH}L2
zD4>I;7HYJ2SzKJCnpreG&CqdtSuuwKD8T7@K9+%fy8v43mna|a5F^$?rUk}Sf&vx`
z`zom}BYA&OsvgB;^Y|Pe0K7g0@=s8$SwDpufJf!#JJ1FlAI6AwR0$EjzEZI!3_Y(6
z<s6@_K;a9h>45(_yI9LgOi(YVP)C8n#kqYPv+wJknHqt&bGi-g5U$KD$l7SO1Gi6M
z?BpC3FaNzhOo8NVqu!5SM1me!u3C(|($Y;;Lg4K%Au4<`l9f+ZKU229I$1)1;w@s;
z!}OXDwWT{EkY~rjWpXUH>$)Duap_M1g>(JyNMZb)rw_w`n;oBp>TP9yagHDndVxG$
zWY@(rYGMm|%bd#UMP7me<$)K$5vE*YN%uk|=${&-A~yxko8<!KRSc7REc1?B$Sje~
zzb+mnV*Gt^DHaU{QC^|z%BeRrILVY@Ynsh{fAmp$QaS*G#(G=1>tlu%gMq60M5Erv
zQHacm3x2}y+iuc5(9O};(;m91;N9DW;Ag#2gpBK~hW6MwK6lVq;s?<zQxth$8mt?@
zEQAe)ZY6F%1p$9;z-B(?PZWDy;pDWZb!T211%_fvl2hoYeV19IPfK{YTmBZbEEH!4
z%KKqTdl+?K&uHiGLuJz{<D*Zr_U4t6W+Nb&A?j|JD%|&>X#!KA{g#T#P7j+(Kdphr
zb)6e9o$c4Y1S|x-G7;BvVLv|t%_4Xq-VoVrg37AV0FlofB4R4qfl>d8E?-f-=V@|;
zUvdN&|06BRU1yd3FUY6d{<y%uIU`CKN?0=YUe1~~S)jXhvYh&%Tlt*EJ&>Y^+s_Hu
zE2z~a5a9C3-QZ(s{p!;8vgc$d6{?$ow-K7YeX-~(CZOTON^L0xi>UM8X8wM^5eWOU
z)YaE%p)G9WCk9E)<hbot1ubF6<G{KTE4AQk|Hs}iiQ)26;fQ@CDWAVNJMob4%0W2e
zay3AAKpRxl4R`T7Ztz6Uj80739by|p-iQc^unTCh8<c$1ae9kUT#6P?rOsnnDU47K
z#>cL@HKe0-zTC_&Aa05|at-g~Y+a4vMvw1;5KjB(4jgw}pO6XJJ?$VrhvnLRj0`;0
z_EXP>C!-SJjJ4aZemyZ8Ga+ZjJmnU7>BH1ZMrK)^fZ)X1S2X$#!jG3MK%_1Y7!kI{
zL#4||LZU$D+|%Ll_Fw(pPh_56R-_O+Zz`tYo|0xtuQkON)t%w^n5hYcz^xZiuKW_&
zP;(wN4Ai=7K)>woLAQcXdP3_*BcjPcEKPTIAGuu|qxb3?+EAhPig&tv>5a*Ch(g6d
zCEZVUwg9>0Z;vKTdxrl(kGtPcayH^G8eFMCIsXOJNOCFcrsOIyR%a#=6`)@DDQ$u^
z`y;?{s{4^TBzmX>{7}mi@-_>ZPld=SfrTw+D4Nt)IM5@6y4z`NZ;XJXVNec-ZW7+3
z#|-1rX77HiVE=tO=<)4vCXdI|bR0L3;yDyA3C}#c7{*Kp91F2qu%Ru`filNOt@plN
z=s1YN(bkxjLe|Xl3(jSkJKJq!IEjyx93`X%YKv&S2~5=*d}vat!SGu<a#-qfWSRvX
z$@s3-%Z5pfR;=?gjag%Ks>!t!dBQpM7}Kp?k@1+=pZo4B0I2UcwCbiQnEVA!FK}wa
z0^{KF0Y83F!09PP|L;&<=(y#rwX>`pMc#A^Eh~3njPO=Gyv)ubJVIVXVj~)+z`-sF
z6(|4g_jhXwvM<QZxlhxt05YyGba7ZsJ09`u&9LiP3C@M|Ig@M48?;s^%sw{yP%D|Q
zN$S0*<TF7$_W&}p*WEkkt2<&iTl*#jfA%V3%zH%IdQS)tX>PY5VLVGb?Cf*E+Uj9+
zw-#D&Ugh?<>^law$wn2SazI}9;8KLpUsr${>C+(|j!#Ep=kwlS<sY&31h;?QdQz&E
zsEr*o51y<((t1m(ie=|`&!`q%na!goOWFG2OR&sIiO4hZ{FKWTH*AJHwav!L=c*(0
zA5{D;pL9{jDI=ogV00FP5~8n$Ea<IikEDO(IxNrP3n6j&Ja_i*N8(w8zE}MqB3FtO
z#6*bsnQY=@xgqR;mwXl~{`p{HdECAhtrhu|!6sy5nFTlnaqUWDz|{=YOQ4CIul^0`
zce&-lc#<Ik^I7KaY&<9pp5Mu^hm3$oK_FdlufrDz!vqBDDZrPyfFtqXpYpUMj=j8I
z#@#3K3d-o%={S5j7heH8CJDSP=z`dwl`<R)l5^-0eHP3k1we}I^z5-iYhWV^p}j7!
zhDf|QqdZn>8ALufqd0**EHKBGy(FY0Ab@4?Rp>xRlQ;?cUfe7%;h07SK_<;xy}KF_
zBn>(W-fm1BFO-+8&v<Tl$o*h~Pfp6v7gy|;_h2(dY~%tGq%O&qn~x7I?$_gEB`DqQ
z{Z9m)^GZN{JBo7UT<0sjS-}^3%Wo9m`xovjoULuKYrei3Q-tmffk&o3DoG-b$-_Q#
z_;a3J?Jl0@s9~?Kw&z!Y+11zNKb|h2(V)hBB=Zim{iX9auV*XOG-dCroA@PX^XpHo
zL9g}gmpE4J3+e?k;@zYql58jsSFX~#ZDuyJ_~~6|Ki5R2rPyv$g$&l9IYGHA1AeI?
zzs<kLN5-x}TOH#xidw>4c(*PwH1Gae1!@uddby|hKVh28^xbdMLP8mCj2I3Y4kLpM
zqAVypbP>JcpW_{eI!<I-Jd_BCjueXQfN_OcY{3zJr0l<_M?B{mwkm6Ob+6syRVvUc
zv3nWoF&L4i*Oe4T&BlIQ$Ki@%)MyYAgowk|^mL0^|7__$Jz0ww`s8kbzQjp^Ob@C%
zpDQd8**RuEaIie>(_8oKe?<xFW^F3n)?AdT2mBqwmsh(l%wSu^!_~-PpvIP^s8%TF
zi@Ffk<TH0A<j>r6Rj_a_`>O+FXzYklj+1F#+!c}gt9A!cvYiQ&br;CKLv6EZuWdm7
z9)U<yyd49{TpZrawul^Kk&S?3sU2`27{i?1s1JwlcqACyu0?SmxbDLLJWD#Ey0B~*
z&9BeOTF;r<*xkj2fBkqdVXj{yc*4m1l^b0(kN&gnCG*_OMrrAsUawH_XSu2ONPWMi
zwDB$V?-=21>==qelhgt-*f6CTZB1xs&et)P<XEiwd-a$U_wV2-RfkhzG(V>~On;%6
z-c~qG<v_Ph!E1vTUZ7UJX`l8~lx2Je4AWXrh^ODjPX^CACt55s+&Z3L(8e^DYbk~I
z3Gy2@xNcT$YtUY{m8>A_`lROZZ?2^H#F+@*_o#-Ys(tdj>R^Xo%DtRam}+id32&N?
z*p!Lei%$^X-~4W7*vXTXpXqjAz{YSOJk&$*GZQ$WDype)^a@%NJe!~oz$t6VF8?+1
z!N<vQIP0fe2grOZrIGLD5cGQz$`1<=5ZoX=eH(U&eV<TA3fbb!R6Wq7=iVJkEgAIF
zRs(Qin@ZoosJbr7zSB1FcD`Hr6Ibf9%bn^lrZZmKCk`j=Qc3$JhzRs5Jvk?JZJKsw
zy^qbdQ2s0uEQ{CRj<J<{pA5bj%O9bo`c195&9I|LQ?)dFB=xJY54$@03WM1O1-C?+
z@ybByJ(Dm{y@Ej@tW>nT?jk|1zSz3Tr>Y`Tt<~L3(#jv>-8-$?<8jr<x*O>ShUQ6R
zTXA{nRT<}9ak>AGi43N1S;z&sAKh#*p}{(;R10Gm9?|bStLTfeByv$W#>;s@Eh(ES
zX2D~ROHsv#k&p<DU(sD;Ndjz2Tm6MksR_{(2qX>@OC=Oj<G~TXia)8J*>5}Hjw~AS
zng(+3m)cE7BnybNNyv@qp{rS*>*}gY^}OHI=~!2F9Dcbl-@G^xZb-$cAxg-n83t09
znb6$MbFZp983^3^MQJbiQhlZD>hN5OGU#X$rQ7T+`W9bsMM-w1K#64{1sW#x&R-*5
zeNY7R@9>(dQTJ>Hm`|(YXD)F6+xJsN(QBFLg0DcQ>*_spk3-iN-KIa=%LL0<Iy(i{
z)Z&gdloZG~Wl!`3Qe!!dCsTE0(56|2C2aXHf*e7mXW{?MbKzDmD}qJ$qU<UM3ThPf
zk`$F>1A9g{yNmZ(cH4`(2A%v!e!)!>(fctX99}1+!vpV$iuyUvN{Ty@j+#Nu*@SU_
zd-lfNx})yfm3k+trsj-uqPyFF4o&{bigH}57RKM|?Dti}KPD8`wh?;vnmr9y%D{7A
z9*uST+_9{-RYE4_+s~v|CiWYW$vJDJ<3QzXcLIiAQ?qNkG=?Nne)0N<R9e5XW_93d
z*FN+s1TeikgkaSgeOclhkbMt()%g&$>80oHdlQbuofnjOd)Y^ICrFs_JbD+eP)h8B
z${P)}n$>p056@$k8{w7pn{p4X&PVx-prHn5Vq}!aEOAY&8sfj&Ys8oycos45RsnJT
znhmAYSh~WzNX#Etp$d|CNq+=VcW|0N#Wq$ZbqqZDHtpxRWd@f(gf1*|kj+N>1ewni
zKNXG4HtUvFR2267&h$?TDZIjnB(Y|NoUJM7#HctE8&j!+aA)8zL;&^;d-1pky<!Np
zx;LChIs%I_1%_!x%u77OtGZ(Whn3B7cutG?>jJ_@=(aG13nB)w!mYFr8<n?=CaJ#J
zx6O(Mp{s|l^cR~~4`t!JJ%yAc=h1l(3P_9jw1*s6TcXh*C1G}I&;a_&P>EJ<4D0mb
z1q0o9#zv7O$*0gP^`K1KT+(AZRL<V?B+r-G<AE#1Xl7n&=Wvc1qSS$LuXl9f_d7T8
z+OJ~&4GuNGz`-U{oeYuz!-wEMIWki7s_coe&Ly@K(8RTN6bRii!}c=V-0oDEthKHf
zKVp*3<<aYAy)`_MWe^jti9i?#zjEkMa&ez+Al!yu6Rbrvw*-VOq@L5*5{#^KO@$|6
zelqhzls{>}Mm8zYj&9<CtH$?D9hri4m_#AIjQ!9wD8V~qG<2u9W3=-$&(bodzJM_z
ztm4?Mi+*lKQ!19S-y|!1K1Ucn&YM6}@A1a>R~yKA*VPi4_#Ggc$|77f2HSrs+ud+I
zk-F2}swBZ!WpILk?M<Mdu0w;QMW9fanS)W)PH_u{HG8^xI$z54tgW<O(*ABgQKm5D
zu$Q~(6fxwQ&OKy4#&z2u?)1-_K)A7bhF67riF}x@vW==n`YdCZ(>X4*kc&=k$z~u`
zrAk$jkZ-i^t+&J%5O8UfWn9o{a_FVdKLrF`6(+xi?)L!i_u0{u^kPk<ft^F5mt7lM
zTc=p;2`jIFM$q?c&Gy<&^Pat}t#jXQudBtZ@+%^!8h9w1qJeuyKYOT}A5mvQdg+Qa
znsx;IsDG$@KnX=(zkX^D|9D?~q9NG7u=W2N+68l@SQ`b?;dgK$s-XfL{UkjXHFPWU
zPraZ=ywQpBuYP1UgNR=KV+c!7BYu5e>u@>zL*?(8WV<S}T%%BUzpvX*0~jA(EpLqe
z>;RdL-MG#`9nMnuS4%E(auLSHB79w+3=I(vB2!?SHT73$30xNVV%6<?K0X@JwL1Xv
zdzDm&(-m(usa6?;I@wPThA}^NJY&z=9FDj*vnA$hK(B{)2M1HT=!);SDI(!2PI0=X
zQ*q&gWolmvg)!MhB#>>NO8Fy>s^N@94j;@JGkx&u&rd)LE>m9DdFZPjBUUHwKZ%`x
zvaG@NX0sAd3io61d9)O|7xWA`i^Ql?fCwlcC=763=tG)Ye*5PU$@}a70P_)&iKsd9
zC+Ls9_s0$M+uTH2>4HOPPsB$`(<fS?fVm*R1DaYDNpC`d6_wCgcsK<2g8(w`y!&M<
zKS7KPJFQzSnO(X$oo6)F-G|P5KrJ=5sQ!B4R7;K@qH=v0i&tO4>HGMn`)DR=9VXsE
zv5)0u{*mqSU=NGuUUgop{iTu3kpV|U8S{{nu2xWx^~dv<J@dF3)LU~J$;V=5u~eU@
zLrZ$6j=s(L!ea|vot=fGuBtS$s`NeU39gS47GDA0`gcw1DdBfJt-y9Sbf>pWwcQHV
zIF}#RmGx?MS!qHG@P2ib&w;I1{VYV2$En|b-7bu3TmJ*0&Y*!1Ee>%gFqzvcD8^DX
zERyI$c3GuoWh&n8tniic@Ks5*n^zJNhiQPX8(YW!72f>kvx(3Bey~na$ONipk-m0c
zoyQOf1Y}=S-<UA2Xy3Z*=EG{EN)*kze8xZ<9h{Z#^g|6Y8SD&C;bBA<YQaH2k6%vT
znN~8tvHAZxuq}qbt=Lfp9P@TJIgvXg!BRYNu;?)7#%nh|(<h8b*BQ9P4xq9kAr>OD
zZnRW<IjMc?_o@_BqXeghFB7T0O6BY!opqL>{UrYj@dHnTh8PE5W5f!@C`sL~W8c&o
zTy6O<PwLo3CzDPN+-Y<<EhoLxH6yimdlmmO9b=Z^)mh2IbgO!1=jFiG)yZ}3>+s-Y
z@8u!A5w$b|H{{ci&)dWQY4@@dg*HDZ;a5a+GJqWEI+xT>2tYz??AvD;&!QB+^@Qr*
z$;U5vl9w>Lu{-bR>MNJojga9<AQiEVM)~==e`4b3?(BP$-7)&^77Kcd=`gEwa&#4m
z-X}VH0=e+8671)ry8hm6x7Os)A912ZpeFTVLs-XhN$+AkVx@MPwVGn|#^p)duqa?e
zCi=o6JT|G>7BV~CLDr%rbda?9Gi+L!HALunbKe@Z(K!QR{4HFx4dd?GO}dW$?Adg^
zS8xh4ynbntk|T>(jwt#(1=m|<`e+n@)5C1Mq0O8b-We>qHv}4AeD;HrMXTO}<=c5>
zM4!6qG!br~d+5gmk{2OrfU67!e7ZY1y1yO0RKKx&$g_t^I$)vKQGU%1HZG=6HJ!AP
zLaqsQdIoTv8SdN?=750V(5CJ#A)nmOVHa9-{n*ha^wmKN-ISM*bs<V%&?8^bnHJgC
zV)xKIU&b4l4A6%VP6zi)P<<olh9#sp2+D-2c|{C7C4kSB*lwsQ1yXbIJLuQU`gn70
zM2X~EAhb>S=b^(7!Yxvyo0Pb>(NgJS=+3Qi&+qS(1EC5UmW@R!>c>)ie6MUo#2`Z=
zQk-Xln$@Jiak#5+J#Z0f_^o>eY-qaCQn0c9`9SA@9)O@ag%%9@=?&6Hu=6s(?Bq1J
z_h96nTqPF5Yr2kEVp-47{}&Ua&($-Y)oDruQ$Ea5MJ5t+cV1@oH{y>x+e+<V;PySq
z+a%m%C2DaAF})hp#l2|+mP)4R>@C*yHk-3<I3il+6Z{1NTJ}oQt<9BtAb6xEefKmJ
zJm*>?(fMz$10fW`Ut?nE0^_RLCAk;SPUe>`uNIyurz~6fI^BZ%N(K!(e)Z;n;=+sW
zKX>*n{uJHc?+;A29ZHz8Y*>_wblz&c4@$llL?Bhnlg}6tM2D3);RTBNXhzRR3uu6i
zzV_#M8#eqTr2h8SAS{3Tmq9}h^~R!aZVNIgikIDDena}0G=W>lXL~j(^YD^G!aq{a
zY>S#2c1N~s--z{hZr_v1)_!yCSI}K0vr*1(gKO(B-d{Q748>>j3q(Klt#21*fj`oF
zNjBrci65<{Z1P$F=EsQ=e+SAKv}vG+*Bpq$9DjaOn8cZU{hY0)+VreY%X#vnz0b}D
zic4jyb6w+27|bKkc{6DxG#FVSWW(~qtwpo_daDR#!S-WD)jXIX4!|D{yfpXkoq!6{
zMSrmM_%UZ`x<EgL@`Fbb`%PLlb}Uhco#uoHRf^7l$N)_C->c^2{Pc8rd%7O4!wWS3
zSerKKOlh{^HSUii;v#7DCd;3g7O$yLkUrCHNs%SZ=8k0mAVtBKC2mHw$4o^^NLUeC
zbD@a_oJsWd#qBvw$D~-Tde6=eIh|q+EvjsRx8R^QqR5p^uoy>GmB4H;vf9AE_Y&oi
z7&z9Kt#WDbxaw{q-RO#|ZXbTw!?0>T>Y7<=S;=d8_Wd#On@j@ll@1G9%jcd&ZP>Zg
zkOs9^tIYCuJ9SV{>S|8>PRpbo-nBr0Zh#0KUNeb`8LV#eYU{(=(0_?W_?aI#7>roq
z5Ub6%+2yYmIxsWagyfl6B*x-g5qGun%X}W32cWj5)!><7e|4NiUfyJ8%8@dR!Ajk<
zDyQ$R=B9BBZ{9yV<(nIF`nOPU^mgT8oGB2BSla5e7}|boj=sB4sit(GG38|5rQmiN
z1rr)>hQu46uA(k@iVYhX(A!6`SezpyG($)7YWqr8^rDe7I`r5<q0Du-q*P)SpR9v(
z34LB=Hll89&XrKF`9Patnh*8Q6EUQ$OGYUBJE?3G|8YW>mZ092;bB&L%mw}UiK^Me
zu~hrX1<>~A0`*I%4)uU2s~tCzSuqKrHIo{sIe`Uj{IX)0{LDy;N3oFxKW@RIS4GsK
zG80L`FXF63L%Xi;lphWG2b(?&AuYvt0!eso$khHJ1t`udAA2t`>SVI4p0&cKx8Zrj
zO50t2t!$YQ<D8o*m1t*h&#Lujhn^rtYjTx;bV1k7gclXpqP)5#u<G&R8{i-R5O4yc
z-FG}Qqz|DyXd?E@pULN=<8VnzNC#s_U|TNCo%WxFp8xGFWS^;+C7}bMKr%hXQ;@05
zSR})|-8^P(B=YfxkVeBKGBTZ8nM+<XeXKonJJ>a53@ZrwN55U&=faUR6MlzDmTf_F
zxcTsFm!mdAla|1{2`e$WA(jun6R|^8(<vgYF);k(8?ztb-kXqUYgS>cC>BMlIPUjs
zb6r9_k#uy&bDHfAY*&0rlg9gJStX;{6ebs@E|YNe!JHCZ6iFIL5KZ610g`q37NVzD
zJFM?CZqT`;rth=QS3Hp$x@ZM&S6@bF22-sv#$j2(c7P!*z50WDl8%}p1U9B9D}pOC
zfgx$q$(1$Q5cf=n@6ldOkV+*Gso`{Y!LFef=e3B?ElW-BxLE0J>rlJV$KG*v`d}Mr
zJ2%e{Pmd_?^YsJ_d55afCoH8&omZ2JbUKI|+WB#&XZA?=#eYz|6+NqWA8vY;sKj$~
zHq0_)3Gqw%TRunB#D~GYP`ae5?L=$Kk{fq-d3CbwTkBDd*={O0g}{CNW1^j(SuZl_
zs`O!6#qP?gw`7Y!Vzs8(IrhKu*Qjkbg>LQG^#Egoo2Bh0ey^0r$nrERqUZUMCj9;L
zVf<5>-r(}y#N!Q#R;8C>^V7(W#gFC7INkG&Wr6fmR!h)dkhV-qTF~i&4$QwxwYiZE
z{tNcM8pZ(CXa}2VWOEM0YC*r+IYGuyN`{gn2-bJXigPVh1YQpUKUy?nH`-6rh6L_S
zrC=xq8Br_2WirLzN?q%wPu_eke0B9Mu7A)^f^ZuQZK<#`f%^?uNC;GnK{U217JV={
z0?&s_wRcD{sj5&u^(-**uaFg`8A(C(b4Wahvh`^y(9v?=+oU}2bj0!LXfi6HDiwTw
zlq^hhF(Lg$!WwDbGc6UI`L3g%YBAZMG>fvkLj1Y0%lr2Ae$(kn@D&Icrg@*2|5W7s
z+W)%wQ_Fil`lKMaQBZh)^1e6tdOHh>iomcMNmIzLof4q&zOehDJoB>Fn#<t-qTfCN
znoYie7-#Kc0QrT%)K;;(^${3?>4ZIjN&)Y=Q-{D({Gt|h@fmx){JGGP&u+|rpT&#e
zM>thM5a3f|0i5)8B50Bz|6btX+kN}y`FnMKrp_M?Ho4JzS~%tT3&E?<+04B7BzTXZ
zY5G%C>uzBIVS#Jl%uK!MP*#O7OK#-ZIjM5>mkRm0>$_-q!CFRLxL-qXoqRcJDg*K`
zBpE@kFe#DV`|&Otd{IU=i!?pW;&j~26A~r8ejoYgp{=LT8?sfLA+P~m4CC8V-oK8R
z@`r=?$$nQuBhj_a6A5AO2#rI1&AwIm`<&1IeU1<}jkdTA&#asc&zFAobSupD1zyIj
zvUB>c<-3s#s>xCU<5Y{Sk(C%0e*)mA3)uD4KmUm87ZeF71ohzr34k=0!uVGuik2yl
zoNC+Y{Rqb`>36$r$*Zbl%HG~+wYJ|vg!S$d)~}y&mMoufCX5-k%Quc%5Gg(3@G@$|
z<kDBB*#y<vwZK|3S?zP5I-2bej178xwBe0(f?;y8@9s`d##}FbNUw+&G?k888WXD)
zz@$#w4=No%)UtBnW3ttMCH#-+W#v8g7ulxOA{~#I<;_C3R;x|s9%zpk+Mz3*$vODy
zSxhzAB0t;_guG3G<*(<j_uiW!-Q2;co}ptyL@UnI6{1`eR+P7p`G|W8y|ntU#J~JP
zBpC9(u5ahs-~r_aTI&i@-d7BgNtIA_@8~w1#Lb!U>Y4Ef7^tq24DgF9VN5DhJA<WX
zOU`F4QzYH)E_iQ4pw9XKCP_=`L+Sb%8{<eh0e$T%s}Rcyh-Cd06CWG~Oy(ftIDePx
zY*(>VU!#xznInzo`0E*Sba{llrf`y0=2UU#`XJpx0=NPOhCFTfEvoKe0XF6?)+c@V
zvsGFJ<q2yk!-3J;h$Y~@+I6MH=1#G`e%&_Av`Y@#jQ6TP=X+ULr;n1ttB9VoLGb&x
zNBwML!N!5PSmCkA#5bwk6pP1Qk5PKP%4X;2^m5F=F^3t_hWd=Re-gkRcOgHw4d2`9
z^-Fu9`fyk0;ZNHrv*2AEO&;jasng9tBf_VF!@_qz#<r$WNB=?_fa8~}%f;sV5R<hB
zk3CqHUkqdQOu<LEEh9(-Wt>dEWtM61NNO!@&45V)^G(pvBAz(fo+tP)cC(vy;0O^1
z>KWXep{y(9(-JGH6;Z$afEceZIZ8NlkUU5yh|_JpLp2NDLs&MHR3)Hi2>J1s$IM~#
z^>$rICla5DDY89iCy7BBRMr?Z4lDL{4I+-Ky(OI-hT4bk>&1CEbs&WDs^Cls>cD(b
z7SSrgMBn7)#1?^Ei+vC}@c~0UWM=q_GJ~q>I{FQ{y8co-J;-!h>l29`j<*(t`D;Sp
z*GypSeO-z0eK-A8H8h+Mmb~%5AKCXaBPgiW3A+`YA5z1}?Wm`}Y@?z5S-#49@?Y~)
zLSsI8Arl}i+Q<%_Fy)&;+M8NyfFI_?Jtl^=N&q<jpjbN^&$~@CV!}V72E9euC%%&h
zyC8c|%XnP)#s~US<DS1XdWY=A6@b(({sJG^Ilp1=oPIJtf<+G^eSsBb2W0iRvN=nU
zpq)g)_5_x|>$$#p7YEw0?=miz6hW@TKM*#NNC%qjNVg?m3an!Oi}Gy7QjHtTg)!Qh
z-VU45j}6h5%U3gw8|Sp`u0&)_HIfb{3}PG^tHq&mS;$1J=JAmWo=No80qft=;!FMm
zVjP#V@()LV{Y=_G&jfsM<2pDt^M*x6@$3a~MwlRvA)4tgyjj~fHJ2lc{b<Sz{0nLJ
z?<toZ;5lLkW+-pU;*48m3#*K?q~x9L-DAk<8zkL-0?}SVm5lZT^ZRO?cd~<rSI|OL
zEB;6Ilws8QpXdn=o=g*Sd-Lv}=xOmhfh=t!+ObKk<=$dZGH|Yd_eanLg%)*LlKVy`
z|92nXZGCTE61H&svDJfp<Ttc|#P%*+LhM(q#qN&M|HIQe1;+LM(cV!Tqj4JBM&qQh
z)7W;?*qpFwY}>YN8;$M8=HTS_Kj(dKW^U$U&$DOt-p~53wLU*c0bt$+({@?h)MBHi
zeJlmyJWz#;mTOjp@gAQi(?}L0)Hr4y1MdK}%Fz=(7|m@je<KNBM@O(H>{C{YsbUc!
zsC|;WKe)f|+Q#68wAtwKBj9%b(LbAWskhhMo7L~niyM~<2*VqHi{JTl?o0sP&Xoxj
zEd(7DTLn9K1d}{7Q*>HTbh@dQ*T!2zalrFM<+tp4+fU#BN~7{HS*@NCDN5ORYNSu@
ze}?z$d-Fz5LUU_<<BLVue-F;z-3x?BHNS2?U6cnOOTNw@AyVt*!^xg;AnUNJBo-RW
z^|_ry2Tyh^8H|ng8Qn3?DdzOktWFWxrTQ?hh^8u;Hu7-Scljfjs?Jqx>URy-Eu+_s
zZUKLI>rD~<bZC-bH^&$I*FAF^I_|(=N%PwLM_%D)QMx2(r7!`XnY!~|nqv;xFcJco
zEWm6$Ux_6>NRLi>fCjsffKfa1)t4^ja&NVOTSzMu7_i^0dyl2gXNIUz>U~nmtG^e*
zBab73Qe6p=FoF>tnQW!Ng@n2_x(Bjxot#nC|Dlc(s|LChBI6l3fc5MA7xJMHMcW%+
zU`?cNiEhCpJ1Jc9;@mx)8oShl>TN>l)8*~lUSfwP?$*rMKL$6{5er|rF%9m*@@=gu
z{;u_Rxc;QaQgtpkt0PrbWk_mTk}8V`V5dEBq=C4};CzNh2rVdj-IL46d7S?~3Kaz<
z%D&o>xZ6X>B*geIPap92zn&3%sJo)peA%?}oTer5;cI4LC8$+GW5d80irl(jVZ6`g
zqZ1w!YRL-TCey%M)J4pEJ2;jfRiY*Mt((P81p7bQtiwvhNkGepwXaz?SgT8WWu{`%
z2SwFE#I6_~W+ycyEI)S7!u**e56d=@M$gCKjr>r}x`mIVQp`|Xs8wde1k48!l@*|N
zJqN&U!-3naZL296N0p<p%Fop^P}Qvb6I+FVD?Rhv{B@--60#H78;Z_Z7YHtx^thWR
zvNHT?8^y+*U1GvvHJj7+6@;pD?jOV<@%Td710?toc}#m;zmA5TkA@EHZltVdiRE<4
z?MOu^&%!aZU6@hXKo3J(#Y0K^v8zpZwAlO#+SRXUv(1et<BdX0r(7Y5_~Mk0(LSas
zA?!oLRG+1r9+F54N}Uk6#S-+T(H^M+G06OFW3<DWnOv0_`_7+U@F^uCo~o}0{3A{+
zWN95uN4~+(#@Njsx7d~6t2^x_Y~OjH>D0mnQY&RlAJnpX;JICs=vebE`g|5qt!8_H
z_m&LFvatt{u)s#eH#K&HuE$5wbNp;O+5Dn(y5H}1T&yBz`ehj~Og=N!8+G~9#F+5>
zHgR{G)bb3~7%8|R8<fv_re4~{JZdQ#yc>Q@=w#Y_&tnyX$qwS*<E_K<GLo#e8JoYj
zW9Q?rHN?Ns$GOnQ!Bf^w9$qMZNu|PHaV2^P`Ky2z{B^+6ZocC3o-9nY@E3MXO|nc4
zfBCh+M-=NJEBD!Ah~ex|%<|T(Ik(<RL+a*Cw|s6Y{p?#zV?gWPvKM-41cHIKRICsh
zs5~)eX!}Y3vq-9`aH=u*!yCK6lP0-#q*4CQL(}?Ax6&rP)+Vr&{+UzbHI-#aO|v7W
zWU<)7muImiUT1VXb)hyrz(`iK>ZAI5%~5N>EiE@YroiC4Hsdyj8EKWZ5zZh3&Xw$6
zLmcCBwkoB13)kN{)8MKvUgi8(3xk2lsAEM~Uu>%9G{WRC$-qa0tkMz2lFog+YlNSw
z$tkTEk2xE+>hHPv!@Aq>pLWodVw97KJ>1nx1#leDW=>8ob}tT1J-va)s1Gi;#}~l;
zi@`qwbMyk!Z<~Y<lZ6`uZt{C@X!p<?s;OnPi~bX3mU49OrJ%%}-=pHxqV02VPA|M}
zV<ht|><ICMj6y|`+4keMAMC6r!FvNw@TGn4%fD_$kaoruoD4I>{{O4WChr1BtX?#F
z$`kz2rfG56iQN|UYblBF6>v0t-wVT_gjhC|-RvyUYre#Oh}@KPZ^RqO?+e-ew(-v?
zX>k5CpYm)Ul@IC8B}x1=atMEeO+pFIhj=9{=`aa3I^Zbqs!kn#r9MlprD3}<KwAW>
zrkya2(1)e$m7n!<uxR&L@*mhD%?fqW%4UwD`1{7n9^r!F0>lL<zBPQ%9$?bvC#gSi
zZ|zHzCcl_Mw-V@4#*_28S{UW`#|0<RxFY^lfgw1_RrRsQ@wCIav|RI2^@gVZ5>NtB
z-mjsQNN#6XpAnJFkx;H`<n6?L%W*A@31dnM{yf00r|wF0|Jrfbr2QIPK6R+!MKvi+
z&o`dF$54cAJrJ#}N{){$vZvGaQPYPciNLg-pND00v(}gUAc@|;UR?X~ZxVqE4#3|k
zlI!xwOF4B?lj<u<5s_jlvEQ6_rW)>l<D&!&Cgns9W5KvelMiQ4MfvgWOX3^;QuOj=
z*UG*A5Wp#GM0x{z(@aX?X%8MZk}%d|X!c~<{Q0e+lw5#Jxe7dFxU2ZxgLQ9!-qWDm
zZbV3?N%+JXxz<v~(tAoF)!bDKgEoXWAEzS#iD@GOwikw~tmFH}s4Z;(H|)?v5+)Hv
zW|;;TV+^5&BIgs=N8jM;zsm~*ZDr^aPIg)>D;QZpadYItowYrpH1;Gxavs`A1@eDT
zhl~zwV)StD4zsu`Pb9s{Nudv@ZZ&P<T<)pSTaqtLwTW*ve;TLQMxi9l!%?}3X4gPt
zVFJQmQCYT$a-&RBVnS>X#lE_{O@4*h@R-w@TQ~%<n6bTKuud(0RCyb<t&7m4Xa5Kf
zDbuzeqVab`MFG4u8;g{Is05P2nnx=_2F_Z;e7x9Wj)?K5$hgKj_I^)Jew&y<?ijWA
zIn_;YZI)rh73bi(JXj>Zo9rcm&W&?Siz?Y3LmP7cfm^be{h5oc-S|EAbNxNw-c{{|
zG=~Wf_Dcfks&hk~&%@v)S}1ZB3caI^?i<t&Yf8Vu)~C!?bL13Vm@b^|jqYvfm)an+
zF;y_qOZ_gE@1D|2zck+}^&E2IM^B$i_C!3dVN}dd2EjzO@CcSvEkOiYzNd=K2KmBE
zT$)9SpEZRFNAVROWdQ%{;Y)W8-D|0AG(R#c+MG$2CI_pS(T8h%Z(r;gc29Fp0GxYG
zt|`o$Uno2KOd!R_o#o!7e~uVvN3dyEJD?u*r4~#&>el00D##C7GntnVuX)Zk%^z47
zeIy6D1kO*g){H~_gZZ3huzrw<b|5@~2~VM+myli0BtnTQeBxu2;S=|lS}KF*G^kR_
z(c8LZ3+r&%D3@lSrWC*^dn+Tvk)U^la%l@y%=ZK|-J{wo--E)T78pv9KGx_3R^LkJ
zpBe+O90oSPr>ABj^Y%>+-`{bur_ki(6KEd40#JICo!zO|#JRu?1s`zHcZ(r(L681c
zsn@|E!#dya9ePz<<oShD0)*w@6g~dTiPYl8+XWF_-Ofb6dj9CV{aR7{&Ha71{r&4y
zDMRFA&!{H*!Lozf`!nVdYxdt~wvp^-W+<Fs&*%8_V-M00K7YC`pgkkP@LjXnr6xuN
zL+ob@5kpsyjO#t~*MfzD{I(|NUd?YtO9!pwoW4zW1FTh<4m&UmmwFhfDO7fD_uMKg
zat&dlWtjl{+rhzq$E4UBtqWV4-)fnv?G5?X9D-)--R?CbBYVH;13?R8w*5r0@ymWF
z9j~}%P56bw_{%Gi>{BlX-O@FgJ3bi4FZr(bKGkH{lPfXJdf&?`1ivPMJm()N=cik(
z|HwuD-d~si>2CR|#P0l_x|yFq?ya-$@k1{ASVVo@gr>jKD-s5b<0K@7_F$7CboA0p
zz>i-$avpkHT@6hgUPtD=i2R*@r}dawz}t?u&+?SDpIii`bf4KzkM*MFO`~wlw2fFt
z*bZWi1f92lk?<xlq;lUN1vnw5uj}>hj0hUZ(!mX+tR4PTAIFdSu}}S>uiI`^naO%~
zyAekqtn0Ohw>;hI0G<5A{O99*wsgE^l-W|R4Vo=Yi$uNb?YZ8gM_lUtv#-q5O8Ho#
ztc!2oty(+0Du;)62wA}XHiyl|F{3i)!k@Q%BiVI7jtJ%ad>9`Gc<YP!H}5jr#q09@
zTa-|Wm%a~&hd9t`S0SHUfT}w)S8U|Mnde#P`k3<kSX5XAsV9}QIja1sV|ypt=@4G`
zf;p30!Jg-w-FFur@fmfAQFI<PD^A(--<Ic1{Kq5O;H|++&H=Rh1<GbRX?-Egi`$N>
zD7?UVUqAXV3eQUgbf1ARXFxNa%XRlJ(%Z4I|EPs8qWq5eSeqROFZeR@-0{NYM=;t@
zdWM4%Evwe-XpgXI+mU!a56`RMPcs)NPHdW@P_Z>NdEN-Mh)lzubG8Yv@LjP&kbA-Z
z;}iB1F6<2nWF@o)_Ui9CWGexqbBW%(I|q9sQS)p6LlizUZe%mVTK%seu;=kJIHdMA
zT)@NL;DlvshdQe`d!~fCBSy;{K_FOuN;7u*qwXsJL2Nm#H|u|WVaB(Tn9{H$xUm2V
zL7a%`QwpR4tkrS1;a0p@@0M2a9Ykf&=_#jr2q{Ru${LD6M07mdLi}hXkUaw0ijLDw
zf`IJu75Fw|bu8hROk3aINr&bZ>Czj-Y2Yk~+?pZ3-}?}cb5bRlWpqo<IGmk<;9*x<
z_kvL1tW0WCvI}Z$5j^8)6?&dPEOfN>wS&JQbq`Uo#CqWbuMDA%f~&DM9SqtXgIi1b
zO*flM1I+&zRDLxhoT$WO1>1R?3|DTgY(QE*o*5q}w}jq$y1P4DL2pOBmtCt{{@w3y
zk39Z68{6AHuMW#k;!J&*yzPAr;LG*i#^CWCkgc+T!<RM}fwo)<LvMsOk}@FJXXOpr
zW8*WAFhVsbS9Z)2bUXSPjJ>+ORPPUkyYbpZuQBA^y*EJcjF!*>0N%b|r}$WS`I`&5
zfXOwkvtc-n2I5$->V&NR9@PV+dRA^}%464*>Ts6&A-fwW5SjXC4#<p=Q20iR(2mRK
z2N23o6b{eI@^J>CyeBNin|3MqvAp1s_S{H}%2<f;>XYSCr;Z_i;E4oUI8)iJ%jI%;
zMYp&W`~CHa<9!)PH3ASETTHsQpsq+b*F0Io;8x1wT_yz5dpbR<38?T6qmovk<#gEy
z4yLt6q8T0Jgn`GL*>6lg7(Y2{Z>C&E-XoN5M9K24yPC@Vz12pH@$GhEywsJD|A3?a
z?n=QsXy=yakKMHJL7>Y=5#6E@)11CN#tWNa8s-l$`G)BY^bPAl=Cm<e*OtV|Fdj1?
z)<!eNgYgdzOFF<un78d^c5rWa9)K1z6T3s29rH$uH&___QN2^R!}6Q-b8zFmigby_
z(;}5zOQF%sjMU(~7a-2A>0>_lG-UT>^}?j{0fcZA6}i15zGG%*4_b4+>UvH!#KzKc
z0osZt-7Z%X|C-*E-zK0a6fED077?izCPHKObQGFR*AeyH=5ypP$Ly|fOrl-J?mH>!
zayx>@oiexe<W)z>Ne?wWoK1{#@bS%41-Pm;OR@r=ZlaM*y7`wI4^zgUaU7+dJXKjo
zUDD=gE2Rfs>b_;arao0ki#+NBFWY$$9`HJ`QPBhO<P`Ajf1CDglU>QwWNiuwq>XIk
zR5@vF%7V2%2%;x-s=!&&9Ml;!R;Bmr*x$k6{`q@DPl2mFYX+J24+YGP?DsGWG$gMG
zP#?u&IaAH~zGfbH%9Z`Hi1jO7kMh(zqQq>;!I{B$k`pIT@Z$EH36x+i3JEYI*MDYK
zevQrp?mie=9dtA6c;8TI9ERsfe&3lmNIp6^f4esPUZ?`uznuT~v8t}_IX!Ql^J<DS
z!cm_|rSRaTPYO*se$H>DY~w=pouR}i&q(1(mx7FxVnXuQhx0^;Vz#q${XE}m2IH4p
z0`n7J*)e8fg<*aRbl_*@f}B6bln*U{n~mY|weOI_t+kK2r6*h?|K;G660(z#rHRDs
zhbZ&$(QG18V2XYEPE+rWWR%s6d%tDaWbh5h+t<_8@b3!DBf)=^qRWoZL;~}7!Be9L
zboAMyzf-R4E$@kl9L)tb<BsheYsjRn7D4F31)eh!4nckO{11QJiUap^P4}_D#clIT
zka7%CW8${gcLCN`dTNzD7Q|oVu<tZCC*fz86K<A?E+-7t;NK1x<QT4O{{Tq_SQI}?
z02z93%h_nsphZ|-VDP$l-i#x`6D~N!gM$CVZ4L28@q0!`+ck|oLk~zom6iwH;v3B`
zUi_SQ)APf$rq53Qq@N7|Uhe-7gS7FGK4o3F_amO)=MduM={`Y9M>9W3LWsDw$3y9q
z)Nc$q8_A}X3L5$tLqOkni{6qW$zI9kh;4qytPl9N5!bKuZ6nkY`Pb86TUe}UiMQ`%
zZm4;GpVj-|zE=-PZw1QXf4+itQN~40Zn)gjSzHrC4b*?aCBl}=RG=dVNy2$j6vtF)
zkeR0+N9X*wV>hG$d^MQ3vv%RQF1}`Fs-Auw4fet%LZV@hjy}Gb7BW5zCFA@919?bI
z6Mt3bdAOxV@pa_tOFh{Kt?j9hz>q292<nTNjA1v0pF@+GSq1j?KGTk2O^$YXWW8o*
zx(&ru7@^qrsXEKHjjQ@&h6>T|XtH-jP_mK`NelCxpL`L5|Gt&^A;AbcBbmbuY5F=&
zg|3$bWcvwD_nacacJ?-hj_~Lq<o~St_+k;ca23fy@krXM8!zGa!=6y}CWpB%9-{PA
zgTUco#?cX$bk#TKirLR7-hRH?4G1@)J!;!^1u;d5fu5h(b==Rc^I1gZ3!zv@OK&)Z
zq{fwJ&!JYQ>O$c`A6PU(0!o3_`B!)<yV-5n5_KjY0tH}pyVKQPe7@9!@Hkxv7?h*N
zyq5n3Rs4X+P39&2QH$*j%apXr;xq);aoJIzWp_7$=BN9)He?5K4;fIi@QUG#7lCBt
ze=4#Q5+pVxdVnuPKhepGThMBB4;vLXWsgw;2u;r2(<=o$G0CS>L<(rnShC0GzKShg
z_jkSCGhm?i^e7?T&(h@x2BSInL)*?|kg42kzBPeltL%1Hu{`kx;|_I#`oxrbTa}XL
z^c2Y3-7Z%fPv3I&R?mcA;~x?vv)nlx8y;&;q-ul&TrHnKbAh8?n5yuS_tE(mIMe#`
zX8mGAe#9r4R2VE-P@XB4#`2FEpZ<#0Wc3A?gn&6Bpw|y}+V|aDKklvTxr&-_+#3cs
zO%5E7SRvo>+6Z$w^0}0TFeC;;^05f!*tp*McVXvP9@l$3j{O~t{&Ujq&um!_-%67H
zTe+WPk?~!CIU$u-|3Q<QyH}`Td@d&e^sG;^xaEF}+zA&<ZeeJ<bsoc*{da&QdT%Jd
ztBKWFne~S|OYH$Z0DU?eWgbvC8tm5b#90v3ogb{q7u;p~eZS#vQ(NB#5jw5ycZEKO
zCtuCK`$k;UtPO@Z!SMlUTDw$t8*=T`YIcfL;dYwOSWMm3a|G})b$Ppu@yyj7W}O1R
z?f-K0)hcDGHw1-aw__P}_7`>51)ugH=W?gA-8m4ks-q~1Bq6G_f1ZSQ-j(|$)_>7<
zNthe@?=S3`$O|{0dM=e5Wub1gS7K#fZerYowq^n`(<tRW>Ivn<9gKe>FG2;OnrHM{
zXntqIK6J3sN#rSbF50jD_+#Wg^UVC)kZ0+nvQqfc$!Pf+X}Y-S`cx*0MhMhjkG~R~
z)&8LC8frkv`8B@VRUOl?nJKGz`k7vba_L<A%(xJ&c#f-2+P2~OlobvoLGfoza6#<u
zON+wm*_Wm@dmSfXR(;DYf_r$@C->IYVumMY7-@^DrNfZKI%$Kayp%eLiJz#`x9+X@
zgq*dN&rf0|<dHb@@rp~D&}yV!zL=mYEF0g6G_$xr;!?Q7W&4u9-pHqQfba5zwapes
zs<Yt5n5+*#61(da5<s|E$hsYLGINgSvqA7a+r8DTRSh~3Pg({yHba0?7b1;loif^4
z$cd=s&5m1dF;&u$DBmA1!E)2*tNS9Bu)^wyL%6=TUr}UK>h7K2m4mpb3nS}AHd>|N
zgRz<aF#KWhYCYg*A1$M36va)6ht%U%ioWUKKM|zE%|ui|ul?CS*))b9Q0rbUJNR`T
zwCD1ut0n`hHpZc{fil*03-ZJ@%6$pm^<toMkcHRb6HDf^wDnK>xsgH2GY7EsU(FzG
zIS%_oc-x&$+TtEuy=83sZFL=0*txTx#_leoF%fpa(IX7NSQl)&WN!yLwtQ3=LScd%
z;YqaW>2?x^smOhOf+IkEo*>>(*{-+sK5)JE6k4FTjqpXYh`4FfX>+Wt$zt)9oIy^}
zD<g6;wA#KfMCz~gck1~h9%j-^lCi(V_`8C~)^R^2cDycsS9XAXTe=aWm9>XfxeEOz
zLt+I@$|nDBpPexjyP3J}XCS_Pd<w~VhhgfX#j>v}4D!Y7iG0#i0$Y<-T}l<!u)-<)
z<)F@ry*P)m_GQLTg9WEkq%3~KO}(Vvhz?Z^?7OJcK*Idp86zdnELH5E7R6Lj(rc>$
z1L1@%G}r?nrpbCBMSPVqi_qAKC^6XaYUE)zWJi4QO;cfEr{pK5<m=z`LQdqeyzEo5
z9#u-T`R3YTrQ^mze059*%W<@)40?I#D=@2TrxDk3*E@qsw|xy7#pY18^-t`m{N}89
zm6@Q7IoYU+<ufWtx#x=LZ;dfeo5MK*W4#1DLL%>MZM?#u`+4XI1S%1qH`a3r<6~Ho
zsH~ALB>E|$xjrAC+QmVCn{J?ZvhEXUhC69N(gvVwbIt#j-waZJ|I??m8RGdTNSXu#
z!%<3;wx#+?yF7End&K<D?J{S{W0Z}MneJ>_?KUUP{j9?ZMqK03EeVWTU`M{3KwFS|
z!y}>ct%>RH6<tz)pXIQfI*{>a<@p}{|7__ANhP-g+i$*G>@?PLXQtqkjcgLoest}r
zHODYL(~cU~1qI3tNuJ^FQvG7xBN&wh`d@prGwYr#rWd7|6(?OBa?$yLW-Mch?KS+(
zZ$(TDU+Ix9Dj7YhkObLsm}zGSl+j!Td8MZe4v%MTBX!w&Y)0$de{#Ox{mlxvUo(g4
zYMFsU;<xvOF;&!IkZBMo*Y^9!vY?IqjSQ&O4bdmn1cx<;zSCW-z@0_hll}G0>Co^V
z>bPPy&g)BJ<CkkESNJ)pb~(OWyXa-u?o}~zgfRY#<TIJPe8ygwrorA6cd}O7uhDzP
z3NM@tZAI#-&$}sAG<$gw9<>-OMKJ%F&pnQjs(%S5lc)K*;rPq;r+MOHzy>0@dGE%t
z2B^h(UvBruf`&~;j;=_%#<J(H2N5J=|7S!mF>E`(Th<r7Y@h!=G5np<b3P)L=Lc@7
zRjG76trcJOl7@8>lv5j4N(D<Ll#JHUKf9qK9f~O<qoiYGqC03YZutZ4=@Hvw#@0WM
zAaQX0q5(p%_=R$VOhJvZ{uHNNY@Wo+_5Zx(<^&`c7r6zT755C_%1#CU)eWC)-`r7%
zJ|{Op?CDul8&3sC;K99|W0f2cjiWwKJxQ}o7hH@iZTsL34=Rm8yojAc!rIz#tFk8p
zn~pas_UU<iVz~k0J*ZH&Ni_^9*#c)Pj7+R~xi*e&x+ZsrioZ(S1Gm=ba#-z0_CML3
zu|)fn7Upzi9K{ji^Uw0i6l0hYTc{43l6Y#XZuB6pei_B|7o>c>Vgu(3`)BItOilzQ
zETef$OBi}$mtSxBP18^m_B{93p96i)XR^v&uwyO>X1fi|4>~cDsZmw$rmMF82Z5Z5
z)~B^YtHO1#l*osJm{Sl=WRpa*yoFtx`MBL)c0p8z-%Qfsz+zV))^Jr=Op_3=tM_@r
zrk%X0nD;3H*(DusKNFNjW`Mw>(67=m5V-{VojZ)rM02_Ik8yiBl0?E?bN*TX=s@}g
zn$X42sk}CI&|0=1DK47=UCK&H*IEI|OQ1_z7Hh<hkHYwMu#7&NW~sn$xh=${iF!tZ
z_*6K}UqsVYSJ`gC2|yk64Sl8ygt_eJ#sODvWJb0hRS@t_HFbGFzKHF=c@bjVYZSYk
zUk(YYboK@v+nSzR4GD6Z4LYUK%>|PG?2qbGVJJ}ngqCcoUj}3gRbJ6*30ucZFFWcP
zduFpV&<XGMp*c*N*;&`q@Iu*HOGJ@~`@2p8lxPFkq1`^mz^8fXU0G!T$(+c}e*csI
z%MAT$0`tpJT19rqkZWcDof0#GwrultD&(QS{123W?)+Wu(W9bYZ{t?hu>bFCYpnd{
zc$sw>DmyC7BdY(sCtOou%4Q-|qgvk~z-HiQ&W`fc&Dv*^InpW#9}4O<^0qz=uhmMQ
zoQ$^1lY806?oGVjQ}yyd9P{Pcs!u-ce71c34byld4^-GoPyl|(ievYtq&(ujEzSNJ
zOW?zPeY?H_5f%19#!qVcma1z~K<wIW8bV__;#&y)i|e9+#6*=Z+L+I7q0NEIMn6!{
z5EI~NuHuU&FdF<NLh?7>jX4aK$Nw{jM%D7C92Wt-y3Nc~{k6#`2Pcx7t>L0{?b05P
zVk^&V*fdlVEV1X#6y+4uqaNapOUfxto9Eq!t;qu3mcso5v8D&*un}t;A9D)FM;69k
z^h##TiP#RHkF$fs+z7A*9Z+914Ou>A{a<USlQLi1`fu3BY4RRT>>GovM(>xJGQVYY
zN~^?p0Z&F9=;qsJ5+7i9M$Joc1Dsn_YgG~1Cyl3376HDBwU#fi8-D_2OQb332dA<P
z2Vb3Wv!i%%wMV`zeV^t7yWpZ_(*^a49r+Jrr?)}tWB=!-g#U0;Qisqu{rGjp{_D3q
zUahFwI13`JV1jFEgMT;Mo`t4omQF#fV1@a?!gkH)31);hE7Q^hQW3QD6{+c{-WC;3
zFPlQk6oMbkDx5CN{tm)FEn$_*lQ`ZYX#mVVyhi5c`4PP&L1kwt7{Xtz6orwU@NVMH
zjVgGEe(Lp%tFl5I>hL|pJ$llT;r)+_1;OV}+mS1^9JfY$famp>T6C4eIInhTD#t4*
zSzgfa{+2Zt*^x~E`S-Lnd!koLQde=)fSWQZUs!bGz|eONeU`y@dB{Cj$>Et6EN_T8
z=B+MUQwKN(QK@(?%nfkE#n`1K(hk#1aSVB#D+bX!0A=XZWHnOtoF{@U6b!To=^dUb
zzRL0V**SI%q3|@PnV+fhR!wX+PW(>$Hl|YtyW#l3l=&AUu#lVZuhb$thj`$L<ij~f
z3;xeJ*K`i(%QdYBpHf3g2!OW$UfIpeS2G_P7wxhNKK|YpM}MG;)qZ|8zIZOyDP<#C
zIQc`%W-w>ZQ+4S=*p6D|;;SGcYuvXWz2&u31#OMwa_CB5Xl0?LYeCT7Gu((s&Rv{%
z`RA<G9#Ot;(YHRd9Y(yX>yLk|9r*!3#re2c*P}iY^dB|oc8J>>-7`BJe;1`n)3^C^
zMEY+V8vnIn3B&jJL?F5jg{wD(8SRi{lVm?jTb-<aF%46qH@-6h2sVSoLtPh2YzcKp
zo4>}ZeN%lf7Cxm<l%)D2ukQc<R3;PCc)Z}*+6=Upc9NZ({P=-SL>WdizdwYgfEnQ9
zDb<GCi8A0Usfk1^^L}8Yepe#&xw*avZH6`B(IThv?wdF+tlz&CpGQ*}2(d9WafUJr
z&cn`AWooC*8@fMWegp!DGiBAc@9J{cy81OHRuN6Re7cUxOah13qniT@(0=08U2j|y
z5^TFN-Ba+cf{u&i97W5%I$Frihr5``p04WCnY!6?r<{yodMl4~H=Yw9z$(ZaH|+BZ
z{v@@<MrwDUDcZcaab@QqnryUaL~*)>xF4GhdGTs}?r7auOXJ<+b;O%eJ;~<G)N^f;
zt&$AT1-j}%rJwxT<bC$=XWLU67As%Jsf-)Kh^+1ZO;vx9Kuj+9q?R^)m+(t;&ABdz
z$N}k;kS&sw*^=-IKX3q7hLj4e0$bJde4=L<X%82JC-7RSLjbT2LV@(Q-jvu5aR2^r
z)0F{Uz-8ZZ)1p+IARa~+$5$enw$~8Y4@Hfg*u`B1q1)ltT(ec`=dvDzD{t$yoHD-f
zY;^DcRh)}|Q17c;toHOqUy>Yr-yRT^>qT66YU)>@01dQQ{_m=#y_4}$tWiKHe6gA>
zF;?UbxeIkU5ECBOQf@y!At9dlXg&BV<f+xFz!tcKT-!<m<}DIA1+dgDEW3!oW%<?R
zjbN6F1uboVQanwYCh+@(A#f}CIvnU8qmA+6gk>F$@yFnN7l^S;`#K$%?!Bb`XEryV
zEVZYOY)LPb?MV4oc<vxWjPHC3cVThtJf#r@g^DM9qVjvW+p$S6bKb_6@DUV(QT-|1
z$m#<8KaXazZ9h%jIzKVnw42xnd)7ER8N<lmE-u6EMibd|Bq}fDug#KTY>VO{&~O@Z
zaHB{2o%4HWw&~}^^Q@HK<hG0QHaTZ@hifV#8H@G7MRB33MN<9-m=gQ7s65~-7$Neu
zQJu;pK$9INTtr9rcsPJ?{Fpow54$W$Vfb4EU5@e?I~s@i51SqTY+uF*>FI9>IA#pP
zjXH|6W_vpFhHyTQ1S)evVid8)TcW)#4gzaag??Kx3Eq}kFT%q;4Yh9}6^8dl?f(-F
zteoETGeLsCo3ud`*^Nt|xKk`~6Ezahro7DxO92eWxL3gXD~buO2Gv@whVi59r82hd
zv2lxbJ3f{MqSpEhcZB|lZSg!}UUonCYJidb8uaRyr4lehH2o@Xb{NL|>AJVqarfn|
zUlYr0mlE=JG%5B*Dt8RpS=$bNhFD+)Yb9R;LAC1ulSYCXN6e{bfP>GoMkfSa<>A?=
z$b#J*45`k50NOhfi$BoGEf0|3BoqkXz&p_|azmo%j((VnfI39vMBRrejW#|b%SDz4
z<x8oJIH)}zimG1t<BU=ld1H?u(O|WiS#tJez51`ehkNDqBc}1slY!U?@fbts3kj^o
zA3C<KR-}aScOb}_IurQ2ffetN{lAk_AV4>$<1a*5hQ1TBNi%_uT6G^|<)T8b@bgZS
z&nuEhqqB-2hF^JG%X4%x0t`9<60kYU3{w+fHT_-qKz=<#9xJPW*N^9^tn2R(j8Fql
z5}XsFrzgCYW<m~A1eQyuSwpE6|6OpR>;&82ug8lU<0fIv-B<Drej(?Z%}Lfjy9dwn
zgu4hg%_&-IY~j&)qB5^>>{DU9K6pN|7aLXJ>*1>z!((u75TNxLLLT8eeK}0A84(^p
zH8NL70R<Ny>n-W=>jMR?6vLalG5_)=VJd~R_Qk2oOTZ>a+p?SmNx(!BCnNNi;EU^r
z;#rEL*qL#!%_IxN880lKXhnZZn(j*+`=rXT5be7<uh6)<{$3hX#%VhJZ->w4^)a7|
z=^)A^|5vq29ag;^InfW{fycYMkC2eWH0UsFET^PkiypR+LCRQ(AqH4ZCXBEXKcJ2I
z0elbpPQV_N++@`oKz(~{CHZtW`&|1aGgnLfeNA5E*mt0KM?L0H+j%}PrdA1LjlpZe
ze^YfRoFg(|Dz9o&8`z&qTk2)CB4=kev7T5>C?G}pUKs2lM=8nVl%>J`Kx~R<g<073
z!yIl>LJfN>m*^2ac7`=ZDeZgDh$vr`E_={G1lJXt!&-RpSO+J#da6L3<n33V!Wq(N
zEq8t_=wN=B@bnRA?fJ9^gn~UL>J{OCXRFvI`sRHAf3mM0r9GA(aXS<1FGNCf8-nZ;
z`$eOrleZ+JEL<~6984#B)w!U>M<Vx4czdofb$H~He^>b}n`{jHn6x+SORD8)_=k+#
zFdO|)e{8*juLXL<h6RhHg>Z*JAez&V>nqED5WHH$rvLrazmHR1XOYGX^(5XGN^BI|
zGh?)-KEDtqv`Tz`*q#B(R|Z>|pG)&o6aW14{B>McWinhFz2Qf7=Ih5~B;mSZDFH%I
z5Xb<j?M|(21VXMVQ!hb)KLyOklgLfx_URWhdC&=Zb$Kqv_=0&iD@@3J=Dwm%f_uM1
zo4)NyeZviPq9#*94CY}UeO&Ffqr}RuuoVJ*$#w{+>`W3q>@dUCWb_!UKGM7j3p<f=
z0#+Cd2TGv`c$@a~(HnxtH&LDLVXV#y7(<!jr%>693bY3@xA{_6dH{(H#mMC&%*r#`
z`XA8k8(Oy080i$7(73uh+Wmtea_0<P>?T&5f=^39)2#pa(HDo@k8gsp>MOz(c%Gke
zqfn6_mD@HS65~?qOOpGTC`m1_%Miz)zrR2ab2NsEeBoZ>)d0cVu#iCsR;5+XpnKtG
zP9f-z4cS`p=kR~g`_<r93~(;o{fM+BupPd`x6#_;GmX36IrF8TRm;^I3jsV6RuUK|
z2QEB%Sjz#jZk6+Kq@r8SY=16mdi}FwOf6kEj$3%Ex6SuD_o4V(Z*>%4_9Cg3!C$1+
zu>f!1U60^jU>ajzs7#Qa{&;<O;#&mJKgA#o-JXn6J;Hxe{!wi_X?84+0~$riKfm=W
zP@e+`)Eah=twS!aT7Vyj+Vi8M9&TcIA(NABN%5Z&@9{!gt!W02pSx~Gbs`ZT3NS{g
z3M00fEa&hteD60hI3AR`hI6$i<3dSwMMq^FsK~E$u1y@~iilw^cCA}HNPX00EU&0?
z#lpXN3oCq>8G%!>(eH-aUx(h#cN~RDU&iVIy6dw<{$Idw?AlZ>iV7Q8a4Q>Q;~~$B
zHOQY#$Ng*_d<3HU`(+Ez2UyTz(KruH0=KDeJf^}QdG7Q(Fz&^b*~^&*c!zIB|LAiB
z!lR(u%`|8*kr>i%{&AyOONGLko!%N!^XSsP((ByVZ~;GO6;$<?rq*tEJ}^6e&|cLO
zf8KJe7+XElT0{NFe!~ho-?iqrQP<}Ak)Rgalt6F7;C)aqSU{Dd&K3VD8A$XHx~r}t
zgqwf2{VvK~cOwSF^uQ3GWY^@7Mzndi7C4Hg<1cw3obO*ouH2XQg!iE|M2LOmsjjr$
zJa0pSGzPF%Mw{3}x;q<NH`W0n67w67@`K^rDVxBEX9zdHkJUx5(M2=(BMcu$=WmLN
zSZy`Tg)`Di$haEwb1l@t8YVSa;cTOZn||qMu}U>pMY2@$LYd~*zjB3K#VVE#dJ|{D
z5La&dHiMP@j)&q}6N>J9hm9)badkDe^&)x2+Sbv%nv!}`g2C&hg7gfO%<8GahFfmV
zARLMqoGL91)%Kwfx6;=80s$xcV)yFH3jN#q)tU*vQfkZF3=1l&f<tO+*=HMB-HOuG
zP-6CR-8(<-$kiC8y$iZ`b}qlmqS}y-*-^WT3hqy8_seK<;eQR1^=e>-)%zh@<A9%^
zfRjlRFM!&{CqQSdQ8Ty~T{YqWLe0AP4IiE@TwUV(bb?j`9lo(xrnxvIG_)SlQqbqr
za?G>PdOHXjgMrc9`sgmxcZ&LY3pfS0-a#HexXNJ=o$o*+0?6%OC1LQvq$U_b_UWZ}
zM+v<ucC^q#^NPthNvs5Vg3Zq>u#ifTw!Co8m2^aPl)@{RS9?z0@H4ZE6;Nky+LY$Y
zO`#_xe(rA$11qFM7K~e&QAGl*ywhxawdII@rP%)TDfWEwL8H6g>^`dz_t_L^%S>72
zP-vLhNoPy=bka44mA>xWbyc9viqQ~6%+dqp(F7^TEr$(JmCpCqk2vO}`QU(sza)8%
z6OjT6LV(fNw$}Q5C|Y867+%T{pSGs%soAVe1;EhiP1+ural#s~&I%S8e-erqz=j@F
zh#yJoR0=5?`8ttXA?58Ir?E_yZK^im^+bz77Nv-l&q#o!z-@Z=dbR$2ScvOU_Q_&v
zjT}!A#><81%k6>mva1a|4-<bQ`5q5Ljg<kc9}Hfhk8Ho#fqh^BnK%8-AVvktFTsMW
zl012H;wk+kjRE4WQs_F7pkO*Lc2_}oE6iuq!kk{d)s2mJEL9$t1}4Yx{o}#YJS$Y-
zFlKppxSQ8(i6T%Jy=CEZ6<U?+EWhM=CZnuWKq*Op_bg0~;RjK%n9^QQ86J1bVZPm&
zHP!QhJ*0?p1BPh6IP+gU;tZ|w5D1X*0Tez@R%<U-k^r0)#SBVh(LFUHM2y?7-f@hE
zG>VU4z3dTpx*yk*A-E5oqsIWY2up+`>sP)0i1=Tbj{WU(2~av;DCsjfW9cTG?Y-|9
z()gY55a6FPMylPW2R@oir>SuAZ#2VS{J8G1Q7OnnghW-Y0az-eiKa>rhhG1`BM{#>
z)n<s-w8_DfNT<Mt&ihU(>$73&14KNDR`c0v8nWSON}QupYDIZ|dgJ-9^MmQ(%G0_Z
za<0epp67N`0}yW5Ce9|+ahRE@HhO~x@bUVHoW{-#xH+zp5)<F?gH&?1=oE$OOkiyM
zV9D|&nN?#7!2O6F-d+{vSDz3DT}f?nJ_{rjQfdElROLsS`x#vUeG`6#CwmEVS=-=I
zLwLTP{?lnL@2o$bNOuEQNprnxe9$42r0<xJ$L42c4;PxPJV^BsT>EfyuX+S&e5a6y
zbg!=2f_h1dnyy85$3GjPia)&G%uZ=N_4xjKzpYMX0J27X)nbP(8-Ub$IKPq_c6tBZ
zhlJ6cxjqMSK2uul&H&3q(&3cwOPps%ov7+zVhJRm`EuBx`HM#sF%@*WMoQdHj57*K
zzr6WH?7SkHtyPbaFOo!dX(33`=;g+bTSkRzYk2{)&=pE&DEpY$*iEi$LXHb=3mEgy
zs}N~Yvx(46HL!<S(nFPQb@%qoQ_l18&I7gnA?B2se=Zk?w>t3*$fyaxg~g+2EE76|
zUg4?<>=^HBv?`s7ip*W>OXttsNrZPe0f@YxyFV)f-fw%smCwNEZjn_|5m#4-@2@>b
zq5UdfQ3x3RE^4_S?Z^41|M6PLb-M=OfZ?65tyd$3r5She?_V7HzBIi+z9Xrj9F*wo
zB_#A4FwYk;Dp|bj(DjpSLi!qy%g~!x*>g&gQXLl~U?MnPgNHFs<5Lu68%NwqltL_r
zC*+L0WqT?MWFhIae(`cRpjHsaD5TeW?GA#j+T#cA9pmJao<<^3XDp5)x;7{b9x~Q5
zPo?)?Lk?dR6aYCc{ATr2+Gxm8rH3feyPXNaYCP<mr>?!A*SfoJ07cMM+w6LG8DBr^
zJ-H&GU=2eoXrZ!=+Yfy4rE%r%ARRdtdTP(O__{O1`Bwj>Mil4x?db~$omi6Fr$?Z1
zy^Y`pG%XM4q}PY#=70ZaZQ*D)hA>`={FDYM$x%a66CvM2c_1gjNmI!KTUwu>OEI=m
zu!lRb1U}~}J}%vQ&Rr)&(4z+_(Nu4z8irjr<F5j$Wg*DlL{cHwpVaNHKmH{Sxez^a
zsHI?C)cR8ux@oknaL(W2|GdkbBva*kXgIx3kJ{*#jRY*9qxk^`u*l+`Wkz2Y{(Lj8
zm&?0b3g^$%ga<+2^kN@lLi)v;cK`ouRU<DKCNL3w`BZ{|f|WoibhZyChC^2Qff#W`
z?|~@Lid_=9Fz6WbPaWYTt(DeZQSiKSx+Ax?H%X{(*6TL*a|)k(QMOZ#Mq9#wqvKtR
zJEZA(@yaF0`uhp|UwSiXiSNXNd{!7%%RE@rC@0y-wV|Xqd!08f-={c$;Weor(W&6*
ze)*!9zXD&bq3ps<g8?D2pQuC(7?jE$gnZmdJJ{F2p0p&S+(4w$`-_`jqz3)Gsc_GS
z*Z6l&qs%N~z4}t8f<n;dY+rJu1sSS2=?!bs#K)^bf5zA#Fh6e7u>ff>-O(Uif$4+2
zRX`FkWw!mPR`zGLU4HV)2L$K?+ZeZh-X>J_S8%$qg%Si}ts=xS%#lObJ@FNd2KbqZ
z$aYTn2cz*>Jy5^@c#T>Zt47BL)|_s>W6_$o1`&AAjq+;af^kNd7T}n_`J-5ldk+Oq
zAs_@x2GA$AsC(;bN`4(jv-}~>4kSXdn<FGv%i5Zn!xSzPh3CJADSIJ3NbjCdAj~8L
zq(SOkVOb3MPeo9%#^van^ShFq*xD}~5#{D7DPz*xKO0WU@5IJs=saN8CSplk;q<U5
zkvFUwqlFnTYHVbCH%Ty|{g5tQzzto2s*tVaG4eP<P7!PHmE^5q-tcPtM<FVz;HHYB
zD!iCI1fLjW$@`JIV$EXXjB6YpC6u^bX1yMkk`!Kctxb!($Q6m%os2G&xUq@Idx2Af
zrz3Z}iilCeVWJD@ZoIDE+xvkklTxhG-;esuPW9@1K)m%I>+KnmO4VOdBF1Hjj``e9
zB1}Pi6kyJBC`2VwPJecHdd|#CHCFQho6a?+fX**q%(U-lmu~PA)VJzTbp2uKbfX(-
zRC|Rip}n63%&^kv$+vw;8Ic)8;&8X1{vUL3S+hwn(AsW3XHz;+jZ>$0Aqm7kf~efe
z;nO417z3BHzo9Xot9lS?x#)WnDOri3#Uu7IkVK(~Q0Jc$=_Lb8C~gvsBGamhq%u|(
zq)C#SWa#PT6h4(EsvXwnrF;3xh47PeV`IC%T5yr4O|2HLqpXQLv7?VN(3Rk;d6jP$
zk1aKK+9yePriDSi&wIlTrtewIU<}yCf6p6WNKG_k;IXlb8Zb*f6z1>$H89w+U80!E
z03w}*ZB9TG)c}TdXF*Q3uPS-KgTYBb>RrAYvx@{?iz>Tvbz)-M;I9Wku_$;%Me2;9
z>pW<psRs%Ad2W<jUp4bO%4vd9)`MEvEkY8r1t0pp=rAbw6l^D$P2~F^{Jt~2$4+XT
zn4++O>;WYLY;-1#Q-VsW?ANd1kO3r#ry9P83)4rWt0a-X2~zV4pd*`$A}kc#5?58i
z4WlmdwRL_#)z9D>k(D;)6OkYPtaB|Mv;AlM5B@|NG_P`orKUHU>n!-CvUoxx5m=!V
zf#va1iM_&V1E-(}Y~{%ER6PoR9C4=y6j(6_-ekqMiRSyerSt9h&3^s<saO@)r!b)V
z;?<&K;{QTHWeQ|Nf-vNKzi#w0b&pTIQU#q16W?#cb>~DWiRga^O!kGtmMaT=VMli>
zlGf5Xv||#is)F0e!lEZ+{fbE>kQyNE9%tRQCCk{~!{zUHQG5o9O|QnG3z&F8?`(gD
z{Eg&+oChaaf&j^uUD8fUIlnhuQd9E>8x~ekc**OW@n~|AEBR|i9840oi@CLKZ1p>&
zK-wFswWmW6okq~}%p?({_5Ek(Bg7|eVI2^W#%rX!OB!#b&LghCSl9R<+=%WxmbH{=
z8lf871{*K5^fo3&>)Odg=k9^I=@DFP720!z=pu8WSTvCNz{8b{&7k5Ur#ptzOot2i
zAM1KpibicxSS!x*zYv<Ob{Yj9tnDV-mBs#!SDPr%cg<j_0;znI1N*iQT{*1Cq1iaI
z=KrS9>LnxHl8xT{wQ#t>y%wb&l3lEFIAB10B&4J9zM%O-xgNk+5^mL<;2+5M7qTnO
zdK%v-lDV}$n_|t2Lkjs*X__RHJ@`rAc`)G<%6HuPZK26BsmmXKk)rLI!rGi+MhRX1
ziF+&H-W~~kwY+J2U!``Zu3`x3_^vH!CdG$sp#Vk6dm1crCx<D12!yNdop|~L#W`{k
zE&(L|nJ{o9);&{j=J0373$v%GI)BWn)x-${5KYbHWd715#xNd`S~^7Ex$@a?1=RE%
z?(^!Z<XqrT=`=5|ND(|m$(iF<FIrZ_F52Z<xedSZHUPm?83o0!lSWiOUfGlYQtVxd
z$Q%BYMLTUxxsq{9O8z2lB56)u_Bs&+fjMXdhY8^wu@w$MzBYv0B<rKJ2OQcNEq6-F
z=uPFKoLCa++Qzb52<pGbPwh=-oIj2r?e}*UGmyr=5J81_dW-sVrP#z!_H2cH4J9Us
zq%a{NVY=^B60^1KnWur0ol~-~MGR;m(N4Z5>CpEl6S7P+5Iul(9f*#uGVx^O7dbsj
zHwY2fsJ*pahJ5S@bb$~k>TFp3e@nS3?@%#-bI&qi3#oH>`B8qe^293ocW4A&K}jsG
zJWG~1Yo2Xe{;;e|Xb6j~lYq?Y)4)0NEsYyqk^V*B;xTWeSh{@b1HOVs><7LtZ4mtf
zEi9E(W^*|5bwPoKpPaR$QJgF|RSnOQN|8nLHR4aYAbEC$90M&e2Z@@9BUTvvXBPNs
z#>Y8D&;af&WdJ9c<EdG~ILj+}>WESXjMi`jk^49+VYF4LZDMQl_{PHc#sf#ANsF;7
zz1)W6AKR3q2b00Rs_hUTbx$*QITPx-PCbtVCZ0iqn@3JCYO1?;_StfSFn=nD&Gq=S
z0os9v$VK}l|DaAL9ZMVE<1;*;s`*Ryi&<37@F!xusQvANewGBE?$DK*$t#0v{*2k2
z60#qxP{dUV1#eTc>D=FKF|a54EZSNe3`BE)mVMCyjY1|`=M&*0D+=~z*~COA9fyTa
z&LX_qs_`k^wtl?CXfbFpJ4B?!hA1;iG3fqk>ij+YkA={kd=a_toY*8M{$odx>P)DK
zuOBaYG+fCZmpXKjb;jT-O7f|R*$y~3-qU<F_M3dHeBT`xF@3*|$&0B4zQNRqqtz?5
zpgECp9_qu)@qJm|#0<iR8j&fQ?o!kjHt$qL5!N0E>+thlnaJ0#%(&A`cFJ0HmYy+-
zrVI(R2|`#*eJ~)+aHj7z_&Hwg^+<W+MZVa>Y>#H{6xdMf*5JVNLc4UZS3VvxYXyLs
zH0DN4PVhZkX|EJ`A;ddRC#$9;77!8pwuH#h`&*PCdXIX1P&cZgZb~KDnL@>CjbahY
zf|weLVMVp(M_o6y$nTY>t4S@KcQ)UZFgZt&>|4dQtWxFO1o`Cl8noxn+Y#f=DMpr5
zf(X;Qu&5rytE`D?!Iniw0R`0bL>PL%O`F+mG&e7gSY!74Qkt`Ew{DVN*%E=AF95$>
z_-5b~-*)vITyZN_8Dd&eunvm-R^RhnEe1ko-!Nl>Wc7{Je7=N2H4J7XvV_5&6HD$V
z#vIIYnL;fCL?(&ql*a^J`~}C+d@_y5!kkKaQ3n{KTOMjjkURA!x<8AF2aCW(YAr7h
z9-`{ccJxZJ46EObcg_#8f=E3n%(5$*w=4CHa9$(-$$JePWjS25(m@9x!w@lim(ctw
zlzikNg_6gE_U#KSl~CCbR2ZVd$$qx1Idr;_3ryfe)T-u5!-{fHR2$i1jaNE!f_KuV
z&>Xfey-!GSl1!w1=wfS`R(kZ~pk~sD$pQBpgS&i1z8yJcu3}uD^Hkj;MAFPn${X!`
z##T3**<TI{<WxWlxc9HxOs+UfTT@*;eM7Z0g)(!~DXx>9p3~71*i&Ynhgv^;L8~KF
zP8Fksjvkk)XOvtwa(!gVq`XlK-q)PSOYyYwNaM8&9=$K$rK<}1%fIHaQgR5k+%4x=
z;e_)s?oCa3Hd<Pjb2xu%o+|YXw^6jwiTJbdvxGfB{v;;y&?cf^x++wX3&9y<2&q8k
zG6#{2?Z%t_2Y->srd;gSL*O-|r*PwT9T^E-ZG8G^=e#vpKQz{p)k_vx5Yl8D6jm8R
z!xnm^jj?jpodF$O61&T@^?P{Y=D*7^<Hj+OuYS5i6Pz-q+#@sYW`<*E;(&_<SUQuE
z3b#Jh;mJP>&1kXP4<cDfw@e?!+>wio^TT2N8~0!n0@5U|`P$0iv2d|S@HSY`k#6mb
zFP7V~D|Rkaz-We9n`QUcO%SVg>;+u}zNM~S_;2Tu_YigTo;1<otIMCP3A*Mftgacx
z5vVM&+Fy7!<b8Z$&mWJh&Xg?C77Rq2@Rc!*e*98i;wqsUJa5(SlXbmlcdc$lgEpxu
zQlwsxE2;3hI~jLJi>v=a$=%+HZ2A6^<9gJM$U442^qgM%8`I>R3Ce=#OHKOK(k+fz
zxo<-Jue&y=dRC(G5I0gn@|N$4S&?uoa^iGVLBIfVqq5%AUqUQ<hXU?@ZOV(r_9M(V
z7fi;=;gEF%gg=RNSb7q@PR#d{_54jv<Y?=sF^9iy;VI#lQIRGxs)ik=@+=OQhJ7|3
zU6%_sx>li1Ih~}$=l#G@eBgUs9OOT370_LCPT1a%4mL*i5)q@m(T?_##DDC}i-*Qj
zF}5%eSlNQz_(|Edb(Les_lCt5n)LLL!%W77nmjG5!{dbY`RB7?D+4(GvV5;zWBu-5
z{!N-m>O|z9p+|;gSeS0xk#~yk^?IM}{~_(Ig5rw0Zc!|d;O-in#+?R&yE`=QF2QL$
z!7ahvT^e_HcZc8vZQOz;m+$+}xpf|H)xA~sVfX4i*V=2n?HXh5ImRs1J+A;QsRrDk
zME)QRUFKz!(#;G-$AVLqBMzM(AsUAiLVZrcUUJ+#wW|BBU*)Upeg7PE)#gaH9-k_m
zf%2n`SdtAh45f8BZu0I5yga=jUMWmEvWPO~kc5IJJJ-u+D1D1~+#%Tq%7eAq6_JhL
z%k5Su1@fq*m5^_z_fOlmnPQv`j5C-N4o+RATPk};(55LWZ{;**Nv5V3F%Rzu0!6W!
z3}gQyR2zOMJ&#Xgu_SUCRW$<^Xzx5o-GyZ(LF6o-eZj*w&}g5iR0iL?y9eDvb>uFJ
z7MQ#Wi|?k~5;Awf5R==`Z4HC>1tA4$TXt)GEUwy~N5Y5}unz^_0@(}t$=VEeEB?XM
zN~;NL{~7FZjac%Jpye@ntU^uEzvljB;TTksab{wyF%pYXw8&p(y815|-iF)+UFtT0
zZ$)BmO<<9%{oi6nejPig6Bocr!Ps98fO=DY>-Fcb<v?5!UCB&TU{$lheo~org;NTd
z{IRjn@PW%FNYA^$w@4F<mPXhr)^72GM3&hVQ)31GKXMoQfE50Os#dTH4;a9MrA)A}
zGV-|t$KQy%Nz*!5kd}&V?Q`AvMq`eXaBS=}9XNU@YC*$$9v5%l3--eTVm}sjN6P0b
z#ldJ@PVuJ?<ej>ZF`cv+xhUqT<UALRq(_8?Ue=2{;5_~?aknlHaZ<XhHOdd5onKSi
zq#@~2)*C74;CO6tpz7MeE6g*ZsOfVcM&||Wq3=+T8OVRj)X|jx`$Lk=1R;NX|6hPH
z(}w5G5JEBiXq8lnRuJ!Z#ko6`8RF1n9%>0UVn2T`k&d@v8BVW&S(jhtybGfAQyZ!n
zJ$)QjCGmCUIuV~n_wv?o+s1zgKQ=yF6oH6YPO{*>a~Vdf&8-oi3tPL6Fxhxa?y4(S
zBzvgDJrB$c^{v@%ne*u1cLsvJAG+(;{||{u`^0}OFyF26Np&!0D1}9yb1CBF4HIi^
zE|0RwCR3v&sz=Cx`{VG5?Yu|*1e6wP(&a6ZET}EP;ir|rnhY3wGJ2=00EV;8%-WzK
zLGL@S<!xDsgUpgOLOvUT&hOsA#2`F6cDG^C!A&5WNZ=P_I1%<=qYJCU@ay{M9wr<}
z*e11e+VC6&1AfGnb9J@vg{Uw(Q!5cBbMz&}OLO|fIGKqclTJ%2C!KYMcogj>y=1{8
zhePVEDjb?Iq7Qdr2Z-ecl{~P;_N<A#iDGT}Hbj}DgR+z%A_SrqwW@is`QO^!^e8KW
zabjTk0@D}1cy)QbH+ib=VZhym^KPdm7uN!+@HiO(Ul9$`g2Jh!_WVx5R$@Y{I>BFH
zDeE^w&i+O+)V%USv%~D9m7rac^kp~}nxR-fnwM0jb7@ls&0HLv_qN&-X%(aDC6cD(
zzH9Q#1MQ!C(jH=@MhL=^4~5K5d*x~~d`B2W+3w>xFa>CR8a;$8QGvX7OD0k)4PkgV
z|1w%b%Tr@*Y}N}93wyq8qX7`N_z(rtALPrMYDymZs}|!Ym#@c7rMCG-OwMCAcy)bR
zn>g>F?}3gHlk|H2)!C8oWMV!iyg&+V)XsoYNO<`r1^~k=VzM)soVXqISF9?{`xB9a
zBk6(Sh|Z{_m&I?b!C!>s_zC#WdwX^w)Y>tfvD`=WFEr`qxNiN^8~-Ab!#aQJmWLyt
z2`AvXq(0FuiTnAuO8gRxOb(aeEcq*6W#h|2#BA&UtgpYs1{|isM3+<G0Ki*{(uSaf
z%fx&Y8~~3K4nEgEIv)lNE(9)PdLNnrImk*`Z(e;hJuZOfHJ{t6^oV0<T*vxL&4CIn
z(~20ThhL>G$5kyh4Dpj*o!PM?t#rjc3(flSU8kL$jRad2T^M9Perd23;B5`zeMQdf
zT>m+osUO%1&TL=5vvV#Huv+vi$3&aV6640I5txUByTty4a1`)J*PnL*oc?HSb^r&K
zHwK?2h#ZZ&Oegsuf8FgIQ-~foCF7u8BQ^QyTsIQt#RATa?W*P+*NPgwhT9^s$?XpH
z!8I9hr%S@i+TXT%eU)He?Y=kwV4NmLSFY{MrM5*TP1c`{T&flq2bOOm%q>}N=`es?
zm;BnNvLRE#2fyoLw7BVv+^VVuyp(hLi9J3KZ@E{ciJ)5Lcyvw?8;I-L&U1v|!E1oE
zPrD!`)t{@5eYS~E*s-03xhRCR?YiBqSQ)CSPLoGQAdI*p1t<B|=!x4ubIC8KUxlkT
zCkK7Q@!<anYb$m>Dwag6wch(bp@OArdX|KqbvYiO`#4+yPLqDGy0&xe$ai#e?d24d
z0E~#AP*(wr@7AY}$n|DB95(EZ@skDP&a-(6V*|C#e<%UNd=?+1)dF$QRHAa6sQ}Mb
zeRKg~1)<F?`8Ih6ZVXINU-IEi`xlBRd^)3uD#DzPZa*ZoCttC7ew38_`3#W8;o<M6
z`x{f0Cah7?9b3h{zdIVWi&egVUIx>?ex!Dr#J!_9B9GQTo#e>z5Na{B(eL=7H>Q(X
zkK;Ce5pTM9)2OFn3bHHsWMYy*bWZf5X?IaweMAcgV;J8+Nld=q=F;ey4F6`&qoVYF
zEDz7jr$}7l>vfBv7&N{-oY{$b+x4I|-An|mx#><5%*}581q1bYn>~vNB0a`^ZDxD1
zp=`Z%<Q&{D_y?iwzw`3P*S_?QCo$*~C}k!n{+9gw-btbivEbk1>oF#o*wJ5vL?%$~
zRv@AOaV~@FFdr;8`#b|#gY~mK#{iW9m>u5Qd!IF+828LRfcAdKxpi>rwkmvN;4d3J
zIP9;Xz4vQCo?$xKhpF-Z>I*}~a0X%x5iVFr-7M#Qw4Uneh3__i(+Z^{ejf)lv-a_1
zqb>25m$q5T2_!RDn)yD}oM(ElcO^yQVg&@!Sw~khNsE_dn2z0rs66Y{C}P(q{V=?K
zChGBh4NCgve6weZbk7SuxRanr?{<jYboa-M-QqZRn%b@=p8M*)1;|d7XLHTmf)+io
z+IGuIJI6m99`}e~1d{U@kt}$H^-v~%Ts#h)%l)}lS@4uY*hvF+ju<XfRV%(bGNWYT
z)JipX$#wxQIg9$NX3>cs9Ct}bQ+<umkecXotcX*@kt?XIt1#LjE;Qi*!`g8>t3X7#
zJ=8^X>{Zd=rjMfs+(SQG^;u-7Tx`6?G)i<=QAalD*$_-MfY?GNKnXm7W3fwU1M{z=
zVN}{NiEO3ciZ#zfacooXWgW=s^O+yVK=T0mO_nbDHJY@saahH>ns(2;1P>aeYOJ3{
zPtXzyhe2)@P7D(Du8%z5qK+rF?(cs>Wdo~7Xa<AO=Fkw$3d-kDp7YU)QcSAq)ulpD
zd&!`(Mh1IB2D=RgyZKc|F?uIUkjp8@L-_K8F35Qk<Q(F7S^yfTYuUnFNAEh^%oMm;
zhTmQdUSSSzo})|if;2r^ZJx5V3$#i{L&86BcNSLeGE32cBP1yzh1UHp&-Ie~cz~79
zM5RpxYgH5DLra&+&T3P=3r3TtnH67mD=#ZA9G8;n?ZWtMJ{JXl>8c@UH#u<mK!?zw
zt@~|Q94pO++g%);8`~;RZ@G^-M09}hE1JbtiSoaaPc9yte>@JT=$xJr_k@JKUabtT
zND|wLT34V{jD~z*35tnT9Y|EX{!op&Lb;t8K{=GGE$4Sb2J5BO7ZFfS(*5R|l2Y|O
z&IB@AJwBm_;gS;bx2dz*3fx;z_0h1LIZE~@fQU$|eYHJqACXt29bW{jyvvf1AP+yi
zVK2%vjL#ao$<Iaau%HQv6!aLXYD{QccFA7`T8D)=hbG(H|J7_0OC?D>ZWFX`<JW2D
zfwpl%+t{G(%=Twtk@l_&w(5YsN`4ry^59aL%C?@j7LsW!8iyN#kwU+QTdwL9l3sWk
zm&@VO0y+tL#Yveyb@0hb)1&lsGuk&*NUxEMxO!}~?cU$@jj=^9M@Og0cBe`Y^=Mc6
zMdbR5Fkd^KUE}L^n-WY%ppOk>dU1K-ydqx31nzMWk|Qfe*{4c%YNE2bw}uoyQ7+gr
z+h-X=HrYhY9G(R4jG{|!vlDIEHN6odkjkDWwNj}q11wj$c6L$Ll)i?@pdy-vUG>0t
zMl#TrJ68EGQ#seW(eKpJRaxA3J=e+mesus|NnKO(g?VA}-+A`(;z+KZ?&B(8=mE%~
zO^@S094FkTVmvHCGoyfTU@!?<`+OL*q9on6rQnzWo?oOhuy-Vu<+CLoSmGY~4RjbX
zA4Qv&Cq@!ySD>{eXZuCtUqp2^Rf*nIaY7ei5Z)vJ__6G+4j4$Y4X6XQ`JlQ+6ItPN
zO#-ypkhIUU%qmf>(^RT1R6SfHA)Js5pTScLUPzs-M>xl76;LA0Nqy6Hag`LuuPB>K
zaXY33`+vy8!_vXCqw^sA#>WMrys%95Qs1d5_VaZMoYNr3*2i{!2@*8Oh}Mj(u}M-v
zZQJjVlGk)O@%}J%tc(V2#1kYEWg#1K3>A?zlkc{OD<fA+@5zW-W6@Z~WffGLQ^q`>
zAhZP747sgI92jDhLZyVi5bDisP|?uv*qb6|rJi_?$9r~=^H-u6jM^=#id9?o@;;<D
zN-d+CI1;SLDF(?%nlb2%klHTnLr9WVzap}3;dC&;9$uzg%BfrVo}*|e*hT*I#pb?E
z-As7jd&_FBQ)&LVY1G}r!Y<>p^VDdqmEvjB#vAbDQt^%L4&io*@zR0~74ij2*TKcV
z&_sxr4Vl|=>vH!5!=~PAtP;`GEGX(*C)7^UXl3gq0MFmJRTNhmF(R;fK_g={O<Am*
zd`k2yik}7EOwM=`Mj%6OA<69mLv|sqD^w-13j^t^S&MK33`7QKDv9G{c9gIi&wQ2A
z?JfU>uMOxkxJ24$nkG5#`q<J<ZrWeqJY5!8eX_um@yZp+c^<?6;Lj@gx{?>^(_*cK
zxP=NljRqxZjdjON>5}(R6{194$m~d*Uc(csxFj3uEVZdqFpiRc=Rf<=sO*XEI0Sb#
z5Q(_;D-g!k%s;kTk-aNE6)fP%HUiaBlX>q5M2lZDxSf%vZyxMXdq0qsp}t{&1K1B`
z6H_35)J1YJBsGZiZ@O~A8(xxaEq=G!31_b_v_w4Y|MJDlIi;7{yH`HcaJPT?-Ec4`
z@W`Xaz?%0HS1Q*EftzolU1&VTs>YN009az%Vi8kfc(*a&pE<m9c-1&9`CD%;%Td2V
zMW&bcb*pJI%N6)DKNf|m7`#3;{@W#0?T!t#<^8O9G5sg2(as5Qs^93jJ>s`gq^sGF
zyVQ!7-IQn_+Hz|};HjeUatL12%wxSdE@!nO`&;WiG+mrw#&dk}5{9OQ_~lUOEfkZj
z*1mTU>btWk^Y3gXKp8>lP+Z0JQn16GAV&%y90moTQ1EBAZRt(AaW)=42&47BmY6i^
z`!>4|&R&z!5K+f~{~nq+J722Me5SOlP^g&2DEywob48%=05aZcu-y)Ki3BgVnX9yy
z8J+2s20he$-Jq{<gDLyN!0y%s2+U<p?0<tm%1Q2>0+4;HdqV$)E6l`Rw2YR1z)S2+
zcUDp@?s)f)XZ7nIx*z^eiOHd|h057zK*n~!wT5%n=Fp<gu}b#h*C4tx_?IWoBkboj
zQ+hwY^GV0A&8Ed&e|H{Nx=c^qu#$sIIs8qztf&4|Z<J&1{nF8q{qvJY2E;Y};e0kj
zVZ8zT?#TV8Du2J13kHC;<lu!^$}7K2QcVA)`eBeFT>rgl8X=C)(`5`cghdqBE5HT5
z&{3}Y`=*J2+kbiyr)Zz!FKA9%<GRM+u1_sazI@H&F}QXy{h^mP+F|eIH#J>()*oS_
zE58rJn^Snz&N6saoYqBHNUdI;mQ3|9K41VxYyxT>kNSi+-4JzUdAd-*H#-R@v)@!@
z!8FeN6@|rltsZv{b;)#QTtlA;ab_qxvif`!&Ox}t+5&@g(=~5>l#^)m{YUfta<oWy
zx22wFjJJHhLF=EFP8nNq{NMNQlf3mY0hj+X8vM_4-g-r=v`fA?X%anY^S$?}l5p=q
zzJgfh1>DvDE>tvq-;hD{eHU(lq4(8V|Na}E<ikbHk7X`|sd-;2o${YUM;r6r5B`1n
zKaZ*Z-}`sJN5}1&<1Jl_W0}nnG)dl#@!yX-)Q@H^j2F|Zqe1(vW+nCiP8T_xi49eV
zzQ>{Y^XSgqSD6kC_Ru+*o?229XEc}f9oOu54MYY1iS1J^=~A~luPpCk2YAplcyzkz
z&i$F<&=sU^LDMF8f}p;E-vbvMx+To$@4f}5#lx}sL)-7fp(Ym$H9dV97#|?}%;lUH
z9#)+ahzX!G5=Ycm03sP0Q{imJ$LnA@n-_s(LC4Y2m2WZc=_}s(tlYCii#WB(Pl9g$
zsI`f2#LbGyvAOSL)q4#OQ#Dbp55~|OFKM*N(Z|xB0d)oEO%}C&btj|a-3nD{#&FCf
z0gCT5hl|L=R<2tm?2A&>Vylww<ZI^de8nluNx$sh@u>7oMul+S$J=vMs}`@q=hL!t
zMsNYf*-xD*BFSY2NMeiE5VN7)0eKjk-_}D>`7OzW<#8=PZS)szE6VfHx@t2Bo8x4(
zarUcsvYXbg01h{H62#6<Z@Z_Cr*;dKUFnBuYQKubx!K(i=OjB1Wn0MmdBmHCBbEur
zn*UU{Zt8eko}%iz;XpAg8-4D>IJO&~7s{LTtX3y51**5ndcv%xM=@fP4?E{h#bbvC
zxs+hN{Qq%lpVp5dcH1GB>HN{v{{)7=<oR$_`BV#mY2~0c9;uAQ^Z&>G-4^QGSEsIl
zp+7?%m)ta&DRey9xvyJJjm7&XDRG2TdoIm;s;(Y=Tfhg|ele2JccISgFMFEL^7XqS
z`jcs~+z6&Ns^W=W`Jd*D_Ndx|BY$h=UfIt3Nxv)I@~8Rqw!GT<3LSEamJ(Ic=#uap
z0mT4`0C1<^?VnapE}Tm;ZPeF4x*XSgT<NURyUTwLxQ>as{%YSIn-8tl{7{*EY~#4S
zHZPWfGR<a6LQ4XIs)Q)Tt0xYGP;<)n0i#jDBYAy|Qk>CDJ!0QkX)y-Yx4u^qZvVt1
zlzLO*7GeZ<hgKbDe#m?zio##t3M&XsnaMA!y7VFRsyPp20Ht|T)th;Lo)pG@XL<^Y
zLKzub(N%;>i#s1PAGzwy9u(7`dF$t6!l?maGDUGMg>c7qxiV84^Fdr>0G^M68qGti
z1POR<C@pv}TsLtRLz6P<I{c}gzHb%0En%0xzX#h|HCmr(l(%)X=cHB<7BIN6DQYhV
z&M3ZdQXp3^3GuuiyRs-mPor)#XrGA3#k&!tEXp=fVhe9&?uacZDR}!$%>89g(M^tH
z8Uw;ns)%@UV=(8+p($X0_)|I9N|y8FC?!R~Jbe=i3rP<Ihf*ots819>0Ls|{05gUx
z1UNZOOr;*}o>Bo&_k$>!<&$xcPtAc@YaQ^Z_Ta`+1#CNgCeF@tV+}pM+++R)Y->C)
z1FCJ3{&MBO7GFYDD53Y8p8;DY{4Dl6i&~j^+}uYh!u3leP!TL^nFEwkJdfU4+Mks`
zzuVl!*?QUk^<0XGE4(#2>C^<r|GG1xpYoEsmEr_PH}c8+d-Hj`ExTS%>*jj>P%fGG
zt{M6pGHHZ2^=EL0cFtFVn>;j%saS*nUM;@7o%B02WT89&eth7N8;eQil8h5M(maa^
zgzlu_VUZz=Z5XR{54S@2p>hsIwa~}c?n6O&;&U75yWP90+?cckfXjhGx8Ub`bZA{f
zc4J8<mo+8cVUx22rZQMgsCrUxs&XPsIh5f=tuxE=6To9GHbcsg?WmG5gZ@Ob>{D4z
zFw%oMod}Q7^(ktjn-l~tHNhuWQQNx42GL9z^Szl+m)OSpto}TeD#Oy0G=8YA2{({=
zHs7SALUf35V#mZ$iZz<WaHMQPFi%cqV$wvq(3QE_!)7}~&OJcJuoSkQl&^8}cXr~U
zkY%}abgXf7bavDrSR#(=x(}Q6Jm$IFnv8EDe;h{dv=V5H<?ZXVhYaySwFBp-`glMN
z!pwQQWQJ(gjGS{4G|#fX=MH_HXDU#u=k%6l_#s`RR)*TF)d61MXgkE52Q%$$%~%v;
ze`62l%9124u1+x=Dzv*3|E}2&fN%gi)oN2eHaC7$uVi69j%!{#JN#5Vx)l`yv2vt6
z<t?wrGoMmWCA7N+fWh%~fe-WOq-~!M`fWRHajLh=2t)3qeU9W=cevY5D`tZ!AQ>dD
zh0`Hxm^*e)le^^Z!*}~McT-e#IqhWU3dz;gw)xrATL!IgGQ)DP3fC%5TX7ZUQzq6w
zmNXh0Et?-&_8{e}eVS`}oO45Vj!)7gb~!YHui$8Qu{|437ck8%u~XV82Ury+7d3^U
zG%X8o(f9$XBrE@vj-$12q)E<f>P-x_%|rBNlJ#c%^;RtP%=r`z5;K((L7$9<U}xPv
zS4;apPxn^>KiWG)q*GskuyZnALhQbb0td5#xoUDeS6x(<WHyOEDfUzk@wqlTVusj#
zcmQH2*cm9|{8>3vF6p+ncQar1(1#>~k_7X$e`@h;XjFds7queA6>76ECZRCKtVEV<
zRiSEFB1$i8;}$8Vq?=4UCK`L5+w>bg<CCb;g2*XYETibADt>T*#=jIxp+$Ur8u%~|
z#x5nc1u98=N|S3kr8#ie%6O)-vP)BUBhy~4T9hlab-&S(%WlJm+J6a`@gSW{Fs~*^
z0hP1ILYm&ca6#@;!{k_$vYzgxtd|&>SIj1+qWaKysRSoAw0M(>=5dDz=}HX3m-vu6
zojAwujqDZ{6H9n^LG}xx?Q#o*)g_E{E2aQ)38$ah^Zc0K^qAysz1QeYsL_I*jXcV<
zl=#Gc1FNR=d>Ts<K}5rfx6w;uQ|3SQC)pd)OpWTm0=0HWxcZj-1Ab;6;T4Gr4#~Dl
zlhoSu4YsjLmGANct0kg-_rz1>!r{ZT9qRKe(`T#BWQJ*kuJnTD8rBtOUuyCl>9j*w
zo{c2nroB^`?FwC{Dw4y%(8>_ex{Zx+HCXx?t`IkLik6=HU`7!en>Q(HHmiwKR%F#>
zPwdv)`*{qJM3JlYOIVGvdSBQZoSkA_fSIU<3hWfT!%x&%#T%;}m|0yy$Amj)vXj5d
zpILa7FRZ`mPGLVosE;%f*K$zdA~LMKIVa8=$(=uF$IRa?$u62Fe6m|AdT%!(#r#Z;
zMwiE(@NI^_BiR%_k-ZtQ{2```{LbQZ{p5c1k67hQGB%WG<d!%3&@n-}MyjNeT4Mp%
z$6h*&$6USU;9^BC(E2nmpFXWd*@xcO)aG7~Z!Nnoy?UtZ*dg{I2U^^)fYMr(+doa|
zlWnyQObqd$D?gn~ShT$?^)YKN@fVGOSq3W8l^?jrx7h;Qtgy#Ukj!i1g`8M&sH+yI
z7`3UBI?y>Bv&g3h4~y^#rN?&cyfZW}RN+7EEcfW~%y&UPF&Mg~dw7?O*4pL4-O@Nh
z1<p$t*OuXj>^`lYJ~n6?b<rhMpK#iNE-kg9csBXe*&rF7S=x}ajCT$<@AQkC^L_kg
z=SWOsX}d7$2eGxNkY@4&oOWYt8GS6i{4RYZKE)?SUljCLaJDyg0ag|VYVU6O?IgBy
zaiY#wz^En)s2(~2sPm@%yF9o-j8gR-LUFj5w0D@HOT^~)2{hk30t|xg?Z}^1hI&=9
zS4;P^4E^{Z5)x0w!o^PTaNXwHfI!{{ug!FZOwfEW-*NpaSmS#DY>-Q9%WCUR`<1B)
zh<WYJ0Wu8chQ2P`U<2tZ!w9+2%kEz&NJuuFyatR~gV@A@Y*)^|dpm!U4*d_|@#tvy
zx({Zb@52sD%e_U%$OgDJ-*&~e;jG~Z)_?u@>-KdtMF;|1nReKE7p@}E7$PIPY_HMt
z5tR*af2eBi(uL7M=q%bcY~{*T@_2VV#QLX55p?2CodF%qp5p(9Fq3Q^uB`qeW&{Rl
z^ZAd?1uEf0EfOH$2#K#uAP>aegT|fN*H;?c6Vj)prE5$o>Bm3oFY&s0aOJw%u8y&}
z$mW3e12cyY0mEM^d)&CbC+nls1YDZACgym9iGK9P!z8-8NFUqo>d1F-0teF{a`HYC
z52-unH<oRib=J}LzCS#8yFK3pPgJwPD-@*v+W8dyS;199&$P6V1B;R2H+nOojL-9!
zIv1L<Bc*XiKLtWOe4NP^67(hLUzn%VD)@rGA5M#-e4w$B#Jg~Ij8t0Bc-+TCUrWZ}
z-&$QW`|d!SSto_EWC>X6h&ya(lx|GJH8n&#`?xF-oHCywuepbay79r@bhB-)iDyKl
z7GNcq|I-oItc&UMC)TO60L`)nX5Y|Vf1$UgKv#nzs#6gCRnUKw;{@8?Zho9VU=P3d
z3ftnAJ7l47ZlvM1$DnpRbZOQVQZfCs7Cwhn@h<G^d2`tcU+MB*HU2Sk-PPsorCkQt
z`>tLSs)ern1$Dv%_^hH^NG008%T)C^v9@Nz54^;Xk9<i8kBw8CbFxyjxa#fukQt9w
zhvNYIEjsJ&{1@@e4j4c4Z*u!*O(3OaJK3?IMT8vpJQ2%aa3^}K`@~AUOH;*5c~+?r
z{rc?!wA#-IROhXWu`WLTcm_P{Gns<Dbel+1AFFN7)0UV|aeMUm@@qdLW4L*il%KNl
z#Fdw>UNrcwJcV5ViT0?i9L4O{WwoKMYLtO~ccxrh!@zIH<;<iMrf<PkLd5_R&?O|0
z`J9OTk|x<iqX=ShcuS0Ehj+{>OeS2Xeyqvlaq}WE^*cybl3H?XS-7Ye1_*%Ptf>(f
zWe=?r@Kqj^6Z;nDMPM8;pPpp@uTrw#urlyj|KxID|J}jy@6*ur37d^Yffj*m@aeeo
zOJU)UxB9-OX4##W_A<3bXF@(srl*~CPXP5bLtdgEmafcbe;YZm(>lkX65?kuWI|eS
z+4+H~#U#A{T^$bP$`~Pz((*<mS94|4Pu&>ik)lV6@5sf4*s7g@>J$Va2hQhf^QMQM
zsbEA8Pdm4qFg<*!z^(R@4Tnz9EgqZGUmH_dJd2>l!x+MpRZg3SGScPaNOPQma^&B7
z!ITGP4w1+;vn1zaeP&L#_RXJlGmP+<JrskWx+iwpD~8zjv@ivI+2F~F_vAr1>(~7<
zc?pcN5M0_B#+al5UeJpw3H3?XJca|C<ei>in%=|QV-gkrmrt(mH33Z+SsbZ}zWwId
z@SbzA;-__bbft2MNdDF3YB;2#vAGKOk9MC~`^p5Ydae9<#iqvKp6k_T>g>r%Q%YFx
zurWrF4`}H<KDpt$@UVTgPg6ZQtcf+GFn9l2omOz7zscV`T6oOi(}I;EZ3=s|<sN@a
zF!&|KBf4Z#2?zt7r;t`*B=gum;`*~%OY;5Wtflf=ixVab&zW4^F`@={vAN^<&qm!O
z9L2-r$))8VGSMGeBvMb8(9&Xy<s%ZR^-CDk7QX<6zK8&4BS)r)YflM|WCr@yPE@@p
z&Ed8~08hkwc-q=}HqcmU?C42;`-z;VEp9Bey#q#%jkz{sgMM!KdYPBVWQQ5rX(Xjw
zxI-H}%@Al=3jL|TRA2HFJ6PwiYS`|z#?@!POys@i`5e&u+G<g6$o`))c4RI8zhgGV
zn?~32z<c!+`xL!*--jdT3048-eN!KdBbm#Y0G7)=Ld>zJ<Gs{EKI<b8&x><Za#wkj
zbKHzVHYQeQpWMGZ2Th0}ozc3i=)a@gwQ|g9Hzhm?jM^TXsJ<8+`4(Lq;iXzDPGXq>
zWd+OMO$_eelx0k@tEX|eZT8YaF+W9Brf<a<V<4p&3r0AH!)YqFtPZ(bwgsvXsYO^Z
zAHNB?Th(HAf9qwI>8MZFYEEMhNItsPZ>m)2ZnX0FcIk&p=dlr+)J=2f{%Sv+q%1n!
ze3RjpbUnHt_#ok6%opn$7}D%vJJ!F1mvIR1>P5GpIB8p7uAnz(S#2ep3GC*VK6E#w
zf?JT1C}t=_cw<jIV#4VT$g)n#ltl@fa$0w}#Ky2Q<VLwn?#hyq5h{^B5BO=zD)|uF
z9J@H~`i0Gpb({Vd_E%D5aAhrYIWMHbp?%`9{f-X4rFY=6sLE$G#ks&4Fk!`xbcaf#
zK{cx|^EQHQ^X=<SxG4Fg)m{=Fi}(Ta1gV+_e<jlvFWDNFab%YAC$X{;RDjL0oy_WF
z6a43uY~7qo4`C$b1YhV!^#~%)I`qoj3hW9N?j&KK6y2gyEbAO3GzW|F&w^<{wPcQ<
z>9dNifhZR0`f}7O<<U5kvwq4@2bpEueFUHRY(}*cL*U8-%llWkQItFX?<ChLi|fsG
z9WWWTt?o*c3H<@4hqw>T{E13*S?H-KK&YCTxfYgf2&|a1wrva>TB<a)l6)JWuv?;G
zIZrY@OAv=I$jxw5KUv{s<1aIJH?e$4!8uNP@KxO4aWGCuvA!CMU@$A&GljIZR&u~*
z+v;*zL!nwJ^Lj{GL(A!xX~UYx(4+W}_0W-mmMc8;$0a}^!K}i-wb8&yPEn~fLA!(<
z_{g3mDMu&Zo@5|p7YBPXwu|p9e+kv%I#hJ=Peb4;(n(5IL2*-MRQbQqJ`z?Zd8Hb1
z>`sr5Ha%oMxy+Ak?w@^2lV2KLbG0w1leI4jxhAwP7RLSUW~%=arSPyl_#*dyJpmyb
zN0~;C|D6Q2sQ~_z!*Bgz{A0UcIu>U1J8}p?^hf`yeb5#A6M?@HYIl*btF-YA^Xl^O
zgW<di2_3Hy2F>Yrz0LM3#(lF;Wkq&-f&l&XhE;xU#ozwvByFHGZcq{HixaV+V<&3u
zFD3~CSC_a2;7;%HMj#nKJ0M8~K_Rq9Op0NFb9(LiKh>Ovy^vQsB-V$5-pberx`ms#
zRv97$sCF;r(Ki;Cf6RUD7o=<+PgfGt2AmSsUzu8QW5O&pe<QITEtk)IG}ZV**9Iwh
z<|g9s?yF6%)Mt8R!4@d}kd-ySp3U{dm(%FE1Tpk5pJBoHhd>BxJUVi<bF-)=1EaP)
z2>Q$T=XZ&9KQF(vBg;p~BTowGB;8;_C#HUq^s(V!BU)yZioB#xHFRryYO($=`7`<9
z$yN)v^-S1qGSHmlLHRkMqd$FDBr1eaJ%U$JjHW)vg;A(vNb=AD_DGg;M6+Vj`rVE9
zl9m1V_mk~Egv$BweT|1*AK0t3G^rbY%d6ZX5pAX58Z0_LqC%R-oVw(_DYNL8v%9l9
zo5a^&aTvT<-2)4zSeo8*RuiNKM{6@$KZS*1)M5WcehP<ioFqu<nvL2MfsZeVg)^h4
zs;!gmY%YTNT#WCP+RyK8ezu-|S7j~_gUCOS!Ft{sb~~Iz&pbj0Mm2<2hDlnqj4a!8
zN|(V}!H-1kjl3nFbwt9=CNE^)T!2}n=o9NUHaqr4PjDxc77lc)ZE5*K@5)vnS;<-~
z_r?x9)`JhMd-sj(;68uBOdBO<t`j~fxNEb{h9e7&-T!i(0Izzfc60>R2@vO2-jv;0
zuM^2-gRR`69vUqmeiUov>2t5q56X@=>HJ@rdxS&(3=!nL(k=du=yHv@TwwV=jM8fO
z$es^XHIEfzXal&1?oE)QM8SJLg7T<*3II>^1AE(-k-Gh}vYhQ~zqoBEqEu;u;vkV^
zB?C~-GTVa85%F%^WzwPCZo$Vg4qU<k;+7N(g${GIR^Tf!+qPAANRlwlE83USTr&*&
zltaI3)FZ!IEp2gXZt}F7AB-C%_os;J&RAUo<|%%>9UvppGeg?@;wI7qe4u!Ax}8Nl
zWHED;lo6U=S5PLSgv5ptgd~v1G7CP`X(StaE|fL){w<~J>J0GyaG!Ch4jDKFF*3Cs
zdx>!qh!!9;?6e;_%0yijQ9fk`1~e+=PbvjfT-%hNs1#a>EP2<DZ<Jzb<l2=h6-Ulw
z%xd)OXvrb)=(fM!MYEFC2Sm-p5NN)_WaU3YrS!C~5-e*LC3$1hD&V;^!>AQZKL_LB
zMsG=bd*ddIYF{jlXM@@_0ABS~BYTf?QQ7Lnc!KFuqzV8}yCG%BYB`>urTl;Yb9)0k
z<xOn=SMYj1DjW3umX2jda=mH9<Ym|-pDkgH<RzoUd;ezxL{V{lPq{k>rod0n<cGuR
zq(Z7UWlBKo6kRk;{a#o*9O70-q)lIX#nToWPL8PqTY=?HC);%gKxNe5`>y2QZV|uX
z{k6&BdvED71{c3Rjj~VvwyF{L;a?e0g7awHk~N*Q!p3;h#7PuQlTDC$7|ny;V6n8E
z&VL|rzT|FTGoB9=_uL_K!TIf{)s)u)S&%3C<_g%Mb@}X-%;btBDaB|L^I?{9<9wuK
zMQ9TVl?!2(YMQnK^$hawb5$Uc6idS$NVxEQD%N#iVQ=?00Swt={d`US(V?QeGuuvj
z#hN%nJ;fl03LO*IF0rp>=XSs*AvdQluLu|)?M5oD-|bpUC+W=LE42nqEQQQ$TM-MS
z1O|fL%&CZAeN>fu5+rEP%H(g}PH2Z9R)_9wHS*}8wK~U(8=`hh^w_MLKBce~m4QsY
z3(>}IikMIMTNAh2tkcRWi+bL>_rd}KFWzcN#Vt-QF}(REmJ~lmHeTab)0@Hh?ctBm
zl(=Rvl@Tc44xs6HFa8wi-;h?bgwn)Nh1}?j6xsyN*Jf+%&x07r8lF^Ys5FA}4YIY_
zipu6sLvf3jP?ELm@5P~T?@yd?kG#jcZSTb)MrBJVraqG3{ACKo2c-QuQM1cInH~HG
z0DPox?L0=Lm+tdOR-&#I&>_?9>zs3gvc-uNiG5^@GD?U|La7@XW5JIrJ9B4b0^|YS
z8HO^Ik17<M(6|V;#MpY8_C1jX7XQq@X&uMNt2+|E!7(`|`LNjeJf(DlZq}x01#m9f
z(S=K4U^@w6f1hnd@s>u?G(JRU3ct-p@tN3vqn%;O+|x)Q73Gmf5oLf;I_g+I^Lz!#
zh%%ax$S5`M+B`bA2`$Ac^aL$f#{A6@oZ2B=2@#mzF0GYu86&fFCahl%Z44nMjOrX+
zB(aEQh-kwKMDWCby<)r|a!T#XoDUbcY8<75RaBVTtvNBD8*<39vN3XN3P>8Qx&B>H
zY9njb`W3geBoxq}mF92v`NB$0n#Y&9lx+#lHHplvkY!&LO3GMI6F20nYB>FXEyOx9
z0-}kzq{_W?_uAD;*c6fCc}<j-kWQ>!;mbwCS>wn>&zJ8!g;_q0%&Q@W%Z(H0<G)F8
z#;h(iQOAr8u7q$#4ORB1+7CrO|ED<Gs5tt!i4PugvzPG_4iv3r^aHcHA%VSM?zy;{
z%9~MeM3<`w-<IQ!V)l*Ez3*aryPPwz2JcBVxB^@+#>_o;inrXE<lvCyP-r+GQt3Nc
z=HQus`;tBY@?vx3{%i8*F@12>fQ`+!chW)0KM?2^G`O|d?&iD!+3g}&%SE9$C%&D<
z%%fWx$0BL4^l|_34uCdvXxq7ot6bCRrctM2kVkAcmXR$5>UcikoT2pbOe~G<jLD{H
zw+vt_reNhQio>$J1bCrwd(Z}Juv63cu^*gAaaC@ZaGos`bZ?s|P2AT4emnDb#TJo%
z>fcG6q{GEQo;0&jbR{%<*8aTA20-m+G7f-v8AF%&e55-D)6wMOHf>rKOgM}rT0Wj%
zs9`=1$phY4dFX4lvzLpe^4{BCUUcO4YBx=<*XY9;7aE?5rHdoG@2B%3wmwCEKQ<wn
z4?MP-*9t`P*CFSap3|Iz870r3oxU&V;<Tq>2DfW7*T$RoN{>&@og`$uQ94PB<4h-h
z72}!8{l%h#!%LWk&zA(*`$j9oHYe-W+GMK|J=WrJ>{~a86X+uV2<+s)YMfSlfi%%(
zxa&#rcnh4XPn60;KL=ZR(S?5uDBS#9e9DoprFHb&s*0lhc7bZLD7>-8N-_{RwisJ0
z9>`heu$-2y7R^|GWwyE27g9Nt(I2tCuq#{r2^Fc)Xpfm|j(-$CuWt=??lU!|scnv<
zmsfKOAicW=c9*Y~l%<5NN?Y%sJ&SKe57?b-8C}u=|4@XjmswnlIV2iU*!IYO*%qkp
zqs>i2(geet>SDsk^VR&Ij=4meXXkXc4p~8`Q`jaJ{;`X!ah!=JlLfBZjNop%v@53i
zEstgf696$Q8FSJfiqQlOO|Dd?G4j$eWkGGH%NX!`6KNIpCX7RmI22^@q^j@LiK^w7
z09s;4_3B5-^P>IhHo7EOnPz<c76zr(N+AZNP&-9S*5h&`#0K)F66fXO=|-hikP?k!
zh{ioulW9xF=(9pT^nUg+18=kZ2x&UJSGab9D8CBM)k;OJdHN3WCt_<qW}0I9#~M&e
zh5pkCXV`TItBbkOu^CP5jmJX6PD3k1U*Vp~u0`{*VzWuJrrnQ3(>b|VF<z&XG-K2X
zXQ|IJIVkmI?{H`AWk0Nm)V0or|9}psJmvA9`3b@wc){Arh=&xv>LoXYFD<{_zHbJk
z{&urt{fC2<68bk<R0VE9#fkr0|59IMGJL|e(U9B1e7Tb6ulaIy+mpqbRAoz6J$hOW
zR>^V+WeC!`1{umFv)F_XDo)}>-6gC+GxXDnXQp*h3FVHK#phuoDmiXo=nV|@ZxQ8?
zuR`+FMK7ETXk&{74^|zHY8{%O#lQCjo{icMsqtYQ8WVt(v$lg|eWSKMCw(J<(1t4e
z%rOdy8yXt+{ncx{0j>`(B_3@tWh8-hR}y@#Rc+?JQ&*eo!}>$RFm5fAw=zdrso?<z
zI#)8AWzBfvM;;+Ti%ERYJ<M#;pU?I75H~G6^!k&apHtqs^@V<FyXmTC-+t6ajRGgn
zqdbUYcA2tz>9wyDrQ(sJ=_>HHi^0@uy5BGDGHAQ;j9p5AI<518;=i252aF4D;*uCY
zR4xTuyh+bxsRjvsWlddR3^mY0BwWs$?diPnM8YFN=bW1yRZ9w?F#pv+n##;4NkO=r
zDJY{i<6WPAG^ApqM#`iuFAyU?U64>X>*X=9QWhT<MEBJ>TkNYB&@j2ba7B!k6omc)
z^xOr7h{GxC=`5|mZDr+l^}KhIh@D2CR%RW?VUc5DSALswap&L{WUJg1nsPhLCyh7G
zR+{MX_|^eazL<v4|E~`d?XQ+VpM01G{WoBoxrz34Nt6{<FPWx=>ns!kQY-Ees$#1X
zJ%F39d`8i%+r;Z%qhqM-jr^A2n|Ami|Dr462rK-h5}BjKW36yBoh_<??od>qxHLgP
zXC5JhOZW$3*zDRe?uGx;q3z@JDKO=fOkFoh&E?0O=5E~*{eYgo1Iw~}PC?o*9jeH?
zvvV?Mx4k=q#~coE&e~c`zg>Sc9lqPa_vp8c+>?<mg$8T$ZF9JRSrB-%f~!>Tw9(J#
z0nNQGO^ZS1uGHmX@@-V$+BANH$y50kqE?o!l?mvp(DksG$d{&^p`awCnmOG>;*TM<
zC3JA6geh0U;kV}aGfiwp;N8|*Y`Qrr5_Qq*PqWK|c@Cy!_UJ0#mKFY-LdBkB4@H2k
zomkf5jMYv8byaK!kc8kN_)PhJZkhsMJ*T!Jw{h}tM%$+oxfyP{!Oz6@>kinpi1Xft
zKE!}$4$6deVmNEEPb2`Pi8Tw+%!OOqr-YNs1nF0V1=c#7*47a``$ww=vm!@1VjD7I
zW^naol?||W!i5mt=p1z>YT0(=#+zU}uU^>#QG1=*0JKhBwUT#2U1h(s+qz(nQxo@N
zkrL;C+r^6ciQ5Pf%@i4@wCMM9R=?ulB6hsaU-HxNka=oE;@L6jgP5L#lNmV>uT+7D
zrk?T!W_njU<B`IVrckEMhG_H0K+}Pcs<}R(t8|r!Yot4R_=Lg?BZ0AH%8|Fr3)~a^
z<0W9iaFClritZ=4x|L-x<5?)0eLfaucppV}R@zoIDLMO)JbK2!{^0Ex(z#Ydlma4?
zqdF5RS4RG)$u*q3Drf%%t#ja+v(}-Vj<E$l8|Fv2K+VrXtB>j0$jkD5AjY)&CfPoa
zRaxFLvTQ5sQT}I65Nm#8qk;GYt>0JHKDX`i26KFs!@E`Ra3b9MD-VoASwk)29e4ag
zfJ$?>i>=O<Mdof)pdjVDjlf4sTY-<vEJ$;%m`^v3E|?!;#if)h`~Ql(SEad#1x0!G
zU%*{Z&NFNld+k4Y8Ku6;_s85DR<qf0#oL97uH>=B+*$fC&J&OP{K^m6{<kWM;+7uJ
zdykI(y5`Et3H8)bDbJD5n>Ky)J@$ncY=39V-a@_wfWKS<1-i})6mEayU^8vC@8Dd@
zY>`vE=2MwObI1|UgM&`_bkCpQkecM&M*gCbuDh~fOQO@Oy%XB)-f-_p+^q9959{z{
z!VW}tM=~6|i>G)V!}VY^l97vjTF<aC9EiQH|9f>BGp*_dOZg(RZw%3NKGU#&6wDf|
z6Mfo1j)&+IwnSdsr7g^v3a8wW#E6><_BZ&%;{WA%Wat4TWSujnkVX==-(gGPLdX@=
z)!X&|*eE>%^g5GU`D67*80s#NX}aI4qWK1^ddUHahZ;V;r2OXE=y+m0Yx}#rnmdz9
z4l;z}K_GE!3#r6(Qp(b|ZvKC)P7{IoUpyE7fAd_VhuiaM+Pj7URw^*u>fUpoyzg7z
zb&c=9;!yz-{){<ssl{~0rD59w?JpseIR1ohE)`azz*#$!3x!U<D-Rr>vd15&{cZ(c
zXNZAuJR`+9Fpn3gagIsM{AVH1eOHy&udR6eI=u|O=14NIgv~JNR8we%&YSh9g@)I<
zMl!c+3ya=EzY*xxkPG6Ci^<}W`#JR3wmpG0s8MMb8raef{CFQUWsy?5&xSCR>)g#O
zNh{&h``e+pznU^QjEThli?((6B!Aw{@!EW2M`Y%ubS7f?at#v?{u6Vv3a@@Z+`QXF
z_LG{<t;5ID#q$d@YH6M&)elzAt5GFgrcU*+JT)D-FL#9#Kb2IwN^Lft(aGsw8Rq6p
z^E(GtUp@{%<3`FDAyKqc#~qyGFDO-rf+5crazP}6n>Xc*Bd(r1qyNFxjQ_>e)pv~V
zomx|*{{2Ly_Vk#u1Yp|t52l!DJ-R~p=XhoH6E~a1){Ev5ZC}9O8&4>Ci}ECn=7h)H
zUfg<wPV8{1U2v=qDdUZ}<ED3OkcV?MbgeAF;s#@G{n$dwH8D>_yx2w~@@dS}qUp-?
z7%VU3_8@>o#yAnxF8u3kMb2<CiK5j!Xz>q;m8z1hXME4@9dCjw4bpcN&P-KBhFXIM
zbL;`kg%<3(0KI%m@5Z(XEH-pG-L?M%&teUKU^0~7lw}4bu3ReH&s)uEDQo}PR57tv
zbk6Qwu}KB1mi&a<^rmw~ataX7II)!dm!B!8^G0@O=rhQj*cgbWH|bLptAO1Z?+VGN
z4YqW3kyvBuUu*v`xJt*xRw@0o+ate-!QH_nuqf;7Ol;-}t3mhw0gj%Og;=HA{|^=|
z|A=0mr2rcS4`QpEO}8Pn;I7M>!erru!%jI|^YpUz?MOIzA;t`VpO`ayeim2-h_fFv
zXG^bs*d&|1(x^G2aikoaYyLccE3<MZ$%k0G{$eoDd-7ihn!WS!T+E)d_wqbXOIxo;
zKU_PjPMc%Fp#@?l%>*$!glbJTRx3vp;MrA8(P~y6@usR~DwOp(^-LIu{~s{1vS83Q
z9QChD04e=FBu)7hRo9%b2MWh`7|IHaJ${_h(!0{zScVjX@tX82yp}FN6*`99XcaBv
z>eBQo?}?0cS<Rwkf9Sx-p20tiNjQ;Snk$y4&bS=?n>N~9lCy^nnp_RHr`(8IW_M!*
zFm_si>i`z66Z{F6M?GwlyIsR(vwMXm2zU=I*7$WL{6ol3#WEuczlracWAu9Qe8EEv
zK~t%EZ%gM55bWf0kfP&M`zu99d6yZwZgn&AQ|Qwt#rV8h`P&)Xv&`iK&H|^`p?(aG
z``wMYF0022L^weG-I<hNwcB*1INI_@&N4i4RVWQ%v5OOPR%J@39zpnVDAHoGp?!Ac
zsY#GhIIKheOA^^ZH1bRcHjZBi4_WsQ4<e-h8^X;UNB#eWaM7eKpgduVoDFsK!i0vh
z-wbz#n^!z`Mbvq68~WC&8`;V_#aG83s-I-cpGuoPh9YFuSCh8-AG|yrzMj1e?Yug;
zzrPt=zy3EpWTCma_j(){z)u{<ifDag*_2u8GcA-veN)+B`_!WRljfKXJ3^-WgC9t_
zHeq*BE}>hWPs$5#>T{6b6+JPQd<D2tTl0hs13EGP32l<15QK8~(KStQw)2tPs(xCg
z%--T!$aM@?Cu$l?YT8dNXMxgjP)UW>t-9#bM{6)S8ftz6gmL5LW@_Ood&z@&NwBCE
zw{RywGpCD_&oI8vHJHPG4K${KyRaIvJJN7aq(1Bwi(bqM79Zde%v94=@}3(stM+rL
zd$)mjYxS~ya5(c-G$8~jVCZ=qaw}w~%uI9#v*I@(A4L4coz8Bf5TO6UoKT5%YCQ7}
z(N?3lKX72K{!oEfb5L3?*mExzA;M8rl}CyahS7Fj@4luDxt&L+8u7DMg~+*&hT*FE
z!8P)5Fz6GWWDF$c-OqPDgH^jd`(wjtMt-@IJk6K<vRQES+jS=abz3}l6k&<<H7YO@
zvtE21lF9HiTDi~0Q$q44LO1WN%-+?T1D@-WU+$4;E=NxG%KL^WDENll6Lb5Ac%TWb
z3n`p}04ElOuEWM-cSkfVnfUb0YL)_DB`hA0ZOfxHbbzIMYm)nj^-_;0By<+B=*#h3
z1xm8|_NP_cq(685&205Fw>Z*77r1<Z>g+HyP|&+6j@P@TU%yQH#C@Kq)3%VK9-mI<
z@r^@`$Bc|X;D=$<OH97~wOvu|WDudC6P(AqcHFfhiTI+vX=rGuWtjS|nwNX>!=Crl
z-on@%&!kh*wDbQQS_>@#3Ot(=#6T7!d2;bDc3DrDdjy%Y@v9cT`S*cpl?f}#JhtVm
zcT+j(3KOyI6zFN))%)pFvElwH`FKvAj*(ITw~w=WPeE7Tv1(VM*`M*pC<LfhkGD!!
z8<jtUcd*sy#oVzaZBJ-EGG`;q$zcxN_{d`7#qK3!X(zu0o*A<32Eh=V4|NG-iTzds
zPwW6cI)Bf(0YvIlT_XFJ^A;*X2p@^>LcdmT*j9<KuqhesBXFaY-M&!h>vtJBPh`Jb
zb}?x4!w33O5D=DNU+n(9H#VD84{Yf0K#N&WunznrF{$|FOlK>Z6ZQjYh7XF@Z&m}+
zezb2c`9H;ev<hFBGz18(as0d+h4FqVc02b;tFh16b=&C<k3|YW_H_#+p4SY=;R7Ad
zoWfrnci+5xoqjvfEd03B93K275j>txYl_erq^My!cZ~zqtB7JBViBU@|4YbfN!U{r
z^`6pKg~K?B9ay|*D-~Pbx#twVbM2WG|63sj{1_v~)a~-7{)*<NU%7p>VEJ1aB{5$q
zr&sKYa`1Z<XdZ>h<H2I=&6G>8H{oYqT4oYXG`<joibSKhnn5?h^YDcOX4$aO_ze1&
z_|j%lV^Y{2E4L&pgL_@Me=$O#2Yvll9vOfU;!jcEkMVxq3+A`EL5HU?JHklD1vI}Q
zQKoVkwa25dV|{8LoMtyJ;)4ARyK%0DUsR-jA9dU+p?Hd}#j&^qcPwaN9a7?NZCo4?
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

literal 168320
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
H7v%o|bLM*~

diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/all_on.golden-show-in-gh-pull-request.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/all_on.golden-show-in-gh-pull-request.yaml
index 4df65da558..f38f99abc7 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/all_on.golden-show-in-gh-pull-request.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/all_on.golden-show-in-gh-pull-request.yaml
@@ -426,8 +426,8 @@ spec:
                             localityLbSetting:
                               properties:
                                 distribute:
-                                  description: 'Optional: only one of distribute or
-                                    failover can be set.'
+                                  description: 'Optional: only one of distribute,
+                                    failover or failoverPriority can be set.'
                                   items:
                                     properties:
                                       from:
@@ -449,8 +449,8 @@ spec:
                                   nullable: true
                                   type: boolean
                                 failover:
-                                  description: 'Optional: only failover or distribute
-                                    can be set.'
+                                  description: 'Optional: only one of distribute,
+                                    failover or failoverPriority can be set.'
                                   items:
                                     properties:
                                       from:
@@ -460,13 +460,25 @@ spec:
                                         type: string
                                     type: object
                                   type: array
+                                failoverPriority:
+                                  description: failoverPriority is an ordered list
+                                    of labels used to sort endpoints to do priority
+                                    based load balancing.
+                                  items:
+                                    type: string
+                                  type: array
                               type: object
                             simple:
                               enum:
-                              - ROUND_ROBIN
+                              - UNSPECIFIED
                               - LEAST_CONN
                               - RANDOM
                               - PASSTHROUGH
+                              - ROUND_ROBIN
+                              - LEAST_REQUEST
+                              type: string
+                            warmupDurationSecs:
+                              description: Represents the warmup duration of Service.
                               type: string
                           type: object
                         outlierDetection:
@@ -666,8 +678,8 @@ spec:
                                   localityLbSetting:
                                     properties:
                                       distribute:
-                                        description: 'Optional: only one of distribute
-                                          or failover can be set.'
+                                        description: 'Optional: only one of distribute,
+                                          failover or failoverPriority can be set.'
                                         items:
                                           properties:
                                             from:
@@ -689,8 +701,8 @@ spec:
                                         nullable: true
                                         type: boolean
                                       failover:
-                                        description: 'Optional: only failover or distribute
-                                          can be set.'
+                                        description: 'Optional: only one of distribute,
+                                          failover or failoverPriority can be set.'
                                         items:
                                           properties:
                                             from:
@@ -700,13 +712,26 @@ spec:
                                               type: string
                                           type: object
                                         type: array
+                                      failoverPriority:
+                                        description: failoverPriority is an ordered
+                                          list of labels used to sort endpoints to
+                                          do priority based load balancing.
+                                        items:
+                                          type: string
+                                        type: array
                                     type: object
                                   simple:
                                     enum:
-                                    - ROUND_ROBIN
+                                    - UNSPECIFIED
                                     - LEAST_CONN
                                     - RANDOM
                                     - PASSTHROUGH
+                                    - ROUND_ROBIN
+                                    - LEAST_REQUEST
+                                    type: string
+                                  warmupDurationSecs:
+                                    description: Represents the warmup duration of
+                                      Service.
                                     type: string
                                 type: object
                               outlierDetection:
@@ -761,6 +786,9 @@ spec:
                                     type: string
                                   credentialName:
                                     type: string
+                                  insecureSkipVerify:
+                                    nullable: true
+                                    type: boolean
                                   mode:
                                     enum:
                                     - DISABLE
@@ -793,6 +821,9 @@ spec:
                               type: string
                             credentialName:
                               type: string
+                            insecureSkipVerify:
+                              nullable: true
+                              type: boolean
                             mode:
                               enum:
                               - DISABLE
@@ -969,8 +1000,8 @@ spec:
                       localityLbSetting:
                         properties:
                           distribute:
-                            description: 'Optional: only one of distribute or failover
-                              can be set.'
+                            description: 'Optional: only one of distribute, failover
+                              or failoverPriority can be set.'
                             items:
                               properties:
                                 from:
@@ -991,8 +1022,8 @@ spec:
                             nullable: true
                             type: boolean
                           failover:
-                            description: 'Optional: only failover or distribute can
-                              be set.'
+                            description: 'Optional: only one of distribute, failover
+                              or failoverPriority can be set.'
                             items:
                               properties:
                                 from:
@@ -1002,13 +1033,24 @@ spec:
                                   type: string
                               type: object
                             type: array
+                          failoverPriority:
+                            description: failoverPriority is an ordered list of labels
+                              used to sort endpoints to do priority based load balancing.
+                            items:
+                              type: string
+                            type: array
                         type: object
                       simple:
                         enum:
-                        - ROUND_ROBIN
+                        - UNSPECIFIED
                         - LEAST_CONN
                         - RANDOM
                         - PASSTHROUGH
+                        - ROUND_ROBIN
+                        - LEAST_REQUEST
+                        type: string
+                      warmupDurationSecs:
+                        description: Represents the warmup duration of Service.
                         type: string
                     type: object
                   outlierDetection:
@@ -1203,8 +1245,8 @@ spec:
                             localityLbSetting:
                               properties:
                                 distribute:
-                                  description: 'Optional: only one of distribute or
-                                    failover can be set.'
+                                  description: 'Optional: only one of distribute,
+                                    failover or failoverPriority can be set.'
                                   items:
                                     properties:
                                       from:
@@ -1226,8 +1268,8 @@ spec:
                                   nullable: true
                                   type: boolean
                                 failover:
-                                  description: 'Optional: only failover or distribute
-                                    can be set.'
+                                  description: 'Optional: only one of distribute,
+                                    failover or failoverPriority can be set.'
                                   items:
                                     properties:
                                       from:
@@ -1237,13 +1279,25 @@ spec:
                                         type: string
                                     type: object
                                   type: array
+                                failoverPriority:
+                                  description: failoverPriority is an ordered list
+                                    of labels used to sort endpoints to do priority
+                                    based load balancing.
+                                  items:
+                                    type: string
+                                  type: array
                               type: object
                             simple:
                               enum:
-                              - ROUND_ROBIN
+                              - UNSPECIFIED
                               - LEAST_CONN
                               - RANDOM
                               - PASSTHROUGH
+                              - ROUND_ROBIN
+                              - LEAST_REQUEST
+                              type: string
+                            warmupDurationSecs:
+                              description: Represents the warmup duration of Service.
                               type: string
                           type: object
                         outlierDetection:
@@ -1297,6 +1351,9 @@ spec:
                               type: string
                             credentialName:
                               type: string
+                            insecureSkipVerify:
+                              nullable: true
+                              type: boolean
                             mode:
                               enum:
                               - DISABLE
@@ -1329,6 +1386,9 @@ spec:
                         type: string
                       credentialName:
                         type: string
+                      insecureSkipVerify:
+                        nullable: true
+                        type: boolean
                       mode:
                         enum:
                         - DISABLE
@@ -1554,8 +1614,8 @@ spec:
                             localityLbSetting:
                               properties:
                                 distribute:
-                                  description: 'Optional: only one of distribute or
-                                    failover can be set.'
+                                  description: 'Optional: only one of distribute,
+                                    failover or failoverPriority can be set.'
                                   items:
                                     properties:
                                       from:
@@ -1577,8 +1637,8 @@ spec:
                                   nullable: true
                                   type: boolean
                                 failover:
-                                  description: 'Optional: only failover or distribute
-                                    can be set.'
+                                  description: 'Optional: only one of distribute,
+                                    failover or failoverPriority can be set.'
                                   items:
                                     properties:
                                       from:
@@ -1588,13 +1648,25 @@ spec:
                                         type: string
                                     type: object
                                   type: array
+                                failoverPriority:
+                                  description: failoverPriority is an ordered list
+                                    of labels used to sort endpoints to do priority
+                                    based load balancing.
+                                  items:
+                                    type: string
+                                  type: array
                               type: object
                             simple:
                               enum:
-                              - ROUND_ROBIN
+                              - UNSPECIFIED
                               - LEAST_CONN
                               - RANDOM
                               - PASSTHROUGH
+                              - ROUND_ROBIN
+                              - LEAST_REQUEST
+                              type: string
+                            warmupDurationSecs:
+                              description: Represents the warmup duration of Service.
                               type: string
                           type: object
                         outlierDetection:
@@ -1794,8 +1866,8 @@ spec:
                                   localityLbSetting:
                                     properties:
                                       distribute:
-                                        description: 'Optional: only one of distribute
-                                          or failover can be set.'
+                                        description: 'Optional: only one of distribute,
+                                          failover or failoverPriority can be set.'
                                         items:
                                           properties:
                                             from:
@@ -1817,8 +1889,8 @@ spec:
                                         nullable: true
                                         type: boolean
                                       failover:
-                                        description: 'Optional: only failover or distribute
-                                          can be set.'
+                                        description: 'Optional: only one of distribute,
+                                          failover or failoverPriority can be set.'
                                         items:
                                           properties:
                                             from:
@@ -1828,13 +1900,26 @@ spec:
                                               type: string
                                           type: object
                                         type: array
+                                      failoverPriority:
+                                        description: failoverPriority is an ordered
+                                          list of labels used to sort endpoints to
+                                          do priority based load balancing.
+                                        items:
+                                          type: string
+                                        type: array
                                     type: object
                                   simple:
                                     enum:
-                                    - ROUND_ROBIN
+                                    - UNSPECIFIED
                                     - LEAST_CONN
                                     - RANDOM
                                     - PASSTHROUGH
+                                    - ROUND_ROBIN
+                                    - LEAST_REQUEST
+                                    type: string
+                                  warmupDurationSecs:
+                                    description: Represents the warmup duration of
+                                      Service.
                                     type: string
                                 type: object
                               outlierDetection:
@@ -1889,6 +1974,9 @@ spec:
                                     type: string
                                   credentialName:
                                     type: string
+                                  insecureSkipVerify:
+                                    nullable: true
+                                    type: boolean
                                   mode:
                                     enum:
                                     - DISABLE
@@ -1921,6 +2009,9 @@ spec:
                               type: string
                             credentialName:
                               type: string
+                            insecureSkipVerify:
+                              nullable: true
+                              type: boolean
                             mode:
                               enum:
                               - DISABLE
@@ -2097,8 +2188,8 @@ spec:
                       localityLbSetting:
                         properties:
                           distribute:
-                            description: 'Optional: only one of distribute or failover
-                              can be set.'
+                            description: 'Optional: only one of distribute, failover
+                              or failoverPriority can be set.'
                             items:
                               properties:
                                 from:
@@ -2119,8 +2210,8 @@ spec:
                             nullable: true
                             type: boolean
                           failover:
-                            description: 'Optional: only failover or distribute can
-                              be set.'
+                            description: 'Optional: only one of distribute, failover
+                              or failoverPriority can be set.'
                             items:
                               properties:
                                 from:
@@ -2130,13 +2221,24 @@ spec:
                                   type: string
                               type: object
                             type: array
+                          failoverPriority:
+                            description: failoverPriority is an ordered list of labels
+                              used to sort endpoints to do priority based load balancing.
+                            items:
+                              type: string
+                            type: array
                         type: object
                       simple:
                         enum:
-                        - ROUND_ROBIN
+                        - UNSPECIFIED
                         - LEAST_CONN
                         - RANDOM
                         - PASSTHROUGH
+                        - ROUND_ROBIN
+                        - LEAST_REQUEST
+                        type: string
+                      warmupDurationSecs:
+                        description: Represents the warmup duration of Service.
                         type: string
                     type: object
                   outlierDetection:
@@ -2331,8 +2433,8 @@ spec:
                             localityLbSetting:
                               properties:
                                 distribute:
-                                  description: 'Optional: only one of distribute or
-                                    failover can be set.'
+                                  description: 'Optional: only one of distribute,
+                                    failover or failoverPriority can be set.'
                                   items:
                                     properties:
                                       from:
@@ -2354,8 +2456,8 @@ spec:
                                   nullable: true
                                   type: boolean
                                 failover:
-                                  description: 'Optional: only failover or distribute
-                                    can be set.'
+                                  description: 'Optional: only one of distribute,
+                                    failover or failoverPriority can be set.'
                                   items:
                                     properties:
                                       from:
@@ -2365,13 +2467,25 @@ spec:
                                         type: string
                                     type: object
                                   type: array
+                                failoverPriority:
+                                  description: failoverPriority is an ordered list
+                                    of labels used to sort endpoints to do priority
+                                    based load balancing.
+                                  items:
+                                    type: string
+                                  type: array
                               type: object
                             simple:
                               enum:
-                              - ROUND_ROBIN
+                              - UNSPECIFIED
                               - LEAST_CONN
                               - RANDOM
                               - PASSTHROUGH
+                              - ROUND_ROBIN
+                              - LEAST_REQUEST
+                              type: string
+                            warmupDurationSecs:
+                              description: Represents the warmup duration of Service.
                               type: string
                           type: object
                         outlierDetection:
@@ -2425,6 +2539,9 @@ spec:
                               type: string
                             credentialName:
                               type: string
+                            insecureSkipVerify:
+                              nullable: true
+                              type: boolean
                             mode:
                               enum:
                               - DISABLE
@@ -2457,6 +2574,9 @@ spec:
                         type: string
                       credentialName:
                         type: string
+                      insecureSkipVerify:
+                        nullable: true
+                        type: boolean
                       mode:
                         enum:
                         - DISABLE
@@ -3124,6 +3244,71 @@ spec:
 ---
 apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
+metadata:
+  annotations:
+    "helm.sh/resource-policy": keep
+  labels:
+    app: istio-pilot
+    chart: istio
+    heritage: Tiller
+    release: istio
+  name: proxyconfigs.networking.istio.io
+spec:
+  group: networking.istio.io
+  names:
+    categories:
+    - istio-io
+    - networking-istio-io
+    kind: ProxyConfig
+    listKind: ProxyConfigList
+    plural: proxyconfigs
+    singular: proxyconfig
+  scope: Namespaced
+  versions:
+  - name: v1beta1
+    schema:
+      openAPIV3Schema:
+        properties:
+          spec:
+            description: 'Provides configuration for individual workloads. See more
+              details at: https://istio.io/docs/reference/config/networking/proxy-config.html'
+            properties:
+              concurrency:
+                description: The number of worker threads to run.
+                nullable: true
+                type: integer
+              environmentVariables:
+                additionalProperties:
+                  type: string
+                description: Additional environment variables for the proxy.
+                type: object
+              image:
+                description: Specifies the details of the proxy image.
+                properties:
+                  imageType:
+                    description: The image type of the image.
+                    type: string
+                type: object
+              selector:
+                description: Optional.
+                properties:
+                  matchLabels:
+                    additionalProperties:
+                      type: string
+                    type: object
+                type: object
+            type: object
+          status:
+            type: object
+            x-kubernetes-preserve-unknown-fields: true
+        type: object
+    served: true
+    storage: true
+    subresources:
+      status: {}
+---
+apiVersion: apiextensions.k8s.io/v1
+kind: CustomResourceDefinition
 metadata:
   annotations:
     "helm.sh/resource-policy": keep
@@ -3166,8 +3351,8 @@ spec:
                         type: string
                       type: array
                     forwardOriginalToken:
-                      description: If set to true, the orginal token will be kept
-                        for the ustream request.
+                      description: If set to true, the original token will be kept
+                        for the upstream request.
                       type: boolean
                     fromHeaders:
                       description: List of header locations from which JWT is expected.
@@ -3203,8 +3388,7 @@ spec:
                   type: object
                 type: array
               selector:
-                description: The selector determines the workloads to apply the RequestAuthentication
-                  on.
+                description: Optional.
                 properties:
                   matchLabels:
                     additionalProperties:
@@ -3347,6 +3531,7 @@ spec:
                 - NONE
                 - STATIC
                 - DNS
+                - DNS_ROUND_ROBIN
                 type: string
               subjectAltNames:
                 items:
@@ -3470,6 +3655,7 @@ spec:
                 - NONE
                 - STATIC
                 - DNS
+                - DNS_ROUND_ROBIN
                 type: string
               subjectAltNames:
                 items:
@@ -3585,6 +3771,66 @@ spec:
                         targetPort:
                           type: integer
                       type: object
+                    tls:
+                      properties:
+                        caCertificates:
+                          description: REQUIRED if mode is `MUTUAL`.
+                          type: string
+                        cipherSuites:
+                          description: 'Optional: If specified, only support the specified
+                            cipher list.'
+                          items:
+                            type: string
+                          type: array
+                        credentialName:
+                          type: string
+                        httpsRedirect:
+                          type: boolean
+                        maxProtocolVersion:
+                          description: 'Optional: Maximum TLS protocol version.'
+                          enum:
+                          - TLS_AUTO
+                          - TLSV1_0
+                          - TLSV1_1
+                          - TLSV1_2
+                          - TLSV1_3
+                          type: string
+                        minProtocolVersion:
+                          description: 'Optional: Minimum TLS protocol version.'
+                          enum:
+                          - TLS_AUTO
+                          - TLSV1_0
+                          - TLSV1_1
+                          - TLSV1_2
+                          - TLSV1_3
+                          type: string
+                        mode:
+                          enum:
+                          - PASSTHROUGH
+                          - SIMPLE
+                          - MUTUAL
+                          - AUTO_PASSTHROUGH
+                          - ISTIO_MUTUAL
+                          type: string
+                        privateKey:
+                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
+                          type: string
+                        serverCertificate:
+                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
+                          type: string
+                        subjectAltNames:
+                          items:
+                            type: string
+                          type: array
+                        verifyCertificateHash:
+                          items:
+                            type: string
+                          type: array
+                        verifyCertificateSpki:
+                          items:
+                            type: string
+                          type: array
+                      type: object
                   type: object
                 type: array
               outboundTrafficPolicy:
@@ -3697,6 +3943,66 @@ spec:
                         targetPort:
                           type: integer
                       type: object
+                    tls:
+                      properties:
+                        caCertificates:
+                          description: REQUIRED if mode is `MUTUAL`.
+                          type: string
+                        cipherSuites:
+                          description: 'Optional: If specified, only support the specified
+                            cipher list.'
+                          items:
+                            type: string
+                          type: array
+                        credentialName:
+                          type: string
+                        httpsRedirect:
+                          type: boolean
+                        maxProtocolVersion:
+                          description: 'Optional: Maximum TLS protocol version.'
+                          enum:
+                          - TLS_AUTO
+                          - TLSV1_0
+                          - TLSV1_1
+                          - TLSV1_2
+                          - TLSV1_3
+                          type: string
+                        minProtocolVersion:
+                          description: 'Optional: Minimum TLS protocol version.'
+                          enum:
+                          - TLS_AUTO
+                          - TLSV1_0
+                          - TLSV1_1
+                          - TLSV1_2
+                          - TLSV1_3
+                          type: string
+                        mode:
+                          enum:
+                          - PASSTHROUGH
+                          - SIMPLE
+                          - MUTUAL
+                          - AUTO_PASSTHROUGH
+                          - ISTIO_MUTUAL
+                          type: string
+                        privateKey:
+                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
+                          type: string
+                        serverCertificate:
+                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
+                          type: string
+                        subjectAltNames:
+                          items:
+                            type: string
+                          type: array
+                        verifyCertificateHash:
+                          items:
+                            type: string
+                          type: array
+                        verifyCertificateSpki:
+                          items:
+                            type: string
+                          type: array
+                      type: object
                   type: object
                 type: array
               outboundTrafficPolicy:
@@ -3781,8 +4087,8 @@ spec:
       openAPIV3Schema:
         properties:
           spec:
-            description: Telemetry defines how the telemetry is generated for workloads
-              within a mesh.
+            description: 'Telemetry configuration for workloads. See more details
+              at: https://istio.io/docs/reference/config/telemetry.html'
             properties:
               accessLogging:
                 description: Optional.
@@ -3792,6 +4098,14 @@ spec:
                       description: Controls logging.
                       nullable: true
                       type: boolean
+                    filter:
+                      description: Optional.
+                      properties:
+                        expression:
+                          description: CEL expression for selecting when requests/connections
+                            should be logged.
+                          type: string
+                      type: object
                     providers:
                       description: Optional.
                       items:
@@ -3968,6 +4282,9 @@ spec:
                     randomSamplingPercentage:
                       nullable: true
                       type: number
+                    useRequestIdForTraceSampling:
+                      nullable: true
+                      type: boolean
                   type: object
                 type: array
             type: object
@@ -4478,11 +4795,35 @@ spec:
                     redirect:
                       description: A HTTP rule can either redirect or forward (default)
                         traffic.
+                      oneOf:
+                      - not:
+                          anyOf:
+                          - required:
+                            - port
+                          - required:
+                            - derivePort
+                      - required:
+                        - port
+                      - required:
+                        - derivePort
                       properties:
                         authority:
                           type: string
+                        derivePort:
+                          enum:
+                          - FROM_PROTOCOL_DEFAULT
+                          - FROM_REQUEST_PORT
+                          type: string
+                        port:
+                          description: On a redirect, overwrite the port portion of
+                            the URL with this value.
+                          type: integer
                         redirectCode:
                           type: integer
+                        scheme:
+                          description: On a redirect, overwrite the scheme portion
+                            of the URL with this value.
+                          type: string
                         uri:
                           type: string
                       type: object
@@ -4574,6 +4915,8 @@ spec:
                                 type: object
                             type: object
                           weight:
+                            description: Weight specifies the relative proportion
+                              of traffic to be forwarded to the destination.
                             format: int32
                             type: integer
                         type: object
@@ -4643,6 +4986,8 @@ spec:
                                 type: string
                             type: object
                           weight:
+                            description: Weight specifies the relative proportion
+                              of traffic to be forwarded to the destination.
                             format: int32
                             type: integer
                         type: object
@@ -4709,6 +5054,8 @@ spec:
                                 type: string
                             type: object
                           weight:
+                            description: Weight specifies the relative proportion
+                              of traffic to be forwarded to the destination.
                             format: int32
                             type: integer
                         type: object
@@ -5197,11 +5544,35 @@ spec:
                     redirect:
                       description: A HTTP rule can either redirect or forward (default)
                         traffic.
-                      properties:
-                        authority:
-                          type: string
+                      oneOf:
+                      - not:
+                          anyOf:
+                          - required:
+                            - port
+                          - required:
+                            - derivePort
+                      - required:
+                        - port
+                      - required:
+                        - derivePort
+                      properties:
+                        authority:
+                          type: string
+                        derivePort:
+                          enum:
+                          - FROM_PROTOCOL_DEFAULT
+                          - FROM_REQUEST_PORT
+                          type: string
+                        port:
+                          description: On a redirect, overwrite the port portion of
+                            the URL with this value.
+                          type: integer
                         redirectCode:
                           type: integer
+                        scheme:
+                          description: On a redirect, overwrite the scheme portion
+                            of the URL with this value.
+                          type: string
                         uri:
                           type: string
                       type: object
@@ -5293,6 +5664,8 @@ spec:
                                 type: object
                             type: object
                           weight:
+                            description: Weight specifies the relative proportion
+                              of traffic to be forwarded to the destination.
                             format: int32
                             type: integer
                         type: object
@@ -5362,6 +5735,8 @@ spec:
                                 type: string
                             type: object
                           weight:
+                            description: Weight specifies the relative proportion
+                              of traffic to be forwarded to the destination.
                             format: int32
                             type: integer
                         type: object
@@ -5428,6 +5803,8 @@ spec:
                                 type: string
                             type: object
                           weight:
+                            description: Weight specifies the relative proportion
+                              of traffic to be forwarded to the destination.
                             format: int32
                             type: integer
                         type: object
@@ -5446,6 +5823,123 @@ spec:
 ---
 apiVersion: apiextensions.k8s.io/v1
 kind: CustomResourceDefinition
+metadata:
+  annotations:
+    "helm.sh/resource-policy": keep
+  labels:
+    app: istio-pilot
+    chart: istio
+    heritage: Tiller
+    release: istio
+  name: wasmplugins.extensions.istio.io
+spec:
+  group: extensions.istio.io
+  names:
+    categories:
+    - istio-io
+    - extensions-istio-io
+    kind: WasmPlugin
+    listKind: WasmPluginList
+    plural: wasmplugins
+    singular: wasmplugin
+  scope: Namespaced
+  versions:
+  - additionalPrinterColumns:
+    - description: 'CreationTimestamp is a timestamp representing the server time
+        when this object was created. It is not guaranteed to be set in happens-before
+        order across separate operations. Clients may not set this value. It is represented
+        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
+        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
+      jsonPath: .metadata.creationTimestamp
+      name: Age
+      type: date
+    name: v1alpha1
+    schema:
+      openAPIV3Schema:
+        properties:
+          spec:
+            description: 'Extend the functionality provided by the Istio proxy through
+              WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html'
+            properties:
+              imagePullPolicy:
+                description: The pull behaviour to be applied when fetching an OCI
+                  image.
+                enum:
+                - UNSPECIFIED_POLICY
+                - IfNotPresent
+                - Always
+                type: string
+              imagePullSecret:
+                description: Credentials to use for OCI image pulling.
+                type: string
+              phase:
+                description: Determines where in the filter chain this `WasmPlugin`
+                  is to be injected.
+                enum:
+                - UNSPECIFIED_PHASE
+                - AUTHN
+                - AUTHZ
+                - STATS
+                type: string
+              pluginConfig:
+                description: The configuration that will be passed on to the plugin.
+                type: object
+                x-kubernetes-preserve-unknown-fields: true
+              pluginName:
+                type: string
+              priority:
+                description: Determines ordering of `WasmPlugins` in the same `phase`.
+                nullable: true
+                type: integer
+              selector:
+                properties:
+                  matchLabels:
+                    additionalProperties:
+                      type: string
+                    type: object
+                type: object
+              sha256:
+                description: SHA256 checksum that will be used to verify Wasm module
+                  or OCI container.
+                type: string
+              url:
+                description: URL of a Wasm module or OCI container.
+                type: string
+              verificationKey:
+                type: string
+              vmConfig:
+                description: Configuration for a Wasm VM.
+                properties:
+                  env:
+                    description: Specifies environment variables to be injected to
+                      this VM.
+                    items:
+                      properties:
+                        name:
+                          type: string
+                        value:
+                          description: Value for the environment variable.
+                          type: string
+                        valueFrom:
+                          enum:
+                          - INLINE
+                          - HOST
+                          type: string
+                      type: object
+                    type: array
+                type: object
+            type: object
+          status:
+            type: object
+            x-kubernetes-preserve-unknown-fields: true
+        type: object
+    served: true
+    storage: true
+    subresources:
+      status: {}
+---
+apiVersion: apiextensions.k8s.io/v1
+kind: CustomResourceDefinition
 metadata:
   annotations:
     "helm.sh/resource-policy": keep
@@ -5748,6 +6242,155 @@ spec:
     storage: true
     subresources:
       status: {}
+  - additionalPrinterColumns:
+    - description: 'CreationTimestamp is a timestamp representing the server time
+        when this object was created. It is not guaranteed to be set in happens-before
+        order across separate operations. Clients may not set this value. It is represented
+        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
+        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
+      jsonPath: .metadata.creationTimestamp
+      name: Age
+      type: date
+    name: v1beta1
+    schema:
+      openAPIV3Schema:
+        properties:
+          spec:
+            properties:
+              metadata:
+                description: Metadata that will be used for all corresponding `WorkloadEntries`.
+                properties:
+                  annotations:
+                    additionalProperties:
+                      type: string
+                    type: object
+                  labels:
+                    additionalProperties:
+                      type: string
+                    type: object
+                type: object
+              probe:
+                description: '`ReadinessProbe` describes the configuration the user
+                  must provide for healthchecking on their workload.'
+                oneOf:
+                - not:
+                    anyOf:
+                    - required:
+                      - httpGet
+                    - required:
+                      - tcpSocket
+                    - required:
+                      - exec
+                - required:
+                  - httpGet
+                - required:
+                  - tcpSocket
+                - required:
+                  - exec
+                properties:
+                  exec:
+                    description: Health is determined by how the command that is executed
+                      exited.
+                    properties:
+                      command:
+                        description: Command to run.
+                        items:
+                          type: string
+                        type: array
+                    type: object
+                  failureThreshold:
+                    description: Minimum consecutive failures for the probe to be
+                      considered failed after having succeeded.
+                    format: int32
+                    type: integer
+                  httpGet:
+                    properties:
+                      host:
+                        description: Host name to connect to, defaults to the pod
+                          IP.
+                        type: string
+                      httpHeaders:
+                        description: Headers the proxy will pass on to make the request.
+                        items:
+                          properties:
+                            name:
+                              type: string
+                            value:
+                              type: string
+                          type: object
+                        type: array
+                      path:
+                        description: Path to access on the HTTP server.
+                        type: string
+                      port:
+                        description: Port on which the endpoint lives.
+                        type: integer
+                      scheme:
+                        type: string
+                    type: object
+                  initialDelaySeconds:
+                    description: Number of seconds after the container has started
+                      before readiness probes are initiated.
+                    format: int32
+                    type: integer
+                  periodSeconds:
+                    description: How often (in seconds) to perform the probe.
+                    format: int32
+                    type: integer
+                  successThreshold:
+                    description: Minimum consecutive successes for the probe to be
+                      considered successful after having failed.
+                    format: int32
+                    type: integer
+                  tcpSocket:
+                    description: Health is determined by if the proxy is able to connect.
+                    properties:
+                      host:
+                        type: string
+                      port:
+                        type: integer
+                    type: object
+                  timeoutSeconds:
+                    description: Number of seconds after which the probe times out.
+                    format: int32
+                    type: integer
+                type: object
+              template:
+                description: Template to be used for the generation of `WorkloadEntry`
+                  resources that belong to this `WorkloadGroup`.
+                properties:
+                  address:
+                    type: string
+                  labels:
+                    additionalProperties:
+                      type: string
+                    description: One or more labels associated with the endpoint.
+                    type: object
+                  locality:
+                    description: The locality associated with the endpoint.
+                    type: string
+                  network:
+                    type: string
+                  ports:
+                    additionalProperties:
+                      type: integer
+                    description: Set of ports associated with the endpoint.
+                    type: object
+                  serviceAccount:
+                    type: string
+                  weight:
+                    description: The load balancing weight associated with the endpoint.
+                    type: integer
+                type: object
+            type: object
+          status:
+            type: object
+            x-kubernetes-preserve-unknown-fields: true
+        type: object
+    served: true
+    storage: false
+    subresources:
+      status: {}
 ---
 apiVersion: v1
 kind: ServiceAccount
@@ -5830,6 +6473,12 @@ rules:
   - apiGroups: ["discovery.k8s.io"]
     resources: ["endpointslices"]
     verbs: ["get", "list", "watch"]
+  - apiGroups: ["multicluster.x-k8s.io"]
+    resources: ["serviceexports"]
+    verbs: ["get", "list", "watch", "create", "delete"]
+  - apiGroups: ["multicluster.x-k8s.io"]
+    resources: ["serviceimports"]
+    verbs: ["get", "list", "watch"]
   - apiGroups: ["apps"]
     resources: ["replicasets"]
     verbs: ["get", "list", "watch"]
@@ -5880,6 +6529,9 @@ rules:
   - apiGroups: ["multicluster.x-k8s.io"]
     resources: ["serviceexports"]
     verbs: ["get", "watch", "list"]
+  - apiGroups: ["multicluster.x-k8s.io"]
+    resources: ["serviceimports"]
+    verbs: ["get", "watch", "list"]
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRole
@@ -5902,7 +6554,7 @@ rules:
   # istio configuration
   # removing CRD permissions can break older versions of Istio running alongside this control plane (https://github.com/istio/istio/issues/29382)
   # please proceed with caution
-  - apiGroups: ["config.istio.io", "security.istio.io", "networking.istio.io", "authentication.istio.io", "rbac.istio.io", "telemetry.istio.io"]
+  - apiGroups: ["config.istio.io", "security.istio.io", "networking.istio.io", "authentication.istio.io", "rbac.istio.io", "telemetry.istio.io", "extensions.istio.io"]
     verbs: ["get", "watch", "list"]
     resources: ["*"]
   - apiGroups: ["networking.istio.io"]
@@ -5963,12 +6615,12 @@ rules:
     verbs: ["create"]
 
   # Use for Kubernetes Service APIs
-  - apiGroups: ["networking.x-k8s.io"]
+  - apiGroups: ["networking.x-k8s.io", "gateway.networking.k8s.io"]
     resources: ["*"]
     verbs: ["get", "watch", "list"]
-  - apiGroups: ["networking.x-k8s.io"]
+  - apiGroups: ["networking.x-k8s.io", "gateway.networking.k8s.io"]
     resources: ["*"] # TODO: should be on just */status but wildcard is not supported
-    verbs: ["update"]
+    verbs: ["update", "patch"]
 
   # Needed for multicluster secret reading, possibly ingress certs in the future
   - apiGroups: [""]
@@ -5978,23 +6630,43 @@ rules:
   # Used for MCS serviceexport management
   - apiGroups: ["multicluster.x-k8s.io"]
     resources: ["serviceexports"]
-    verbs: ["get", "watch", "list", "create", "delete"]
+    verbs: [ "get", "watch", "list", "create", "delete"]
+
+  # Used for MCS serviceimport management
+  - apiGroups: ["multicluster.x-k8s.io"]
+    resources: ["serviceimports"]
+    verbs: ["get", "watch", "list"]
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRole
 metadata:
-  name: istiod-istio-system
+  name: istiod-gateway-controller-istio-system
   labels:
     app: istiod
     release: istio
 rules:
-  # sidecar injection controller
-  - apiGroups: ["admissionregistration.k8s.io"]
-    resources: ["mutatingwebhookconfigurations"]
-    verbs: ["get", "list", "watch", "update", "patch"]
-
-  # configuration validation webhook controller
-  - apiGroups: ["admissionregistration.k8s.io"]
+  - apiGroups: ["apps"]
+    verbs: [ "get", "watch", "list", "update", "patch", "create", "delete" ]
+    resources: [ "deployments" ]
+  - apiGroups: [""]
+    verbs: [ "get", "watch", "list", "update", "patch", "create", "delete" ]
+    resources: [ "services" ]
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: istiod-istio-system
+  labels:
+    app: istiod
+    release: istio
+rules:
+  # sidecar injection controller
+  - apiGroups: ["admissionregistration.k8s.io"]
+    resources: ["mutatingwebhookconfigurations"]
+    verbs: ["get", "list", "watch", "update", "patch"]
+
+  # configuration validation webhook controller
+  - apiGroups: ["admissionregistration.k8s.io"]
     resources: ["validatingwebhookconfigurations"]
     verbs: ["get", "list", "watch", "update"]
 
@@ -6062,10 +6734,10 @@ rules:
     verbs: ["create"]
 
   # Use for Kubernetes Service APIs
-  - apiGroups: ["networking.x-k8s.io"]
+  - apiGroups: ["networking.x-k8s.io", "gateway.networking.k8s.io"]
     resources: ["*"]
     verbs: ["get", "watch", "list"]
-  - apiGroups: ["networking.x-k8s.io"]
+  - apiGroups: ["networking.x-k8s.io", "gateway.networking.k8s.io"]
     resources: ["*"] # TODO: should be on just */status but wildcard is not supported
     verbs: ["update"]
 
@@ -6078,6 +6750,11 @@ rules:
   - apiGroups: ["multicluster.x-k8s.io"]
     resources: ["serviceexports"]
     verbs: ["get", "watch", "list", "create", "delete"]
+
+  # Used for MCS serviceimport management
+  - apiGroups: ["multicluster.x-k8s.io"]
+    resources: ["serviceimports"]
+    verbs: ["get", "watch", "list"]
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRoleBinding
@@ -6129,6 +6806,22 @@ subjects:
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRoleBinding
+metadata:
+  name: istiod-gateway-controller-istio-system
+  labels:
+    app: istiod
+    release: istio
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: istiod-gateway-controller-istio-system
+subjects:
+- kind: ServiceAccount
+  name: istiod
+  namespace: istio-system
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
 metadata:
   name: istiod-istio-system
   labels:
@@ -6170,6 +6863,8 @@ webhooks:
         apiGroups:
           - security.istio.io
           - networking.istio.io
+          - telemetry.istio.io
+          - extensions.istio.io
         apiVersions:
           - "*"
         resources:
@@ -6186,226 +6881,93 @@ webhooks:
           operator: In
           values:
           - "default"
-  # Webhook handling default validation
-  - name: validation.istio.io
-    clientConfig:
-      # Should change from base but cannot for API compat
-      service:
-        name: istiod
-        namespace: istio-system
-        path: "/validate"
-      caBundle: ""
-    rules:
-      - operations:
-          - CREATE
-          - UPDATE
-        apiGroups:
-          - security.istio.io
-          - networking.istio.io
-          - telemetry.istio.io
-        apiVersions:
-          - "*"
-        resources:
-          - "*"
-    failurePolicy: Ignore
-    sideEffects: None
-    admissionReviewVersions: ["v1beta1", "v1"]
-    objectSelector:
-      matchExpressions:
-        - key: istio.io/rev
-          operator: DoesNotExist
----
-apiVersion: admissionregistration.k8s.io/v1
-kind: ValidatingWebhookConfiguration
-metadata:
-  name: istiod-istio-system
-  labels:
-    app: istiod
-    release: istio
-    istio: istiod
-webhooks:
-  - name: validation.istio.io
-    clientConfig:
-      service:
-        name: istiod
-        namespace: istio-system
-        path: "/validate"
-    rules:
-      - operations:
-        - CREATE
-        - UPDATE
-        apiGroups:
-        - security.istio.io
-        - networking.istio.io
-        apiVersions:
-        - "*"
-        resources:
-        - "*"
-    # Fail open until the validation webhook is ready. The webhook controller
-    # will update this to `Fail` and patch in the `caBundle` when the webhook
-    # endpoint is ready.
-    failurePolicy: Ignore
-    sideEffects: None
-    admissionReviewVersions: ["v1beta1", "v1"]
 ---
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: metadata-exchange-1.10
+  name: stats-filter-1.11
   namespace: istio-system
   labels:
     istio.io/rev: default
-    install.operator.istio.io/owning-resource: unknown
-    operator.istio.io/component: "Pilot"
 spec:
   configPatches:
-    - applyTo: HTTP_FILTER
-      match:
-        context: SIDECAR_INBOUND
-        proxy:
-          proxyVersion: '^1\.10.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
     - applyTo: HTTP_FILTER
       match:
         context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.10.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
-    - applyTo: HTTP_FILTER
-      match:
-        context: GATEWAY
-        proxy:
-          proxyVersion: '^1\.10.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
----
-apiVersion: networking.istio.io/v1alpha3
-kind: EnvoyFilter
-metadata:
-  name: metadata-exchange-1.11
-  namespace: istio-system
-  labels:
-    istio.io/rev: default
-    install.operator.istio.io/owning-resource: unknown
-    operator.istio.io/component: "Pilot"
-spec:
-  configPatches:
-    - applyTo: HTTP_FILTER
-      match:
-        context: SIDECAR_INBOUND
         proxy:
           proxyVersion: '^1\.11.*'
         listener:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_outbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio"
+                    }
                 vm_config:
+                  vm_id: stats_outbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
     - applyTo: HTTP_FILTER
       match:
-        context: SIDECAR_OUTBOUND
+        context: SIDECAR_INBOUND
         proxy:
           proxyVersion: '^1\.11.*'
         listener:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_inbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio",
+                      "disable_host_header_fallback": true,
+                      "metrics": [
+                        {
+                          "dimensions": {
+                            "destination_cluster": "node.metadata['CLUSTER_ID']",
+                            "source_cluster": "downstream_peer.cluster_id"
+                          }
+                        }
+                      ]
+                    }
                 vm_config:
+                  vm_id: stats_inbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
     - applyTo: HTTP_FILTER
       match:
         context: GATEWAY
@@ -6415,90 +6977,119 @@ spec:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_outbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio",
+                      "disable_host_header_fallback": true
+                    }
                 vm_config:
+                  vm_id: stats_outbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
 ---
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: metadata-exchange-1.12
+  name: stats-filter-1.12
   namespace: istio-system
   labels:
     istio.io/rev: default
-    install.operator.istio.io/owning-resource: unknown
-    operator.istio.io/component: "Pilot"
 spec:
   configPatches:
     - applyTo: HTTP_FILTER
       match:
-        context: SIDECAR_INBOUND
+        context: SIDECAR_OUTBOUND
         proxy:
           proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_outbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio"
+                    }
                 vm_config:
+                  vm_id: stats_outbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
     - applyTo: HTTP_FILTER
       match:
-        context: SIDECAR_OUTBOUND
+        context: SIDECAR_INBOUND
         proxy:
           proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_inbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio",
+                      "disable_host_header_fallback": true,
+                      "metrics": [
+                        {
+                          "dimensions": {
+                            "destination_cluster": "node.metadata['CLUSTER_ID']",
+                            "source_cluster": "downstream_peer.cluster_id"
+                          }
+                        }
+                      ]
+                    }
                 vm_config:
+                  vm_id: stats_inbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
     - applyTo: HTTP_FILTER
       match:
         context: GATEWAY
@@ -6508,29 +7099,37 @@ spec:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_outbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio",
+                      "disable_host_header_fallback": true
+                    }
                 vm_config:
+                  vm_id: stats_outbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
 ---
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: stats-filter-1.10
+  name: stats-filter-1.13
   namespace: istio-system
   labels:
     istio.io/rev: default
@@ -6540,7 +7139,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -6574,7 +7173,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -6617,7 +7216,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -6652,7 +7251,7 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: stats-filter-1.11
+  name: stats-filter-1.14
   namespace: istio-system
   labels:
     istio.io/rev: default
@@ -6662,7 +7261,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -6696,7 +7295,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -6739,7 +7338,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -6774,64 +7373,28 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: stats-filter-1.12
+  name: tcp-stats-filter-1.11
   namespace: istio-system
   labels:
     istio.io/rev: default
 spec:
   configPatches:
-    - applyTo: HTTP_FILTER
-      match:
-        context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.12.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-              subFilter:
-                name: "envoy.filters.http.router"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.stats
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                root_id: stats_outbound
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {
-                      "debug": "false",
-                      "stat_prefix": "istio"
-                    }
-                vm_config:
-                  vm_id: stats_outbound
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.stats
-    - applyTo: HTTP_FILTER
+    - applyTo: NETWORK_FILTER
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.11.*'
         listener:
           filterChain:
             filter:
-              name: "envoy.filters.network.http_connection_manager"
-              subFilter:
-                name: "envoy.filters.http.router"
+              name: "envoy.filters.network.tcp_proxy"
       patch:
         operation: INSERT_BEFORE
         value:
           name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
+            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
             value:
               config:
                 root_id: stats_inbound
@@ -6841,7 +7404,6 @@ spec:
                     {
                       "debug": "false",
                       "stat_prefix": "istio",
-                      "disable_host_header_fallback": true,
                       "metrics": [
                         {
                           "dimensions": {
@@ -6852,29 +7414,27 @@ spec:
                       ]
                     }
                 vm_config:
-                  vm_id: stats_inbound
+                  vm_id: tcp_stats_inbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.stats
-    - applyTo: HTTP_FILTER
+                      inline_string: "envoy.wasm.stats"
+    - applyTo: NETWORK_FILTER
       match:
-        context: GATEWAY
+        context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.11.*'
         listener:
           filterChain:
             filter:
-              name: "envoy.filters.network.http_connection_manager"
-              subFilter:
-                name: "envoy.filters.http.router"
+              name: "envoy.filters.network.tcp_proxy"
       patch:
         operation: INSERT_BEFORE
         value:
           name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
+            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
             value:
               config:
                 root_id: stats_outbound
@@ -6883,134 +7443,51 @@ spec:
                   value: |
                     {
                       "debug": "false",
-                      "stat_prefix": "istio",
-                      "disable_host_header_fallback": true
+                      "stat_prefix": "istio"
                     }
                 vm_config:
-                  vm_id: stats_outbound
+                  vm_id: tcp_stats_outbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.stats
----
-apiVersion: networking.istio.io/v1alpha3
-kind: EnvoyFilter
-metadata:
-  name: tcp-metadata-exchange-1.10
-  namespace: istio-system
-  labels:
-    istio.io/rev: default
-spec:
-  configPatches:
+                      inline_string: "envoy.wasm.stats"
     - applyTo: NETWORK_FILTER
-      match:
-        context: SIDECAR_INBOUND
-        proxy:
-          proxyVersion: '^1\.10.*'
-        listener: {}
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-            value:
-              protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.10.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
-    - applyTo: CLUSTER
       match:
         context: GATEWAY
-        proxy:
-          proxyVersion: '^1\.10.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
----
-apiVersion: networking.istio.io/v1alpha3
-kind: EnvoyFilter
-metadata:
-  name: tcp-metadata-exchange-1.11
-  namespace: istio-system
-  labels:
-    istio.io/rev: default
-spec:
-  configPatches:
-    - applyTo: NETWORK_FILTER
-      match:
-        context: SIDECAR_INBOUND
         proxy:
           proxyVersion: '^1\.11.*'
-        listener: {}
+        listener:
+          filterChain:
+            filter:
+              name: "envoy.filters.network.tcp_proxy"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
+            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
             value:
-              protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.11.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: GATEWAY
-        proxy:
-          proxyVersion: '^1\.11.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
+              config:
+                root_id: stats_outbound
+                configuration:
+                  "@type": "type.googleapis.com/google.protobuf.StringValue"
+                  value: |
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio"
+                    }
+                vm_config:
+                  vm_id: tcp_stats_outbound
+                  runtime: envoy.wasm.runtime.null
+                  code:
+                    local:
+                      inline_string: "envoy.wasm.stats"
 ---
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: tcp-metadata-exchange-1.12
+  name: tcp-stats-filter-1.12
   namespace: istio-system
   labels:
     istio.io/rev: default
@@ -7021,63 +7498,6 @@ spec:
         context: SIDECAR_INBOUND
         proxy:
           proxyVersion: '^1\.12.*'
-        listener: {}
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-            value:
-              protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.12.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: GATEWAY
-        proxy:
-          proxyVersion: '^1\.12.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
----
-apiVersion: networking.istio.io/v1alpha3
-kind: EnvoyFilter
-metadata:
-  name: tcp-stats-filter-1.10
-  namespace: istio-system
-  labels:
-    istio.io/rev: default
-spec:
-  configPatches:
-    - applyTo: NETWORK_FILTER
-      match:
-        context: SIDECAR_INBOUND
-        proxy:
-          proxyVersion: '^1\.10.*'
         listener:
           filterChain:
             filter:
@@ -7117,7 +7537,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
@@ -7149,7 +7569,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
@@ -7181,7 +7601,7 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: tcp-stats-filter-1.11
+  name: tcp-stats-filter-1.13
   namespace: istio-system
   labels:
     istio.io/rev: default
@@ -7191,7 +7611,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -7231,7 +7651,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -7263,7 +7683,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -7295,7 +7715,7 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: tcp-stats-filter-1.12
+  name: tcp-stats-filter-1.14
   namespace: istio-system
   labels:
     istio.io/rev: default
@@ -7305,7 +7725,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -7345,7 +7765,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -7377,7 +7797,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -7449,6 +7869,7 @@ data:
     {
       "global": {
         "caAddress": "",
+        "caName": "",
         "configCluster": false,
         "configValidation": true,
         "defaultNodeSelector": {},
@@ -7499,6 +7920,8 @@ data:
           "holdApplicationUntilProxyStarts": false,
           "image": "proxyv2",
           "includeIPRanges": "*",
+          "includeInboundPorts": "*",
+          "includeOutboundPorts": "",
           "logLevel": "warning",
           "privileged": false,
           "readinessFailureThreshold": 30,
@@ -7596,6 +8019,32 @@ data:
     template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
     templates:
       sidecar: |
+        {{- define "resources"  }}
+          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+              requests:
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+                {{ end }}
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+                {{ end }}
+            {{- end }}
+            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+              limits:
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+                {{ end }}
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+                {{ end }}
+            {{- end }}
+          {{- else }}
+            {{- if .Values.global.proxy.resources }}
+              {{ toYaml .Values.global.proxy.resources | indent 6 }}
+            {{- end }}
+          {{- end }}
+        {{- end }}
         {{- $containers := list }}
         {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
         metadata:
@@ -7615,7 +8064,7 @@ data:
             sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
             {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
             {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
-            traffic.sidecar.istio.io/includeInboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}",
+            {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
             traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
             {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
             traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
@@ -7638,12 +8087,12 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             args:
             - istio-iptables
             - "-p"
-            - "15001"
+            - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
             - "-z"
             - "15006"
             - "-u"
@@ -7655,7 +8104,7 @@ data:
             - "-x"
             - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
             - "-b"
-            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}"
+            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
             - "-d"
           {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
             - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
@@ -7687,30 +8136,7 @@ data:
             {{- end }}
           {{- end }}
             resources:
-          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
-              requests:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
-                {{ end }}
-            {{- end }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-              limits:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
-                {{ end }}
-            {{- end }}
-          {{- else }}
-            {{- if .Values.global.proxy.resources }}
-              {{ toYaml .Values.global.proxy.resources | indent 6 }}
-            {{- end }}
-          {{- end }}
+          {{ template "resources" . }}
             securityContext:
               allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
               privileged: {{ .Values.global.proxy.privileged }}
@@ -7745,10 +8171,11 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
-            resources: {}
+            resources:
+          {{ template "resources" . }}
             securityContext:
               allowPrivilegeEscalation: true
               capabilities:
@@ -7767,7 +8194,7 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             ports:
             - containerPort: 15090
@@ -7908,6 +8335,20 @@ data:
               failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
             {{ end -}}
             securityContext:
+              {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+              allowPrivilegeEscalation: true
+              capabilities:
+                add:
+                - NET_ADMIN
+                drop:
+                - ALL
+              privileged: true
+              readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+              runAsGroup: 1337
+              fsGroup: 1337
+              runAsNonRoot: false
+              runAsUser: 0
+              {{- else }}
               allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
               capabilities:
                 {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
@@ -7932,32 +8373,15 @@ data:
               runAsNonRoot: true
               runAsUser: 1337
               {{- end }}
+              {{- end }}
             resources:
-          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
-              requests:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
-                {{ end }}
-            {{- end }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-              limits:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
-                {{ end }}
-            {{- end }}
-          {{- else }}
-            {{- if .Values.global.proxy.resources }}
-              {{ toYaml .Values.global.proxy.resources | indent 6 }}
-            {{- end }}
-          {{- end }}
+          {{ template "resources" . }}
             volumeMounts:
+            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+            - name: gke-workload-certificate
+              mountPath: /var/run/secrets/workload-spiffe-credentials
+              readOnly: true
+            {{- end }}
             {{- if eq .Values.global.pilotCertProvider "istiod" }}
             - mountPath: /var/run/secrets/istio
               name: istiod-ca-cert
@@ -7995,6 +8419,11 @@ data:
               {{ end }}
               {{- end }}
           volumes:
+          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            csi:
+              driver: workloadcertificates.security.cloud.google.com
+          {{- end }}
           {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
           - name: custom-bootstrap-volume
             configMap:
@@ -8082,7 +8511,7 @@ data:
           {{- if contains "/" .Values.global.proxy.image }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             ports:
             - containerPort: 15090
@@ -8196,6 +8625,11 @@ data:
               timeoutSeconds: 3
               failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
             volumeMounts:
+            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+            - name: gke-workload-certificate
+              mountPath: /var/run/secrets/workload-spiffe-credentials
+              readOnly: true
+            {{- end }}
             {{- if eq .Values.global.pilotCertProvider "istiod" }}
             - mountPath: /var/run/secrets/istio
               name: istiod-ca-cert
@@ -8218,6 +8652,11 @@ data:
             - name: istio-podinfo
               mountPath: /etc/istio/pod
           volumes:
+          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            csi:
+              driver: workloadcertificates.security.cloud.google.com
+          {{- end }}
           # SDS channel between istioagent and Envoy
           - emptyDir:
               medium: Memory
@@ -8269,6 +8708,8 @@ data:
             fsGroup: 1337
           {{- end }}
       grpc-simple: |
+        metadata:
+          sidecar.istio.io/rewriteAppHTTPProbers: "false"
         spec:
           initContainers:
             - name: grpc-bootstrap-init
@@ -8289,16 +8730,20 @@ data:
                   valueFrom:
                     fieldRef:
                       fieldPath: metadata.namespace
+                - name: ISTIO_NAMESPACE
+                  value: |
+                     {{ .Values.global.istioNamespace }}
               command:
                 - sh
                 - "-c"
                 - |-
                   NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+                  SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
                   echo '
                   {
                     "xds_servers": [
                       {
-                        "server_uri": "dns:///istiod.istio-system.svc:15010",
+                        "server_uri": "'${SERVER_URI}'",
                         "channel_creds": [{"type": "insecure"}],
                         "server_features" : ["xds_v3"]
                       }
@@ -8331,11 +8776,15 @@ data:
         {{- $containers := list }}
         {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
         metadata:
+          labels:
+            service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+            service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
           annotations: {
             {{- if eq (len $containers) 1 }}
             kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
             kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
             {{ end }}
+            sidecar.istio.io/rewriteAppHTTPProbers: "false",
           }
         spec:
           containers:
@@ -8343,10 +8792,10 @@ data:
           {{ if not (eq $container.Name "istio-proxy") }}
           - name: {{ $container.Name }}
             env:
-            - name: "GRPC_XDS_BOOTSTRAP"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
             - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
+              value: "true"
+            - name: "GRPC_XDS_BOOTSTRAP"
+              value: "/etc/istio/proxy/grpc-bootstrap.json"
             volumeMounts:
             - mountPath: /var/lib/istio/data
               name: istio-data
@@ -8359,7 +8808,7 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             args:
             - proxy
@@ -8374,8 +8823,6 @@ data:
             - --log_as_json
           {{- end }}
             env:
-            - name: "GRPC_XDS_BOOTSTRAP"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
             - name: ISTIO_META_GENERATOR
               value: grpc
             - name: OUTPUT_CERTS
@@ -8831,8 +9278,6 @@ spec:
             value: "cluster.local"
           - name: ISTIO_META_UNPRIVILEGED_POD
             value: "true"
-          - name: ISTIO_META_ROUTER_MODE
-            value: "standard"
           - name: ISTIO_META_CLUSTER_ID
             value: "Kubernetes"
           volumeMounts:
@@ -8900,6 +9345,7 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+                  - "arm64"
                   - "ppc64le"
                   - "s390x"
           preferredDuringSchedulingIgnoredDuringExecution:
@@ -8910,6 +9356,13 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+            - weight: 2
+              preference:
+                matchExpressions:
+                - key: kubernetes.io/arch
+                  operator: In
+                  values:
+                  - "arm64"
             - weight: 2
               preference:
                 matchExpressions:
@@ -9063,8 +9516,6 @@ spec:
             value: "cluster.local"
           - name: ISTIO_META_UNPRIVILEGED_POD
             value: "true"
-          - name: ISTIO_META_ROUTER_MODE
-            value: "standard"
           - name: ISTIO_META_CLUSTER_ID
             value: "Kubernetes"
           volumeMounts:
@@ -9132,6 +9583,7 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+                  - "arm64"
                   - "ppc64le"
                   - "s390x"
           preferredDuringSchedulingIgnoredDuringExecution:
@@ -9142,6 +9594,13 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+            - weight: 2
+              preference:
+                matchExpressions:
+                - key: kubernetes.io/arch
+                  operator: In
+                  values:
+                  - "arm64"
             - weight: 2
               preference:
                 matchExpressions:
@@ -9260,6 +9719,8 @@ spec:
               cpu: 500m
               memory: 2048Mi
           securityContext:
+            allowPrivilegeEscalation: false
+            readOnlyRootFilesystem: true
             runAsUser: 1337
             runAsGroup: 1337
             runAsNonRoot: true
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/flag_output.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/flag_output.golden.yaml
index 51e757091a..9d0af43fe1 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/flag_output.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/flag_output.golden.yaml
@@ -101,6 +101,8 @@ spec:
               cpu: 500m
               memory: 2048Mi
           securityContext:
+            allowPrivilegeEscalation: false
+            readOnlyRootFilesystem: true
             runAsUser: 1337
             runAsGroup: 1337
             runAsNonRoot: true
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/flag_output_set_values.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/flag_output_set_values.golden.yaml
index 79796f170e..c82120a628 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/flag_output_set_values.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/flag_output_set_values.golden.yaml
@@ -136,8 +136,6 @@ spec:
             value: "cluster.local"
           - name: ISTIO_META_UNPRIVILEGED_POD
             value: "true"
-          - name: ISTIO_META_ROUTER_MODE
-            value: "standard"
           - name: ISTIO_META_CLUSTER_ID
             value: "Kubernetes"
           volumeMounts:
@@ -205,6 +203,7 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+                  - "arm64"
                   - "ppc64le"
                   - "s390x"
           preferredDuringSchedulingIgnoredDuringExecution:
@@ -215,6 +214,13 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+            - weight: 2
+              preference:
+                matchExpressions:
+                - key: kubernetes.io/arch
+                  operator: In
+                  values:
+                  - "arm64"
             - weight: 2
               preference:
                 matchExpressions:
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/helm_values_enablement.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/helm_values_enablement.golden.yaml
index 967442d828..5083081ce5 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/helm_values_enablement.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/helm_values_enablement.golden.yaml
@@ -134,8 +134,6 @@ spec:
             value: "cluster.local"
           - name: ISTIO_META_UNPRIVILEGED_POD
             value: "true"
-          - name: ISTIO_META_ROUTER_MODE
-            value: "standard"
           - name: ISTIO_META_CLUSTER_ID
             value: "Kubernetes"
           volumeMounts:
@@ -203,6 +201,7 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+                  - "arm64"
                   - "ppc64le"
                   - "s390x"
           preferredDuringSchedulingIgnoredDuringExecution:
@@ -213,6 +212,13 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+            - weight: 2
+              preference:
+                matchExpressions:
+                - key: kubernetes.io/arch
+                  operator: In
+                  values:
+                  - "arm64"
             - weight: 2
               preference:
                 matchExpressions:
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/ingressgateway_k8s_settings.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/ingressgateway_k8s_settings.golden.yaml
index b94712bf0c..b4ad1fd39f 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/ingressgateway_k8s_settings.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/ingressgateway_k8s_settings.golden.yaml
@@ -49,6 +49,13 @@ spec:
                 values:
                 - amd64
             weight: 2
+          - preference:
+              matchExpressions:
+              - key: kubernetes.io/arch
+                operator: In
+                values:
+                - arm64
+            weight: 2
           - preference:
               matchExpressions:
               - key: kubernetes.io/arch
@@ -70,6 +77,7 @@ spec:
                 operator: In
                 values:
                 - amd64
+                - arm64
                 - ppc64le
                 - s390x
       containers:
@@ -127,8 +135,6 @@ spec:
           value: cluster.local
         - name: ISTIO_META_UNPRIVILEGED_POD
           value: "true"
-        - name: ISTIO_META_ROUTER_MODE
-          value: standard
         - name: ISTIO_META_CLUSTER_ID
           value: Kubernetes
         image: gcr.io/istio-testing/proxyv2:latest
@@ -373,8 +379,6 @@ spec:
             value: "cluster.local"
           - name: ISTIO_META_UNPRIVILEGED_POD
             value: "true"
-          - name: ISTIO_META_ROUTER_MODE
-            value: "standard"
           - name: ISTIO_META_CLUSTER_ID
             value: "Kubernetes"
           volumeMounts:
@@ -442,6 +446,7 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+                  - "arm64"
                   - "ppc64le"
                   - "s390x"
           preferredDuringSchedulingIgnoredDuringExecution:
@@ -452,6 +457,13 @@ spec:
                   operator: In
                   values:
                   - "amd64"
+            - weight: 2
+              preference:
+                matchExpressions:
+                - key: kubernetes.io/arch
+                  operator: In
+                  values:
+                  - "arm64"
             - weight: 2
               preference:
                 matchExpressions:
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/install_package_path.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/install_package_path.golden.yaml
index 214c8f2fc0..06e21f5b96 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/install_package_path.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/install_package_path.golden.yaml
@@ -101,6 +101,8 @@ spec:
               cpu: 500m
               memory: 2048Mi
           securityContext:
+            allowPrivilegeEscalation: false
+            readOnlyRootFilesystem: true
             runAsUser: 1337
             runAsGroup: 1337
             runAsNonRoot: true
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/pilot_default.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/pilot_default.golden.yaml
index 5050eac89a..663754bd28 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/pilot_default.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/pilot_default.golden.yaml
@@ -35,6 +35,12 @@ rules:
   - apiGroups: ["discovery.k8s.io"]
     resources: ["endpointslices"]
     verbs: ["get", "list", "watch"]
+  - apiGroups: ["multicluster.x-k8s.io"]
+    resources: ["serviceexports"]
+    verbs: ["get", "list", "watch", "create", "delete"]
+  - apiGroups: ["multicluster.x-k8s.io"]
+    resources: ["serviceimports"]
+    verbs: ["get", "list", "watch"]
   - apiGroups: ["apps"]
     resources: ["replicasets"]
     verbs: ["get", "list", "watch"]
@@ -66,7 +72,7 @@ rules:
   # istio configuration
   # removing CRD permissions can break older versions of Istio running alongside this control plane (https://github.com/istio/istio/issues/29382)
   # please proceed with caution
-  - apiGroups: ["config.istio.io", "security.istio.io", "networking.istio.io", "authentication.istio.io", "rbac.istio.io", "telemetry.istio.io"]
+  - apiGroups: ["config.istio.io", "security.istio.io", "networking.istio.io", "authentication.istio.io", "rbac.istio.io", "telemetry.istio.io", "extensions.istio.io"]
     verbs: ["get", "watch", "list"]
     resources: ["*"]
   - apiGroups: ["networking.istio.io"]
@@ -127,12 +133,12 @@ rules:
     verbs: ["create"]
 
   # Use for Kubernetes Service APIs
-  - apiGroups: ["networking.x-k8s.io"]
+  - apiGroups: ["networking.x-k8s.io", "gateway.networking.k8s.io"]
     resources: ["*"]
     verbs: ["get", "watch", "list"]
-  - apiGroups: ["networking.x-k8s.io"]
+  - apiGroups: ["networking.x-k8s.io", "gateway.networking.k8s.io"]
     resources: ["*"] # TODO: should be on just */status but wildcard is not supported
-    verbs: ["update"]
+    verbs: ["update", "patch"]
 
   # Needed for multicluster secret reading, possibly ingress certs in the future
   - apiGroups: [""]
@@ -142,7 +148,27 @@ rules:
   # Used for MCS serviceexport management
   - apiGroups: ["multicluster.x-k8s.io"]
     resources: ["serviceexports"]
-    verbs: ["get", "watch", "list", "create", "delete"]
+    verbs: [ "get", "watch", "list", "create", "delete"]
+
+  # Used for MCS serviceimport management
+  - apiGroups: ["multicluster.x-k8s.io"]
+    resources: ["serviceimports"]
+    verbs: ["get", "watch", "list"]
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: istiod-gateway-controller-istio-system
+  labels:
+    app: istiod
+    release: istio
+rules:
+  - apiGroups: ["apps"]
+    verbs: [ "get", "watch", "list", "update", "patch", "create", "delete" ]
+    resources: [ "deployments" ]
+  - apiGroups: [""]
+    verbs: [ "get", "watch", "list", "update", "patch", "create", "delete" ]
+    resources: [ "services" ]
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRoleBinding
@@ -176,6 +202,22 @@ subjects:
     name: istiod
     namespace: istio-system
 ---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: istiod-gateway-controller-istio-system
+  labels:
+    app: istiod
+    release: istio
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: istiod-gateway-controller-istio-system
+subjects:
+- kind: ServiceAccount
+  name: istiod
+  namespace: istio-system
+---
 apiVersion: admissionregistration.k8s.io/v1
 kind: ValidatingWebhookConfiguration
 metadata:
@@ -203,6 +245,8 @@ webhooks:
         apiGroups:
           - security.istio.io
           - networking.istio.io
+          - telemetry.istio.io
+          - extensions.istio.io
         apiVersions:
           - "*"
         resources:
@@ -219,193 +263,93 @@ webhooks:
           operator: In
           values:
           - "default"
-  # Webhook handling default validation
-  - name: validation.istio.io
-    clientConfig:
-      # Should change from base but cannot for API compat
-      service:
-        name: istiod
-        namespace: istio-system
-        path: "/validate"
-      caBundle: ""
-    rules:
-      - operations:
-          - CREATE
-          - UPDATE
-        apiGroups:
-          - security.istio.io
-          - networking.istio.io
-          - telemetry.istio.io
-        apiVersions:
-          - "*"
-        resources:
-          - "*"
-    failurePolicy: Ignore
-    sideEffects: None
-    admissionReviewVersions: ["v1beta1", "v1"]
-    objectSelector:
-      matchExpressions:
-        - key: istio.io/rev
-          operator: DoesNotExist
 ---
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: metadata-exchange-1.10
+  name: stats-filter-1.11
   namespace: istio-control
   labels:
     istio.io/rev: default
-    install.operator.istio.io/owning-resource: unknown
-    operator.istio.io/component: "Pilot"
 spec:
   configPatches:
-    - applyTo: HTTP_FILTER
-      match:
-        context: SIDECAR_INBOUND
-        proxy:
-          proxyVersion: '^1\.10.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
     - applyTo: HTTP_FILTER
       match:
         context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.10.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
-    - applyTo: HTTP_FILTER
-      match:
-        context: GATEWAY
-        proxy:
-          proxyVersion: '^1\.10.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
----
-apiVersion: networking.istio.io/v1alpha3
-kind: EnvoyFilter
-metadata:
-  name: metadata-exchange-1.11
-  namespace: istio-control
-  labels:
-    istio.io/rev: default
-    install.operator.istio.io/owning-resource: unknown
-    operator.istio.io/component: "Pilot"
-spec:
-  configPatches:
-    - applyTo: HTTP_FILTER
-      match:
-        context: SIDECAR_INBOUND
         proxy:
           proxyVersion: '^1\.11.*'
         listener:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_outbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio"
+                    }
                 vm_config:
+                  vm_id: stats_outbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
     - applyTo: HTTP_FILTER
       match:
-        context: SIDECAR_OUTBOUND
+        context: SIDECAR_INBOUND
         proxy:
           proxyVersion: '^1\.11.*'
         listener:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_inbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio",
+                      "disable_host_header_fallback": true,
+                      "metrics": [
+                        {
+                          "dimensions": {
+                            "destination_cluster": "node.metadata['CLUSTER_ID']",
+                            "source_cluster": "downstream_peer.cluster_id"
+                          }
+                        }
+                      ]
+                    }
                 vm_config:
+                  vm_id: stats_inbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
     - applyTo: HTTP_FILTER
       match:
         context: GATEWAY
@@ -415,122 +359,37 @@ spec:
           filterChain:
             filter:
               name: "envoy.filters.network.http_connection_manager"
+              subFilter:
+                name: "envoy.filters.http.router"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
----
-apiVersion: networking.istio.io/v1alpha3
-kind: EnvoyFilter
-metadata:
-  name: metadata-exchange-1.12
-  namespace: istio-control
-  labels:
-    istio.io/rev: default
-    install.operator.istio.io/owning-resource: unknown
-    operator.istio.io/component: "Pilot"
-spec:
-  configPatches:
-    - applyTo: HTTP_FILTER
-      match:
-        context: SIDECAR_INBOUND
-        proxy:
-          proxyVersion: '^1\.12.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
-    - applyTo: HTTP_FILTER
-      match:
-        context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.12.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
-          typed_config:
-            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
-            value:
-              config:
-                configuration:
-                  "@type": "type.googleapis.com/google.protobuf.StringValue"
-                  value: |
-                    {}
-                vm_config:
-                  runtime: envoy.wasm.runtime.null
-                  code:
-                    local:
-                      inline_string: envoy.wasm.metadata_exchange
-    - applyTo: HTTP_FILTER
-      match:
-        context: GATEWAY
-        proxy:
-          proxyVersion: '^1\.12.*'
-        listener:
-          filterChain:
-            filter:
-              name: "envoy.filters.network.http_connection_manager"
-      patch:
-        operation: INSERT_BEFORE
-        value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
             type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
             value:
               config:
+                root_id: stats_outbound
                 configuration:
                   "@type": "type.googleapis.com/google.protobuf.StringValue"
                   value: |
-                    {}
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio",
+                      "disable_host_header_fallback": true
+                    }
                 vm_config:
+                  vm_id: stats_outbound
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
-                      inline_string: envoy.wasm.metadata_exchange
+                      inline_string: envoy.wasm.stats
 ---
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: stats-filter-1.10
+  name: stats-filter-1.12
   namespace: istio-control
   labels:
     istio.io/rev: default
@@ -540,7 +399,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
@@ -574,7 +433,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
@@ -617,7 +476,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
@@ -652,7 +511,7 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: stats-filter-1.11
+  name: stats-filter-1.13
   namespace: istio-control
   labels:
     istio.io/rev: default
@@ -662,7 +521,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -696,7 +555,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -739,7 +598,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -774,7 +633,7 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: stats-filter-1.12
+  name: stats-filter-1.14
   namespace: istio-control
   labels:
     istio.io/rev: default
@@ -784,7 +643,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -818,7 +677,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -861,7 +720,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -896,7 +755,7 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: tcp-metadata-exchange-1.10
+  name: tcp-stats-filter-1.11
   namespace: istio-control
   labels:
     istio.io/rev: default
@@ -906,168 +765,111 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.10.*'
-        listener: {}
+          proxyVersion: '^1\.11.*'
+        listener:
+          filterChain:
+            filter:
+              name: "envoy.filters.network.tcp_proxy"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
+            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
             value:
-              protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.10.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: GATEWAY
-        proxy:
-          proxyVersion: '^1\.10.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
----
-apiVersion: networking.istio.io/v1alpha3
-kind: EnvoyFilter
-metadata:
-  name: tcp-metadata-exchange-1.11
-  namespace: istio-control
-  labels:
-    istio.io/rev: default
-spec:
-  configPatches:
+              config:
+                root_id: stats_inbound
+                configuration:
+                  "@type": "type.googleapis.com/google.protobuf.StringValue"
+                  value: |
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio",
+                      "metrics": [
+                        {
+                          "dimensions": {
+                            "destination_cluster": "node.metadata['CLUSTER_ID']",
+                            "source_cluster": "downstream_peer.cluster_id"
+                          }
+                        }
+                      ]
+                    }
+                vm_config:
+                  vm_id: tcp_stats_inbound
+                  runtime: envoy.wasm.runtime.null
+                  code:
+                    local:
+                      inline_string: "envoy.wasm.stats"
     - applyTo: NETWORK_FILTER
       match:
-        context: SIDECAR_INBOUND
+        context: SIDECAR_OUTBOUND
         proxy:
           proxyVersion: '^1\.11.*'
-        listener: {}
+        listener:
+          filterChain:
+            filter:
+              name: "envoy.filters.network.tcp_proxy"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
+            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
             value:
-              protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.11.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
-    - applyTo: CLUSTER
+              config:
+                root_id: stats_outbound
+                configuration:
+                  "@type": "type.googleapis.com/google.protobuf.StringValue"
+                  value: |
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio"
+                    }
+                vm_config:
+                  vm_id: tcp_stats_outbound
+                  runtime: envoy.wasm.runtime.null
+                  code:
+                    local:
+                      inline_string: "envoy.wasm.stats"
+    - applyTo: NETWORK_FILTER
       match:
         context: GATEWAY
         proxy:
           proxyVersion: '^1\.11.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
----
-apiVersion: networking.istio.io/v1alpha3
-kind: EnvoyFilter
-metadata:
-  name: tcp-metadata-exchange-1.12
-  namespace: istio-control
-  labels:
-    istio.io/rev: default
-spec:
-  configPatches:
-    - applyTo: NETWORK_FILTER
-      match:
-        context: SIDECAR_INBOUND
-        proxy:
-          proxyVersion: '^1\.12.*'
-        listener: {}
+        listener:
+          filterChain:
+            filter:
+              name: "envoy.filters.network.tcp_proxy"
       patch:
         operation: INSERT_BEFORE
         value:
-          name: istio.metadata_exchange
+          name: istio.stats
           typed_config:
             "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-            type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
+            type_url: type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
             value:
-              protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: SIDECAR_OUTBOUND
-        proxy:
-          proxyVersion: '^1\.12.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
-    - applyTo: CLUSTER
-      match:
-        context: GATEWAY
-        proxy:
-          proxyVersion: '^1\.12.*'
-        cluster: {}
-      patch:
-        operation: MERGE
-        value:
-          filters:
-          - name: istio.metadata_exchange
-            typed_config:
-              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
-              type_url: type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange
-              value:
-                protocol: istio-peer-exchange
+              config:
+                root_id: stats_outbound
+                configuration:
+                  "@type": "type.googleapis.com/google.protobuf.StringValue"
+                  value: |
+                    {
+                      "debug": "false",
+                      "stat_prefix": "istio"
+                    }
+                vm_config:
+                  vm_id: tcp_stats_outbound
+                  runtime: envoy.wasm.runtime.null
+                  code:
+                    local:
+                      inline_string: "envoy.wasm.stats"
 ---
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: tcp-stats-filter-1.10
+  name: tcp-stats-filter-1.12
   namespace: istio-control
   labels:
     istio.io/rev: default
@@ -1077,7 +879,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
@@ -1117,7 +919,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
@@ -1149,7 +951,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.10.*'
+          proxyVersion: '^1\.12.*'
         listener:
           filterChain:
             filter:
@@ -1181,7 +983,7 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: tcp-stats-filter-1.11
+  name: tcp-stats-filter-1.13
   namespace: istio-control
   labels:
     istio.io/rev: default
@@ -1191,7 +993,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -1231,7 +1033,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -1263,7 +1065,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.11.*'
+          proxyVersion: '^1\.13.*'
         listener:
           filterChain:
             filter:
@@ -1295,7 +1097,7 @@ spec:
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
-  name: tcp-stats-filter-1.12
+  name: tcp-stats-filter-1.14
   namespace: istio-control
   labels:
     istio.io/rev: default
@@ -1305,7 +1107,7 @@ spec:
       match:
         context: SIDECAR_INBOUND
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -1345,7 +1147,7 @@ spec:
       match:
         context: SIDECAR_OUTBOUND
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -1377,7 +1179,7 @@ spec:
       match:
         context: GATEWAY
         proxy:
-          proxyVersion: '^1\.12.*'
+          proxyVersion: '^1\.14.*'
         listener:
           filterChain:
             filter:
@@ -1449,6 +1251,7 @@ data:
     {
       "global": {
         "caAddress": "",
+        "caName": "",
         "configCluster": false,
         "configValidation": true,
         "defaultNodeSelector": {},
@@ -1499,6 +1302,8 @@ data:
           "holdApplicationUntilProxyStarts": false,
           "image": "proxyv2",
           "includeIPRanges": "*",
+          "includeInboundPorts": "*",
+          "includeOutboundPorts": "",
           "logLevel": "warning",
           "privileged": false,
           "readinessFailureThreshold": 30,
@@ -1596,6 +1401,32 @@ data:
     template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
     templates:
       sidecar: |
+        {{- define "resources"  }}
+          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+              requests:
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+                {{ end }}
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+                {{ end }}
+            {{- end }}
+            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+              limits:
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+                {{ end }}
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+                {{ end }}
+            {{- end }}
+          {{- else }}
+            {{- if .Values.global.proxy.resources }}
+              {{ toYaml .Values.global.proxy.resources | indent 6 }}
+            {{- end }}
+          {{- end }}
+        {{- end }}
         {{- $containers := list }}
         {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
         metadata:
@@ -1615,7 +1446,7 @@ data:
             sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
             {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
             {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
-            traffic.sidecar.istio.io/includeInboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}",
+            {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
             traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
             {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
             traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
@@ -1638,12 +1469,12 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             args:
             - istio-iptables
             - "-p"
-            - "15001"
+            - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
             - "-z"
             - "15006"
             - "-u"
@@ -1655,7 +1486,7 @@ data:
             - "-x"
             - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
             - "-b"
-            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}"
+            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
             - "-d"
           {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
             - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
@@ -1687,30 +1518,7 @@ data:
             {{- end }}
           {{- end }}
             resources:
-          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
-              requests:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
-                {{ end }}
-            {{- end }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-              limits:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
-                {{ end }}
-            {{- end }}
-          {{- else }}
-            {{- if .Values.global.proxy.resources }}
-              {{ toYaml .Values.global.proxy.resources | indent 6 }}
-            {{- end }}
-          {{- end }}
+          {{ template "resources" . }}
             securityContext:
               allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
               privileged: {{ .Values.global.proxy.privileged }}
@@ -1745,10 +1553,11 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
-            resources: {}
+            resources:
+          {{ template "resources" . }}
             securityContext:
               allowPrivilegeEscalation: true
               capabilities:
@@ -1767,7 +1576,7 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             ports:
             - containerPort: 15090
@@ -1908,6 +1717,20 @@ data:
               failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
             {{ end -}}
             securityContext:
+              {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+              allowPrivilegeEscalation: true
+              capabilities:
+                add:
+                - NET_ADMIN
+                drop:
+                - ALL
+              privileged: true
+              readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+              runAsGroup: 1337
+              fsGroup: 1337
+              runAsNonRoot: false
+              runAsUser: 0
+              {{- else }}
               allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
               capabilities:
                 {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
@@ -1932,32 +1755,15 @@ data:
               runAsNonRoot: true
               runAsUser: 1337
               {{- end }}
+              {{- end }}
             resources:
-          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
-              requests:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
-                {{ end }}
-            {{- end }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-              limits:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
-                {{ end }}
-            {{- end }}
-          {{- else }}
-            {{- if .Values.global.proxy.resources }}
-              {{ toYaml .Values.global.proxy.resources | indent 6 }}
-            {{- end }}
-          {{- end }}
+          {{ template "resources" . }}
             volumeMounts:
+            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+            - name: gke-workload-certificate
+              mountPath: /var/run/secrets/workload-spiffe-credentials
+              readOnly: true
+            {{- end }}
             {{- if eq .Values.global.pilotCertProvider "istiod" }}
             - mountPath: /var/run/secrets/istio
               name: istiod-ca-cert
@@ -1995,6 +1801,11 @@ data:
               {{ end }}
               {{- end }}
           volumes:
+          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            csi:
+              driver: workloadcertificates.security.cloud.google.com
+          {{- end }}
           {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
           - name: custom-bootstrap-volume
             configMap:
@@ -2082,7 +1893,7 @@ data:
           {{- if contains "/" .Values.global.proxy.image }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             ports:
             - containerPort: 15090
@@ -2196,6 +2007,11 @@ data:
               timeoutSeconds: 3
               failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
             volumeMounts:
+            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+            - name: gke-workload-certificate
+              mountPath: /var/run/secrets/workload-spiffe-credentials
+              readOnly: true
+            {{- end }}
             {{- if eq .Values.global.pilotCertProvider "istiod" }}
             - mountPath: /var/run/secrets/istio
               name: istiod-ca-cert
@@ -2218,6 +2034,11 @@ data:
             - name: istio-podinfo
               mountPath: /etc/istio/pod
           volumes:
+          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            csi:
+              driver: workloadcertificates.security.cloud.google.com
+          {{- end }}
           # SDS channel between istioagent and Envoy
           - emptyDir:
               medium: Memory
@@ -2269,6 +2090,8 @@ data:
             fsGroup: 1337
           {{- end }}
       grpc-simple: |
+        metadata:
+          sidecar.istio.io/rewriteAppHTTPProbers: "false"
         spec:
           initContainers:
             - name: grpc-bootstrap-init
@@ -2289,16 +2112,20 @@ data:
                   valueFrom:
                     fieldRef:
                       fieldPath: metadata.namespace
+                - name: ISTIO_NAMESPACE
+                  value: |
+                     {{ .Values.global.istioNamespace }}
               command:
                 - sh
                 - "-c"
                 - |-
                   NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+                  SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
                   echo '
                   {
                     "xds_servers": [
                       {
-                        "server_uri": "dns:///istiod.istio-system.svc:15010",
+                        "server_uri": "'${SERVER_URI}'",
                         "channel_creds": [{"type": "insecure"}],
                         "server_features" : ["xds_v3"]
                       }
@@ -2331,11 +2158,15 @@ data:
         {{- $containers := list }}
         {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
         metadata:
+          labels:
+            service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+            service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
           annotations: {
             {{- if eq (len $containers) 1 }}
             kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
             kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
             {{ end }}
+            sidecar.istio.io/rewriteAppHTTPProbers: "false",
           }
         spec:
           containers:
@@ -2343,10 +2174,10 @@ data:
           {{ if not (eq $container.Name "istio-proxy") }}
           - name: {{ $container.Name }}
             env:
-            - name: "GRPC_XDS_BOOTSTRAP"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
             - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
+              value: "true"
+            - name: "GRPC_XDS_BOOTSTRAP"
+              value: "/etc/istio/proxy/grpc-bootstrap.json"
             volumeMounts:
             - mountPath: /var/lib/istio/data
               name: istio-data
@@ -2359,7 +2190,7 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             args:
             - proxy
@@ -2374,8 +2205,6 @@ data:
             - --log_as_json
           {{- end }}
             env:
-            - name: "GRPC_XDS_BOOTSTRAP"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
             - name: ISTIO_META_GENERATOR
               value: grpc
             - name: OUTPUT_CERTS
@@ -2798,6 +2627,8 @@ spec:
               cpu: 500m
               memory: 2048Mi
           securityContext:
+            allowPrivilegeEscalation: false
+            readOnlyRootFilesystem: true
             runAsUser: 1337
             runAsGroup: 1337
             runAsNonRoot: true
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/pilot_k8s_settings.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/pilot_k8s_settings.golden.yaml
index 8945fbe8e7..860b0e1211 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/pilot_k8s_settings.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/pilot_k8s_settings.golden.yaml
@@ -102,9 +102,11 @@ spec:
             cpu: 500m
             memory: 999Mi
         securityContext:
+          allowPrivilegeEscalation: false
           capabilities:
             drop:
             - ALL
+          readOnlyRootFilesystem: true
           runAsGroup: 1337
           runAsNonRoot: true
           runAsUser: 1337
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/pilot_override_values.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/pilot_override_values.golden.yaml
index 31c64f18ad..8771fce947 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/pilot_override_values.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/pilot_override_values.golden.yaml
@@ -98,9 +98,11 @@ spec:
             cpu: 222m
             memory: 333Mi
         securityContext:
+          allowPrivilegeEscalation: false
           capabilities:
             drop:
             - ALL
+          readOnlyRootFilesystem: true
           runAsGroup: 1337
           runAsNonRoot: true
           runAsUser: 1337
diff --git a/operator/cmd/mesh/testdata/manifest-generate/output/sidecar_template.golden.yaml b/operator/cmd/mesh/testdata/manifest-generate/output/sidecar_template.golden.yaml
index c0ed6cb9aa..113e097692 100644
--- a/operator/cmd/mesh/testdata/manifest-generate/output/sidecar_template.golden.yaml
+++ b/operator/cmd/mesh/testdata/manifest-generate/output/sidecar_template.golden.yaml
@@ -14,6 +14,7 @@ data:
     {
       "global": {
         "caAddress": "",
+        "caName": "",
         "configCluster": false,
         "configValidation": true,
         "defaultNodeSelector": {},
@@ -64,6 +65,8 @@ data:
           "holdApplicationUntilProxyStarts": false,
           "image": "proxyv2",
           "includeIPRanges": "*",
+          "includeInboundPorts": "*",
+          "includeOutboundPorts": "",
           "logLevel": "warning",
           "privileged": false,
           "readinessFailureThreshold": 30,
@@ -168,6 +171,32 @@ data:
     template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
     templates:
       sidecar: |
+        {{- define "resources"  }}
+          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+              requests:
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+                {{ end }}
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+                {{ end }}
+            {{- end }}
+            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+              limits:
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+                {{ end }}
+                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+                {{ end }}
+            {{- end }}
+          {{- else }}
+            {{- if .Values.global.proxy.resources }}
+              {{ toYaml .Values.global.proxy.resources | indent 6 }}
+            {{- end }}
+          {{- end }}
+        {{- end }}
         {{- $containers := list }}
         {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
         metadata:
@@ -187,7 +216,7 @@ data:
             sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
             {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
             {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
-            traffic.sidecar.istio.io/includeInboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}",
+            {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
             traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
             {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
             traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
@@ -210,12 +239,12 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             args:
             - istio-iptables
             - "-p"
-            - "15001"
+            - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
             - "-z"
             - "15006"
             - "-u"
@@ -227,7 +256,7 @@ data:
             - "-x"
             - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
             - "-b"
-            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}"
+            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
             - "-d"
           {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
             - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
@@ -259,30 +288,7 @@ data:
             {{- end }}
           {{- end }}
             resources:
-          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
-              requests:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
-                {{ end }}
-            {{- end }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-              limits:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
-                {{ end }}
-            {{- end }}
-          {{- else }}
-            {{- if .Values.global.proxy.resources }}
-              {{ toYaml .Values.global.proxy.resources | indent 6 }}
-            {{- end }}
-          {{- end }}
+          {{ template "resources" . }}
             securityContext:
               allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
               privileged: {{ .Values.global.proxy.privileged }}
@@ -317,10 +323,11 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
-            resources: {}
+            resources:
+          {{ template "resources" . }}
             securityContext:
               allowPrivilegeEscalation: true
               capabilities:
@@ -339,7 +346,7 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             ports:
             - containerPort: 15090
@@ -480,6 +487,20 @@ data:
               failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
             {{ end -}}
             securityContext:
+              {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+              allowPrivilegeEscalation: true
+              capabilities:
+                add:
+                - NET_ADMIN
+                drop:
+                - ALL
+              privileged: true
+              readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+              runAsGroup: 1337
+              fsGroup: 1337
+              runAsNonRoot: false
+              runAsUser: 0
+              {{- else }}
               allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
               capabilities:
                 {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
@@ -504,32 +525,15 @@ data:
               runAsNonRoot: true
               runAsUser: 1337
               {{- end }}
+              {{- end }}
             resources:
-          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
-              requests:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
-                {{ end }}
-            {{- end }}
-            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
-              limits:
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
-                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
-                {{ end }}
-                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
-                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
-                {{ end }}
-            {{- end }}
-          {{- else }}
-            {{- if .Values.global.proxy.resources }}
-              {{ toYaml .Values.global.proxy.resources | indent 6 }}
-            {{- end }}
-          {{- end }}
+          {{ template "resources" . }}
             volumeMounts:
+            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+            - name: gke-workload-certificate
+              mountPath: /var/run/secrets/workload-spiffe-credentials
+              readOnly: true
+            {{- end }}
             {{- if eq .Values.global.pilotCertProvider "istiod" }}
             - mountPath: /var/run/secrets/istio
               name: istiod-ca-cert
@@ -567,6 +571,11 @@ data:
               {{ end }}
               {{- end }}
           volumes:
+          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            csi:
+              driver: workloadcertificates.security.cloud.google.com
+          {{- end }}
           {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
           - name: custom-bootstrap-volume
             configMap:
@@ -654,7 +663,7 @@ data:
           {{- if contains "/" .Values.global.proxy.image }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             ports:
             - containerPort: 15090
@@ -768,6 +777,11 @@ data:
               timeoutSeconds: 3
               failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
             volumeMounts:
+            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+            - name: gke-workload-certificate
+              mountPath: /var/run/secrets/workload-spiffe-credentials
+              readOnly: true
+            {{- end }}
             {{- if eq .Values.global.pilotCertProvider "istiod" }}
             - mountPath: /var/run/secrets/istio
               name: istiod-ca-cert
@@ -790,6 +804,11 @@ data:
             - name: istio-podinfo
               mountPath: /etc/istio/pod
           volumes:
+          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            csi:
+              driver: workloadcertificates.security.cloud.google.com
+          {{- end }}
           # SDS channel between istioagent and Envoy
           - emptyDir:
               medium: Memory
@@ -841,6 +860,8 @@ data:
             fsGroup: 1337
           {{- end }}
       grpc-simple: |
+        metadata:
+          sidecar.istio.io/rewriteAppHTTPProbers: "false"
         spec:
           initContainers:
             - name: grpc-bootstrap-init
@@ -861,16 +882,20 @@ data:
                   valueFrom:
                     fieldRef:
                       fieldPath: metadata.namespace
+                - name: ISTIO_NAMESPACE
+                  value: |
+                     {{ .Values.global.istioNamespace }}
               command:
                 - sh
                 - "-c"
                 - |-
                   NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+                  SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
                   echo '
                   {
                     "xds_servers": [
                       {
-                        "server_uri": "dns:///istiod.istio-system.svc:15010",
+                        "server_uri": "'${SERVER_URI}'",
                         "channel_creds": [{"type": "insecure"}],
                         "server_features" : ["xds_v3"]
                       }
@@ -903,11 +928,15 @@ data:
         {{- $containers := list }}
         {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
         metadata:
+          labels:
+            service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+            service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
           annotations: {
             {{- if eq (len $containers) 1 }}
             kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
             kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
             {{ end }}
+            sidecar.istio.io/rewriteAppHTTPProbers: "false",
           }
         spec:
           containers:
@@ -915,10 +944,10 @@ data:
           {{ if not (eq $container.Name "istio-proxy") }}
           - name: {{ $container.Name }}
             env:
-            - name: "GRPC_XDS_BOOTSTRAP"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
             - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
+              value: "true"
+            - name: "GRPC_XDS_BOOTSTRAP"
+              value: "/etc/istio/proxy/grpc-bootstrap.json"
             volumeMounts:
             - mountPath: /var/lib/istio/data
               name: istio-data
@@ -931,7 +960,7 @@ data:
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
           {{- else }}
-            image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
+            image: "{{ .ProxyImage }}"
           {{- end }}
             args:
             - proxy
@@ -946,8 +975,6 @@ data:
             - --log_as_json
           {{- end }}
             env:
-            - name: "GRPC_XDS_BOOTSTRAP"
-              value: "/var/lib/istio/data/grpc-bootstrap.json"
             - name: ISTIO_META_GENERATOR
               value: grpc
             - name: OUTPUT_CERTS
diff --git a/operator/cmd/mesh/testdata/operator/output/operator-dump.json b/operator/cmd/mesh/testdata/operator/output/operator-dump.json
index 20ff168553..156398fdbb 100644
--- a/operator/cmd/mesh/testdata/operator/output/operator-dump.json
+++ b/operator/cmd/mesh/testdata/operator/output/operator-dump.json
@@ -173,6 +173,7 @@
                 "namespaces",
                 "pods",
                 "pods/proxy",
+                "pods/portforward",
                 "persistentvolumeclaims",
                 "secrets",
                 "services",
diff --git a/operator/cmd/mesh/testdata/operator/output/operator-dump.yaml b/operator/cmd/mesh/testdata/operator/output/operator-dump.yaml
index df9509ec3c..4046b15dfb 100644
--- a/operator/cmd/mesh/testdata/operator/output/operator-dump.yaml
+++ b/operator/cmd/mesh/testdata/operator/output/operator-dump.yaml
@@ -106,6 +106,7 @@ rules:
   - namespaces
   - pods
   - pods/proxy
+  - pods/portforward
   - persistentvolumeclaims
   - secrets
   - services
diff --git a/operator/cmd/mesh/testdata/operator/output/operator-init.yaml b/operator/cmd/mesh/testdata/operator/output/operator-init.yaml
index 2dccda28c2..fbedf817cf 100644
--- a/operator/cmd/mesh/testdata/operator/output/operator-init.yaml
+++ b/operator/cmd/mesh/testdata/operator/output/operator-init.yaml
@@ -106,6 +106,7 @@ rules:
   - namespaces
   - pods
   - pods/proxy
+  - pods/portforward
   - persistentvolumeclaims
   - secrets
   - services
diff --git a/operator/cmd/mesh/testdata/profile-dump/output/all_off.txt b/operator/cmd/mesh/testdata/profile-dump/output/all_off.txt
index e24739d5e1..58ac90f3f3 100644
--- a/operator/cmd/mesh/testdata/profile-dump/output/all_off.txt
+++ b/operator/cmd/mesh/testdata/profile-dump/output/all_off.txt
@@ -12,6 +12,7 @@ profile="default"
 tag="latest"
 values.base.enableCRDTemplates=false
 values.base.validationURL=""
+values.defaultRevision=""
 values.gateways.istio-egressgateway.autoscaleEnabled=true
 values.gateways.istio-egressgateway.name="istio-egressgateway"
 values.gateways.istio-egressgateway.secretVolumes[0].mountPath="/etc/istio/egressgateway-certs"
diff --git a/operator/cmd/mesh/testdata/profile-dump/output/all_off.yaml b/operator/cmd/mesh/testdata/profile-dump/output/all_off.yaml
index 0d46f798d0..847566422c 100644
--- a/operator/cmd/mesh/testdata/profile-dump/output/all_off.yaml
+++ b/operator/cmd/mesh/testdata/profile-dump/output/all_off.yaml
@@ -28,6 +28,7 @@ spec:
     base:
       enableCRDTemplates: false
       validationURL: ""
+    defaultRevision: ""
     gateways:
       istio-egressgateway:
         autoscaleEnabled: true
@@ -41,7 +42,6 @@ spec:
           name: egressgateway-ca-certs
           secretName: istio-egressgateway-ca-certs
         type: ClusterIP
-        zvpn: {}
       istio-ingressgateway:
         autoscaleEnabled: true
         env: {}
@@ -54,7 +54,6 @@ spec:
           name: ingressgateway-ca-certs
           secretName: istio-ingressgateway-ca-certs
         type: LoadBalancer
-        zvpn: {}
     global:
       configValidation: true
       defaultNodeSelector: {}
@@ -142,6 +141,7 @@ spec:
       image: pilot
       keepaliveMaxServerConnectionAge: 30m
       nodeSelector: {}
+      podLabels: {}
       replicaCount: 1
       traceSampling: 1
     telemetry:
diff --git a/operator/cmd/mesh/uninstall.go b/operator/cmd/mesh/uninstall.go
index a1cf388ba8..0e5a646e84 100644
--- a/operator/cmd/mesh/uninstall.go
+++ b/operator/cmd/mesh/uninstall.go
@@ -165,7 +165,7 @@ func uninstall(cmd *cobra.Command, rootArgs *RootArgs, uiArgs *uninstallArgs, lo
 		return nil
 	}
 	manifestMap, iop, err := manifest.GenManifests([]string{uiArgs.filename},
-		applyFlagAliases(uiArgs.set, uiArgs.manifestsPath, uiArgs.revision), uiArgs.force, kubeClient, l)
+		applyFlagAliases(uiArgs.set, uiArgs.manifestsPath, uiArgs.revision), uiArgs.force, nil, kubeClient, l)
 	if err != nil {
 		return err
 	}
diff --git a/operator/pkg/component/component.go b/operator/pkg/component/component.go
index ff2ae248ea..b743e6880c 100644
--- a/operator/pkg/component/component.go
+++ b/operator/pkg/component/component.go
@@ -31,6 +31,7 @@
 	"istio.io/istio/operator/pkg/patch"
 	"istio.io/istio/operator/pkg/tpath"
 	"istio.io/istio/operator/pkg/translate"
+	"istio.io/istio/pilot/pkg/util/sets"
 	"istio.io/pkg/log"
 )
 
@@ -50,6 +51,8 @@ type Options struct {
 	Translator *translate.Translator
 	// Namespace is the namespace for this component.
 	Namespace string
+	// Filter is the filenames to render
+	Filter sets.Set
 }
 
 // IstioComponent defines the interface for a component.
@@ -415,7 +418,9 @@ func renderManifest(c IstioComponent, cf *CommonComponentFields) (string, error)
 
 	scope.Debugf("Merged values:\n%s\n", mergedYAML)
 
-	my, err := cf.renderer.RenderManifest(mergedYAML)
+	my, err := cf.renderer.RenderManifestFiltered(mergedYAML, func(s string) bool {
+		return len(cf.Filter) == 0 || cf.Filter.Contains(s)
+	})
 	if err != nil {
 		log.Errorf("Error rendering the manifest: %s", err)
 		metrics.CountManifestRenderError(c.ComponentName(), metrics.HelmChartRenderError)
diff --git a/operator/pkg/controlplane/control_plane.go b/operator/pkg/controlplane/control_plane.go
index 24fd52fa90..d9a3a0aed8 100644
--- a/operator/pkg/controlplane/control_plane.go
+++ b/operator/pkg/controlplane/control_plane.go
@@ -24,6 +24,7 @@
 	"istio.io/istio/operator/pkg/name"
 	"istio.io/istio/operator/pkg/translate"
 	"istio.io/istio/operator/pkg/util"
+	"istio.io/istio/pilot/pkg/util/sets"
 )
 
 // IstioControlPlane is an installation of an Istio control plane.
@@ -34,11 +35,12 @@ type IstioControlPlane struct {
 }
 
 // NewIstioControlPlane creates a new IstioControlPlane and returns a pointer to it.
-func NewIstioControlPlane(installSpec *v1alpha1.IstioOperatorSpec, translator *translate.Translator) (*IstioControlPlane, error) {
+func NewIstioControlPlane(installSpec *v1alpha1.IstioOperatorSpec, translator *translate.Translator, filter []string) (*IstioControlPlane, error) {
 	out := &IstioControlPlane{}
 	opts := &component.Options{
 		InstallSpec: installSpec,
 		Translator:  translator,
+		Filter:      sets.NewSet(filter...),
 	}
 	for _, c := range name.AllCoreComponentNames {
 		o := *opts
diff --git a/operator/pkg/controlplane/control_plane_test.go b/operator/pkg/controlplane/control_plane_test.go
index 3949297310..ae26d5f2db 100644
--- a/operator/pkg/controlplane/control_plane_test.go
+++ b/operator/pkg/controlplane/control_plane_test.go
@@ -115,7 +115,7 @@ func TestNewIstioOperator(t *testing.T) {
 	}
 	for _, tt := range tests {
 		t.Run(tt.desc, func(t *testing.T) {
-			gotOperator, err := NewIstioControlPlane(tt.inInstallSpec, tt.inTranslator)
+			gotOperator, err := NewIstioControlPlane(tt.inInstallSpec, tt.inTranslator, nil)
 			if ((err != nil && tt.wantErr == nil) || (err == nil && tt.wantErr != nil)) || !gotOperator.componentsEqual(tt.wantIstioOperator.components) {
 				t.Errorf("%s: wanted components & err %+v %v, got components & err %+v %v",
 					tt.desc, tt.wantIstioOperator.components, tt.wantErr, gotOperator.components, err)
diff --git a/operator/pkg/helmreconciler/reconciler.go b/operator/pkg/helmreconciler/reconciler.go
index b925585115..f3b7df6ba1 100644
--- a/operator/pkg/helmreconciler/reconciler.go
+++ b/operator/pkg/helmreconciler/reconciler.go
@@ -83,6 +83,8 @@ type Options struct {
 	ProgressLog *progress.Log
 	// Force ignores validation errors
 	Force bool
+	// SkipPrune will skip pruning
+	SkipPrune bool
 }
 
 var defaultOptions = &Options{
@@ -159,9 +161,12 @@ func (h *HelmReconciler) Reconcile() (*v1alpha1.InstallStatus, error) {
 	}
 	status := h.processRecursive(manifestMap)
 
-	h.opts.ProgressLog.SetState(progress.StatePruning)
-	pruneErr := h.Prune(manifestMap, false)
-	h.reportPrunedObjectKind()
+	var pruneErr error
+	if !h.opts.SkipPrune {
+		h.opts.ProgressLog.SetState(progress.StatePruning)
+		pruneErr = h.Prune(manifestMap, false)
+		h.reportPrunedObjectKind()
+	}
 	return status, pruneErr
 }
 
diff --git a/operator/pkg/helmreconciler/render.go b/operator/pkg/helmreconciler/render.go
index de93b7e245..58eecdee84 100644
--- a/operator/pkg/helmreconciler/render.go
+++ b/operator/pkg/helmreconciler/render.go
@@ -35,7 +35,7 @@ func (h *HelmReconciler) RenderCharts() (name.ManifestMap, error) {
 
 	t := translate.NewTranslator()
 
-	cp, err := controlplane.NewIstioControlPlane(iopSpec, t)
+	cp, err := controlplane.NewIstioControlPlane(iopSpec, t, nil)
 	if err != nil {
 		return nil, err
 	}
diff --git a/operator/pkg/manifest/shared.go b/operator/pkg/manifest/shared.go
index ebb6f59af0..bc2be5634d 100644
--- a/operator/pkg/manifest/shared.go
+++ b/operator/pkg/manifest/shared.go
@@ -48,7 +48,7 @@
 // representation of path-values passed through the --set flag.
 // If force is set, validation errors will not cause processing to abort but will result in warnings going to the
 // supplied logger.
-func GenManifests(inFilename []string, setFlags []string, force bool,
+func GenManifests(inFilename []string, setFlags []string, force bool, filter []string,
 	client kube.Client, l clog.Logger) (name.ManifestMap, *iopv1alpha1.IstioOperator, error) {
 	mergedYAML, _, err := GenerateConfig(inFilename, setFlags, force, client, l)
 	if err != nil {
@@ -61,7 +61,7 @@ func GenManifests(inFilename []string, setFlags []string, force bool,
 
 	t := translate.NewTranslator()
 
-	cp, err := controlplane.NewIstioControlPlane(mergedIOPS.Spec, t)
+	cp, err := controlplane.NewIstioControlPlane(mergedIOPS.Spec, t, filter)
 	if err != nil {
 		return nil, nil, err
 	}
diff --git a/operator/pkg/translate/translate.go b/operator/pkg/translate/translate.go
index 0f27079e39..06007abef1 100644
--- a/operator/pkg/translate/translate.go
+++ b/operator/pkg/translate/translate.go
@@ -174,19 +174,13 @@ func NewTranslator() *Translator {
 
 // OverlayK8sSettings overlays k8s settings from iop over the manifest objects, based on t's translation mappings.
 func (t *Translator) OverlayK8sSettings(yml string, iop *v1alpha1.IstioOperatorSpec, componentName name.ComponentName,
-	resourceName string, index int) (string, error) {
-	objects, err := object.ParseK8sObjectsFromYAMLManifest(yml)
-	if err != nil {
-		return "", err
-	}
-	if scope.DebugEnabled() {
-		scope.Debugf("Manifest contains the following objects:")
-		for _, o := range objects {
-			scope.Debugf("%s", o.HashNameKind())
-		}
-	}
+	resourceName string, index int) (string, error,
+) {
 	// om is a map of kind:name string to Object ptr.
-	om := objects.ToNameKindMap()
+	// This is lazy loaded to avoid parsing when there are no overlays
+	var om map[string]*object.K8sObject
+	var objects object.K8sObjects
+
 	for inPath, v := range t.KubernetesMapping {
 		inPath, err := renderFeatureComponentPathTemplate(inPath, componentName)
 		if err != nil {
@@ -240,6 +234,22 @@ func (t *Translator) OverlayK8sSettings(yml string, iop *v1alpha1.IstioOperatorS
 		if !util.IsKVPathElement(pe) {
 			return "", fmt.Errorf("path %s has an unexpected first element %s in OverlayK8sSettings", path, pe)
 		}
+
+		// We need to apply overlay, lazy load om
+		if om == nil {
+			objects, err = object.ParseK8sObjectsFromYAMLManifest(yml)
+			if err != nil {
+				return "", err
+			}
+			if scope.DebugEnabled() {
+				scope.Debugf("Manifest contains the following objects:")
+				for _, o := range objects {
+					scope.Debugf("%s", o.HashNameKind())
+				}
+			}
+			om = objects.ToNameKindMap()
+		}
+
 		// After brackets are removed, the remaining "kind:name" is the same format as the keys in om.
 		pe, _ = util.RemoveBrackets(pe)
 		oo, ok := om[pe]
@@ -270,7 +280,10 @@ func (t *Translator) OverlayK8sSettings(yml string, iop *v1alpha1.IstioOperatorS
 		*(om[pe]) = *mergedObj
 	}
 
-	return objects.YAMLManifest()
+	if objects != nil {
+		return objects.YAMLManifest()
+	}
+	return yml, nil
 }
 
 func (t *Translator) fixMergedObjectWithCustomServicePortOverlay(oo *object.K8sObject,
@@ -461,8 +474,10 @@ func (t *Translator) TranslateHelmValues(iop *v1alpha1.IstioOperatorSpec, compon
 		return "", err
 	}
 
-	scope.Debugf("Values from IstioOperatorSpec.Values:\n%s", util.ToYAML(globalVals))
-	scope.Debugf("Values from IstioOperatorSpec.UnvalidatedValues:\n%s", util.ToYAML(globalUnvalidatedVals))
+	if scope.DebugEnabled() {
+		scope.Debugf("Values from IstioOperatorSpec.Values:\n%s", util.ToYAML(globalVals))
+		scope.Debugf("Values from IstioOperatorSpec.UnvalidatedValues:\n%s", util.ToYAML(globalUnvalidatedVals))
+	}
 
 	mergedVals, err := util.OverlayTrees(apiVals, globalVals)
 	if err != nil {
diff --git a/operator/pkg/util/yaml.go b/operator/pkg/util/yaml.go
index c3da5718e8..8bf7b60c45 100644
--- a/operator/pkg/util/yaml.go
+++ b/operator/pkg/util/yaml.go
@@ -86,6 +86,17 @@ func UnmarshalWithJSONPB(y string, out proto.Message, allowUnknownField bool) er
 
 // OverlayTrees performs a sequential JSON strategic of overlays over base.
 func OverlayTrees(base map[string]interface{}, overlays ...map[string]interface{}) (map[string]interface{}, error) {
+	needsOverlay := false
+	for _, o := range overlays {
+		if len(o) > 0 {
+			needsOverlay = true
+			break
+		}
+	}
+	if !needsOverlay {
+		// Avoid expensive overlay if possible
+		return base, nil
+	}
 	bby, err := yaml.Marshal(base)
 	if err != nil {
 		return nil, err
diff --git a/operator/pkg/util/yaml_test.go b/operator/pkg/util/yaml_test.go
index d17ce0ca53..aceb69323a 100644
--- a/operator/pkg/util/yaml_test.go
+++ b/operator/pkg/util/yaml_test.go
@@ -146,15 +146,6 @@ func TestOverlayTrees(t *testing.T) {
 			expectedOverlay: map[string]interface{}{},
 			expectedErr:     nil,
 		},
-		{
-			desc: "expected-err",
-			inBase: map[string]interface{}{
-				"foo": nil,
-			},
-			inOverlays:      nil,
-			expectedOverlay: nil,
-			expectedErr:     errors.New("json merge error (Invalid JSON Patch) for base object"),
-		},
 	}
 	for _, tt := range tests {
 		t.Run(tt.desc, func(t *testing.T) {
diff --git a/pilot/pkg/bootstrap/server.go b/pilot/pkg/bootstrap/server.go
index 288e53474e..81f9601b23 100644
--- a/pilot/pkg/bootstrap/server.go
+++ b/pilot/pkg/bootstrap/server.go
@@ -301,7 +301,7 @@ func NewServer(args *PilotArgs, initFuncs ...func(*Server)) (*Server, error) {
 
 	whc := func() map[string]string {
 		if wh != nil {
-			return wh.Config.Templates
+			return wh.Config.RawTemplates
 		}
 		return map[string]string{}
 	}
diff --git a/pkg/kube/inject/inject.go b/pkg/kube/inject/inject.go
index 42de57dc21..c92be7c302 100644
--- a/pkg/kube/inject/inject.go
+++ b/pkg/kube/inject/inject.go
@@ -29,7 +29,6 @@
 
 	"github.com/Masterminds/sprig/v3"
 	jsonpatch "github.com/evanphx/json-patch/v5"
-	"github.com/hashicorp/go-multierror"
 	appsv1 "k8s.io/api/apps/v1"
 	batch "k8s.io/api/batch/v1"
 	corev1 "k8s.io/api/core/v1"
@@ -47,7 +46,6 @@
 	proxyConfig "istio.io/api/networking/v1beta1"
 	opconfig "istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/pkg/config/mesh"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
 	"istio.io/pkg/log"
 )
 
@@ -111,8 +109,9 @@ type SidecarTemplateData struct {
 }
 
 type (
-	Template  *corev1.Pod
-	Templates map[string]string
+	Template     *corev1.Pod
+	RawTemplates map[string]string
+	Templates    map[string]*template.Template
 )
 
 type Injector interface {
@@ -128,9 +127,9 @@ type Config struct {
 	// DefaultTemplates defines the default template to use for pods that do not explicitly specify a template
 	DefaultTemplates []string `json:"defaultTemplates"`
 
-	// Templates defines a set of templates to be used. The specified template will be run, provided with
+	// RawTemplates defines a set of templates to be used. The specified template will be run, provided with
 	// SidecarTemplateData, and merged with the original pod spec using a strategic merge patch.
-	Templates Templates `json:"templates"`
+	RawTemplates RawTemplates `json:"templates"`
 
 	// Aliases defines a translation of a name to inject template. For example, `sidecar: [proxy,init]` could allow
 	// referencing two templates, "proxy" and "init" by a single name, "sidecar".
@@ -151,6 +150,9 @@ type Config struct {
 	// InjectedAnnotations are additional annotations that will be added to the pod spec after injection
 	// This is primarily to support PSP annotations.
 	InjectedAnnotations map[string]string `json:"injectedAnnotations"`
+
+	// Templates is a pre-parsed copy of RawTemplates
+	Templates Templates `json:"-"`
 }
 
 const (
@@ -163,17 +165,24 @@ func UnmarshalConfig(yml []byte) (Config, error) {
 	if err := yaml.Unmarshal(yml, &injectConfig); err != nil {
 		return injectConfig, fmt.Errorf("failed to unmarshal injection template: %v", err)
 	}
-	if injectConfig.Templates == nil {
-		injectConfig.Templates = make(map[string]string)
+	if injectConfig.RawTemplates == nil {
+		injectConfig.RawTemplates = make(map[string]string)
 	}
 	if len(injectConfig.DefaultTemplates) == 0 {
 		injectConfig.DefaultTemplates = []string{SidecarTemplateName}
 	}
-	if len(injectConfig.Templates) == 0 {
+	if len(injectConfig.RawTemplates) == 0 {
 		log.Warnf("injection templates are empty." +
 			" This may be caused by using an injection template from an older version of Istio." +
 			" Please ensure the template is correct; mismatch template versions can lead to unexpected results, including pods not being injected.")
 	}
+
+	var err error
+	injectConfig.Templates, err = ParseTemplates(injectConfig.RawTemplates)
+	if err != nil {
+		return injectConfig, err
+	}
+
 	return injectConfig, nil
 }
 
@@ -359,15 +368,9 @@ func RunTemplate(params InjectionParameters) (mergedPod *corev1.Pod, templatePod
 		return nil, nil, err
 	}
 
-	valuesStruct := &opconfig.Values{}
-	if err := gogoprotomarshal.ApplyYAML(params.valuesConfig, valuesStruct); err != nil {
-		log.Infof("Failed to parse values config: %v [%v]\n", err, params.valuesConfig)
-		return nil, nil, multierror.Prefix(err, "could not parse configuration values:")
-	}
-
-	cluster := valuesStruct.GetGlobal().GetMultiCluster().GetClusterName()
+	cluster := params.valuesConfig.asStruct.GetGlobal().GetMultiCluster().GetClusterName()
 	// TODO allow overriding the values.global network in injection with the system namespace label
-	network := valuesStruct.GetGlobal().GetNetwork()
+	network := params.valuesConfig.asStruct.GetGlobal().GetNetwork()
 	// params may be set from webhook URL, take priority over values yaml
 	if params.proxyEnvs["ISTIO_META_CLUSTER_ID"] != "" {
 		cluster = params.proxyEnvs["ISTIO_META_CLUSTER_ID"]
@@ -388,12 +391,6 @@ func RunTemplate(params InjectionParameters) (mergedPod *corev1.Pod, templatePod
 		params.proxyEnvs["ISTIO_META_NETWORK"] = network
 	}
 
-	values := map[string]interface{}{}
-	if err := yaml.Unmarshal([]byte(params.valuesConfig), &values); err != nil {
-		log.Infof("Failed to parse values config: %v [%v]\n", err, params.valuesConfig)
-		return nil, nil, multierror.Prefix(err, "could not parse configuration values:")
-	}
-
 	strippedPod, err := reinsertOverrides(stripPod(params))
 	if err != nil {
 		return nil, nil, err
@@ -406,46 +403,30 @@ func RunTemplate(params InjectionParameters) (mergedPod *corev1.Pod, templatePod
 		Spec:                 strippedPod.Spec,
 		ProxyConfig:          params.proxyConfig,
 		MeshConfig:           meshConfig,
-		Values:               values,
+		Values:               params.valuesConfig.asMap,
 		Revision:             params.revision,
-		EstimatedConcurrency: estimateConcurrency(params.proxyConfig, metadata.Annotations, valuesStruct),
-		ProxyImage:           ProxyImage(valuesStruct, params.proxyConfig.Image, strippedPod.Annotations),
-	}
-	funcMap := CreateInjectionFuncmap()
-
-	// Need to use FuncMap and SidecarTemplateData context
-	funcMap["render"] = func(template string) string {
-		bbuf, err := parseTemplate(template, funcMap, data)
-		if err != nil {
-			return ""
-		}
-
-		return bbuf.String()
+		EstimatedConcurrency: estimateConcurrency(params.proxyConfig, metadata.Annotations, params.valuesConfig.asStruct),
+		ProxyImage:           ProxyImage(params.valuesConfig.asStruct, params.proxyConfig.Image, strippedPod.Annotations),
 	}
 
 	mergedPod = params.pod
 	templatePod = &corev1.Pod{}
 	for _, templateName := range selectTemplates(params) {
-		templateYAML, f := params.templates[templateName]
+		parsedTemplate, f := params.templates[templateName]
 		if !f {
 			return nil, nil, fmt.Errorf("requested template %q not found; have %v",
 				templateName, strings.Join(knownTemplates(params.templates), ", "))
 		}
-		bbuf, err := parseTemplate(templateYAML, funcMap, data)
+		bbuf, err := runTemplate(parsedTemplate, data)
 		if err != nil {
 			return nil, nil, err
 		}
 
-		templateJSON, err := yaml.YAMLToJSON(bbuf.Bytes())
-		if err != nil {
-			return nil, nil, fmt.Errorf("yaml to json: %v", err)
-		}
-
-		mergedPod, err = applyOverlay(mergedPod, templateJSON)
+		mergedPod, err = applyOverlayYAML(mergedPod, bbuf.Bytes())
 		if err != nil {
 			return nil, nil, fmt.Errorf("failed parsing generated injected YAML (check Istio sidecar injector configuration): %v", err)
 		}
-		templatePod, err = applyOverlay(templatePod, templateJSON)
+		templatePod, err = applyOverlayYAML(templatePod, bbuf.Bytes())
 		if err != nil {
 			return nil, nil, fmt.Errorf("failed applying injection overlay: %v", err)
 		}
@@ -533,27 +514,32 @@ func injectionStatus(pod *corev1.Pod) *SidecarInjectionStatus {
 	return &iStatus
 }
 
-func parseTemplate(tmplStr string, funcMap map[string]interface{}, data SidecarTemplateData) (bytes.Buffer, error) {
-	var tmpl bytes.Buffer
+func parseDryTemplate(tmplStr string, funcMap map[string]interface{}) (*template.Template, error) {
 	temp := template.New("inject")
 	t, err := temp.Funcs(sprig.TxtFuncMap()).Funcs(funcMap).Parse(tmplStr)
 	if err != nil {
 		log.Infof("Failed to parse template: %v %v\n", err, tmplStr)
-		return bytes.Buffer{}, err
+		return nil, err
 	}
-	if err := t.Execute(&tmpl, &data); err != nil {
-		log.Infof("Invalid template: %v %v\n", err, tmplStr)
+
+	return t, nil
+}
+
+func runTemplate(tmpl *template.Template, data SidecarTemplateData) (bytes.Buffer, error) {
+	var res bytes.Buffer
+	if err := tmpl.Execute(&res, &data); err != nil {
+		log.Errorf("Invalid template: %v", err)
 		return bytes.Buffer{}, err
 	}
 
-	return tmpl, nil
+	return res, nil
 }
 
 // IntoResourceFile injects the istio proxy into the specified
 // kubernetes YAML file.
 // nolint: lll
 func IntoResourceFile(injector Injector, sidecarTemplate Templates,
-	valuesConfig string, revision string, meshconfig *meshconfig.MeshConfig, in io.Reader, out io.Writer, warningHandler func(string)) error {
+	valuesConfig ValuesConfig, revision string, meshconfig *meshconfig.MeshConfig, in io.Reader, out io.Writer, warningHandler func(string)) error {
 	reader := yamlDecoder.NewYAMLReader(bufio.NewReaderSize(in, 4096))
 	for {
 		raw, err := reader.Read()
@@ -613,7 +599,7 @@ func FromRawToObject(raw []byte) (runtime.Object, error) {
 
 // IntoObject convert the incoming resources into Injected resources
 // nolint: lll
-func IntoObject(injector Injector, sidecarTemplate Templates, valuesConfig string,
+func IntoObject(injector Injector, sidecarTemplate Templates, valuesConfig ValuesConfig,
 	revision string, meshconfig *meshconfig.MeshConfig, in runtime.Object, warningHandler func(string)) (interface{}, error) {
 	out := in.DeepCopyObject()
 
diff --git a/pkg/kube/inject/inject_test.go b/pkg/kube/inject/inject_test.go
index e5a2e1e899..814b41bf35 100644
--- a/pkg/kube/inject/inject_test.go
+++ b/pkg/kube/inject/inject_test.go
@@ -349,10 +349,20 @@ type testCase struct {
 		cases = append(cases, testCase{in: f.Name(), want: want})
 	}
 
+	// Precompute injection settings. This may seem like a premature optimization, but due to the size of
+	// YAMLs, with -race this was taking >10min in some cases to generate!
+	if util.Refresh() {
+		writeInjectionSettings(t, "default", nil, "")
+		for i, c := range cases {
+			if c.setFlags != nil || c.inFilePath != "" {
+				writeInjectionSettings(t, fmt.Sprintf("%s.%d", c.in, i), c.setFlags, c.inFilePath)
+			}
+		}
+	}
 	// Preload default settings. Computation here is expensive, so this speeds the tests up substantially
-	defaultTemplate, defaultValues, defaultMesh := loadInjectionSettings(t, nil, "")
+	defaultTemplate, defaultValues, defaultMesh := readInjectionSettings(t, "default")
 	for i, c := range cases {
-		c := c
+		i, c := i, c
 		testName := fmt.Sprintf("[%02d] %s", i, c.want)
 		if c.expectedError != "" {
 			testName = fmt.Sprintf("[%02d] %s", i, c.in)
@@ -374,7 +384,7 @@ type testCase struct {
 			}
 			sidecarTemplate, valuesConfig := defaultTemplate, defaultValues
 			if c.setFlags != nil || c.inFilePath != "" {
-				sidecarTemplate, valuesConfig, mc = loadInjectionSettings(t, c.setFlags, c.inFilePath)
+				sidecarTemplate, valuesConfig, mc = readInjectionSettings(t, fmt.Sprintf("%s.%d", c.in, i))
 			}
 			if c.mesh != nil {
 				c.mesh(mc)
@@ -457,10 +467,7 @@ type testCase struct {
 				wantYAMLs := splitYamlFile(wantFilePath, t)
 				for i := 0; i < len(inputYAMLs); i++ {
 					t.Run(fmt.Sprintf("yamlPart[%d]", i), func(t *testing.T) {
-						runWebhook(t, webhook, inputYAMLs[i], wantYAMLs[i], false)
-						t.Run("idempotency", func(t *testing.T) {
-							runWebhook(t, webhook, wantYAMLs[i], wantYAMLs[i], true)
-						})
+						runWebhook(t, webhook, inputYAMLs[i], wantYAMLs[i], true)
 					})
 				}
 			})
@@ -478,9 +485,13 @@ type testCase struct {
 
 func testInjectionTemplate(t *testing.T, template, input, expected string) {
 	t.Helper()
+	tmpl, err := ParseTemplates(map[string]string{SidecarTemplateName: template})
+	if err != nil {
+		t.Fatal(err)
+	}
 	webhook := &Webhook{
 		Config: &Config{
-			Templates:        map[string]string{SidecarTemplateName: template},
+			Templates:        tmpl,
 			Policy:           InjectionPolicyEnabled,
 			DefaultTemplates: []string{SidecarTemplateName},
 		},
@@ -494,24 +505,28 @@ func testInjectionTemplate(t *testing.T, template, input, expected string) {
 }
 
 func TestMultipleInjectionTemplates(t *testing.T) {
-	webhook := &Webhook{
-		Config: &Config{
-			Templates: map[string]string{
-				"sidecar": `
+	p, err := ParseTemplates(map[string]string{
+		"sidecar": `
 spec:
   containers:
   - name: istio-proxy
     image: proxy
 `,
-				"init": `
+		"init": `
 spec:
  initContainers:
  - name: istio-init
    image: proxy
 `,
-			},
-			Aliases: map[string][]string{"both": {"sidecar", "init"}},
-			Policy:  InjectionPolicyEnabled,
+	})
+	if err != nil {
+		t.Fatal(err)
+	}
+	webhook := &Webhook{
+		Config: &Config{
+			Templates: p,
+			Aliases:   map[string][]string{"both": {"sidecar", "init"}},
+			Policy:    InjectionPolicyEnabled,
 		},
 		env: &model.Environment{
 			PushContext: &model.PushContext{
@@ -619,7 +634,7 @@ func TestStrategicMerge(t *testing.T) {
 `)
 }
 
-func runWebhook(t *testing.T, webhook *Webhook, inputYAML []byte, wantYAML []byte, ignoreIstioMetaJSONAnnotationsEnv bool) {
+func runWebhook(t *testing.T, webhook *Webhook, inputYAML []byte, wantYAML []byte, idempotencyCheck bool) {
 	// Convert the input YAML to a deployment.
 	inputRaw, err := FromRawToObject(inputYAML)
 	if err != nil {
@@ -660,9 +675,16 @@ func runWebhook(t *testing.T, webhook *Webhook, inputYAML []byte, wantYAML []byt
 		gotPod = inputPod
 	}
 
-	if err := normalizeAndCompareDeployments(gotPod, wantPod, ignoreIstioMetaJSONAnnotationsEnv, t); err != nil {
+	if err := normalizeAndCompareDeployments(gotPod, wantPod, false, t); err != nil {
 		t.Fatal(err)
 	}
+	if idempotencyCheck {
+		t.Run("idempotency", func(t *testing.T) {
+			if err := normalizeAndCompareDeployments(gotPod, wantPod, true, t); err != nil {
+				t.Fatal(err)
+			}
+		})
+	}
 }
 
 func TestSkipUDPPorts(t *testing.T) {
diff --git a/pkg/kube/inject/template.go b/pkg/kube/inject/template.go
index ef986dca42..f69d5be530 100644
--- a/pkg/kube/inject/template.go
+++ b/pkg/kube/inject/template.go
@@ -36,7 +36,9 @@
 	"istio.io/pkg/log"
 )
 
-func CreateInjectionFuncmap() template.FuncMap {
+var InjectionFuncmap = createInjectionFuncmap()
+
+func createInjectionFuncmap() template.FuncMap {
 	return template.FuncMap{
 		"formatDuration":      formatDuration,
 		"isset":               isset,
diff --git a/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.template.gen.yaml b/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.template.gen.yaml
new file mode 100644
index 0000000000..8d94a8f307
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.template.gen.yaml
@@ -0,0 +1,1029 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
+  custom: |
+    metadata:
+      annotations:
+        # Disable the built-in transformations. In the future we may want a template-level API
+        prometheus.istio.io/merge-metrics: "false"
+        sidecar.istio.io/rewriteAppHTTPProbers: "false"
+        foo: bar
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+        - name: SOME_ENV
+          value: "true"
+        - name: SOME_FILE
+          value: /var/lib/data/foo.json
+        volumeMounts:
+        - mountPath: /var/lib/data/foo.json
+          subPath: foo.json
+          name: some-injected-file
+      {{- end}}
+      volumes:
+      - name: some-injected-file
+        downwardAPI:
+          items:
+          - path: foo.json
+            fieldRef:
+              fieldPath: "metadata.annotations['foo']"
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.values.gen.yaml b/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.values.gen.yaml
new file mode 100644
index 0000000000..a07ca38458
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.values.gen.yaml
@@ -0,0 +1,137 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {
+      "custom": "metadata:\n  annotations:\n    # Disable the built-in transformations. In the future we may want a template-level API\n    prometheus.istio.io/merge-metrics: \"false\"\n    sidecar.istio.io/rewriteAppHTTPProbers: \"false\"\n    foo: bar\nspec:\n  containers:\n  {{- range $index, $container := .Spec.Containers }}\n  - name: {{ $container.Name }}\n    env:\n    - name: SOME_ENV\n      value: \"true\"\n    - name: SOME_FILE\n      value: /var/lib/data/foo.json\n    volumeMounts:\n    - mountPath: /var/lib/data/foo.json\n      subPath: foo.json\n      name: some-injected-file\n  {{- end}}\n  volumes:\n  - name: some-injected-file\n    downwardAPI:\n      items:\n      - path: foo.json\n        fieldRef:\n          fieldPath: \"metadata.annotations['foo']\"\n"
+    }
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/default.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/default.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/default.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/default.template.gen.yaml b/pkg/kube/inject/testdata/inputs/default.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/default.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/default.values.gen.yaml b/pkg/kube/inject/testdata/inputs/default.values.gen.yaml
new file mode 100644
index 0000000000..b7385f731f
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/default.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.template.gen.yaml b/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.values.gen.yaml b/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.values.gen.yaml
new file mode 100644
index 0000000000..5f79d0de7f
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": true,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.values.gen.yaml
new file mode 100644
index 0000000000..3371161626
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.values.gen.yaml
@@ -0,0 +1,136 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "chained": false,
+    "enabled": true
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.values.gen.yaml
new file mode 100644
index 0000000000..3371161626
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.values.gen.yaml
@@ -0,0 +1,136 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "chained": false,
+    "enabled": true
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.values.gen.yaml
new file mode 100644
index 0000000000..ad2debabf1
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.values.gen.yaml
@@ -0,0 +1,137 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [
+      "barSecret"
+    ],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.values.gen.yaml
new file mode 100644
index 0000000000..6d60927cbe
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": true,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.values.gen.yaml
new file mode 100644
index 0000000000..6d60927cbe
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": true,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.0.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.0.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.0.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.0.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.0.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.0.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.0.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.0.values.gen.yaml
new file mode 100644
index 0000000000..c76b05c26f
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.0.values.gen.yaml
@@ -0,0 +1,136 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "network1",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "chained": true,
+    "enabled": true
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.1.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.1.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.1.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.1.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.1.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.1.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.1.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.1.values.gen.yaml
new file mode 100644
index 0000000000..8500801a08
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.1.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyTest",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.10.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.10.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.10.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.10.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.10.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.10.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.10.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.10.values.gen.yaml
new file mode 100644
index 0000000000..ad2debabf1
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.10.values.gen.yaml
@@ -0,0 +1,137 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [
+      "barSecret"
+    ],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.12.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.12.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.12.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.12.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.12.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.12.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.12.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.12.values.gen.yaml
new file mode 100644
index 0000000000..017684637d
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.12.values.gen.yaml
@@ -0,0 +1,139 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "podDNSSearchNamespaces": [
+      "global",
+      "{{ valueOrDefault .DeploymentMeta.Namespace \"default\" }}.global"
+    ],
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.13.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.13.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.13.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.13.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.13.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.13.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.13.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.13.values.gen.yaml
new file mode 100644
index 0000000000..d0a00bcd2b
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.13.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": true,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.14.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.14.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.14.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.14.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.14.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.14.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.14.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.14.values.gen.yaml
new file mode 100644
index 0000000000..3371161626
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.14.values.gen.yaml
@@ -0,0 +1,136 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "chained": false,
+    "enabled": true
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.17.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.17.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.17.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.17.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.17.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.17.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.17.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.17.values.gen.yaml
new file mode 100644
index 0000000000..6d60927cbe
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.17.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": true,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.3.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.3.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.3.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.3.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.3.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.3.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.3.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.3.values.gen.yaml
new file mode 100644
index 0000000000..99d770d4de
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.3.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "Always",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.4.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.4.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.4.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.4.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.4.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.4.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.4.values.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.4.values.gen.yaml
new file mode 100644
index 0000000000..ae51cebb23
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.4.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "Never",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 15020,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.template.gen.yaml b/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.values.gen.yaml b/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.values.gen.yaml
new file mode 100644
index 0000000000..e775d0194b
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 300,
+      "readinessInitialDelaySeconds": 100,
+      "readinessPeriodSeconds": 200,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 123,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/status_params.yaml.8.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/status_params.yaml.8.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/status_params.yaml.8.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/status_params.yaml.8.template.gen.yaml b/pkg/kube/inject/testdata/inputs/status_params.yaml.8.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/status_params.yaml.8.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/status_params.yaml.8.values.gen.yaml b/pkg/kube/inject/testdata/inputs/status_params.yaml.8.values.gen.yaml
new file mode 100644
index 0000000000..e775d0194b
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/status_params.yaml.8.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "",
+      "excludeInboundPorts": "",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "*",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 300,
+      "readinessInitialDelaySeconds": 100,
+      "readinessPeriodSeconds": 200,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 123,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.mesh.gen.yaml b/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.mesh.gen.yaml
new file mode 100644
index 0000000000..9e1dda5e00
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.mesh.gen.yaml
@@ -0,0 +1,9 @@
+defaultConfig:
+  discoveryAddress: istiod.istio-system.svc:15012
+  proxyMetadata: {}
+  tracing:
+    zipkin:
+      address: zipkin.istio-system:9411
+enablePrometheusMerge: true
+rootNamespace: istio-system
+trustDomain: cluster.local
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.template.gen.yaml b/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.template.gen.yaml
new file mode 100644
index 0000000000..0b24073ec8
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.template.gen.yaml
@@ -0,0 +1,1001 @@
+# defaultTemplates defines the default template to use for pods that do not explicitly specify a template
+defaultTemplates: [sidecar]
+policy: enabled
+alwaysInjectSelector:
+  []
+neverInjectSelector:
+  []
+injectedAnnotations:
+template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
+templates:
+  sidecar: |
+    {{- define "resources"  }}
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+    {{- if .Values.istio_cni.enabled }}
+        {{- if not .Values.istio_cni.chained }}
+        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `istio-cni` }}',
+        {{- end }}
+        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
+        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
+        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
+        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
+        {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
+        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
+        {{- end }}
+        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
+    {{- end }}
+      }
+    spec:
+      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
+      initContainers:
+      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
+      {{ if .Values.istio_cni.enabled -}}
+      - name: istio-validation
+      {{ else -}}
+      - name: istio-init
+      {{ end -}}
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - istio-iptables
+        - "-p"
+        - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
+        - "-z"
+        - "15006"
+        - "-u"
+        - "1337"
+        - "-m"
+        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
+        - "-i"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
+        - "-x"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
+        - "-b"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
+        - "-d"
+      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
+        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
+      {{- else }}
+        - "15090,15021"
+      {{- end }}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
+        - "-q"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
+        {{ end -}}
+        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
+        - "-o"
+        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
+        {{ end -}}
+        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
+        - "-k"
+        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
+        {{ end -}}
+        {{ if .Values.istio_cni.enabled -}}
+        - "--run-validation"
+        - "--skip-rule-apply"
+        {{ end -}}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+      {{- if .ProxyConfig.ProxyMetadata }}
+        env:
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+      {{- end }}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          privileged: {{ .Values.global.proxy.privileged }}
+          capabilities:
+        {{- if not .Values.istio_cni.enabled }}
+            add:
+            - NET_ADMIN
+            - NET_RAW
+        {{- end }}
+            drop:
+            - ALL
+        {{- if not .Values.istio_cni.enabled }}
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+        {{- else }}
+          readOnlyRootFilesystem: true
+          runAsGroup: 1337
+          runAsUser: 1337
+          runAsNonRoot: true
+        {{- end }}
+        restartPolicy: Always
+      {{ end -}}
+      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+      - name: enable-core-dump
+        args:
+        - -c
+        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
+        command:
+          - /bin/sh
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        resources:
+      {{ template "resources" . }}
+        securityContext:
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - SYS_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: false
+          runAsGroup: 0
+          runAsNonRoot: false
+          runAsUser: 0
+      {{ end }}
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if gt .EstimatedConcurrency 0 }}
+        - --concurrency
+        - "{{ .EstimatedConcurrency }}"
+      {{- end -}}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- else if $holdProxy }}
+        lifecycle:
+          postStart:
+            exec:
+              command:
+              - pilot-agent
+              - wait
+      {{- end }}
+        env:
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - name: ISTIO_BOOTSTRAP_OVERRIDE
+          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
+        {{- end }}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        securityContext:
+          {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
+          allowPrivilegeEscalation: true
+          capabilities:
+            add:
+            - NET_ADMIN
+            drop:
+            - ALL
+          privileged: true
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else }}
+          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
+          capabilities:
+            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+            add:
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
+            - NET_ADMIN
+            {{- end }}
+            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
+            - NET_BIND_SERVICE
+            {{- end }}
+            {{- end }}
+            drop:
+            - ALL
+          privileged: {{ .Values.global.proxy.privileged }}
+          readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump) "true" }}
+          runAsGroup: 1337
+          fsGroup: 1337
+          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
+          runAsNonRoot: false
+          runAsUser: 0
+          {{- else -}}
+          runAsNonRoot: true
+          runAsUser: 1337
+          {{- end }}
+          {{- end }}
+        resources:
+      {{ template "resources" . }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+        - mountPath: /etc/istio/custom-bootstrap
+          name: custom-bootstrap-volume
+        {{- end }}
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
+          name: lightstep-certs
+          readOnly: true
+        {{- end }}
+          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+          {{ toYaml $value | indent 6 }}
+          {{ end }}
+          {{- end }}
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
+      - name: custom-bootstrap-volume
+        configMap:
+          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+        {{ toYaml $value | indent 4 }}
+        {{ end }}
+        {{ end }}
+      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
+      - name: lightstep-certs
+        secret:
+          optional: true
+          secretName: lightstep.cacert
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  gateway: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+        istio.io/rev: {{ .Revision | default "default" | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+      }
+    spec:
+      containers:
+      - name: istio-proxy
+      {{- if contains "/" .Values.global.proxy.image }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        ports:
+        - containerPort: 15090
+          protocol: TCP
+          name: http-envoy-prom
+        args:
+        - proxy
+        - router
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
+        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+      {{- if .Values.global.proxy.lifecycle }}
+        lifecycle:
+          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
+      {{- end }}
+        env:
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: 15021
+          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
+        volumeMounts:
+        {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+        - name: gke-workload-certificate
+          mountPath: /var/run/secrets/workload-spiffe-credentials
+          readOnly: true
+        {{- end }}
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # SDS channel between istioagent and Envoy
+        - mountPath: /etc/istio/proxy
+          name: istio-envoy
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        {{- if .Values.global.mountMtlsCerts }}
+        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+        - mountPath: /etc/certs/
+          name: istio-certs
+          readOnly: true
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+      volumes:
+      {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        csi:
+          driver: workloadcertificates.security.cloud.google.com
+      {{- end }}
+      # SDS channel between istioagent and Envoy
+      - emptyDir:
+          medium: Memory
+        name: istio-envoy
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+      {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if .Values.global.mountMtlsCerts }}
+      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
+      - name: istio-certs
+        secret:
+          optional: true
+          {{ if eq .Spec.ServiceAccountName "" }}
+          secretName: istio.default
+          {{ else -}}
+          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
+          {{  end -}}
+      {{- end }}
+      {{- if .Values.global.imagePullSecrets }}
+      imagePullSecrets:
+        {{- range .Values.global.imagePullSecrets }}
+        - name: {{ . }}
+        {{- end }}
+      {{- end }}
+      {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
+      securityContext:
+        fsGroup: 1337
+      {{- end }}
+  grpc-simple: |
+    metadata:
+      sidecar.istio.io/rewriteAppHTTPProbers: "false"
+    spec:
+      initContainers:
+        - name: grpc-bootstrap-init
+          image: busybox:1.28
+          volumeMounts:
+            - mountPath: /var/lib/grpc/data/
+              name: grpc-io-proxyless-bootstrap
+          env:
+            - name: INSTANCE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: ISTIO_NAMESPACE
+              value: |
+                 {{ .Values.global.istioNamespace }}
+          command:
+            - sh
+            - "-c"
+            - |-
+              NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
+              SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
+              echo '
+              {
+                "xds_servers": [
+                  {
+                    "server_uri": "'${SERVER_URI}'",
+                    "channel_creds": [{"type": "insecure"}],
+                    "server_features" : ["xds_v3"]
+                  }
+                ],
+                "node": {
+                  "id": "'${NODE_ID}'",
+                  "metadata": {
+                    "GENERATOR": "grpc"
+                  }
+                }
+              }' > /var/lib/grpc/data/bootstrap.json
+      containers:
+      {{- range $index, $container := .Spec.Containers }}
+      - name: {{ $container.Name }}
+        env:
+          - name: GRPC_XDS_BOOTSTRAP
+            value: /var/lib/grpc/data/bootstrap.json
+          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
+            value: "99"
+          - name: GRPC_GO_LOG_SEVERITY_LEVEL
+            value: info
+        volumeMounts:
+          - mountPath: /var/lib/grpc/data/
+            name: grpc-io-proxyless-bootstrap
+      {{- end }}
+      volumes:
+        - name: grpc-io-proxyless-bootstrap
+          emptyDir: {}
+  grpc-agent: |
+    {{- $containers := list }}
+    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
+    metadata:
+      labels:
+        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
+        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
+      annotations: {
+        {{- if eq (len $containers) 1 }}
+        kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
+        kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
+        {{ end }}
+        sidecar.istio.io/rewriteAppHTTPProbers: "false",
+      }
+    spec:
+      containers:
+      {{- range $index, $container := .Spec.Containers  }}
+      {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+          value: "true"
+        - name: "GRPC_XDS_BOOTSTRAP"
+          value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+      {{- end }}
+      {{- end }}
+      - name: istio-proxy
+      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
+        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
+      {{- else }}
+        image: "{{ .ProxyImage }}"
+      {{- end }}
+        args:
+        - proxy
+        - sidecar
+        - --domain
+        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
+        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
+      {{- if .Values.global.sts.servicePort }}
+        - --stsPort={{ .Values.global.sts.servicePort }}
+      {{- end }}
+      {{- if .Values.global.logAsJson }}
+        - --log_as_json
+      {{- end }}
+        env:
+        - name: ISTIO_META_GENERATOR
+          value: grpc
+        - name: OUTPUT_CERTS
+          value: /var/lib/istio/data
+        {{- if eq (env "PILOT_ENABLE_INBOUND_PASSTHROUGH" "true") "false" }}
+        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
+          value: "true"
+        {{- end }}
+        - name: JWT_POLICY
+          value: {{ .Values.global.jwtPolicy }}
+        - name: PILOT_CERT_PROVIDER
+          value: {{ .Values.global.pilotCertProvider }}
+        - name: CA_ADDR
+        {{- if .Values.global.caAddress }}
+          value: {{ .Values.global.caAddress }}
+        {{- else }}
+          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
+        {{- end }}
+        - name: POD_NAME
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.name
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        - name: INSTANCE_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.podIP
+        - name: SERVICE_ACCOUNT
+          valueFrom:
+            fieldRef:
+              fieldPath: spec.serviceAccountName
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PROXY_CONFIG
+          value: |
+                 {{ protoToJSON .ProxyConfig }}
+        - name: ISTIO_META_POD_PORTS
+          value: |-
+            [
+            {{- $first := true }}
+            {{- range $index1, $c := .Spec.Containers }}
+              {{- range $index2, $p := $c.Ports }}
+                {{- if (structToJSON $p) }}
+                {{if not $first}},{{end}}{{ structToJSON $p }}
+                {{- $first = false }}
+                {{- end }}
+              {{- end}}
+            {{- end}}
+            ]
+        - name: ISTIO_META_APP_CONTAINERS
+          value: "{{ $containers | join "," }}"
+        - name: ISTIO_META_CLUSTER_ID
+          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
+        - name: ISTIO_META_INTERCEPTION_MODE
+          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
+        {{- if .Values.global.network }}
+        - name: ISTIO_META_NETWORK
+          value: "{{ .Values.global.network }}"
+        {{- end }}
+        {{- if .DeploymentMeta.Name }}
+        - name: ISTIO_META_WORKLOAD_NAME
+          value: "{{ .DeploymentMeta.Name }}"
+        {{ end }}
+        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
+        - name: ISTIO_META_OWNER
+          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
+        {{- end}}
+        {{- if .Values.global.meshID }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ .Values.global.meshID }}"
+        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
+        - name: ISTIO_META_MESH_ID
+          value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
+        {{- end }}
+        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
+        - name: TRUST_DOMAIN
+          value: "{{ . }}"
+        {{- end }}
+        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
+        - name: {{ $key }}
+          value: "{{ $value }}"
+        {{- end }}
+        # grpc uses xds:/// to resolve – no need to resolve VIP
+        - name: ISTIO_META_DNS_CAPTURE
+          value: "false"
+        - name: DISABLE_ENVOY
+          value: "true"
+        {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
+        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
+        readinessProbe:
+          httpGet:
+            path: /healthz/ready
+            port: {{ .Values.global.proxy.statusPort }}
+          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
+          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
+          timeoutSeconds: 3
+          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
+        {{ end -}}
+        resources:
+      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
+          requests:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
+            {{ end }}
+        {{- end }}
+        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
+          limits:
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
+            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
+            {{ end }}
+            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
+            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
+            {{ end }}
+        {{- end }}
+      {{- else }}
+        {{- if .Values.global.proxy.resources }}
+          {{ toYaml .Values.global.proxy.resources | indent 6 }}
+        {{- end }}
+      {{- end }}
+        volumeMounts:
+        {{- if eq .Values.global.pilotCertProvider "istiod" }}
+        - mountPath: /var/run/secrets/istio
+          name: istiod-ca-cert
+        {{- end }}
+        - mountPath: /var/lib/istio/data
+          name: istio-data
+        # UDS channel between istioagent and gRPC client for XDS/SDS
+        - mountPath: /etc/istio/proxy
+          name: istio-xds
+        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+        - mountPath: /var/run/secrets/tokens
+          name: istio-token
+        {{- end }}
+        - name: istio-podinfo
+          mountPath: /etc/istio/pod
+        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
+        {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
+        - name: "{{  $index }}"
+        {{ toYaml $value | indent 6 }}
+        {{ end }}
+        {{- end }}
+      volumes:
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - emptyDir:
+          medium: Memory
+        name: istio-xds
+      - name: istio-data
+        emptyDir: {}
+      - name: istio-podinfo
+        downwardAPI:
+          items:
+            - path: "labels"
+              fieldRef:
+                fieldPath: metadata.labels
+            - path: "annotations"
+              fieldRef:
+                fieldPath: metadata.annotations
+    {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
+      - name: istio-token
+        projected:
+          sources:
+          - serviceAccountToken:
+              path: istio-token
+              expirationSeconds: 43200
+              audience: {{ .Values.global.sds.token.aud }}
+    {{- end }}
+      {{- if eq .Values.global.pilotCertProvider "istiod" }}
+      - name: istiod-ca-cert
+        configMap:
+          name: istio-ca-root-cert
+      {{- end }}
+      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
+      {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
+      - name: "{{ $index }}"
+      {{ toYaml $value | indent 4 }}
+      {{ end }}
+      {{ end }}
\ No newline at end of file
diff --git a/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.values.gen.yaml b/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.values.gen.yaml
new file mode 100644
index 0000000000..bf50d0552e
--- /dev/null
+++ b/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.values.gen.yaml
@@ -0,0 +1,135 @@
+{
+  "global": {
+    "caAddress": "",
+    "caName": "",
+    "configCluster": false,
+    "configValidation": true,
+    "defaultNodeSelector": {},
+    "defaultPodDisruptionBudget": {
+      "enabled": true
+    },
+    "defaultResources": {
+      "requests": {
+        "cpu": "10m"
+      }
+    },
+    "enabled": false,
+    "externalIstiod": false,
+    "hub": "gcr.io/istio-testing",
+    "imagePullPolicy": "",
+    "imagePullSecrets": [],
+    "istioNamespace": "istio-system",
+    "istiod": {
+      "enableAnalysis": false
+    },
+    "jwtPolicy": "third-party-jwt",
+    "logAsJson": false,
+    "logging": {
+      "level": "default:info"
+    },
+    "meshID": "",
+    "meshNetworks": {},
+    "mountMtlsCerts": false,
+    "multiCluster": {
+      "clusterName": "",
+      "enabled": false
+    },
+    "namespace": "istio-system",
+    "network": "",
+    "omitSidecarInjectorConfigMap": false,
+    "oneNamespace": false,
+    "operatorManageWebhooks": false,
+    "pilotCertProvider": "istiod",
+    "priorityClassName": "",
+    "proxy": {
+      "autoInject": "enabled",
+      "clusterDomain": "cluster.local",
+      "componentLogLevel": "misc:error",
+      "enableCoreDump": false,
+      "excludeIPRanges": "10.96.0.2/24,10.96.0.3/24",
+      "excludeInboundPorts": "4,5,6",
+      "excludeOutboundPorts": "",
+      "holdApplicationUntilProxyStarts": false,
+      "image": "proxyv2",
+      "includeIPRanges": "127.0.0.1/24,10.96.0.1/24",
+      "includeInboundPorts": "*",
+      "includeOutboundPorts": "",
+      "logLevel": "warning",
+      "privileged": false,
+      "readinessFailureThreshold": 30,
+      "readinessInitialDelaySeconds": 1,
+      "readinessPeriodSeconds": 2,
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "100m",
+          "memory": "128Mi"
+        }
+      },
+      "statusPort": 0,
+      "tracer": "zipkin"
+    },
+    "proxy_init": {
+      "image": "proxyv2",
+      "resources": {
+        "limits": {
+          "cpu": "2000m",
+          "memory": "1024Mi"
+        },
+        "requests": {
+          "cpu": "10m",
+          "memory": "10Mi"
+        }
+      }
+    },
+    "remotePilotAddress": "",
+    "sds": {
+      "token": {
+        "aud": "istio-ca"
+      }
+    },
+    "sts": {
+      "servicePort": 0
+    },
+    "tag": "latest",
+    "tracer": {
+      "datadog": {
+        "address": "$(HOST_IP):8126"
+      },
+      "lightstep": {
+        "accessToken": "",
+        "address": ""
+      },
+      "stackdriver": {
+        "debug": false,
+        "maxNumberOfAnnotations": 200,
+        "maxNumberOfAttributes": 200,
+        "maxNumberOfMessageEvents": 200
+      },
+      "zipkin": {
+        "address": ""
+      }
+    },
+    "useMCP": false
+  },
+  "istio_cni": {
+    "enabled": false
+  },
+  "revision": "",
+  "sidecarInjectorWebhook": {
+    "alwaysInjectSelector": [],
+    "defaultTemplates": [],
+    "enableNamespacesByDefault": false,
+    "injectedAnnotations": {},
+    "neverInjectSelector": [],
+    "objectSelector": {
+      "autoInject": true,
+      "enabled": true
+    },
+    "rewriteAppHTTPProbe": true,
+    "templates": {}
+  }
+}
\ No newline at end of file
diff --git a/pkg/kube/inject/watcher.go b/pkg/kube/inject/watcher.go
index 853db94280..08dfec78bf 100644
--- a/pkg/kube/inject/watcher.go
+++ b/pkg/kube/inject/watcher.go
@@ -33,7 +33,7 @@
 type Watcher interface {
 	// SetHandler sets the handler that is run when the config changes.
 	// Must call this before Run.
-	SetHandler(func(*Config, string))
+	SetHandler(func(*Config, string) error)
 
 	// Run starts the Watcher. Must call this after SetHandler.
 	Run(<-chan struct{})
@@ -50,7 +50,7 @@ type fileWatcher struct {
 	watcher    *fsnotify.Watcher
 	configFile string
 	valuesFile string
-	handler    func(*Config, string)
+	handler    func(*Config, string) error
 }
 
 type configMapWatcher struct {
@@ -60,7 +60,7 @@ type configMapWatcher struct {
 	name      string
 	configKey string
 	valuesKey string
-	handler   func(*Config, string)
+	handler   func(*Config, string) error
 }
 
 // NewFileWatcher creates a Watcher for local config and values files.
@@ -95,7 +95,9 @@ func (w *fileWatcher) Run(stop <-chan struct{}) {
 				break
 			}
 			if w.handler != nil {
-				w.handler(sidecarConfig, valuesConfig)
+				if err := w.handler(sidecarConfig, valuesConfig); err != nil {
+					log.Errorf("update error: %v", err)
+				}
 			}
 		case event, ok := <-w.watcher.Events:
 			if !ok {
@@ -121,7 +123,7 @@ func (w *fileWatcher) Get() (*Config, string, error) {
 	return loadConfig(w.configFile, w.valuesFile)
 }
 
-func (w *fileWatcher) SetHandler(handler func(*Config, string)) {
+func (w *fileWatcher) SetHandler(handler func(*Config, string) error) {
 	w.handler = handler
 }
 
@@ -141,7 +143,9 @@ func NewConfigMapWatcher(client kube.Client, namespace, name, configKey, valuesK
 			return
 		}
 		if w.handler != nil {
-			w.handler(sidecarConfig, valuesConfig)
+			if err := w.handler(sidecarConfig, valuesConfig); err != nil {
+				log.Errorf("update error: %v", err)
+			}
 		}
 	})
 	return w
@@ -160,7 +164,7 @@ func (w *configMapWatcher) Get() (*Config, string, error) {
 	return readConfigMap(cm, w.configKey, w.valuesKey)
 }
 
-func (w *configMapWatcher) SetHandler(handler func(*Config, string)) {
+func (w *configMapWatcher) SetHandler(handler func(*Config, string) error) {
 	w.handler = handler
 }
 
diff --git a/pkg/kube/inject/watcher_test.go b/pkg/kube/inject/watcher_test.go
index 6884abe327..68d7561099 100644
--- a/pkg/kube/inject/watcher_test.go
+++ b/pkg/kube/inject/watcher_test.go
@@ -76,11 +76,12 @@ func TestNewConfigMapWatcher(t *testing.T) {
 
 	client := kube.NewFakeClient()
 	w := NewConfigMapWatcher(client, namespace, cmName, configKey, valuesKey)
-	w.SetHandler(func(config *Config, values string) {
+	w.SetHandler(func(config *Config, values string) error {
 		mu.Lock()
 		defer mu.Unlock()
 		newConfig = config
 		newValues = values
+		return nil
 	})
 	stop := make(chan struct{})
 	go w.Run(stop)
diff --git a/pkg/kube/inject/webhook.go b/pkg/kube/inject/webhook.go
index bf81d1174c..11b23f9e7d 100644
--- a/pkg/kube/inject/webhook.go
+++ b/pkg/kube/inject/webhook.go
@@ -25,6 +25,7 @@
 	"strconv"
 	"strings"
 	"sync"
+	"text/template"
 	"time"
 
 	"github.com/prometheus/prometheus/util/strutil"
@@ -36,7 +37,9 @@
 	"k8s.io/apimachinery/pkg/runtime"
 	"k8s.io/apimachinery/pkg/runtime/serializer"
 	kjson "k8s.io/apimachinery/pkg/runtime/serializer/json"
+	"k8s.io/apimachinery/pkg/util/mergepatch"
 	"k8s.io/apimachinery/pkg/util/strategicpatch"
+	"sigs.k8s.io/yaml"
 
 	"istio.io/api/annotation"
 	"istio.io/api/label"
@@ -84,7 +87,7 @@ type Webhook struct {
 	mu           sync.RWMutex
 	Config       *Config
 	meshConfig   *meshconfig.MeshConfig
-	valuesConfig string
+	valuesConfig ValuesConfig
 
 	watcher Watcher
 
@@ -121,7 +124,7 @@ func unmarshalConfig(data []byte) (*Config, error) {
 	log.Debugf("Policy: %v", c.Policy)
 	log.Debugf("AlwaysInjectSelector: %v", c.AlwaysInjectSelector)
 	log.Debugf("NeverInjectSelector: %v", c.NeverInjectSelector)
-	log.Debugf("Templates: |\n  %v", c.Templates, "\n", "\n  ", -1)
+	log.Debugf("Templates: |\n  %v", c.RawTemplates, "\n", "\n  ", -1)
 	return &c, nil
 }
 
@@ -162,7 +165,9 @@ func NewWebhook(p WebhookParameters) (*Webhook, error) {
 	if err != nil {
 		return nil, err
 	}
-	wh.updateConfig(sidecarConfig, valuesConfig)
+	if err := wh.updateConfig(sidecarConfig, valuesConfig); err != nil {
+		log.Errorf("failed to process webhook config: %v", err)
+	}
 
 	p.Mux.HandleFunc("/inject", wh.serveInject)
 	p.Mux.HandleFunc("/inject/", wh.serveInject)
@@ -181,11 +186,16 @@ func (wh *Webhook) Run(stop <-chan struct{}) {
 	go wh.watcher.Run(stop)
 }
 
-func (wh *Webhook) updateConfig(sidecarConfig *Config, valuesConfig string) {
+func (wh *Webhook) updateConfig(sidecarConfig *Config, valuesConfig string) error {
 	wh.mu.Lock()
+	defer wh.mu.Unlock()
 	wh.Config = sidecarConfig
-	wh.valuesConfig = valuesConfig
-	wh.mu.Unlock()
+	vc, err := NewValuesConfig(valuesConfig)
+	if err != nil {
+		return err
+	}
+	wh.valuesConfig = vc
+	return nil
 }
 
 type ContainerReorder int
@@ -245,16 +255,50 @@ func toAdmissionResponse(err error) *kube.AdmissionResponse {
 	return &kube.AdmissionResponse{Result: &metav1.Status{Message: err.Error()}}
 }
 
+func ParseTemplates(tmpls RawTemplates) (Templates, error) {
+	ret := make(Templates, len(tmpls))
+	for k, t := range tmpls {
+		p, err := parseDryTemplate(t, InjectionFuncmap)
+		if err != nil {
+			return nil, err
+		}
+		ret[k] = p
+	}
+	return ret, nil
+}
+
+type ValuesConfig struct {
+	raw      string
+	asStruct *opconfig.Values
+	asMap    map[string]interface{}
+}
+
+func NewValuesConfig(v string) (ValuesConfig, error) {
+	c := ValuesConfig{raw: v}
+	valuesStruct := &opconfig.Values{}
+	if err := gogoprotomarshal.ApplyYAML(v, valuesStruct); err != nil {
+		return c, fmt.Errorf("could not parse configuration values: %v", err)
+	}
+	c.asStruct = valuesStruct
+
+	values := map[string]interface{}{}
+	if err := yaml.Unmarshal([]byte(v), &values); err != nil {
+		return c, fmt.Errorf("could not parse configuration values: %v", err)
+	}
+	c.asMap = values
+	return c, nil
+}
+
 type InjectionParameters struct {
 	pod                 *corev1.Pod
 	deployMeta          metav1.ObjectMeta
 	typeMeta            metav1.TypeMeta
-	templates           Templates
+	templates           map[string]*template.Template
 	defaultTemplate     []string
 	aliases             map[string][]string
 	meshConfig          *meshconfig.MeshConfig
 	proxyConfig         *meshconfig.ProxyConfig
-	valuesConfig        string
+	valuesConfig        ValuesConfig
 	revision            string
 	proxyEnvs           map[string]string
 	injectedAnnotations map[string]string
@@ -536,13 +580,9 @@ func reorderPod(pod *corev1.Pod, req InjectionParameters) error {
 		}
 	}
 
-	valuesStruct := &opconfig.Values{}
-	if err := gogoprotomarshal.ApplyYAML(req.valuesConfig, valuesStruct); err != nil {
-		return fmt.Errorf("could not parse configuration values: %v", err)
-	}
 	// nolint: staticcheck
 	holdPod := mc.GetDefaultConfig().GetHoldApplicationUntilProxyStarts().GetValue() ||
-		valuesStruct.GetGlobal().GetProxy().GetHoldApplicationUntilProxyStarts().GetValue()
+		req.valuesConfig.asStruct.GetGlobal().GetProxy().GetHoldApplicationUntilProxyStarts().GetValue()
 
 	proxyLocation := MoveLast
 	// If HoldApplicationUntilProxyStarts is set, reorder the proxy location
@@ -567,13 +607,8 @@ func applyRewrite(pod *corev1.Pod, req InjectionParameters) error {
 	if sidecar == nil {
 		return nil
 	}
-	valuesStruct := &opconfig.Values{}
-	if err := gogoprotomarshal.ApplyYAML(req.valuesConfig, valuesStruct); err != nil {
-		log.Infof("Failed to parse values config: %v [%v]\n", err, req.valuesConfig)
-		return fmt.Errorf("could not parse configuration values: %v", err)
-	}
 
-	rewrite := ShouldRewriteAppHTTPProbers(pod.Annotations, valuesStruct.GetSidecarInjectorWebhook().GetRewriteAppHTTPProbe())
+	rewrite := ShouldRewriteAppHTTPProbers(pod.Annotations, req.valuesConfig.asStruct.GetSidecarInjectorWebhook().GetRewriteAppHTTPProbe())
 	// We don't have to escape json encoding here when using golang libraries.
 	if rewrite {
 		if prober := DumpAppProbers(&pod.Spec, req.meshConfig.GetDefaultConfig().GetStatusPort()); prober != "" {
@@ -726,6 +761,66 @@ func applyInitContainer(target *corev1.Pod, container corev1.Container) (*corev1
 	return applyOverlay(target, overlayJSON)
 }
 
+func patchHandleUnmarshal(j []byte, unmarshal func(data []byte, v interface{}) error) (map[string]interface{}, error) {
+	if j == nil {
+		j = []byte("{}")
+	}
+
+	m := map[string]interface{}{}
+	err := unmarshal(j, &m)
+	if err != nil {
+		return nil, mergepatch.ErrBadJSONDoc
+	}
+	return m, nil
+}
+
+// StrategicMergePatchYAML is a small fork of strategicpatch.StrategicMergePatch to allow YAML patches
+// This avoids expensive conversion from YAML to JSON
+func StrategicMergePatchYAML(originalJSON []byte, patchYAML []byte, dataStruct interface{}) ([]byte, error) {
+	schema, err := strategicpatch.NewPatchMetaFromStruct(dataStruct)
+	if err != nil {
+		return nil, err
+	}
+
+	originalMap, err := patchHandleUnmarshal(originalJSON, json.Unmarshal)
+	if err != nil {
+		return nil, err
+	}
+	patchMap, err := patchHandleUnmarshal(patchYAML, func(data []byte, v interface{}) error {
+		return yaml.Unmarshal(data, v)
+	})
+	if err != nil {
+		return nil, err
+	}
+
+	result, err := strategicpatch.StrategicMergeMapPatchUsingLookupPatchMeta(originalMap, patchMap, schema)
+	if err != nil {
+		return nil, err
+	}
+
+	return json.Marshal(result)
+}
+
+// applyContainer merges a pod spec, provided as JSON, on top of the provided pod
+func applyOverlayYAML(target *corev1.Pod, overlayYAML []byte) (*corev1.Pod, error) {
+	currentJSON, err := json.Marshal(target)
+	if err != nil {
+		return nil, err
+	}
+
+	pod := corev1.Pod{}
+	// Overlay the injected template onto the original podSpec
+	patched, err := StrategicMergePatchYAML(currentJSON, overlayYAML, pod)
+	if err != nil {
+		return nil, fmt.Errorf("strategic merge: %v", err)
+	}
+
+	if err := json.Unmarshal(patched, &pod); err != nil {
+		return nil, fmt.Errorf("unmarshal patched pod: %v", err)
+	}
+	return &pod, nil
+}
+
 // applyContainer merges a pod spec, provided as JSON, on top of the provided pod
 func applyOverlay(target *corev1.Pod, overlayJSON []byte) (*corev1.Pod, error) {
 	currentJSON, err := json.Marshal(target)
diff --git a/pkg/kube/inject/webhook_test.go b/pkg/kube/inject/webhook_test.go
index 7e1d3bde78..3565166a17 100644
--- a/pkg/kube/inject/webhook_test.go
+++ b/pkg/kube/inject/webhook_test.go
@@ -52,6 +52,7 @@
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/config/schema/gvk"
+	"istio.io/istio/pkg/test/util/file"
 	"istio.io/istio/pkg/test/util/retry"
 	sutil "istio.io/istio/security/pkg/nodeagent/util"
 )
@@ -61,7 +62,7 @@
 var minimalSidecarTemplate = &Config{
 	Policy:           InjectionPolicyEnabled,
 	DefaultTemplates: []string{SidecarTemplateName},
-	Templates: map[string]string{SidecarTemplateName: `
+	RawTemplates: map[string]string{SidecarTemplateName: `
 spec:
   initContainers:
   - name: istio-init
@@ -583,10 +584,31 @@ func objectToPod(t testing.TB, obj runtime.Object) *corev1.Pod {
 	return nil
 }
 
+func readInjectionSettings(t testing.TB, fname string) (*Config, ValuesConfig, *meshconfig.MeshConfig) {
+	values := file.AsStringOrFail(t, filepath.Join("testdata", "inputs", fname+".values.gen.yaml"))
+	template := file.AsBytesOrFail(t, filepath.Join("testdata", "inputs", fname+".template.gen.yaml"))
+	meshc := file.AsStringOrFail(t, filepath.Join("testdata", "inputs", fname+".mesh.gen.yaml"))
+
+	vc, err := NewValuesConfig(values)
+	if err != nil {
+		t.Fatal(err)
+	}
+
+	cfg, err := UnmarshalConfig(template)
+	if err != nil {
+		t.Fatalf("failed to unmarshal injectionConfig: %v", err)
+	}
+	meshConfig, err := mesh.ApplyMeshConfig(meshc, mesh.DefaultMeshConfig())
+	if err != nil {
+		t.Fatalf("failed to unmarshal meshconfig: %v", err)
+	}
+
+	return &cfg, vc, meshConfig
+}
+
 // loadInjectionSettings will render the charts using the operator, with given yaml overrides.
 // This allows us to fully simulate what will actually happen at run time.
-func loadInjectionSettings(t testing.TB, setFlags []string, inFilePath string) (template *Config, values string, meshConfig *meshconfig.MeshConfig) {
-	t.Helper()
+func writeInjectionSettings(t testing.TB, fname string, setFlags []string, inFilePath string) {
 	// add --set installPackagePath=<path to charts snapshot>
 	setFlags = append(setFlags, "installPackagePath="+defaultInstallPackageDir(), "profile=empty", "components.pilot.enabled=true")
 	var inFilenames []string
@@ -595,20 +617,22 @@ func loadInjectionSettings(t testing.TB, setFlags []string, inFilePath string) (
 	}
 
 	l := clog.NewConsoleLogger(os.Stdout, os.Stderr, nil)
-	manifests, _, err := manifest.GenManifests(inFilenames, setFlags, false, nil, l)
+	manifests, _, err := manifest.GenManifests(inFilenames, setFlags, false, nil, nil, l)
 	if err != nil {
 		t.Fatalf("failed to generate manifests: %v", err)
 	}
 	for _, mlist := range manifests[name.PilotComponentName] {
 		for _, object := range strings.Split(mlist, yamlSeparator) {
-
+			if len(object) == 0 {
+				continue
+			}
 			r := bytes.NewReader([]byte(object))
 			decoder := k8syaml.NewYAMLOrJSONDecoder(r, 1024)
 
 			out := &unstructured.Unstructured{}
 			err := decoder.Decode(out)
 			if err != nil {
-				t.Fatalf("error decoding object: %v", err)
+				t.Fatalf("error decoding object %q: %v", object, err)
 			}
 			if out.GetName() == "istio-sidecar-injector" && (out.GroupVersionKind() == schema.GroupVersionKind{Version: "v1", Kind: "ConfigMap"}) {
 				data, ok := out.Object["data"].(map[string]interface{})
@@ -619,16 +643,15 @@ func loadInjectionSettings(t testing.TB, setFlags []string, inFilePath string) (
 				if !ok {
 					t.Fatalf("failed to config %v", data)
 				}
-				values, ok = data["values"].(string)
+				vs, ok := data["values"].(string)
 				if !ok {
 					t.Fatalf("failed to config %v", data)
 				}
-				template, err := UnmarshalConfig([]byte(config))
-				if err != nil {
-					t.Fatalf("failed to unmarshal injectionConfig: %v", err)
+				if err := os.WriteFile(filepath.Join("testdata", "inputs", fname+".values.gen.yaml"), []byte(vs), 0o644); err != nil {
+					t.Fatal(err)
 				}
-				if meshConfig != nil {
-					return &template, values, meshConfig
+				if err := os.WriteFile(filepath.Join("testdata", "inputs", fname+".template.gen.yaml"), []byte(config), 0o644); err != nil {
+					t.Fatal(err)
 				}
 			} else if out.GetName() == "istio" && (out.GroupVersionKind() == schema.GroupVersionKind{Version: "v1", Kind: "ConfigMap"}) {
 				data, ok := out.Object["data"].(map[string]interface{})
@@ -639,18 +662,12 @@ func loadInjectionSettings(t testing.TB, setFlags []string, inFilePath string) (
 				if !ok {
 					t.Fatalf("failed to get meshconfig %v", data)
 				}
-				meshConfig, err = mesh.ApplyMeshConfig(meshdata, mesh.DefaultMeshConfig())
-				if err != nil {
-					t.Fatalf("failed to unmarshal meshconfig: %v", err)
-				}
-				if template != nil {
-					return template, values, meshConfig
+				if err := os.WriteFile(filepath.Join("testdata", "inputs", fname+".mesh.gen.yaml"), []byte(meshdata), 0o644); err != nil {
+					t.Fatal(err)
 				}
 			}
 		}
 	}
-	t.Fatal("could not find injection template")
-	return nil, "", nil
 }
 
 func splitYamlFile(yamlFile string, t *testing.T) [][]byte {
@@ -775,11 +792,11 @@ func normalizeAndCompareDeployments(got, want *corev1.Pod, ignoreIstioMetaJSONAn
 		removeContainerEnvEntry(want, "ISTIO_METAJSON_ANNOTATIONS")
 	}
 
-	gotString, err := yaml.Marshal(got)
+	gotString, err := json.Marshal(got)
 	if err != nil {
 		t.Fatal(err)
 	}
-	wantString, err := yaml.Marshal(want)
+	wantString, err := json.Marshal(want)
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -855,7 +872,7 @@ func createWebhook(t testing.TB, cfg *Config, pcResources int) *Webhook {
 	if err != nil {
 		t.Fatalf("Could not marshal test injection config: %v", err)
 	}
-	_, values, _ := loadInjectionSettings(t, nil, "")
+	_, values, _ := readInjectionSettings(t, "default")
 	var (
 		configFile = filepath.Join(dir, "config-file.yaml")
 		valuesFile = filepath.Join(dir, "values-file.yaml")
@@ -866,7 +883,7 @@ func createWebhook(t testing.TB, cfg *Config, pcResources int) *Webhook {
 		t.Fatalf("WriteFile(%v) failed: %v", configFile, err)
 	}
 
-	if err := os.WriteFile(valuesFile, []byte(values), 0o644); err != nil { // nolint: vetshadow
+	if err := os.WriteFile(valuesFile, []byte(values.raw), 0o644); err != nil { // nolint: vetshadow
 		t.Fatalf("WriteFile(%v) failed: %v", valuesFile, err)
 	}
 
@@ -1097,7 +1114,7 @@ func testSideCarInjectorMetrics(t *testing.T) {
 }
 
 func benchmarkInjectServe(pcs int, b *testing.B) {
-	sidecarTemplate, _, _ := loadInjectionSettings(b, nil, "")
+	sidecarTemplate, _, _ := readInjectionSettings(b, "default")
 	wh := createWebhook(b, sidecarTemplate, pcs)
 
 	stop := make(chan struct{})
diff --git a/pkg/test/framework/components/echo/echoboot/echoboot.go b/pkg/test/framework/components/echo/echoboot/echoboot.go
index a7c7ed5d42..70d9cc5dc4 100644
--- a/pkg/test/framework/components/echo/echoboot/echoboot.go
+++ b/pkg/test/framework/components/echo/echoboot/echoboot.go
@@ -22,7 +22,6 @@
 
 	"github.com/google/go-cmp/cmp"
 	"github.com/hashicorp/go-multierror"
-	"gopkg.in/yaml.v3"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 
 	"istio.io/istio/pilot/pkg/util/sets"
@@ -192,13 +191,13 @@ func (b builder) injectionTemplates() (map[string]sets.Set, error) {
 			if !strings.HasPrefix(item.Name, "istio-sidecar-injector") {
 				continue
 			}
-			data := &inject.Config{}
-			if err := yaml.Unmarshal([]byte(item.Data["config"]), data); err != nil {
+			data, err := inject.UnmarshalConfig([]byte(item.Data["config"]))
+			if err != nil {
 				return nil, fmt.Errorf("failed parsing injection cm in %s: %v", c.Name(), err)
 			}
-			if data.Templates != nil {
+			if data.RawTemplates != nil {
 				t := sets.NewSet()
-				for name := range data.Templates {
+				for name := range data.RawTemplates {
 					t.Insert(name)
 				}
 				// either intersection has not been set or we intersect these templates
diff --git a/tests/fuzz/inject_fuzzer.go b/tests/fuzz/inject_fuzzer.go
index 3f9d775c21..79113f8303 100644
--- a/tests/fuzz/inject_fuzzer.go
+++ b/tests/fuzz/inject_fuzzer.go
@@ -54,6 +54,14 @@ func FuzzIntoResourceFile(data []byte) int {
 	if err != nil {
 		return 0
 	}
-	_ = inject.IntoResourceFile(nil, sidecarTemplate, valuesConfig, revision, mc, in, &got, warn)
+	templs, err := inject.ParseTemplates(sidecarTemplate)
+	if err != nil {
+		return 0
+	}
+	vc, err := inject.NewValuesConfig(valuesConfig)
+	if err != nil {
+		return 0
+	}
+	_ = inject.IntoResourceFile(nil, templs, vc, revision, mc, in, &got, warn)
 	return 1
 }
diff --git a/tests/fuzz/misc_fuzzers.go b/tests/fuzz/misc_fuzzers.go
index 348570a13c..62255e88bf 100644
--- a/tests/fuzz/misc_fuzzers.go
+++ b/tests/fuzz/misc_fuzzers.go
@@ -140,7 +140,7 @@ func FuzzNewControlplane(data []byte) int {
 		return 0
 	}
 	inTranslator.ComponentMaps[name.PilotComponentName] = cm
-	_, _ = controlplane.NewIstioControlPlane(inInstallSpec, inTranslator)
+	_, _ = controlplane.NewIstioControlPlane(inInstallSpec, inTranslator, nil)
 	return 1
 }
 
-- 
2.35.3

