From f9bebb4f7c87eeb9d109438bf81973be1fd400b7 Mon Sep 17 00:00:00 2001
From: jacob-delgado <jacob.delgado@volunteers.acasi.info>
Date: Sat, 12 Mar 2022 09:02:51 -0700
Subject: Update scripts to pass shellcheck 0.8 (#37879)

---
 release/downloadIstioCandidate.sh       | 8 ++++----
 release/downloadIstioCtl.sh             | 8 ++++----
 tests/integration/create_cluster_gke.sh | 1 -
 3 files changed, 8 insertions(+), 9 deletions(-)

diff --git a/release/downloadIstioCandidate.sh b/release/downloadIstioCandidate.sh
index 00899b8e05..fab20ebf22 100755
--- a/release/downloadIstioCandidate.sh
+++ b/release/downloadIstioCandidate.sh
@@ -28,14 +28,14 @@ set -e
 
 # Determines the operating system.
 OS="$(uname)"
-if [ "x${OS}" = "xDarwin" ] ; then
+if [ "${OS}" = "Darwin" ] ; then
   OSEXT="osx"
 else
   OSEXT="linux"
 fi
 
 # Determine the latest Istio version by version number ignoring alpha, beta, and rc versions.
-if [ "x${ISTIO_VERSION}" = "x" ] ; then
+if [ "${ISTIO_VERSION}" = "" ] ; then
   ISTIO_VERSION="$(curl -sL https://github.com/istio/istio/releases | \
                   grep -o 'releases/[0-9]*.[0-9]*.[0-9]*/' | sort -V | \
                   tail -1 | awk -F'/' '{ print $2}')"
@@ -69,7 +69,7 @@ case "${LOCAL_ARCH}" in
     ;;
 esac
 
-if [ "x${ISTIO_VERSION}" = "x" ] ; then
+if [ "${ISTIO_VERSION}" = "" ] ; then
   printf "Unable to get latest Istio version. Set ISTIO_VERSION env var and re-run. For example: export ISTIO_VERSION=1.0.4"
   exit 1;
 fi
@@ -113,7 +113,7 @@ if [ "${OS}" = "Linux" ] ; then
   else
     with_arch
   fi
-elif [ "x${OS}" = "xDarwin" ] ; then
+elif [ "${OS}" = "Darwin" ] ; then
   without_arch
 else
   printf "\n\n"
diff --git a/release/downloadIstioCtl.sh b/release/downloadIstioCtl.sh
index be08abd7fd..de72518b03 100755
--- a/release/downloadIstioCtl.sh
+++ b/release/downloadIstioCtl.sh
@@ -25,21 +25,21 @@
 
 # Determines the operating system.
 OS="$(uname)"
-if [ "x${OS}" = "xDarwin" ] ; then
+if [ "${OS}" = "Darwin" ] ; then
   OSEXT="osx"
 else
   OSEXT="linux"
 fi
 
 # Determine the latest Istio version by version number ignoring alpha, beta, and rc versions.
-if [ "x${ISTIO_VERSION}" = "x" ] ; then
+if [ "${ISTIO_VERSION}" = "" ] ; then
   ISTIO_VERSION="$(curl -sL https://github.com/istio/istio/releases | \
                   grep -o 'releases/[0-9]*.[0-9]*.[0-9]*/' | sort -V | \
                   tail -1 | awk -F'/' '{ print $2}')"
   ISTIO_VERSION="${ISTIO_VERSION##*/}"
 fi
 
-if [ "x${ISTIO_VERSION}" = "x" ] ; then
+if [ "${ISTIO_VERSION}" = "" ] ; then
   printf "Unable to get latest Istio version. Set ISTIO_VERSION env var and re-run. For example: export ISTIO_VERSION=1.0.4"
   exit 1;
 fi
@@ -117,7 +117,7 @@ if [ "${OS}" = "Linux" ] ; then
   else
     with_arch
   fi
-elif [ "x${OS}" = "xDarwin" ] ; then
+elif [ "${OS}" = "Darwin" ] ; then
   without_arch
 else
   download_failed
diff --git a/tests/integration/create_cluster_gke.sh b/tests/integration/create_cluster_gke.sh
index 68d64360e0..4ee9c53de4 100755
--- a/tests/integration/create_cluster_gke.sh
+++ b/tests/integration/create_cluster_gke.sh
@@ -23,7 +23,6 @@
 PROJECT=${PROJECT:-$(gcloud config list --format 'value(core.project)' 2>/dev/null)}
 ZONE=${ZONE:-us-central1-f}
 CLUSTER_NAME=${CLUSTER_NAME:-istio-e2e}
-CLUSTER_VERSION=${CLUSTER_VERSION}
 MACHINE_TYPE=${MACHINE_TYPE:-n1-standard-4}
 NUM_NODES=${NUM_NODES:-3}
 # Store the previous value (which may have been unset) so we can restore it on cleanup
-- 
2.35.3

