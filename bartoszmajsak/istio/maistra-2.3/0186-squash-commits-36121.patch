From 462a48cb3e3cfb61d0392fea914a7ad2355ae86c Mon Sep 17 00:00:00 2001
From: Frank Budinsky <frankb@ca.ibm.com>
Date: Wed, 1 Dec 2021 17:03:17 -0500
Subject: squash commits (#36121)

---
 Makefile.core.mk                              |  2 +
 .../charts/base/templates/endpoints.yaml      |  2 +-
 manifests/charts/base/templates/services.yaml |  6 +-
 .../istio-discovery/templates/configmap.yaml  |  2 +-
 .../istiod-remote/templates/configmap.yaml    |  2 +-
 .../templates/endpoints.yaml                  |  2 +-
 .../templates/services.yaml                   |  6 +-
 operator/cmd/mesh/manifest-generate_test.go   |  2 +-
 pkg/test/framework/components/istio/config.go | 14 +----
 .../framework/components/istio/operator.go    | 57 ++++++++-----------
 ...tiod-remote-integration-test-defaults.yaml | 29 ----------
 ...less-remote-integration-test-defaults.yaml | 25 --------
 .../iop-remote-integration-test-defaults.yaml | 23 ++++++--
 ...iop-remote-integration-test-gateways.yaml} |  0
 .../stats/prometheus/nullvm/dashboard_test.go |  3 +-
 15 files changed, 61 insertions(+), 114 deletions(-)
 copy manifests/charts/{base => istiod-remote}/templates/endpoints.yaml (93%)
 copy manifests/charts/{base => istiod-remote}/templates/services.yaml (75%)
 delete mode 100644 tests/integration/iop-externalistiod-remote-integration-test-defaults.yaml
 delete mode 100644 tests/integration/iop-istiodless-remote-integration-test-defaults.yaml
 rename tests/integration/{iop-externalistiod-remote-integration-test-gateways.yaml => iop-remote-integration-test-gateways.yaml} (100%)

diff --git a/Makefile.core.mk b/Makefile.core.mk
index 269f856a4f..10f7cb8bbe 100644
--- a/Makefile.core.mk
+++ b/Makefile.core.mk
@@ -385,6 +385,8 @@ copy-templates:
 	find ./manifests/charts/gateways/istio-egress/templates -type f -exec sed -i -e 's/Ingress/Egress/g' {} \;
 
 	# external istiod remote cluster charts
+	cp manifests/charts/base/templates/services.yaml manifests/charts/istiod-remote/templates
+	cp manifests/charts/base/templates/endpoints.yaml manifests/charts/istiod-remote/templates
 	cp manifests/charts/base/templates/reader-serviceaccount.yaml manifests/charts/istiod-remote/templates
 	cp manifests/charts/istio-control/istio-discovery/templates/mutatingwebhook.yaml manifests/charts/istiod-remote/templates
 	cp manifests/charts/istio-control/istio-discovery/templates/reader-clusterrole.yaml manifests/charts/istiod-remote/templates
diff --git a/manifests/charts/base/templates/endpoints.yaml b/manifests/charts/base/templates/endpoints.yaml
index 996152bb04..fb4dd5efd3 100644
--- a/manifests/charts/base/templates/endpoints.yaml
+++ b/manifests/charts/base/templates/endpoints.yaml
@@ -1,5 +1,5 @@
 {{- if .Values.global.remotePilotAddress }}
-  {{- if not .Values.global.externalIstiod }}
+  {{- if .Values.pilot.enabled }}
 apiVersion: v1
 kind: Endpoints
 metadata:
diff --git a/manifests/charts/base/templates/services.yaml b/manifests/charts/base/templates/services.yaml
index 606fd4459a..705c360019 100644
--- a/manifests/charts/base/templates/services.yaml
+++ b/manifests/charts/base/templates/services.yaml
@@ -1,6 +1,6 @@
 {{- if .Values.global.remotePilotAddress }}
-  {{- if not .Values.global.externalIstiod }}
-# when istiod is enabled in remote cluster, we can't use istiod service name
+  {{- if .Values.pilot.enabled }}
+# when local istiod is enabled, we can't use istiod service name to reach the remote control plane
 apiVersion: v1
 kind: Service
 metadata:
@@ -13,7 +13,7 @@ spec:
     protocol: TCP
   clusterIP: None
   {{- else }}
-# when istiod isn't enabled in remote cluster, we can use istiod service name
+# when local istiod isn't enabled, we can use istiod service name to reach the remote control plane
 apiVersion: v1
 kind: Service
 metadata:
diff --git a/manifests/charts/istio-control/istio-discovery/templates/configmap.yaml b/manifests/charts/istio-control/istio-discovery/templates/configmap.yaml
index 17b52f101c..8e57c81862 100644
--- a/manifests/charts/istio-control/istio-discovery/templates/configmap.yaml
+++ b/manifests/charts/istio-control/istio-discovery/templates/configmap.yaml
@@ -53,7 +53,7 @@
         {}
       {{- end }}
       {{- if .Values.global.remotePilotAddress }}
-      {{- if not .Values.global.externalIstiod }}
+      {{- if .Values.pilot.enabled }}
       discoveryAddress: {{ printf "istiod-remote.%s.svc" .Release.Namespace }}:15012
       {{- else }}
       discoveryAddress: {{ printf "istiod.%s.svc" .Release.Namespace }}:15012
diff --git a/manifests/charts/istiod-remote/templates/configmap.yaml b/manifests/charts/istiod-remote/templates/configmap.yaml
index 17b52f101c..8e57c81862 100644
--- a/manifests/charts/istiod-remote/templates/configmap.yaml
+++ b/manifests/charts/istiod-remote/templates/configmap.yaml
@@ -53,7 +53,7 @@
         {}
       {{- end }}
       {{- if .Values.global.remotePilotAddress }}
-      {{- if not .Values.global.externalIstiod }}
+      {{- if .Values.pilot.enabled }}
       discoveryAddress: {{ printf "istiod-remote.%s.svc" .Release.Namespace }}:15012
       {{- else }}
       discoveryAddress: {{ printf "istiod.%s.svc" .Release.Namespace }}:15012
diff --git a/manifests/charts/base/templates/endpoints.yaml b/manifests/charts/istiod-remote/templates/endpoints.yaml
similarity index 93%
copy from manifests/charts/base/templates/endpoints.yaml
copy to manifests/charts/istiod-remote/templates/endpoints.yaml
index 996152bb04..fb4dd5efd3 100644
--- a/manifests/charts/base/templates/endpoints.yaml
+++ b/manifests/charts/istiod-remote/templates/endpoints.yaml
@@ -1,5 +1,5 @@
 {{- if .Values.global.remotePilotAddress }}
-  {{- if not .Values.global.externalIstiod }}
+  {{- if .Values.pilot.enabled }}
 apiVersion: v1
 kind: Endpoints
 metadata:
diff --git a/manifests/charts/base/templates/services.yaml b/manifests/charts/istiod-remote/templates/services.yaml
similarity index 75%
copy from manifests/charts/base/templates/services.yaml
copy to manifests/charts/istiod-remote/templates/services.yaml
index 606fd4459a..705c360019 100644
--- a/manifests/charts/base/templates/services.yaml
+++ b/manifests/charts/istiod-remote/templates/services.yaml
@@ -1,6 +1,6 @@
 {{- if .Values.global.remotePilotAddress }}
-  {{- if not .Values.global.externalIstiod }}
-# when istiod is enabled in remote cluster, we can't use istiod service name
+  {{- if .Values.pilot.enabled }}
+# when local istiod is enabled, we can't use istiod service name to reach the remote control plane
 apiVersion: v1
 kind: Service
 metadata:
@@ -13,7 +13,7 @@ spec:
     protocol: TCP
   clusterIP: None
   {{- else }}
-# when istiod isn't enabled in remote cluster, we can use istiod service name
+# when local istiod isn't enabled, we can use istiod service name to reach the remote control plane
 apiVersion: v1
 kind: Service
 metadata:
diff --git a/operator/cmd/mesh/manifest-generate_test.go b/operator/cmd/mesh/manifest-generate_test.go
index 81656b0a1a..ec893d16f9 100644
--- a/operator/cmd/mesh/manifest-generate_test.go
+++ b/operator/cmd/mesh/manifest-generate_test.go
@@ -277,7 +277,7 @@ func TestManifestGenerateIstiodRemote(t *testing.T) {
 		mwc := mustGetMutatingWebhookConfiguration(g, objs, "istio-sidecar-injector").Unstructured()
 		g.Expect(mwc).Should(HavePathValueEqual(PathValue{"webhooks.[0].clientConfig.url", "https://xxx:15017/inject"}))
 
-		ep := mustGetEndpoint(g, objs, "istiod").Unstructured()
+		ep := mustGetEndpoint(g, objs, "istiod-remote").Unstructured()
 		g.Expect(ep).Should(HavePathValueEqual(PathValue{"subsets.[0].addresses.[0]", endpointSubsetAddressVal("", "169.10.112.88", "")}))
 		g.Expect(ep).Should(HavePathValueContain(PathValue{"subsets.[0].ports.[0]", portVal("tcp-istiod", 15012, -1)}))
 
diff --git a/pkg/test/framework/components/istio/config.go b/pkg/test/framework/components/istio/config.go
index b092050d43..10306705ea 100644
--- a/pkg/test/framework/components/istio/config.go
+++ b/pkg/test/framework/components/istio/config.go
@@ -48,9 +48,9 @@
 	// on remote clusters for integration tests
 	IntegrationTestRemoteDefaultsIOP = "tests/integration/iop-remote-integration-test-defaults.yaml"
 
-	// IntegrationTestIstiodlessRemoteDefaultsIOP is the path of the default IstioOperator spec to use
-	// on remote clusters for integration tests when --istio.test.istio.istiodlessRemotes is set.
-	IntegrationTestIstiodlessRemoteDefaultsIOP = "tests/integration/iop-istiodless-remote-integration-test-defaults.yaml"
+	// IntegrationTestRemoteGatewaysIOP is the path of the default IstioOperator spec to use
+	// to install gateways on remote clusters for integration tests
+	IntegrationTestRemoteGatewaysIOP = "tests/integration/iop-remote-integration-test-gateways.yaml"
 
 	// IntegrationTestExternalIstiodPrimaryDefaultsIOP is the path of the default IstioOperator spec to use
 	// on external istiod primary clusters for integration tests
@@ -60,14 +60,6 @@
 	// on external istiod config clusters for integration tests
 	IntegrationTestExternalIstiodConfigDefaultsIOP = "tests/integration/iop-externalistiod-config-integration-test-defaults.yaml"
 
-	// IntegrationTestExternalIstiodRemoteDefaultsIOP is the path of the default IstioOperator spec to use
-	// on external istiod remote clusters for integration tests
-	IntegrationTestExternalIstiodRemoteDefaultsIOP = "tests/integration/iop-externalistiod-remote-integration-test-defaults.yaml"
-
-	// IntegrationTestExternalIstiodRemoteDefaultsIOP is the path of the default IstioOperator spec to use
-	// to install gateways on external istiod remote clusters for integration tests
-	IntegrationTestExternalIstiodRemoteGatewaysIOP = "tests/integration/iop-externalistiod-remote-integration-test-gateways.yaml"
-
 	// DefaultDeployTimeout for Istio
 	DefaultDeployTimeout = time.Second * 300
 
diff --git a/pkg/test/framework/components/istio/operator.go b/pkg/test/framework/components/istio/operator.go
index 852620e86f..3c50e7c68d 100644
--- a/pkg/test/framework/components/istio/operator.go
+++ b/pkg/test/framework/components/istio/operator.go
@@ -307,10 +307,9 @@ func deploy(ctx resource.Context, env *kube.Environment, cfg Config) (Instance,
 	if i.isExternalControlPlane() {
 		cfg.PrimaryClusterIOPFile = IntegrationTestExternalIstiodPrimaryDefaultsIOP
 		cfg.ConfigClusterIOPFile = IntegrationTestExternalIstiodConfigDefaultsIOP
-		cfg.RemoteClusterIOPFile = IntegrationTestExternalIstiodRemoteDefaultsIOP
 		i.settings = cfg
-	} else if cfg.IstiodlessRemotes {
-		cfg.RemoteClusterIOPFile = IntegrationTestIstiodlessRemoteDefaultsIOP
+	} else if !cfg.IstiodlessRemotes {
+		cfg.RemoteClusterIOPFile = IntegrationTestDefaultsIOP
 		i.settings = cfg
 	}
 
@@ -370,11 +369,11 @@ func deploy(ctx resource.Context, env *kube.Environment, cfg Config) (Instance,
 		return i, err
 	}
 
-	if ctx.Clusters().IsMulticluster() && !i.isExternalControlPlane() {
-		// For multicluster, configure direct access so each control plane can get endpoints from all API servers.
-		// TODO: this should be done after installing the remote clusters, but needs to be done before for now,
-		// because in non-external control plane MC, remote clusters are not really istiodless and they install
-		// the gateways right away as part of default profile, which hangs if the control plane isn't responding.
+	// For multicluster, configure direct access so each control plane can get endpoints from all API servers.
+	// This needs to be done before installing remote clusters to accommodate non-istiodless remote cluster
+	// that use the default profile, which installs gateways right away and will fail if the control plane
+	// isn't responding.
+	if ctx.Clusters().IsMulticluster() {
 		if err := i.configureDirectAPIServerAccess(ctx, cfg); err != nil {
 			return nil, err
 		}
@@ -395,14 +394,7 @@ func deploy(ctx resource.Context, env *kube.Environment, cfg Config) (Instance,
 		return nil, fmt.Errorf("%d errors occurred deploying remote clusters: %v", errs.Len(), errs.ErrorOrNil())
 	}
 
-	if ctx.Clusters().IsMulticluster() && i.isExternalControlPlane() {
-		// For multicluster, configure direct access so each control plane can get endpoints from all API servers.
-		if err := i.configureDirectAPIServerAccess(ctx, cfg); err != nil {
-			return nil, err
-		}
-	}
-
-	// Configure discovery and gateways for remote clusters.
+	// Configure gateways for remote clusters.
 	for _, c := range ctx.Clusters().Kube().Remotes() {
 		c := c
 		if i.isExternalControlPlane() || cfg.IstiodlessRemotes {
@@ -568,19 +560,21 @@ func installControlPlaneCluster(i *operatorComponent, cfg Config, c cluster.Clus
 		return err
 	}
 
-	// Set the clusterName for the local cluster.
-	// This MUST match the clusterName in the remote secret for this cluster.
 	if i.environment.IsMulticluster() {
 		if i.isExternalControlPlane() || cfg.IstiodlessRemotes {
-			// enable namespace controller writing to remote clusters
+			// Enable namespace controller writing to remote clusters
 			installSettings = append(installSettings, "--set", "values.pilot.env.EXTERNAL_ISTIOD=true")
 		}
+
+		// Set the clusterName for the local cluster.
+		// This MUST match the clusterName in the remote secret for this cluster.
 		clusterName := c.Name()
 		if !c.IsConfig() {
 			clusterName = c.ConfigName()
 		}
 		installSettings = append(installSettings, "--set", "values.global.multiCluster.clusterName="+clusterName)
 	}
+
 	// Create an istioctl to configure this cluster.
 	istioCtl, err := istioctl.New(i.ctx, istioctl.Config{
 		Cluster: c,
@@ -628,6 +622,15 @@ func installControlPlaneCluster(i *operatorComponent, cfg Config, c cluster.Clus
 		if err := patchIstiodCustomHost(istiodAddress, cfg, c); err != nil {
 			return err
 		}
+
+		// configure istioctl to run with an external control plane topology.
+		if !c.IsConfig() {
+			os.Setenv("ISTIOCTL_XDS_ADDRESS", istiodAddress.String())
+			os.Setenv("ISTIOCTL_PREFER_EXPERIMENTAL", "true")
+			if err := cmd.ConfigAndEnvProcessing(); err != nil {
+				return err
+			}
+		}
 	}
 
 	return nil
@@ -678,8 +681,7 @@ func installRemoteCommon(i *operatorComponent, cfg Config, c cluster.Cluster, de
 		if cfg.IstiodlessRemotes {
 			installSettings = append(installSettings,
 				"--set", fmt.Sprintf("values.istiodRemote.injectionURL=https://%s/inject/net/%s/cluster/%s",
-					net.JoinHostPort(remoteIstiodAddress.IP.String(), "15017"), c.NetworkName(), c.Name()),
-				"--set", fmt.Sprintf("values.base.validationURL=https://%s/validate", net.JoinHostPort(remoteIstiodAddress.IP.String(), "15017")))
+					net.JoinHostPort(remoteIstiodAddress.IP.String(), "15017"), c.NetworkName(), c.Name()))
 		}
 	}
 
@@ -696,7 +698,7 @@ func installRemoteClusterGateways(i *operatorComponent, c cluster.Cluster) error
 		return err
 	}
 	installSettings := []string{
-		"-f", filepath.Join(testenv.IstioSrc, IntegrationTestExternalIstiodRemoteGatewaysIOP),
+		"-f", filepath.Join(testenv.IstioSrc, IntegrationTestRemoteGatewaysIOP),
 		"--istioNamespace", i.settings.SystemNamespace,
 		"--manifests", filepath.Join(testenv.IstioSrc, "manifests"),
 		"--set", "values.global.imagePullPolicy=" + s.PullPolicy,
@@ -836,7 +838,7 @@ func CreateRemoteSecret(ctx resource.Context, c cluster.Cluster, cfg Config, opt
 	}
 	cmd = append(cmd, opts...)
 
-	scopes.Framework.Infof("Creating remote secret for cluster cluster %s %v", c.Name(), cmd)
+	scopes.Framework.Infof("Creating remote secret for cluster %s %v", c.Name(), cmd)
 	out, _, err := istioCtl.Invoke(cmd)
 	if err != nil {
 		return "", fmt.Errorf("create remote secret failed for cluster %s: %v", c.Name(), err)
@@ -935,15 +937,6 @@ func configureRemoteClusterDiscovery(i *operatorComponent, cfg Config, c cluster
 		return err
 	}
 
-	// configure istioctl to run with an external control plane topology.
-	if !i.ctx.Clusters().IsMulticluster() {
-		os.Setenv("ISTIOCTL_XDS_ADDRESS", discoveryAddress.String())
-		os.Setenv("ISTIOCTL_PREFER_EXPERIMENTAL", "true")
-		if err := cmd.ConfigAndEnvProcessing(); err != nil {
-			return err
-		}
-	}
-
 	discoveryIP := discoveryAddress.IP.String()
 
 	scopes.Framework.Infof("creating endpoints and service in %s to get discovery from %s", c.Name(), discoveryIP)
diff --git a/tests/integration/iop-externalistiod-remote-integration-test-defaults.yaml b/tests/integration/iop-externalistiod-remote-integration-test-defaults.yaml
deleted file mode 100644
index 8d40b5d322..0000000000
--- a/tests/integration/iop-externalistiod-remote-integration-test-defaults.yaml
+++ /dev/null
@@ -1,29 +0,0 @@
-# This file provides some defaults for integration testing.
-apiVersion: install.istio.io/v1alpha1
-kind: IstioOperator
-metadata:
-  name: install
-spec:
-  meshConfig:
-    accessLogFile: "/dev/stdout"
-    defaultConfig:
-      proxyMetadata:
-        ISTIO_META_DNS_CAPTURE: "true"
-  components:
-    base:
-      enabled: false
-    pilot:
-      enabled: false
-    ingressGateways:
-    - name: istio-ingressgateway
-      enabled: false
-    egressGateways:
-    - name: istio-egressgateway
-      enabled: false
-    istiodRemote:
-      enabled: true
-  values:
-    global:
-      externalIstiod: true
-    telemetry:
-      enabled: false
diff --git a/tests/integration/iop-istiodless-remote-integration-test-defaults.yaml b/tests/integration/iop-istiodless-remote-integration-test-defaults.yaml
deleted file mode 100644
index 0783c18c6b..0000000000
--- a/tests/integration/iop-istiodless-remote-integration-test-defaults.yaml
+++ /dev/null
@@ -1,25 +0,0 @@
-# This file provides some defaults for integration testing.
-apiVersion: install.istio.io/v1alpha1
-kind: IstioOperator
-spec:
-  meshConfig:
-    accessLogFile: "/dev/stdout"
-    defaultConfig:
-      proxyMetadata:
-        ISTIO_META_DNS_CAPTURE: "true"
-  components:
-    base:
-      enabled: false
-    pilot:
-      enabled: false
-    istiodRemote:
-      enabled: true
-  values:
-    global:
-      externalIstiod: true
-      configCluster: true
-      proxy:
-        resources:
-          requests:
-            cpu: 10m
-            memory: 40Mi
diff --git a/tests/integration/iop-remote-integration-test-defaults.yaml b/tests/integration/iop-remote-integration-test-defaults.yaml
index 34341a16ca..8d40b5d322 100644
--- a/tests/integration/iop-remote-integration-test-defaults.yaml
+++ b/tests/integration/iop-remote-integration-test-defaults.yaml
@@ -1,16 +1,29 @@
 # This file provides some defaults for integration testing.
 apiVersion: install.istio.io/v1alpha1
 kind: IstioOperator
+metadata:
+  name: install
 spec:
   meshConfig:
     accessLogFile: "/dev/stdout"
     defaultConfig:
       proxyMetadata:
         ISTIO_META_DNS_CAPTURE: "true"
+  components:
+    base:
+      enabled: false
+    pilot:
+      enabled: false
+    ingressGateways:
+    - name: istio-ingressgateway
+      enabled: false
+    egressGateways:
+    - name: istio-egressgateway
+      enabled: false
+    istiodRemote:
+      enabled: true
   values:
     global:
-      proxy:
-        resources:
-          requests:
-            cpu: 10m
-            memory: 40Mi
+      externalIstiod: true
+    telemetry:
+      enabled: false
diff --git a/tests/integration/iop-externalistiod-remote-integration-test-gateways.yaml b/tests/integration/iop-remote-integration-test-gateways.yaml
similarity index 100%
rename from tests/integration/iop-externalistiod-remote-integration-test-gateways.yaml
rename to tests/integration/iop-remote-integration-test-gateways.yaml
diff --git a/tests/integration/telemetry/stats/prometheus/nullvm/dashboard_test.go b/tests/integration/telemetry/stats/prometheus/nullvm/dashboard_test.go
index e155c1e127..07b2d769be 100644
--- a/tests/integration/telemetry/stats/prometheus/nullvm/dashboard_test.go
+++ b/tests/integration/telemetry/stats/prometheus/nullvm/dashboard_test.go
@@ -67,7 +67,8 @@
 			// In default install, we have no proxy
 			"istio-proxy",
 			// https://github.com/istio/istio/issues/22674 this causes flaky tests
-			"galley_validation_passed",
+			//"galley_validation_passed",
+			"galley_validation_failed",
 			// cAdvisor does not expose this metrics, and we don't have kubelet in kind
 			"container_fs_usage_bytes",
 			// flakes: https://github.com/istio/istio/issues/29871
-- 
2.35.3

