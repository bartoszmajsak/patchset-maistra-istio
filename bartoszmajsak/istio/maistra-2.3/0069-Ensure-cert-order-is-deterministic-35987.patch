From 6c311380575e9370420c4c33ae9fbd00123fea4e Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Tue, 9 Nov 2021 16:02:30 -0800
Subject: Ensure cert order is deterministic (#35987)

* Ensure cert order is deterministic

* fix escaping
---
 pkg/test/echo/client/parsedresponse.go       | 21 ++++++++++++++++++++
 tests/integration/pilot/common/routing.go    |  9 ++-------
 tests/integration/security/util/cert/cert.go |  4 ++--
 3 files changed, 25 insertions(+), 9 deletions(-)

diff --git a/pkg/test/echo/client/parsedresponse.go b/pkg/test/echo/client/parsedresponse.go
index 7fd6ea6d1a..3544dc0d61 100644
--- a/pkg/test/echo/client/parsedresponse.go
+++ b/pkg/test/echo/client/parsedresponse.go
@@ -17,6 +17,7 @@
 import (
 	"fmt"
 	"regexp"
+	"sort"
 	"strconv"
 	"strings"
 
@@ -341,6 +342,26 @@ func (r ParsedResponses) String() string {
 	return out
 }
 
+// ResponseBody returns the body of the response, in order
+func (r *ParsedResponse) ResponseBody() []string {
+	type kv struct {
+		k, v string
+	}
+	kvs := []kv{}
+	// RawResponse is in random order, so get the order back via sorting.
+	for k, v := range r.RawResponse {
+		kvs = append(kvs, kv{k, v})
+	}
+	sort.Slice(kvs, func(i, j int) bool {
+		return kvs[i].k < kvs[j].k
+	})
+	resp := []string{}
+	for _, v := range kvs {
+		resp = append(resp, v.v)
+	}
+	return resp
+}
+
 func ParseForwardedResponse(req *proto.ForwardEchoRequest, resp *proto.ForwardEchoResponse) ParsedResponses {
 	responses := make([]*ParsedResponse, len(resp.Output))
 	for i, output := range resp.Output {
diff --git a/tests/integration/pilot/common/routing.go b/tests/integration/pilot/common/routing.go
index 54d4c4a602..745d88230d 100644
--- a/tests/integration/pilot/common/routing.go
+++ b/tests/integration/pilot/common/routing.go
@@ -2257,13 +2257,8 @@ func DNSTestCases(apps *EchoDeployments, cniEnabled bool) []TrafficTestCase {
 					Validator: echo.ValidatorFunc(
 						func(response echoclient.ParsedResponses, _ error) error {
 							return response.Check(func(_ int, response *echoclient.ParsedResponse) error {
-								ips := []string{}
-								for _, v := range response.RawResponse {
-									ips = append(ips, v)
-								}
-								sort.Strings(ips)
-								if !reflect.DeepEqual(ips, tt.expected) {
-									return fmt.Errorf("unexpected dns response: wanted %v, got %v", tt.expected, ips)
+								if !reflect.DeepEqual(response.ResponseBody(), tt.expected) {
+									return fmt.Errorf("unexpected dns response: wanted %v, got %v", tt.expected, response.ResponseBody())
 								}
 								return nil
 							})
diff --git a/tests/integration/security/util/cert/cert.go b/tests/integration/security/util/cert/cert.go
index 70659b2818..20116796fc 100644
--- a/tests/integration/security/util/cert/cert.go
+++ b/tests/integration/security/util/cert/cert.go
@@ -49,9 +49,9 @@ func DumpCertFromSidecar(t test.Failer, from, to echo.Instance, port string) []s
 		t.Fatalf("dump cert failed, no responses")
 	}
 	certs := []string{}
-	for _, v := range resp[0].RawResponse {
+	for _, rr := range resp[0].ResponseBody() {
 		var s string
-		if err := json.Unmarshal([]byte(v), &s); err != nil {
+		if err := json.Unmarshal([]byte(rr), &s); err != nil {
 			t.Fatalf("failed to unmarshal: %v", err)
 		}
 		certs = append(certs, s)
-- 
2.35.3

