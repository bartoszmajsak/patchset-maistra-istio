From 0ad2ea8ba30372b41e467ef99786871872f4e6ca Mon Sep 17 00:00:00 2001
From: Rui Gu <ruigu@google.com>
Date: Thu, 20 Jan 2022 16:59:28 -0800
Subject: Implement gateway alias for routes (#36915)

Add annotation "gateway.istio.io/alias-for". If this annotation
is present in a gateway, any routes that bind to the gateway
in the annotation will bind to the gateway with the annotation.
This allows us to build other gateway controller on top of
Istio gateway controller.
---
 pilot/pkg/config/kube/gateway/conversion.go   | 24 ++++-
 .../config/kube/gateway/conversion_test.go    |  1 +
 .../gateway/testdata/alias.status.yaml.golden | 93 +++++++++++++++++++
 .../config/kube/gateway/testdata/alias.yaml   | 65 +++++++++++++
 .../kube/gateway/testdata/alias.yaml.golden   | 41 ++++++++
 5 files changed, 222 insertions(+), 2 deletions(-)
 create mode 100644 pilot/pkg/config/kube/gateway/testdata/alias.status.yaml.golden
 create mode 100644 pilot/pkg/config/kube/gateway/testdata/alias.yaml
 create mode 100644 pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden

diff --git a/pilot/pkg/config/kube/gateway/conversion.go b/pilot/pkg/config/kube/gateway/conversion.go
index 72a84d5cef..6487e600a1 100644
--- a/pilot/pkg/config/kube/gateway/conversion.go
+++ b/pilot/pkg/config/kube/gateway/conversion.go
@@ -39,8 +39,9 @@
 )
 
 const (
-	DefaultClassName = "istio"
-	ControllerName   = "istio.io/gateway-controller"
+	DefaultClassName             = "istio"
+	ControllerName               = "istio.io/gateway-controller"
+	gatewayAliasForAnnotationKey = "gateway.istio.io/alias-for"
 )
 
 // KubernetesResources stores all inputs to our conversion
@@ -1093,6 +1094,25 @@ func convertGateways(r *KubernetesResources) ([]config.Config, map[parentKey]map
 			servers = append(servers, server)
 		}
 
+		// If "gateway.istio.io/alias-for" annotation is present, any Route
+		// that binds to the gateway will bind to its alias instead.
+		// The typical usage is when the original gateway is not managed by the gateway controller
+		// but the ( generated ) alias is. This allows people to build their own
+		// gateway controllers on top of Istio Gateway Controller.
+		if obj.Annotations != nil && obj.Annotations[gatewayAliasForAnnotationKey] != "" {
+			ref := parentKey{
+				Kind:      gvk.KubernetesGateway,
+				Name:      obj.Annotations[gatewayAliasForAnnotationKey],
+				Namespace: obj.Namespace,
+			}
+			alias := parentKey{
+				Kind:      gvk.KubernetesGateway,
+				Name:      obj.Name,
+				Namespace: obj.Namespace,
+			}
+			gwMap[ref] = gwMap[alias]
+		}
+
 		internal, external, warnings := r.Context.ResolveGatewayInstances(obj.Namespace, gatewayServices, servers)
 		if len(skippedAddresses) > 0 {
 			warnings = append(warnings, fmt.Sprintf("Only Hostname is supported, ignoring %v", skippedAddresses))
diff --git a/pilot/pkg/config/kube/gateway/conversion_test.go b/pilot/pkg/config/kube/gateway/conversion_test.go
index 052618f497..fabd3102f0 100644
--- a/pilot/pkg/config/kube/gateway/conversion_test.go
+++ b/pilot/pkg/config/kube/gateway/conversion_test.go
@@ -60,6 +60,7 @@ func TestConvertResources(t *testing.T) {
 		{"reference-policy-tls"},
 		{"serviceentry"},
 		{"eastwest"},
+		{"alias"},
 	}
 	for _, tt := range cases {
 		t.Run(tt.name, func(t *testing.T) {
diff --git a/pilot/pkg/config/kube/gateway/testdata/alias.status.yaml.golden b/pilot/pkg/config/kube/gateway/testdata/alias.status.yaml.golden
new file mode 100644
index 0000000000..28a5442e2a
--- /dev/null
+++ b/pilot/pkg/config/kube/gateway/testdata/alias.status.yaml.golden
@@ -0,0 +1,93 @@
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: GatewayClass
+metadata:
+  creationTimestamp: null
+  name: istio
+  namespace: default
+spec: null
+status:
+  conditions:
+  - lastTransitionTime: fake
+    message: Handled by Istio controller
+    reason: Accepted
+    status: "True"
+    type: Accepted
+---
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: Gateway
+metadata:
+  creationTimestamp: null
+  name: third-party-gateway
+  namespace: istio-system
+spec: null
+---
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: Gateway
+metadata:
+  creationTimestamp: null
+  name: gateway
+  namespace: istio-system
+spec: null
+status:
+  addresses:
+  - type: IPAddress
+    value: 1.2.3.4
+  conditions:
+  - lastTransitionTime: fake
+    message: Gateway valid, assigned to service(s) istio-ingressgateway.istio-system.svc.domain.suffix:80
+    reason: ListenersValid
+    status: "True"
+    type: Ready
+  - lastTransitionTime: fake
+    message: Resources available
+    reason: ResourcesAvailable
+    status: "True"
+    type: Scheduled
+  listeners:
+  - attachedRoutes: 1
+    conditions:
+    - lastTransitionTime: fake
+      message: No errors found
+      reason: ListenerReady
+      status: "False"
+      type: Conflicted
+    - lastTransitionTime: fake
+      message: No errors found
+      reason: ListenerReady
+      status: "False"
+      type: Detached
+    - lastTransitionTime: fake
+      message: No errors found
+      reason: ListenerReady
+      status: "True"
+      type: Ready
+    - lastTransitionTime: fake
+      message: No errors found
+      reason: ListenerReady
+      status: "True"
+      type: ResolvedRefs
+    name: default
+    supportedKinds:
+    - group: gateway.networking.k8s.io
+      kind: HTTPRoute
+---
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: HTTPRoute
+metadata:
+  creationTimestamp: null
+  name: http
+  namespace: default
+spec: null
+status:
+  parents:
+  - conditions:
+    - lastTransitionTime: fake
+      message: Route was valid
+      reason: RouteAdmitted
+      status: "True"
+      type: Accepted
+    controllerName: istio.io/gateway-controller
+    parentRef:
+      name: third-party-gateway
+      namespace: istio-system
+---
diff --git a/pilot/pkg/config/kube/gateway/testdata/alias.yaml b/pilot/pkg/config/kube/gateway/testdata/alias.yaml
new file mode 100644
index 0000000000..f420ac9879
--- /dev/null
+++ b/pilot/pkg/config/kube/gateway/testdata/alias.yaml
@@ -0,0 +1,65 @@
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: GatewayClass
+metadata:
+  name: istio
+spec:
+  controllerName: istio.io/gateway-controller
+---
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: Gateway
+metadata:
+  name: third-party-gateway
+  namespace: istio-system
+spec:
+  addresses:
+  - value: istio-ingressgateway
+    type: Hostname
+  gatewayClassName: third-party-gatewayclass
+  listeners:
+  - name: default
+    hostname: "*.domain.example"
+    port: 80
+    protocol: HTTP
+    allowedRoutes:
+      namespaces:
+        from: All
+---
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: Gateway
+metadata:
+  name: gateway
+  namespace: istio-system
+  annotations:
+    gateway.istio.io/alias-for: third-party-gateway
+spec:
+  addresses:
+  - value: istio-ingressgateway
+    type: Hostname
+  gatewayClassName: istio
+  listeners:
+  - name: default
+    hostname: "*.domain.example"
+    port: 80
+    protocol: HTTP
+    allowedRoutes:
+      namespaces:
+        from: All
+---
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: HTTPRoute
+metadata:
+  name: http
+  namespace: default
+spec:
+  parentRefs:
+  - name: third-party-gateway
+    namespace: istio-system
+  hostnames: ["first.domain.example", "another.domain.example"]
+  rules:
+  - matches:
+    - path:
+        type: PathPrefix
+        value: /
+    backendRefs:
+    - name: httpbin
+      port: 80
diff --git a/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden b/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden
new file mode 100644
index 0000000000..7641a72393
--- /dev/null
+++ b/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden
@@ -0,0 +1,41 @@
+apiVersion: networking.istio.io/v1alpha3
+kind: Gateway
+metadata:
+  annotations:
+    internal.istio.io/gateway-service: istio-ingressgateway.istio-system.svc.domain.suffix
+    internal.istio.io/parent: Gateway/gateway/default.istio-system
+  creationTimestamp: null
+  name: gateway-istio-autogenerated-k8s-gateway-default
+  namespace: istio-system
+spec:
+  servers:
+  - hosts:
+    - '*/*.domain.example'
+    port:
+      name: default
+      number: 80
+      protocol: HTTP
+---
+apiVersion: networking.istio.io/v1alpha3
+kind: VirtualService
+metadata:
+  annotations:
+    internal.istio.io/parent: HTTPRoute/http.default
+  creationTimestamp: null
+  name: http-istio-autogenerated-k8s-gateway
+  namespace: default
+spec:
+  gateways:
+  - istio-system/gateway-istio-autogenerated-k8s-gateway-default
+  hosts:
+  - first.domain.example
+  - another.domain.example
+  http:
+  - match:
+    - uri:
+        prefix: "/"
+    route:
+    - destination:
+        host: httpbin.default.svc.domain.suffix
+        port:
+          number: 80
-- 
2.35.3

