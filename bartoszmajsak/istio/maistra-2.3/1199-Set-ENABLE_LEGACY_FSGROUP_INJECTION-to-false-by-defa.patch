From a0f6a9463feb5ffecf2ee23d4527b846260b7dcf Mon Sep 17 00:00:00 2001
From: Faseela K <faseela.k@est.tech>
Date: Sat, 7 May 2022 02:31:49 +0200
Subject: Set ENABLE_LEGACY_FSGROUP_INJECTION to false by default (#38724)

* Set ENABLE_LEGACY_FSGROUP_INJECTION to false by default

Since k8s 1.18 is outside of the official istio support window,
changing the default value of the feature flag, though the changes
to automatically detect the version and set the flag are retained.

Signed-off-by: Faseela K <faseela.k@est.tech>

* Add jwt check and fix release notes

Signed-off-by: Faseela K <faseela.k@est.tech>

* Enhance code comment for getFSGroupOverlay

Signed-off-by: Faseela K <faseela.k@est.tech>

* incorporate review comments

Signed-off-by: Faseela K <faseela.k@est.tech>

* Refactor the jwtPolicy check

Signed-off-by: Faseela K <faseela.k@est.tech>
---
 operator/pkg/manifest/shared.go               | 27 ++++++++++---------
 pilot/pkg/features/pilot.go                   |  6 +----
 .../notes/disable-fs-group-injection.yaml     |  8 ++++++
 3 files changed, 24 insertions(+), 17 deletions(-)
 create mode 100644 releasenotes/notes/disable-fs-group-injection.yaml

diff --git a/operator/pkg/manifest/shared.go b/operator/pkg/manifest/shared.go
index ec22be66b6..7a29edba70 100644
--- a/operator/pkg/manifest/shared.go
+++ b/operator/pkg/manifest/shared.go
@@ -412,11 +412,7 @@ func overlayHubAndTag(yml string) (string, error) {
 func getClusterSpecificValues(client kube.Client, force bool, l clog.Logger) (string, error) {
 	overlays := []string{}
 
-	fsgroup := getFSGroupOverlay(client)
-	if fsgroup != "" {
-		overlays = append(overlays, fsgroup)
-	}
-	jwt, err := getJwtTypeOverlay(client, l)
+	jwtStr, jwtPolicy, err := getJwtTypeOverlay(client, l)
 	if err != nil {
 		if force {
 			l.LogAndPrint(err)
@@ -424,14 +420,21 @@ func getClusterSpecificValues(client kube.Client, force bool, l clog.Logger) (st
 			return "", err
 		}
 	} else {
-		overlays = append(overlays, jwt)
+		overlays = append(overlays, jwtStr)
+	}
+	fsgroup := getFSGroupOverlay(client, jwtPolicy)
+	if fsgroup != "" {
+		overlays = append(overlays, fsgroup)
 	}
 	return makeTreeFromSetList(overlays)
 }
 
-func getFSGroupOverlay(config kube.Client) string {
-	if kube.IsAtLeastVersion(config, 19) {
-		return "values.pilot.env.ENABLE_LEGACY_FSGROUP_INJECTION=false"
+func getFSGroupOverlay(config kube.Client, jwtPolicy util.JWTPolicy) string {
+	// Set ENABLE_LEGACY_FSGROUP_INJECTION to true only for Kubernetes 1.18 or older,
+	// together with third-party-jwt, as we need the fsGroup configuration for the projected
+	// service account volume mount, which is only used by third-party-jwt.
+	if kube.IsLessThanVersion(config, 19) && jwtPolicy == util.ThirdPartyJWT {
+		return "values.pilot.env.ENABLE_LEGACY_FSGROUP_INJECTION=true"
 	}
 	return ""
 }
@@ -469,17 +472,17 @@ func makeTreeFromSetList(setOverlay []string) (string, error) {
 	return tpath.AddSpecRoot(string(out))
 }
 
-func getJwtTypeOverlay(client kube.Client, l clog.Logger) (string, error) {
+func getJwtTypeOverlay(client kube.Client, l clog.Logger) (string, util.JWTPolicy, error) {
 	jwtPolicy, err := util.DetectSupportedJWTPolicy(client)
 	if err != nil {
-		return "", fmt.Errorf("failed to determine JWT policy support. Use the --force flag to ignore this: %v", err)
+		return "", "", fmt.Errorf("failed to determine JWT policy support. Use the --force flag to ignore this: %v", err)
 	}
 	if jwtPolicy == util.FirstPartyJWT {
 		// nolint: lll
 		l.LogAndPrint("Detected that your cluster does not support third party JWT authentication. " +
 			"Falling back to less secure first party JWT. See " + url.ConfigureSAToken + " for details.")
 	}
-	return "values.global.jwtPolicy=" + string(jwtPolicy), nil
+	return "values.global.jwtPolicy=" + string(jwtPolicy), jwtPolicy, nil
 }
 
 // unmarshalAndValidateIOP unmarshals a string containing IstioOperator YAML, validates it, and returns a struct
diff --git a/pilot/pkg/features/pilot.go b/pilot/pkg/features/pilot.go
index 7b68c08ae7..8e600b5da1 100644
--- a/pilot/pkg/features/pilot.go
+++ b/pilot/pkg/features/pilot.go
@@ -443,12 +443,8 @@
 	XDSCacheMaxSize = env.RegisterIntVar("PILOT_XDS_CACHE_SIZE", 60000,
 		"The maximum number of cache entries for the XDS cache.").Get()
 
-	// EnableLegacyFSGroupInjection has first-party-jwt as allowed because we only
-	// need the fsGroup configuration for the projected service account volume mount,
-	// which is only used by first-party-jwt. The installer will automatically
-	// configure this on Kubernetes 1.19+.
 	// Note: while this appears unused in the go code, this sets a default which is used in the injection template.
-	EnableLegacyFSGroupInjection = env.RegisterBoolVar("ENABLE_LEGACY_FSGROUP_INJECTION", JwtPolicy != jwt.PolicyFirstParty,
+	EnableLegacyFSGroupInjection = env.RegisterBoolVar("ENABLE_LEGACY_FSGROUP_INJECTION", false,
 		"If true, Istiod will set the pod fsGroup to 1337 on injection. This is required for Kubernetes 1.18 and older "+
 			`(see https://github.com/kubernetes/kubernetes/issues/57923 for details) unless JWT_POLICY is "first-party-jwt".`).Get()
 
diff --git a/releasenotes/notes/disable-fs-group-injection.yaml b/releasenotes/notes/disable-fs-group-injection.yaml
new file mode 100644
index 0000000000..d39b8b615b
--- /dev/null
+++ b/releasenotes/notes/disable-fs-group-injection.yaml
@@ -0,0 +1,8 @@
+apiVersion: release-notes/v2
+kind: feature
+area: installation
+releaseNotes:
+- |
+  **Updated** default value of the feature flag `ENABLE_LEGACY_FSGROUP_INJECTION` to false.
+  This may cause issues with sidecars when installing on Helm on Kubernetes versions prior to 1.19.
+
-- 
2.35.3

