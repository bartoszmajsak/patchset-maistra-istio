From ed56633c12b76f771d6046c764f9869db5c3ed92 Mon Sep 17 00:00:00 2001
From: zirain <hejianpeng2@huawei.com>
Date: Mon, 14 Feb 2022 11:26:59 +0800
Subject: `remote.Image` respect `fetchOpts` (#37318)

* `remote.Image` respect `fetchOpts`

* fix nit
---
 pkg/wasm/imagefetcher.go | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/pkg/wasm/imagefetcher.go b/pkg/wasm/imagefetcher.go
index 6a45f4a2bb..3c24f68388 100644
--- a/pkg/wasm/imagefetcher.go
+++ b/pkg/wasm/imagefetcher.go
@@ -81,7 +81,7 @@ func NewImageFetcher(ctx context.Context, opt ImageFetcherOption) *ImageFetcher
 
 // Fetch is the entrypoint for fetching Wasm binary from Wasm Image Specification compatible images.
 func (o *ImageFetcher) Fetch(url, expManifestDigest string) ([]byte, error) {
-	ref, err := parseReference(url)
+	ref, err := o.parseReference(url)
 	if err != nil {
 		return nil, fmt.Errorf("could not parse url in image reference: %v", err)
 	}
@@ -135,20 +135,21 @@ func (o *ImageFetcher) Fetch(url, expManifestDigest string) ([]byte, error) {
 	)
 }
 
-func parseReference(url string) (name.Reference, error) {
+func (o *ImageFetcher) parseReference(url string) (name.Reference, error) {
 	ref, err := name.ParseReference(url)
 	if err != nil {
 		return nil, err
 	}
 
 	// fallback to http based request, inspired by [helm](https://github.com/helm/helm/blob/12f1bc0acdeb675a8c50a78462ed3917fb7b2e37/pkg/registry/client.go#L594)
-	_, err = remote.Get(ref)
+	// only deal with https fallback instead of attributing all other type of errors to URL parsing error
+	_, err = remote.Get(ref, o.fetchOpts...)
 	if err != nil && strings.Contains(err.Error(), "server gave HTTP response") {
 		wasmLog.Infof("fetch with plain text from %s", url)
 		return name.ParseReference(url, name.Insecure)
 	}
 
-	return ref, err
+	return ref, nil
 }
 
 // extractDockerImage extracts the Wasm binary from the
-- 
2.35.3

