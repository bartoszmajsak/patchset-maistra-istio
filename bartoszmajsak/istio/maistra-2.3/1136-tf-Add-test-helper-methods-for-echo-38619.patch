From 36f8efcc58ac3441561cdcd83b1366a5c368b396 Mon Sep 17 00:00:00 2001
From: Nathan Mittler <nmittler@gmail.com>
Date: Wed, 27 Apr 2022 11:12:01 -0700
Subject: [tf] Add test helper methods for echo (#38619)

This is in support of https://github.com/istio/istio/pull/37914. This helps when using echo `instance`/`instances` within YAML templates.
---
 pkg/test/framework/components/echo/config.go  | 28 ++++++++++++++-----
 .../components/echo/echotest/filters_test.go  | 20 +++++++++++++
 .../framework/components/echo/instances.go    | 20 +++++++++++++
 .../components/echo/kube/instance.go          | 20 +++++++++++++
 .../components/echo/match/matchers_test.go    | 20 +++++++++++++
 .../components/echo/namespacedname.go         | 14 ++++++----
 .../components/echo/staticvm/instance.go      | 20 +++++++++++++
 7 files changed, 130 insertions(+), 12 deletions(-)

diff --git a/pkg/test/framework/components/echo/config.go b/pkg/test/framework/components/echo/config.go
index 6b05658737..63d1417e85 100644
--- a/pkg/test/framework/components/echo/config.go
+++ b/pkg/test/framework/components/echo/config.go
@@ -43,9 +43,26 @@ type Cluster interface {
 type Configurable interface {
 	Config() Config
 
-	// NamespacedName is a short form for Config().NamespacedName().
+	// ServiceName is the name of this service within the namespace.
+	ServiceName() string
+
+	// NamespaceName returns the name of the namespace or "" if the Namespace is nil.
+	NamespaceName() string
+
+	// NamespacedName returns the namespaced name for this service.
+	// Short form for Config().NamespacedName().
 	NamespacedName() NamespacedName
 
+	// ServiceAccountName returns the service account string for this service.
+	ServiceAccountName() string
+
+	// ClusterLocalFQDN returns the fully qualified domain name for cluster-local host.
+	ClusterLocalFQDN() string
+
+	// ClusterSetLocalFQDN returns the fully qualified domain name for the Kubernetes
+	// Multi-Cluster Services (MCS) Cluster Set host.
+	ClusterSetLocalFQDN() string
+
 	// PortForName is a short form for Config().Ports.MustForName().
 	PortForName(name string) Port
 }
@@ -152,10 +169,7 @@ type Config struct {
 
 // NamespaceName returns the string name of the namespace.
 func (c Config) NamespaceName() string {
-	if c.Namespace != nil {
-		return c.Namespace.Name()
-	}
-	return ""
+	return c.NamespacedName().NamespaceName()
 }
 
 // NamespacedName returns the namespaced name for the service.
@@ -166,8 +180,8 @@ func (c Config) NamespacedName() NamespacedName {
 	}
 }
 
-// ServiceAccountString returns the service account string for this service.
-func (c Config) ServiceAccountString() string {
+// ServiceAccountName returns the service account name for this service.
+func (c Config) ServiceAccountName() string {
 	return "cluster.local/ns/" + c.NamespaceName() + "/sa/" + c.Service
 }
 
diff --git a/pkg/test/framework/components/echo/echotest/filters_test.go b/pkg/test/framework/components/echo/echotest/filters_test.go
index 9d220b257d..3fed549fc1 100644
--- a/pkg/test/framework/components/echo/echotest/filters_test.go
+++ b/pkg/test/framework/components/echo/echotest/filters_test.go
@@ -354,6 +354,26 @@ func (f fakeInstance) Config() echo.Config {
 	return cfg
 }
 
+func (f fakeInstance) ServiceName() string {
+	return f.Config().Service
+}
+
+func (f fakeInstance) NamespaceName() string {
+	return f.Config().NamespaceName()
+}
+
+func (f fakeInstance) ServiceAccountName() string {
+	return f.Config().ServiceAccountName()
+}
+
+func (f fakeInstance) ClusterLocalFQDN() string {
+	return f.Config().ClusterLocalFQDN()
+}
+
+func (f fakeInstance) ClusterSetLocalFQDN() string {
+	return f.Config().ClusterSetLocalFQDN()
+}
+
 func (f fakeInstance) Address() string {
 	panic("implement me")
 }
diff --git a/pkg/test/framework/components/echo/instances.go b/pkg/test/framework/components/echo/instances.go
index c2e687a3b5..580eb59023 100644
--- a/pkg/test/framework/components/echo/instances.go
+++ b/pkg/test/framework/components/echo/instances.go
@@ -29,6 +29,26 @@
 // Instances contains the instances created by the builder with methods for filtering
 type Instances []Instance
 
+func (i Instances) ServiceName() string {
+	return i.Config().Service
+}
+
+func (i Instances) NamespaceName() string {
+	return i.Config().NamespaceName()
+}
+
+func (i Instances) ServiceAccountName() string {
+	return i.Config().ServiceAccountName()
+}
+
+func (i Instances) ClusterLocalFQDN() string {
+	return i.Config().ClusterLocalFQDN()
+}
+
+func (i Instances) ClusterSetLocalFQDN() string {
+	return i.Config().ClusterSetLocalFQDN()
+}
+
 func (i Instances) NamespacedName() NamespacedName {
 	return i.Config().NamespacedName()
 }
diff --git a/pkg/test/framework/components/echo/kube/instance.go b/pkg/test/framework/components/echo/kube/instance.go
index 3e2f978f85..4cd295d6a7 100644
--- a/pkg/test/framework/components/echo/kube/instance.go
+++ b/pkg/test/framework/components/echo/kube/instance.go
@@ -190,6 +190,26 @@ func (c *instance) PortForName(name string) echo.Port {
 	return c.cfg.Ports.MustForName(name)
 }
 
+func (c *instance) ServiceName() string {
+	return c.cfg.Service
+}
+
+func (c *instance) NamespaceName() string {
+	return c.cfg.NamespaceName()
+}
+
+func (c *instance) ServiceAccountName() string {
+	return c.cfg.ServiceAccountName()
+}
+
+func (c *instance) ClusterLocalFQDN() string {
+	return c.cfg.ClusterLocalFQDN()
+}
+
+func (c *instance) ClusterSetLocalFQDN() string {
+	return c.cfg.ClusterSetLocalFQDN()
+}
+
 func (c *instance) Config() echo.Config {
 	return c.cfg
 }
diff --git a/pkg/test/framework/components/echo/match/matchers_test.go b/pkg/test/framework/components/echo/match/matchers_test.go
index 6a8a24647a..af24241eaf 100644
--- a/pkg/test/framework/components/echo/match/matchers_test.go
+++ b/pkg/test/framework/components/echo/match/matchers_test.go
@@ -122,6 +122,26 @@ func (f fakeInstance) Config() echo.Config {
 	return cfg
 }
 
+func (f fakeInstance) ServiceName() string {
+	return f.Config().Service
+}
+
+func (f fakeInstance) NamespaceName() string {
+	return f.Config().NamespaceName()
+}
+
+func (f fakeInstance) ServiceAccountName() string {
+	return f.Config().ServiceAccountName()
+}
+
+func (f fakeInstance) ClusterLocalFQDN() string {
+	return f.Config().ClusterLocalFQDN()
+}
+
+func (f fakeInstance) ClusterSetLocalFQDN() string {
+	return f.Config().ClusterSetLocalFQDN()
+}
+
 func (f fakeInstance) Address() string {
 	panic("implement me")
 }
diff --git a/pkg/test/framework/components/echo/namespacedname.go b/pkg/test/framework/components/echo/namespacedname.go
index 834e28e8f3..dffa0d8b88 100644
--- a/pkg/test/framework/components/echo/namespacedname.go
+++ b/pkg/test/framework/components/echo/namespacedname.go
@@ -31,13 +31,17 @@ type NamespacedName struct {
 	Name string
 }
 
-// String returns the Istio-formatted service name in the form of <namespace>/<name>.
-func (n NamespacedName) String() string {
-	ns := ""
+// NamespaceName returns the string name of the namespace, or "" if Namespace is nil.
+func (n NamespacedName) NamespaceName() string {
 	if n.Namespace != nil {
-		ns = n.Namespace.Name()
+		return n.Namespace.Name()
 	}
-	return ns + "/" + n.Name
+	return ""
+}
+
+// String returns the Istio-formatted service name in the form of <namespace>/<name>.
+func (n NamespacedName) String() string {
+	return n.NamespaceName() + "/" + n.Name
 }
 
 // PrefixString returns a string in the form of <name>.<prefix>. This is helpful for
diff --git a/pkg/test/framework/components/echo/staticvm/instance.go b/pkg/test/framework/components/echo/staticvm/instance.go
index 932169262b..bad382de01 100644
--- a/pkg/test/framework/components/echo/staticvm/instance.go
+++ b/pkg/test/framework/components/echo/staticvm/instance.go
@@ -117,6 +117,26 @@ func (i *instance) PortForName(name string) echo.Port {
 	return i.Config().Ports.MustForName(name)
 }
 
+func (i *instance) ServiceName() string {
+	return i.Config().Service
+}
+
+func (i *instance) NamespaceName() string {
+	return i.Config().NamespaceName()
+}
+
+func (i *instance) ServiceAccountName() string {
+	return i.Config().ServiceAccountName()
+}
+
+func (i *instance) ClusterLocalFQDN() string {
+	return i.Config().ClusterLocalFQDN()
+}
+
+func (i *instance) ClusterSetLocalFQDN() string {
+	return i.Config().ClusterSetLocalFQDN()
+}
+
 func (i *instance) Config() echo.Config {
 	return i.config
 }
-- 
2.35.3

