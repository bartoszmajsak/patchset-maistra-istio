From 7d321fb965f98db2f28fddbca2d7aa973d74db90 Mon Sep 17 00:00:00 2001
From: Shiming Zhang <wzshiming@foxmail.com>
Date: Thu, 18 Nov 2021 11:16:03 +0800
Subject: Fix incorrect use of read-write lock (#36080)

---
 cni/pkg/taint/taint.go | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/cni/pkg/taint/taint.go b/cni/pkg/taint/taint.go
index 579dc61c34..faccc5c9ad 100644
--- a/cni/pkg/taint/taint.go
+++ b/cni/pkg/taint/taint.go
@@ -111,8 +111,8 @@ func (ts *Setter) validTolerance(pod v1.Pod) bool {
 
 // check whether current node have readiness
 func (ts *Setter) HasReadinessTaint(node *v1.Node) bool {
-	ts.mutex.Lock()
-	defer ts.mutex.Unlock()
+	ts.mutex.RLock()
+	defer ts.mutex.RUnlock()
 	for _, taint := range node.Spec.Taints {
 		if taint.Key == TaintName && taint.Effect == v1.TaintEffectNoSchedule {
 			return true
@@ -124,8 +124,8 @@ func (ts *Setter) HasReadinessTaint(node *v1.Node) bool {
 
 // assumption: order of taint is not important
 func (ts *Setter) RemoveReadinessTaint(node *v1.Node) error {
-	ts.mutex.RLock()
-	defer ts.mutex.RUnlock()
+	ts.mutex.Lock()
+	defer ts.mutex.Unlock()
 	updatedTaint := deleteTaint(node.Spec.Taints, &v1.Taint{Key: TaintName, Effect: v1.TaintEffectNoSchedule})
 	node.Spec.Taints = updatedTaint
 	updatedNodeWithTaint, err := ts.Client.CoreV1().Nodes().Update(context.TODO(), node, metav1.UpdateOptions{})
-- 
2.35.3

