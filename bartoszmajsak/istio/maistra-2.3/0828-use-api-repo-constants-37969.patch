From f26ece385628f4b683f2c3fb5e929c3c5ff3317a Mon Sep 17 00:00:00 2001
From: LiuDui <1693291525@qq.com>
Date: Thu, 17 Mar 2022 11:21:51 +0800
Subject: use api repo constants (#37969)

* use api repo constants

* make gen
---
 pilot/pkg/config/kube/gateway/conversion.go             | 4 ++--
 pilot/pkg/serviceregistry/kube/controller/controller.go | 3 ---
 pilot/pkg/serviceregistry/kube/controller/network.go    | 5 +++--
 pilot/pkg/xds/mesh_network_test.go                      | 4 ++--
 4 files changed, 7 insertions(+), 9 deletions(-)

diff --git a/pilot/pkg/config/kube/gateway/conversion.go b/pilot/pkg/config/kube/gateway/conversion.go
index 09deb479fd..123fd0e7b2 100644
--- a/pilot/pkg/config/kube/gateway/conversion.go
+++ b/pilot/pkg/config/kube/gateway/conversion.go
@@ -25,13 +25,13 @@
 	klabels "k8s.io/apimachinery/pkg/labels"
 	k8s "sigs.k8s.io/gateway-api/apis/v1alpha2"
 
+	annotation "istio.io/api/annotation"
 	"istio.io/api/label"
 	istio "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pilot/pkg/features"
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pilot/pkg/model/credentials"
 	"istio.io/istio/pilot/pkg/model/kstatus"
-	"istio.io/istio/pilot/pkg/serviceregistry/kube/controller"
 	"istio.io/istio/pilot/pkg/util/sets"
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/constants"
@@ -1325,7 +1325,7 @@ func isAutoPassthrough(obj config.Config, l k8s.Listener) bool {
 	}
 	expectedPort := "15443"
 
-	if port, f := obj.Labels[controller.IstioGatewayPortLabel]; f {
+	if port, f := obj.Labels[annotation.NetworkingGatewayPort.Name]; f {
 		expectedPort = port
 	}
 	return fmt.Sprint(l.Port) == expectedPort
diff --git a/pilot/pkg/serviceregistry/kube/controller/controller.go b/pilot/pkg/serviceregistry/kube/controller/controller.go
index de42476a7c..d6ba87391f 100644
--- a/pilot/pkg/serviceregistry/kube/controller/controller.go
+++ b/pilot/pkg/serviceregistry/kube/controller/controller.go
@@ -62,9 +62,6 @@
 	// NodeZoneLabelGA is the well-known label for kubernetes node zone in ga
 	NodeZoneLabelGA = v1.LabelTopologyZone
 
-	// IstioGatewayPortLabel overrides the default 15443 value to use for a multi-network gateway's port
-	// TODO move gatewayPort to api repo
-	IstioGatewayPortLabel = "networking.istio.io/gatewayPort"
 	// DefaultNetworkGatewayPort is the port used by default for cross-network traffic if not otherwise specified
 	// by meshNetworks or "networking.istio.io/gatewayPort"
 	DefaultNetworkGatewayPort = 15443
diff --git a/pilot/pkg/serviceregistry/kube/controller/network.go b/pilot/pkg/serviceregistry/kube/controller/network.go
index 2054845b34..a0196f8271 100644
--- a/pilot/pkg/serviceregistry/kube/controller/network.go
+++ b/pilot/pkg/serviceregistry/kube/controller/network.go
@@ -20,6 +20,7 @@
 
 	"github.com/yl2chen/cidranger"
 
+	"istio.io/api/annotation"
 	"istio.io/api/label"
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pkg/cluster"
@@ -245,12 +246,12 @@ func (c *Controller) getGatewayDetails(svc *model.Service) []model.NetworkGatewa
 	// label based gateways
 	// TODO label based gateways could support being the gateway for multiple networks
 	if nw := svc.Attributes.Labels[label.TopologyNetwork.Name]; nw != "" {
-		if gwPortStr := svc.Attributes.Labels[IstioGatewayPortLabel]; gwPortStr != "" {
+		if gwPortStr := svc.Attributes.Labels[annotation.NetworkingGatewayPort.Name]; gwPortStr != "" {
 			if gwPort, err := strconv.Atoi(gwPortStr); err == nil {
 				return []model.NetworkGateway{{Port: uint32(gwPort), Network: network.ID(nw)}}
 			}
 			log.Warnf("could not parse %q for %s on %s/%s; defaulting to %d",
-				gwPortStr, IstioGatewayPortLabel, svc.Attributes.Namespace, svc.Attributes.Name, DefaultNetworkGatewayPort)
+				gwPortStr, annotation.NetworkingGatewayPort.Name, svc.Attributes.Namespace, svc.Attributes.Name, DefaultNetworkGatewayPort)
 		}
 		return []model.NetworkGateway{{Port: DefaultNetworkGatewayPort, Network: network.ID(nw)}}
 	}
diff --git a/pilot/pkg/xds/mesh_network_test.go b/pilot/pkg/xds/mesh_network_test.go
index ed9d9401ab..723c8c2a32 100644
--- a/pilot/pkg/xds/mesh_network_test.go
+++ b/pilot/pkg/xds/mesh_network_test.go
@@ -26,13 +26,13 @@
 	"k8s.io/apimachinery/pkg/runtime"
 	"k8s.io/apimachinery/pkg/util/rand"
 
+	"istio.io/api/annotation"
 	"istio.io/api/label"
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/api/security/v1beta1"
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pilot/pkg/serviceregistry/kube"
-	"istio.io/istio/pilot/pkg/serviceregistry/kube/controller"
 	"istio.io/istio/pilot/test/xdstest"
 	"istio.io/istio/pkg/cluster"
 	"istio.io/istio/pkg/config"
@@ -227,7 +227,7 @@ func TestMeshNetworking(t *testing.T) {
 						Labels: map[string]string{
 							label.TopologyNetwork.Name: "network-2",
 							// set the label here to test it = expectation doesn't change since we map back to that via NodePort
-							controller.IstioGatewayPortLabel: "443",
+							annotation.NetworkingGatewayPort.Name: "443",
 						},
 					},
 					Spec: corev1.ServiceSpec{Type: corev1.ServiceTypeNodePort, Ports: []corev1.ServicePort{{Port: 443, NodePort: 25443}}},
-- 
2.35.3

