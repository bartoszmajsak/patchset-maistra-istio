From b872e512c22166a3dc338f37d45f20728b37c48c Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Wed, 2 Feb 2022 10:08:37 -0800
Subject: istioctl: fix order dependant tests (#37045)

* istioctl: fix order dependant tests

* Fix cni and pilot test as well
---
 cni/pkg/plugin/plugin_test.go |  1 +
 istioctl/cmd/tag_test.go      |  1 +
 istioctl/cmd/workload.go      |  3 +++
 pkg/kube/client.go            | 16 +++++++++++++---
 4 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/cni/pkg/plugin/plugin_test.go b/cni/pkg/plugin/plugin_test.go
index c84561f0e6..31c5dc85e7 100644
--- a/cni/pkg/plugin/plugin_test.go
+++ b/cni/pkg/plugin/plugin_test.go
@@ -433,6 +433,7 @@ func TestCmdAddInvalidK8sArgsKeyword(t *testing.T) {
 
 func TestCmdAddInvalidVersion(t *testing.T) {
 	defer resetGlobalTestVariables()
+	getKubePodInfo = mockgetK8sPodInfo
 	testCmdInvalidVersion(t, CmdAdd)
 }
 
diff --git a/istioctl/cmd/tag_test.go b/istioctl/cmd/tag_test.go
index 967cc32e27..79e901de83 100644
--- a/istioctl/cmd/tag_test.go
+++ b/istioctl/cmd/tag_test.go
@@ -145,6 +145,7 @@ func TestTagList(t *testing.T) {
 		t.Run(tc.name, func(t *testing.T) {
 			var out bytes.Buffer
 			client := fake.NewSimpleClientset(tc.webhooks.DeepCopyObject(), tc.namespaces.DeepCopyObject())
+			revArgs.output = jsonFormat
 			err := listTags(context.Background(), client, &out)
 			if tc.error == "" && err != nil {
 				t.Fatalf("expected no error, got %v", err)
diff --git a/istioctl/cmd/workload.go b/istioctl/cmd/workload.go
index ab75a0ff45..aa1f74e248 100644
--- a/istioctl/cmd/workload.go
+++ b/istioctl/cmd/workload.go
@@ -543,6 +543,9 @@ func marshalWorkloadEntryPodPorts(p map[string]uint32) string {
 	if len(out) == 0 {
 		return ""
 	}
+	sort.Slice(out, func(i, j int) bool {
+		return out[i].Name < out[j].Name
+	})
 	str, err := json.Marshal(out)
 	if err != nil {
 		return ""
diff --git a/pkg/kube/client.go b/pkg/kube/client.go
index c84ffc30e6..0c56947667 100644
--- a/pkg/kube/client.go
+++ b/pkg/kube/client.go
@@ -214,7 +214,7 @@ func NewFakeClient(objects ...runtime.Object) ExtendedClient {
 	c.Interface = fake.NewSimpleClientset(objects...)
 	c.kube = c.Interface
 	c.kubeInformer = informers.NewSharedInformerFactory(c.Interface, resyncInterval)
-	s := IstioScheme
+	s := FakeIstioScheme
 
 	c.metadata = metadatafake.NewSimpleMetadataClient(s)
 	c.metadataInformer = metadatainformer.NewSharedInformerFactory(c.metadata, resyncInterval)
@@ -1069,7 +1069,17 @@ func isEmptyFile(f string) bool {
 }
 
 // IstioScheme returns a scheme will all known Istio-related types added
-var IstioScheme = func() *runtime.Scheme {
+var IstioScheme = istioScheme()
+
+// FakeIstioScheme is an IstioScheme that has List type registered.
+var FakeIstioScheme = func() *runtime.Scheme {
+	s := istioScheme()
+	// Workaround https://github.com/kubernetes/kubernetes/issues/107823
+	s.AddKnownTypeWithName(schema.GroupVersionKind{Group: "fake-metadata-client-group", Version: "v1", Kind: "List"}, &metav1.List{})
+	return s
+}()
+
+func istioScheme() *runtime.Scheme {
 	scheme := runtime.NewScheme()
 	utilruntime.Must(kubescheme.AddToScheme(scheme))
 	utilruntime.Must(mcs.AddToScheme(scheme))
@@ -1081,7 +1091,7 @@ func isEmptyFile(f string) bool {
 	utilruntime.Must(gatewayapi.AddToScheme(scheme))
 	utilruntime.Must(apis.AddToScheme(scheme))
 	return scheme
-}()
+}
 
 func setServerInfoWithIstiodVersionInfo(serverInfo *version.BuildInfo, istioInfo string) {
 	versionParts := strings.Split(istioInfo, "-")
-- 
2.35.3

