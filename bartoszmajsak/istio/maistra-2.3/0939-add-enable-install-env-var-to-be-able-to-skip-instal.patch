From b7c31334cebb2226fb27e98c25ecc7a339bb71f1 Mon Sep 17 00:00:00 2001
From: Zhengzhe Yang <zhengzhey@google.com>
Date: Tue, 29 Mar 2022 12:10:58 -0700
Subject: add enable install env var to be able to skip installation entirely
 (#38158)

Change-Id: I9e303287bbdb82c22b40590fef9092e77b7d9df4
---
 cni/pkg/cmd/root.go             |  2 ++
 cni/pkg/config/config.go        |  3 +++
 cni/pkg/constants/constants.go  |  1 +
 cni/pkg/install/install.go      | 16 ++++++++++++----
 cni/pkg/install/install_test.go |  9 +++++++++
 5 files changed, 27 insertions(+), 4 deletions(-)

diff --git a/cni/pkg/cmd/root.go b/cni/pkg/cmd/root.go
index 0bd38360e0..853a3e8461 100644
--- a/cni/pkg/cmd/root.go
+++ b/cni/pkg/cmd/root.go
@@ -125,6 +125,7 @@ func init() {
 	registerStringParameter(constants.CNIConfName, "", "Name of the CNI configuration file")
 	registerBooleanParameter(constants.ChainedCNIPlugin, true, "Whether to install CNI plugin as a chained or standalone")
 	registerStringParameter(constants.CNINetworkConfig, "", "CNI configuration template as a string")
+	registerBooleanParameter(constants.CNIEnableInstall, true, "Whether to install CNI configuration and binary files")
 	registerBooleanParameter(constants.CNIEnableReinstall, true, "Whether to reinstall CNI configuration and binary files")
 	registerStringParameter(constants.LogLevel, "warn", "Fallback value for log level in CNI config file, if not specified in helm template")
 
@@ -219,6 +220,7 @@ func constructConfig() (*config.Config, error) {
 
 		CNINetworkConfigFile: viper.GetString(constants.CNINetworkConfigFile),
 		CNINetworkConfig:     viper.GetString(constants.CNINetworkConfig),
+		CNIEnableInstall:     viper.GetBool(constants.CNIEnableInstall),
 		CNIEnableReinstall:   viper.GetBool(constants.CNIEnableReinstall),
 
 		LogLevel:           viper.GetString(constants.LogLevel),
diff --git a/cni/pkg/config/config.go b/cni/pkg/config/config.go
index 4fe76c7cf6..3d9859ea55 100644
--- a/cni/pkg/config/config.go
+++ b/cni/pkg/config/config.go
@@ -39,6 +39,8 @@ type InstallConfig struct {
 	CNINetworkConfigFile string
 	// CNI config template string
 	CNINetworkConfig string
+	// Whether to install CNI configuration and binary files
+	CNIEnableInstall bool
 	// Whether to reinstall CNI configuration and binary files
 	CNIEnableReinstall bool
 
@@ -121,6 +123,7 @@ func (c InstallConfig) String() string {
 	b.WriteString("ChainedCNIPlugin: " + fmt.Sprint(c.ChainedCNIPlugin) + "\n")
 	b.WriteString("CNINetworkConfigFile: " + c.CNINetworkConfigFile + "\n")
 	b.WriteString("CNINetworkConfig: " + c.CNINetworkConfig + "\n")
+	b.WriteString("CNIEnableInstall: " + fmt.Sprint(c.CNIEnableInstall) + "\n")
 	b.WriteString("CNIEnableReinstall: " + fmt.Sprint(c.CNIEnableReinstall) + "\n")
 
 	b.WriteString("LogLevel: " + c.LogLevel + "\n")
diff --git a/cni/pkg/constants/constants.go b/cni/pkg/constants/constants.go
index a1443dff98..4180ce4389 100644
--- a/cni/pkg/constants/constants.go
+++ b/cni/pkg/constants/constants.go
@@ -23,6 +23,7 @@
 	ChainedCNIPlugin     = "chained-cni-plugin"
 	CNINetworkConfigFile = "cni-network-config-file"
 	CNINetworkConfig     = "cni-network-config"
+	CNIEnableInstall     = "cni-enable-install"
 	CNIEnableReinstall   = "cni-enable-reinstall"
 	LogLevel             = "log-level"
 	KubeconfigFilename   = "kubecfg-file-name"
diff --git a/cni/pkg/install/install.go b/cni/pkg/install/install.go
index f0b2a363fb..951e7a44f7 100644
--- a/cni/pkg/install/install.go
+++ b/cni/pkg/install/install.go
@@ -75,18 +75,22 @@ func (in *Installer) install(ctx context.Context) (err error) {
 // Run starts the installation process, verifies the configuration, then sleeps.
 // If an invalid configuration is detected, the installation process will restart to restore a valid state.
 func (in *Installer) Run(ctx context.Context) (err error) {
-	if err = in.install(ctx); err != nil {
-		return
+	if in.cfg.CNIEnableInstall {
+		if err = in.install(ctx); err != nil {
+			return
+		}
+		installLog.Info("Installation succeed, start watching for re-installation.")
+	} else {
+		installLog.Info("Skip installing CNI configuration and binaries.")
 	}
 
-	installLog.Info("Installation succeed, start watching for re-installation.")
 	for {
 		if err = sleepCheckInstall(ctx, in.cfg, in.cniConfigFilepath, in.isReady); err != nil {
 			return
 		}
 
 		installLog.Info("Detect changes to the CNI configuration and binaries, attempt reinstalling...")
-		if in.cfg.CNIEnableReinstall {
+		if in.cfg.CNIEnableInstall && in.cfg.CNIEnableReinstall {
 			if err = in.install(ctx); err != nil {
 				return
 			}
@@ -213,6 +217,10 @@ func sleepCheckInstall(ctx context.Context, cfg *config.InstallConfig, cniConfig
 
 // checkInstall returns an error if an invalid CNI configuration is detected
 func checkInstall(cfg *config.InstallConfig, cniConfigFilepath string) error {
+	// If the installation is skipped, don't check for invalid configurations.
+	if !cfg.CNIEnableInstall {
+		return nil
+	}
 	defaultCNIConfigFilename, err := getDefaultCNINetwork(cfg.MountedCNINetDir)
 	if err != nil {
 		return err
diff --git a/cni/pkg/install/install_test.go b/cni/pkg/install/install_test.go
index f2d9f61c17..89ccdebf33 100644
--- a/cni/pkg/install/install_test.go
+++ b/cni/pkg/install/install_test.go
@@ -35,6 +35,7 @@ func TestCheckInstall(t *testing.T) {
 		cniConfigFilename string
 		cniConfName       string
 		chainedCNIPlugin  bool
+		skipInstall       bool
 		existingConfFiles map[string]string // {srcFilename: targetFilename, ...}
 	}{
 		{
@@ -64,6 +65,12 @@ func TestCheckInstall(t *testing.T) {
 			expectedFailure:   true,
 			cniConfigFilename: "file-removed.conflist",
 		},
+		{
+			name:              "CNI config file non-existent but install skipped",
+			expectedFailure:   false,
+			skipInstall:       true,
+			cniConfigFilename: "file-removed.conflist",
+		},
 		{
 			name:              "istio-cni config removed from CNI config file",
 			expectedFailure:   true,
@@ -106,6 +113,7 @@ func TestCheckInstall(t *testing.T) {
 				MountedCNINetDir: tempDir,
 				CNIConfName:      c.cniConfName,
 				ChainedCNIPlugin: c.chainedCNIPlugin,
+				CNIEnableInstall: !c.skipInstall,
 			}
 			err := checkInstall(cfg, filepath.Join(tempDir, c.cniConfigFilename))
 			if (c.expectedFailure && err == nil) || (!c.expectedFailure && err != nil) {
@@ -148,6 +156,7 @@ func TestSleepCheckInstall(t *testing.T) {
 			cfg := &config.InstallConfig{
 				MountedCNINetDir: tempDir,
 				ChainedCNIPlugin: c.chainedCNIPlugin,
+				CNIEnableInstall: true,
 			}
 			cniConfigFilepath := filepath.Join(tempDir, c.cniConfigFilename)
 			isReady := &atomic.Value{}
-- 
2.35.3

