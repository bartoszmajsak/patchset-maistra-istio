From f12352f07c80e3ca9fd3b7d6d32433b2fa9420fb Mon Sep 17 00:00:00 2001
From: Douglas Reid <douglas-reid@users.noreply.github.com>
Date: Mon, 7 Mar 2022 09:43:00 -0800
Subject: telemetry api: allow default json format for envoy file logger
 (#37733)

* telemetry api: allow default json format for envoy file logger

* lint fix
---
 pilot/pkg/model/telemetry_test.go             | 34 +++++++++++++++
 .../pkg/networking/core/v1alpha3/accesslog.go |  5 +++
 .../core/v1alpha3/accesslog_test.go           | 43 +++++++++++++++++++
 ...ault-json-logging-envoy-telemetry-api.yaml |  9 ++++
 4 files changed, 91 insertions(+)
 create mode 100644 releasenotes/notes/default-json-logging-envoy-telemetry-api.yaml

diff --git a/pilot/pkg/model/telemetry_test.go b/pilot/pkg/model/telemetry_test.go
index 77d1e267b2..8614388ebe 100644
--- a/pilot/pkg/model/telemetry_test.go
+++ b/pilot/pkg/model/telemetry_test.go
@@ -43,6 +43,21 @@ func createTestTelemetries(configs []config.Config, t *testing.T) *Telemetries {
 		store.add(cfg)
 	}
 	m := mesh.DefaultMeshConfig()
+	jsonTextProvider := &meshconfig.MeshConfig_ExtensionProvider{
+		Name: "envoy-json",
+		Provider: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLog{
+			EnvoyFileAccessLog: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider{
+				Path: "/dev/null",
+				LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat{
+					LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat_Labels{
+						Labels: &types.Struct{},
+					},
+				},
+			},
+		},
+	}
+	m.ExtensionProviders = append(m.ExtensionProviders, jsonTextProvider)
+
 	environment := &Environment{
 		IstioConfigStore: MakeIstioStore(store),
 		Watcher:          mesh.NewFixedWatcher(&m),
@@ -135,6 +150,17 @@ func TestAccessLogging(t *testing.T) {
 	empty := &tpb.Telemetry{
 		AccessLogging: []*tpb.AccessLogging{{}},
 	}
+	defaultJSON := &tpb.Telemetry{
+		AccessLogging: []*tpb.AccessLogging{
+			{
+				Providers: []*tpb.ProviderRef{
+					{
+						Name: "envoy-json",
+					},
+				},
+			},
+		},
+	}
 	disabled := &tpb.Telemetry{
 		AccessLogging: []*tpb.AccessLogging{
 			{
@@ -202,6 +228,13 @@ func TestAccessLogging(t *testing.T) {
 			nil,
 			[]string{"envoy"},
 		},
+		{
+			"default envoy JSON",
+			[]config.Config{newTelemetry("istio-system", defaultJSON)},
+			sidecar,
+			nil,
+			[]string{"envoy-json"},
+		},
 		{
 			"disable config",
 			[]config.Config{newTelemetry("istio-system", envoy), newTelemetry("default", disabled)},
@@ -617,6 +650,7 @@ func TestTelemetryFilters(t *testing.T) {
 			{},
 		},
 	}
+
 	tests := []struct {
 		name             string
 		cfgs             []config.Config
diff --git a/pilot/pkg/networking/core/v1alpha3/accesslog.go b/pilot/pkg/networking/core/v1alpha3/accesslog.go
index 05a5751af2..b7859cd5a0 100644
--- a/pilot/pkg/networking/core/v1alpha3/accesslog.go
+++ b/pilot/pkg/networking/core/v1alpha3/accesslog.go
@@ -370,6 +370,11 @@ func buildFileAccessJSONLogFormat(
 		jsonLogStruct = EnvoyJSONLogFormatIstio
 	}
 
+	// allow default behavior when no labels supplied.
+	if len(jsonLogStruct.Fields) == 0 {
+		jsonLogStruct = EnvoyJSONLogFormatIstio
+	}
+
 	needsFormatter := false
 	for _, value := range jsonLogStruct.Fields {
 		if value.GetStringValue() == requestWithoutQuery {
diff --git a/pilot/pkg/networking/core/v1alpha3/accesslog_test.go b/pilot/pkg/networking/core/v1alpha3/accesslog_test.go
index 1564ba2238..44f181114a 100644
--- a/pilot/pkg/networking/core/v1alpha3/accesslog_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/accesslog_test.go
@@ -228,6 +228,24 @@ func TestBuildAccessLogFromTelemetry(t *testing.T) {
 		},
 	}
 
+	defaultJSONFormat := &model.LoggingConfig{
+		Providers: []*meshconfig.MeshConfig_ExtensionProvider{
+			{
+				Name: "",
+				Provider: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLog{
+					EnvoyFileAccessLog: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider{
+						Path: devStdout,
+						LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat{
+							LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat_Labels{
+								Labels: &types.Struct{},
+							},
+						},
+					},
+				},
+			},
+		},
+	}
+
 	customLabelsFormat := &model.LoggingConfig{
 		Providers: []*meshconfig.MeshConfig_ExtensionProvider{
 			{
@@ -434,6 +452,17 @@ func TestBuildAccessLogFromTelemetry(t *testing.T) {
 		},
 	}
 
+	defaultJSONLabelsOut := &fileaccesslog.FileAccessLog{
+		Path: devStdout,
+		AccessLogFormat: &fileaccesslog.FileAccessLog_LogFormat{
+			LogFormat: &core.SubstitutionFormatString{
+				Format: &core.SubstitutionFormatString_JsonFormat{
+					JsonFormat: EnvoyJSONLogFormatIstio,
+				},
+			},
+		},
+	}
+
 	customLabelsOut := &fileaccesslog.FileAccessLog{
 		Path: devStdout,
 		AccessLogFormat: &fileaccesslog.FileAccessLog_LogFormat{
@@ -639,6 +668,20 @@ func TestBuildAccessLogFromTelemetry(t *testing.T) {
 				},
 			},
 		},
+		{
+			name: "default-labels",
+			meshConfig: &meshconfig.MeshConfig{
+				AccessLogEncoding: meshconfig.MeshConfig_TEXT,
+			},
+			spec:        defaultJSONFormat,
+			forListener: false,
+			expected: []*accesslog.AccessLog{
+				{
+					Name:       wellknown.FileAccessLog,
+					ConfigType: &accesslog.AccessLog_TypedConfig{TypedConfig: util.MessageToAny(defaultJSONLabelsOut)},
+				},
+			},
+		},
 		{
 			name: "custom-labels",
 			meshConfig: &meshconfig.MeshConfig{
diff --git a/releasenotes/notes/default-json-logging-envoy-telemetry-api.yaml b/releasenotes/notes/default-json-logging-envoy-telemetry-api.yaml
new file mode 100644
index 0000000000..7cfefc12e7
--- /dev/null
+++ b/releasenotes/notes/default-json-logging-envoy-telemetry-api.yaml
@@ -0,0 +1,9 @@
+apiVersion: release-notes/v2
+kind: feature
+area: telemetry
+issue:
+  - 37663
+
+releaseNotes:
+- |
+  **Added** support for using default JSON access logs format with Telemetry API.
-- 
2.35.3

