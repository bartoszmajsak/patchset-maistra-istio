From b01267a4217a7ece36f06cf4e9b2b68b14298fa1 Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Wed, 20 Apr 2022 19:01:25 -0700
Subject: Update proxy binary (#38372)

* Revert flag

* Use fully typed config

* Revert "Revert flag"

This reverts commit 87aeec6c267890936cb0d2fcb1d52c65a23cf8c8.

* refresh

* add validation
---
 .../core/v1alpha3/cluster_builder.go          |  8 ++--
 .../core/v1alpha3/route/retry/retry.go        |  9 ++--
 pilot/pkg/xds/filters/filters.go              | 16 +++++++
 pkg/bootstrap/testdata/all_golden.json        | 32 ++++++-------
 pkg/bootstrap/testdata/auth_golden.json       | 12 ++---
 pkg/bootstrap/testdata/authsds_golden.json    | 12 ++---
 pkg/bootstrap/testdata/default_golden.json    | 12 ++---
 .../testdata/metrics_no_statsd_golden.json    | 24 +++++-----
 pkg/bootstrap/testdata/running_golden.json    | 24 +++++-----
 pkg/bootstrap/testdata/runningsds_golden.json | 24 +++++-----
 .../testdata/stats_inclusion_golden.json      | 12 ++---
 .../testdata/tracing_datadog_golden.json      | 14 +++---
 .../testdata/tracing_lightstep_golden.json    | 14 +++---
 .../tracing_opencensusagent_golden.json       | 12 ++---
 .../testdata/tracing_stackdriver_golden.json  | 22 ++++-----
 .../tracing_tls_custom_sni_golden.json        | 14 +++---
 .../testdata/tracing_tls_golden.json          | 14 +++---
 .../testdata/tracing_zipkin_golden.json       | 14 +++---
 pkg/bootstrap/testdata/xdsproxy_golden.json   | 12 ++---
 pkg/config/validation/validation.go           | 46 +++++++++++++++++++
 pkg/config/validation/validation_test.go      | 14 ++++++
 pkg/test/util/assert/assert.go                |  3 +-
 22 files changed, 219 insertions(+), 145 deletions(-)

diff --git a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
index 7feaf53593..3e08be2f8f 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
@@ -1315,10 +1315,8 @@ func defaultUpstreamCommonTLSContext() *auth.CommonTlsContext {
 // or those whose label value does not match "istio"
 func defaultTransportSocketMatch() *cluster.Cluster_TransportSocketMatch {
 	return &cluster.Cluster_TransportSocketMatch{
-		Name:  "tlsMode-disabled",
-		Match: &structpb.Struct{},
-		TransportSocket: &core.TransportSocket{
-			Name: util.EnvoyRawBufferSocketName,
-		},
+		Name:            "tlsMode-disabled",
+		Match:           &structpb.Struct{},
+		TransportSocket: xdsfilters.RawBufferTransportSocket,
 	}
 }
diff --git a/pilot/pkg/networking/core/v1alpha3/route/retry/retry.go b/pilot/pkg/networking/core/v1alpha3/route/retry/retry.go
index d477b6c746..086687684a 100644
--- a/pilot/pkg/networking/core/v1alpha3/route/retry/retry.go
+++ b/pilot/pkg/networking/core/v1alpha3/route/retry/retry.go
@@ -25,6 +25,7 @@
 
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pilot/pkg/networking/util"
+	xdsfilters "istio.io/istio/pilot/pkg/xds/filters"
 )
 
 var defaultRetryPriorityTypedConfig = util.MessageToAny(buildPreviousPrioritiesConfig())
@@ -36,11 +37,9 @@ func DefaultPolicy() *route.RetryPolicy {
 		RetryOn:              "connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes",
 		RetriableStatusCodes: []uint32{http.StatusServiceUnavailable},
 		RetryHostPredicate: []*route.RetryPolicy_RetryHostPredicate{
-			{
-				// to configure retries to prefer hosts that haven’t been attempted already,
-				// the builtin `envoy.retry_host_predicates.previous_hosts` predicate can be used.
-				Name: "envoy.retry_host_predicates.previous_hosts",
-			},
+			// to configure retries to prefer hosts that haven’t been attempted already,
+			// the builtin `envoy.retry_host_predicates.previous_hosts` predicate can be used.
+			xdsfilters.RetryPreviousHosts,
 		},
 		// TODO: allow this to be configured via API.
 		HostSelectionRetryMaxAttempts: 5,
diff --git a/pilot/pkg/xds/filters/filters.go b/pilot/pkg/xds/filters/filters.go
index bfcefc751d..0b6790d1d7 100644
--- a/pilot/pkg/xds/filters/filters.go
+++ b/pilot/pkg/xds/filters/filters.go
@@ -16,7 +16,9 @@
 
 import (
 	cluster "github.com/envoyproxy/go-control-plane/envoy/config/cluster/v3"
+	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
 	listener "github.com/envoyproxy/go-control-plane/envoy/config/listener/v3"
+	route "github.com/envoyproxy/go-control-plane/envoy/config/route/v3"
 	cors "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/cors/v3"
 	fault "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/fault/v3"
 	grpcstats "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/grpc_stats/v3"
@@ -28,6 +30,8 @@
 	originalsrc "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/listener/original_src/v3"
 	tlsinspector "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/listener/tls_inspector/v3"
 	hcm "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/http_connection_manager/v3"
+	previoushost "github.com/envoyproxy/go-control-plane/envoy/extensions/retry/host/previous_hosts/v3"
+	rawbuffer "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/raw_buffer/v3"
 	wasm "github.com/envoyproxy/go-control-plane/envoy/extensions/wasm/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
 	"google.golang.org/protobuf/types/known/wrapperspb"
@@ -51,6 +55,18 @@
 // Define static filters to be reused across the codebase. This avoids duplicate marshaling/unmarshaling
 // This should not be used for filters that will be mutated
 var (
+	RetryPreviousHosts = &route.RetryPolicy_RetryHostPredicate{
+		Name: "envoy.retry_host_predicates.previous_hosts",
+		ConfigType: &route.RetryPolicy_RetryHostPredicate_TypedConfig{
+			TypedConfig: util.MessageToAny(&previoushost.PreviousHostsPredicate{}),
+		},
+	}
+	RawBufferTransportSocket = &core.TransportSocket{
+		Name: util.EnvoyRawBufferSocketName,
+		ConfigType: &core.TransportSocket_TypedConfig{
+			TypedConfig: util.MessageToAny(&rawbuffer.RawBuffer{}),
+		},
+	}
 	Cors = &hcm.HttpFilter{
 		Name: wellknown.CORS,
 		ConfigType: &hcm.HttpFilter_TypedConfig{
diff --git a/pkg/bootstrap/testdata/all_golden.json b/pkg/bootstrap/testdata/all_golden.json
index ddee403d04..ac9f439e3b 100644
--- a/pkg/bootstrap/testdata/all_golden.json
+++ b/pkg/bootstrap/testdata/all_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,7 +396,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "zipkin",
@@ -419,7 +419,7 @@
           }]
         }
       }
-
+      
       ,
       {
         "name": "envoy_metrics_service",
@@ -450,8 +450,8 @@
           }]
         }
       }
-
-
+      
+      
       ,
       {
         "name": "envoy_accesslog_service",
@@ -481,7 +481,7 @@
           }]
         }
       }
-
+      
     ],
     "listeners":[
       {
@@ -598,10 +598,10 @@
       }
     }
   }
-
+  
   ,
   "stats_sinks": [
-
+    
     {
       "name": "envoy.stat_sinks.metrics_service",
       "typed_config": {
@@ -614,11 +614,11 @@
         }
       }
     }
-
-
+    
+    
     ,
-
-
+    
+    
     {
       "name": "envoy.stat_sinks.statsd",
       "typed_config": {
@@ -628,15 +628,15 @@
         }
       }
     }
-
+    
   ]
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/auth_golden.json b/pkg/bootstrap/testdata/auth_golden.json
index 9a2becead6..0aca13dd07 100644
--- a/pkg/bootstrap/testdata/auth_golden.json
+++ b/pkg/bootstrap/testdata/auth_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,8 +396,8 @@
           }
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -500,13 +500,13 @@
       }
     ]
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/authsds_golden.json b/pkg/bootstrap/testdata/authsds_golden.json
index 9fcba6495e..cdde4ece1b 100644
--- a/pkg/bootstrap/testdata/authsds_golden.json
+++ b/pkg/bootstrap/testdata/authsds_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,8 +396,8 @@
           }
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -500,13 +500,13 @@
       }
     ]
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/default_golden.json b/pkg/bootstrap/testdata/default_golden.json
index 80e09869b5..fd05895600 100644
--- a/pkg/bootstrap/testdata/default_golden.json
+++ b/pkg/bootstrap/testdata/default_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,8 +396,8 @@
           }
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -500,13 +500,13 @@
       }
     ]
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/metrics_no_statsd_golden.json b/pkg/bootstrap/testdata/metrics_no_statsd_golden.json
index 739bf4368d..99bd6e2d7f 100644
--- a/pkg/bootstrap/testdata/metrics_no_statsd_golden.json
+++ b/pkg/bootstrap/testdata/metrics_no_statsd_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,7 +396,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "envoy_metrics_service",
@@ -427,8 +427,8 @@
           }]
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -531,10 +531,10 @@
       }
     ]
   }
-
+  
   ,
   "stats_sinks": [
-
+    
     {
       "name": "envoy.stat_sinks.metrics_service",
       "typed_config": {
@@ -547,17 +547,17 @@
         }
       }
     }
-
-
-
+    
+    
+    
   ]
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/running_golden.json b/pkg/bootstrap/testdata/running_golden.json
index aaf8b038cf..de4cf6d1a1 100644
--- a/pkg/bootstrap/testdata/running_golden.json
+++ b/pkg/bootstrap/testdata/running_golden.json
@@ -15,7 +15,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -401,7 +401,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "zipkin",
@@ -424,8 +424,8 @@
           }]
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -542,12 +542,12 @@
       }
     }
   }
-
+  
   ,
   "stats_sinks": [
-
-
-
+    
+    
+    
     {
       "name": "envoy.stat_sinks.statsd",
       "typed_config": {
@@ -557,15 +557,15 @@
         }
       }
     }
-
+    
   ]
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/runningsds_golden.json b/pkg/bootstrap/testdata/runningsds_golden.json
index 6f10a55924..dcbfac4b99 100644
--- a/pkg/bootstrap/testdata/runningsds_golden.json
+++ b/pkg/bootstrap/testdata/runningsds_golden.json
@@ -15,7 +15,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -401,7 +401,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "zipkin",
@@ -424,8 +424,8 @@
           }]
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -542,12 +542,12 @@
       }
     }
   }
-
+  
   ,
   "stats_sinks": [
-
-
-
+    
+    
+    
     {
       "name": "envoy.stat_sinks.statsd",
       "typed_config": {
@@ -557,15 +557,15 @@
         }
       }
     }
-
+    
   ]
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/stats_inclusion_golden.json b/pkg/bootstrap/testdata/stats_inclusion_golden.json
index 6c18abbbca..09d9372e9a 100644
--- a/pkg/bootstrap/testdata/stats_inclusion_golden.json
+++ b/pkg/bootstrap/testdata/stats_inclusion_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -489,8 +489,8 @@
           }
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -593,13 +593,13 @@
       }
     ]
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/tracing_datadog_golden.json b/pkg/bootstrap/testdata/tracing_datadog_golden.json
index 0d0e2c1fc8..cad9bee53e 100644
--- a/pkg/bootstrap/testdata/tracing_datadog_golden.json
+++ b/pkg/bootstrap/testdata/tracing_datadog_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,7 +396,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "datadog_agent",
@@ -418,8 +418,8 @@
           }]
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -533,13 +533,13 @@
       }
     }
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/tracing_lightstep_golden.json b/pkg/bootstrap/testdata/tracing_lightstep_golden.json
index 16901805b8..77d10d6bc1 100644
--- a/pkg/bootstrap/testdata/tracing_lightstep_golden.json
+++ b/pkg/bootstrap/testdata/tracing_lightstep_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,7 +396,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "lightstep",
@@ -426,8 +426,8 @@
           }]
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -541,13 +541,13 @@
       }
     }
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/tracing_opencensusagent_golden.json b/pkg/bootstrap/testdata/tracing_opencensusagent_golden.json
index 1906b7be54..5fc78aba32 100644
--- a/pkg/bootstrap/testdata/tracing_opencensusagent_golden.json
+++ b/pkg/bootstrap/testdata/tracing_opencensusagent_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,8 +396,8 @@
           }
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -522,13 +522,13 @@
       }
     }
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/tracing_stackdriver_golden.json b/pkg/bootstrap/testdata/tracing_stackdriver_golden.json
index 3c15baa1f8..adf0bd37ff 100644
--- a/pkg/bootstrap/testdata/tracing_stackdriver_golden.json
+++ b/pkg/bootstrap/testdata/tracing_stackdriver_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,8 +396,8 @@
           }
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -508,7 +508,7 @@
       "@type": "type.googleapis.com/envoy.config.trace.v3.OpenCensusConfig",
       "stackdriver_exporter_enabled": true,
       "stackdriver_project_id": "my-sd-project",
-
+      
       "stackdriver_grpc_service": {
         "google_grpc": {
           "target_uri": "cloudtrace.googleapis.com",
@@ -526,15 +526,15 @@
           }]
         },
         "initial_metadata": [
-
+        
           {
             "key": "x-goog-user-project",
             "value": "my-sd-project"
           }
-
+        
         ]
       },
-
+      
       "stdout_exporter_enabled": true,
       "incoming_trace_context": ["CLOUD_TRACE_CONTEXT", "TRACE_CONTEXT", "GRPC_TRACE_BIN", "B3"],
       "outgoing_trace_context": ["CLOUD_TRACE_CONTEXT", "TRACE_CONTEXT", "GRPC_TRACE_BIN", "B3"],
@@ -549,14 +549,14 @@
        }
      }
   }}
-
-
-
+  
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/tracing_tls_custom_sni_golden.json b/pkg/bootstrap/testdata/tracing_tls_custom_sni_golden.json
index 9b071047b7..3cd4e68fa1 100644
--- a/pkg/bootstrap/testdata/tracing_tls_custom_sni_golden.json
+++ b/pkg/bootstrap/testdata/tracing_tls_custom_sni_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,7 +396,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "zipkin",
@@ -420,8 +420,8 @@
           }]
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -538,13 +538,13 @@
       }
     }
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/tracing_tls_golden.json b/pkg/bootstrap/testdata/tracing_tls_golden.json
index 44d87329d2..9b477176dd 100644
--- a/pkg/bootstrap/testdata/tracing_tls_golden.json
+++ b/pkg/bootstrap/testdata/tracing_tls_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,7 +396,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "zipkin",
@@ -420,8 +420,8 @@
           }]
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -538,13 +538,13 @@
       }
     }
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/tracing_zipkin_golden.json b/pkg/bootstrap/testdata/tracing_zipkin_golden.json
index 2fcbed40e0..d1cbc287be 100644
--- a/pkg/bootstrap/testdata/tracing_zipkin_golden.json
+++ b/pkg/bootstrap/testdata/tracing_zipkin_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,7 +396,7 @@
           }
         }
       }
-
+      
       ,
       {
         "name": "zipkin",
@@ -419,8 +419,8 @@
           }]
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -537,13 +537,13 @@
       }
     }
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/bootstrap/testdata/xdsproxy_golden.json b/pkg/bootstrap/testdata/xdsproxy_golden.json
index c194785f30..6f3eb01e61 100644
--- a/pkg/bootstrap/testdata/xdsproxy_golden.json
+++ b/pkg/bootstrap/testdata/xdsproxy_golden.json
@@ -10,7 +10,7 @@
       "layers": [
           {
             "name": "global config",
-            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
+            "static_layer": {"envoy.deprecated_features:envoy.config.listener.v3.Listener.hidden_envoy_deprecated_use_original_dst":"true","envoy.reloadable_features.http_reject_path_with_fragment":"false","envoy.reloadable_features.no_extension_lookup_by_name":"false","envoy.reloadable_features.require_strict_1xx_and_204_response_headers":"false","overload.global_downstream_max_connections":"2147483647","re2.max_program_size.error_level":"32768"}
           },
           {
               "name": "admin",
@@ -396,8 +396,8 @@
           }
         }
       }
-
-
+      
+      
     ],
     "listeners":[
       {
@@ -500,13 +500,13 @@
       }
     ]
   }
-
-
+  
+  
   ,
   "cluster_manager": {
     "outlier_detection": {
       "event_log_path": "/dev/stdout"
     }
   }
-
+  
 }
diff --git a/pkg/config/validation/validation.go b/pkg/config/validation/validation.go
index f82cefe4ed..8ca128240b 100644
--- a/pkg/config/validation/validation.go
+++ b/pkg/config/validation/validation.go
@@ -892,6 +892,7 @@ func(cfg config.Config) (Warning, error) {
 				// Append any deprecation notices
 				if obj != nil {
 					errs = appendValidation(errs, validateDeprecatedFilterTypes(obj))
+					errs = appendValidation(errs, validateMissingTypedConfigFilterTypes(obj))
 				}
 			}
 		}
@@ -947,6 +948,43 @@ func recurseDeprecatedTypes(message protoreflect.Message) ([]string, error) {
 	return deprecatedTypes, topError
 }
 
+// recurseMissingTypedConfig checks that configured filters do not rely on `name` and elide `typed_config`.
+// This is temporarily enabled in Envoy by the envoy.reloadable_features.no_extension_lookup_by_name flag, but in the future will be removed.
+func recurseMissingTypedConfig(message protoreflect.Message) []string {
+	var deprecatedTypes []string
+	if message == nil {
+		return nil
+	}
+	// First, iterate over the fields to find the 'name' field to help with reporting errors.
+	var name string
+	for i := 0; i < message.Type().Descriptor().Fields().Len(); i++ {
+		field := message.Type().Descriptor().Fields().Get(i)
+		if field.JSONName() == "name" {
+			name = fmt.Sprintf("%v", message.Get(field).Interface())
+		}
+	}
+
+	// Now go through fields again
+	for i := 0; i < message.Type().Descriptor().Fields().Len(); i++ {
+		field := message.Type().Descriptor().Fields().Get(i)
+		set := message.Has(field)
+		// If it has a typedConfig field, it must be set.
+		// Note: it is possible there is some API that has typedConfig but has a non-deprecated alternative,
+		// but I couldn't find any. Worst case, this is a warning, not an error, so a false positive is not so bad.
+		if field.JSONName() == "typedConfig" && !set {
+			deprecatedTypes = append(deprecatedTypes, name)
+		}
+		if set {
+			// If the field was set and is a message, recurse into it to check children
+			m, isMessage := message.Get(field).Interface().(protoreflect.Message)
+			if isMessage {
+				deprecatedTypes = append(deprecatedTypes, recurseMissingTypedConfig(m)...)
+			}
+		}
+	}
+	return deprecatedTypes
+}
+
 func validateDeprecatedFilterTypes(obj proto.Message) error {
 	deprecated, err := recurseDeprecatedTypes(obj.ProtoReflect())
 	if err != nil {
@@ -958,6 +996,14 @@ func validateDeprecatedFilterTypes(obj proto.Message) error {
 	return nil
 }
 
+func validateMissingTypedConfigFilterTypes(obj proto.Message) error {
+	missing := recurseMissingTypedConfig(obj.ProtoReflect())
+	if len(missing) > 0 {
+		return WrapWarning(fmt.Errorf("using deprecated types by name without typed_config; %v", strings.Join(missing, ", ")))
+	}
+	return nil
+}
+
 // validates that hostname in ns/<hostname> is a valid hostname according to
 // API specs
 func validateSidecarOrGatewayHostnamePart(hostname string, isGateway bool) (errs error) {
diff --git a/pkg/config/validation/validation_test.go b/pkg/config/validation/validation_test.go
index 76574d92a7..12b803ee60 100644
--- a/pkg/config/validation/validation_test.go
+++ b/pkg/config/validation/validation_test.go
@@ -19,6 +19,7 @@
 	"testing"
 	"time"
 
+	listener "github.com/envoyproxy/go-control-plane/envoy/config/listener/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
 	"github.com/hashicorp/go-multierror"
 	"google.golang.org/protobuf/proto"
@@ -36,6 +37,7 @@
 	"istio.io/istio/pilot/pkg/features"
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/constants"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 const (
@@ -7308,3 +7310,15 @@ func TestValidateWasmPlugin(t *testing.T) {
 		})
 	}
 }
+
+func TestRecurseMissingTypedConfig(t *testing.T) {
+	good := &listener.Filter{
+		Name:       wellknown.TCPProxy,
+		ConfigType: &listener.Filter_TypedConfig{TypedConfig: nil},
+	}
+	bad := &listener.Filter{
+		Name: wellknown.TCPProxy,
+	}
+	assert.Equal(t, recurseMissingTypedConfig(good.ProtoReflect()), []string{}, "typed config set")
+	assert.Equal(t, recurseMissingTypedConfig(bad.ProtoReflect()), []string{wellknown.TCPProxy}, "typed config not set")
+}
diff --git a/pkg/test/util/assert/assert.go b/pkg/test/util/assert/assert.go
index 224fd8420e..5c541b0658 100644
--- a/pkg/test/util/assert/assert.go
+++ b/pkg/test/util/assert/assert.go
@@ -18,6 +18,7 @@
 	"strings"
 
 	"github.com/google/go-cmp/cmp"
+	"github.com/google/go-cmp/cmp/cmpopts"
 	"google.golang.org/protobuf/testing/protocmp"
 
 	"istio.io/istio/pkg/test"
@@ -26,7 +27,7 @@
 // Equal
 func Equal(t test.Failer, a, b interface{}, context ...string) {
 	t.Helper()
-	if !cmp.Equal(a, b, protocmp.Transform()) {
+	if !cmp.Equal(a, b, protocmp.Transform(), cmpopts.EquateEmpty()) {
 		cs := ""
 		if len(context) > 0 {
 			cs = " " + strings.Join(context, ", ") + ":"
-- 
2.35.3

