From fa4c5b0361b085a0963712f65648fbb160a90f4a Mon Sep 17 00:00:00 2001
From: Zhonghu Xu <xuzhonghu@huawei.com>
Date: Mon, 11 Apr 2022 19:01:47 +0800
Subject: clean up cluster builder (#38316)

---
 pilot/pkg/networking/core/v1alpha3/cluster.go        | 12 +++---------
 .../pkg/networking/core/v1alpha3/cluster_builder.go  | 11 +++++------
 2 files changed, 8 insertions(+), 15 deletions(-)

diff --git a/pilot/pkg/networking/core/v1alpha3/cluster.go b/pilot/pkg/networking/core/v1alpha3/cluster.go
index 20aa75b08b..cb00fd6624 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster.go
@@ -585,16 +585,10 @@ type buildClusterOpts struct {
 	port             *model.Port
 	serviceAccounts  []string
 	serviceInstances []*model.ServiceInstance
-	// Used for traffic across multiple Istio clusters
-	// the ingress gateway in a remote cluster will use this value to route
+	// Used for traffic across multiple network clusters
+	// the east-west gateway in a remote cluster will use this value to route
 	// traffic to the appropriate service
-	istioMtlsSni string
-	// This is used when the sidecar is sending simple TLS traffic
-	// to endpoints. This is different from the previous SNI
-	// because usually in this case the traffic is going to a
-	// non-sidecar workload that can only understand the service's
-	// hostname in the SNI.
-	simpleTLSSni    string
+	istioMtlsSni    string
 	clusterMode     ClusterMode
 	direction       model.TrafficDirection
 	meshExternal    bool
diff --git a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
index 171ba827af..923c896334 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
@@ -251,7 +251,6 @@ func (cb *ClusterBuilder) applyDestinationRule(mc *MutableCluster, clusterMode C
 	if clusterMode == DefaultClusterMode {
 		opts.serviceAccounts = serviceAccounts
 		opts.istioMtlsSni = model.BuildDNSSrvSubsetKey(model.TrafficDirectionOutbound, "", service.Hostname, port.Port)
-		opts.simpleTLSSni = string(service.Hostname)
 		opts.meshExternal = service.MeshExternal
 		opts.serviceRegistry = service.Attributes.ServiceRegistry
 		opts.serviceMTLSMode = cb.req.Push.BestEffortInferServiceMTLSMode(destinationRule.GetTrafficPolicy(), service, port)
@@ -808,7 +807,7 @@ func (cb *ClusterBuilder) buildAutoMtlsSettings(
 		}
 		// For backward compatibility, use metadata certs if provided.
 		if cb.hasMetadataCerts() {
-			// When building Mutual TLS settings, we should always user supplied SubjectAltNames and SNI
+			// When building Mutual TLS settings, we should always use user supplied SubjectAltNames and SNI
 			// in destination rule. The Service Accounts and auto computed SNI should only be used for
 			// ISTIO_MUTUAL.
 			return cb.buildMutualTLS(tls.SubjectAltNames, tls.Sni), userSupplied
@@ -818,14 +817,14 @@ func (cb *ClusterBuilder) buildAutoMtlsSettings(
 		}
 		// Update TLS settings for ISTIO_MUTUAL. Use client provided SNI if set. Otherwise,
 		// overwrite with the auto generated SNI. User specified SNIs in the istio mtls settings
-		// are useful when routing via gateways. Use Service Acccounts if Subject Alt names
+		// are useful when routing via gateways. Use Service Accounts if Subject Alt names
 		// are not specified in TLS settings.
 		sniToUse := tls.Sni
 		if len(sniToUse) == 0 {
 			sniToUse = sni
 		}
 		subjectAltNamesToUse := tls.SubjectAltNames
-		if len(subjectAltNamesToUse) == 0 {
+		if subjectAltNamesToUse == nil {
 			subjectAltNamesToUse = serviceAccounts
 		}
 		return cb.buildIstioMutualTLS(subjectAltNamesToUse, sniToUse), userSupplied
@@ -868,10 +867,10 @@ func (cb *ClusterBuilder) buildMutualTLS(serviceAccounts []string, sni string) *
 }
 
 // buildIstioMutualTLS returns a `TLSSettings` for ISTIO_MUTUAL mode.
-func (cb *ClusterBuilder) buildIstioMutualTLS(serviceAccounts []string, sni string) *networking.ClientTLSSettings {
+func (cb *ClusterBuilder) buildIstioMutualTLS(san []string, sni string) *networking.ClientTLSSettings {
 	return &networking.ClientTLSSettings{
 		Mode:            networking.ClientTLSSettings_ISTIO_MUTUAL,
-		SubjectAltNames: serviceAccounts,
+		SubjectAltNames: san,
 		Sni:             sni,
 	}
 }
-- 
2.35.3

