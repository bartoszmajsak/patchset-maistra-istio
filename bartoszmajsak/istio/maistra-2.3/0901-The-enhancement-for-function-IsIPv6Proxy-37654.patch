From da38ba9a3041323fdc9658ddb6d9c5f7d2bcb2f8 Mon Sep 17 00:00:00 2001
From: Steve Zhang <huailong.zhang@intel.com>
Date: Thu, 24 Mar 2022 11:29:58 +0800
Subject: The enhancement for function IsIPv6Proxy (#37654)

* add constants and common utilities to support dual-stack feature

Co-authored-by: ycai-aspen <yingchun.cai@volunteers.acasi.info>
Co-authored-by: jacob-delgado <jacob.delgado@volunteers.acasi.info>
Co-authored-by: irisdingbj <irisdingbj@gmail.com>

* add unit test for ipv4/ipv6 proxy and fixed code according to comment.

Co-authored-by: ycai-aspen <yingchun.cai@volunteers.acasi.info>
Co-authored-by: jacob-delgado <jacob.delgado@volunteers.acasi.info>
Co-authored-by: irisdingbj <irisdingbj@gmail.com>

* add unit test for IsIPv4Proxy and IsIPv6Proxy.

Co-authored-by: ycai-aspen <yingchun.cai@volunteers.acasi.info>
Co-authored-by: jacob-delgado <jacob.delgado@volunteers.acasi.info>
Co-authored-by: irisdingbj <irisdingbj@gmail.com>

* fix issue#38041, ip family support for a proxy should depend on the values of proxy's endpoint addresses

* change the funciton to decide the virtualInbound and virtualOutbound is ipv4 or ipv6

* remove unnecessary common functions and constants

* remove incorrect code for another PR

Co-authored-by: ycai-aspen <yingchun.cai@volunteers.acasi.info>
Co-authored-by: jacob-delgado <jacob.delgado@volunteers.acasi.info>
Co-authored-by: irisdingbj <irisdingbj@gmail.com>
---
 pilot/pkg/util/network/ip.go      | 10 +++++++---
 pilot/pkg/util/network/ip_test.go |  2 +-
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/pilot/pkg/util/network/ip.go b/pilot/pkg/util/network/ip.go
index b3a74a1ecd..f828f6eedb 100644
--- a/pilot/pkg/util/network/ip.go
+++ b/pilot/pkg/util/network/ip.go
@@ -144,6 +144,7 @@ func ResolveAddr(addr string, lookupIPAddr ...lookupIPAddrType) (string, error)
 // IsIPv6Proxy check the addresses slice and returns true for all addresses are valid IPv6 address
 // for all other cases it returns false
 func IsIPv6Proxy(ipAddrs []string) bool {
+	result := false
 	for i := 0; i < len(ipAddrs); i++ {
 		addr := net.ParseIP(ipAddrs[i])
 		if addr == nil {
@@ -151,9 +152,12 @@ func IsIPv6Proxy(ipAddrs []string) bool {
 			// skip it to prevent a panic.
 			continue
 		}
-		if addr.To4() != nil {
-			return false
+
+		// need to check that a proxy can have an IPv6 address but configuration is not configured K8s for dual-stack support.
+		// In this case an ipv6 link local address will appear, but not one that is routable to with K8s
+		if addr.To4() == nil && addr.To16() != nil && !addr.IsLinkLocalUnicast() {
+			result = true
 		}
 	}
-	return true
+	return result
 }
diff --git a/pilot/pkg/util/network/ip_test.go b/pilot/pkg/util/network/ip_test.go
index aca5e85716..914d272a48 100644
--- a/pilot/pkg/util/network/ip_test.go
+++ b/pilot/pkg/util/network/ip_test.go
@@ -202,7 +202,7 @@ func TestIsIPv6Proxy(t *testing.T) {
 		{
 			name:     "mixed ipv4 and ipv6",
 			addrs:    []string{"1111:2222::1", "::1", "127.0.0.1", "2.2.2.2", "2222:3333::1"},
-			expected: false,
+			expected: true,
 		},
 	}
 	for _, tt := range tests {
-- 
2.35.3

