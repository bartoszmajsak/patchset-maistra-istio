From fe652368feb59068c6693452deaf5f6d8664c205 Mon Sep 17 00:00:00 2001
From: Zhonghu Xu <xuzhonghu@huawei.com>
Date: Mon, 8 Nov 2021 15:15:30 +0800
Subject: Config translate returns value type (#35897)

* gen translate func

* Fix crd store methods

* Fix build

* make gen
---
 .../config/kube/crdclient/cache_handler.go    |  4 +-
 pilot/pkg/config/kube/crdclient/client.go     | 14 ++--
 .../config/kube/crdclient/gen/types.go.tmpl   |  6 +-
 pilot/pkg/config/kube/crdclient/types.gen.go  | 82 +++++++++----------
 pkg/config/schema/fuzz_test.go                |  4 +-
 tests/fuzz/config_validation_fuzzer.go        |  5 +-
 6 files changed, 57 insertions(+), 58 deletions(-)

diff --git a/pilot/pkg/config/kube/crdclient/cache_handler.go b/pilot/pkg/config/kube/crdclient/cache_handler.go
index 11274e1ade..efd3ea83df 100644
--- a/pilot/pkg/config/kube/crdclient/cache_handler.go
+++ b/pilot/pkg/config/kube/crdclient/cache_handler.go
@@ -50,7 +50,7 @@ func (h *cacheHandler) onEvent(old interface{}, curr interface{}, event model.Ev
 		scope.Warnf("New Object can not be converted to runtime Object %v, is type %T", curr, curr)
 		return nil
 	}
-	currConfig := *TranslateObject(currItem, h.schema.Resource().GroupVersionKind(), h.client.domainSuffix)
+	currConfig := TranslateObject(currItem, h.schema.Resource().GroupVersionKind(), h.client.domainSuffix)
 
 	var oldConfig config.Config
 	if old != nil {
@@ -59,7 +59,7 @@ func (h *cacheHandler) onEvent(old interface{}, curr interface{}, event model.Ev
 			log.Warnf("Old Object can not be converted to runtime Object %v, is type %T", old, old)
 			return nil
 		}
-		oldConfig = *TranslateObject(oldItem, h.schema.Resource().GroupVersionKind(), h.client.domainSuffix)
+		oldConfig = TranslateObject(oldItem, h.schema.Resource().GroupVersionKind(), h.client.domainSuffix)
 	}
 
 	// TODO we may consider passing a pointer to handlers instead of the value. While spec is a pointer, the meta will be copied
diff --git a/pilot/pkg/config/kube/crdclient/client.go b/pilot/pkg/config/kube/crdclient/client.go
index de1696646e..299765e63d 100644
--- a/pilot/pkg/config/kube/crdclient/client.go
+++ b/pilot/pkg/config/kube/crdclient/client.go
@@ -263,7 +263,7 @@ func (cl *Client) SyncAll() {
 					scope.Warnf("New Object can not be converted to runtime Object %v, is type %T", object, object)
 					continue
 				}
-				currConfig := *TranslateObject(currItem, h.schema.Resource().GroupVersionKind(), h.client.domainSuffix)
+				currConfig := TranslateObject(currItem, h.schema.Resource().GroupVersionKind(), h.client.domainSuffix)
 				for _, f := range handlers {
 					f(config.Config{}, currConfig, model.EventAdd)
 				}
@@ -294,10 +294,10 @@ func (cl *Client) Get(typ config.GroupVersionKind, name, namespace string) *conf
 	}
 
 	cfg := TranslateObject(obj, typ, cl.domainSuffix)
-	if !cl.objectInRevision(cfg) {
+	if !cl.objectInRevision(&cfg) {
 		return nil
 	}
-	return cfg
+	return &cfg
 }
 
 // Create implements store interface
@@ -370,8 +370,8 @@ func (cl *Client) List(kind config.GroupVersionKind, namespace string) ([]config
 	out := make([]config.Config, 0, len(list))
 	for _, item := range list {
 		cfg := TranslateObject(item, kind, cl.domainSuffix)
-		if cl.objectInRevision(cfg) {
-			out = append(out, *cfg)
+		if cl.objectInRevision(&cfg) {
+			out = append(out, cfg)
 		}
 	}
 
@@ -428,11 +428,11 @@ func knownCRDs(ctx context.Context, crdClient apiextensionsclient.Interface) (ma
 	return mp, nil
 }
 
-func TranslateObject(r runtime.Object, gvk config.GroupVersionKind, domainSuffix string) *config.Config {
+func TranslateObject(r runtime.Object, gvk config.GroupVersionKind, domainSuffix string) config.Config {
 	translateFunc, f := translationMap[gvk]
 	if !f {
 		scope.Errorf("unknown type %v", gvk)
-		return nil
+		return config.Config{}
 	}
 	c := translateFunc(r)
 	c.Domain = domainSuffix
diff --git a/pilot/pkg/config/kube/crdclient/gen/types.go.tmpl b/pilot/pkg/config/kube/crdclient/gen/types.go.tmpl
index 020e0bffa1..0dfb3195ea 100644
--- a/pilot/pkg/config/kube/crdclient/gen/types.go.tmpl
+++ b/pilot/pkg/config/kube/crdclient/gen/types.go.tmpl
@@ -137,11 +137,11 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 	}
 }
 
-var translationMap = map[config.GroupVersionKind]func(r runtime.Object) *config.Config{
+var translationMap = map[config.GroupVersionKind]func(r runtime.Object) config.Config{
 {{- range . }}
-	collections.{{ .VariableName }}.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.{{ .VariableName }}.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*{{ .ClientImport }}.{{ .Kind }})
-		return &config.Config{
+		return config.Config{
 		Meta: config.Meta{
 			GroupVersionKind:  collections.{{ .VariableName }}.Resource().GroupVersionKind(),
 			Name:              obj.Name,
diff --git a/pilot/pkg/config/kube/crdclient/types.gen.go b/pilot/pkg/config/kube/crdclient/types.gen.go
index 8b0aa67b2f..0ed45210de 100644
--- a/pilot/pkg/config/kube/crdclient/types.gen.go
+++ b/pilot/pkg/config/kube/crdclient/types.gen.go
@@ -746,10 +746,10 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 	}
 }
 
-var translationMap = map[config.GroupVersionKind]func(r runtime.Object) *config.Config{
-	collections.IstioExtensionsV1Alpha1Wasmplugins.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+var translationMap = map[config.GroupVersionKind]func(r runtime.Object) config.Config{
+	collections.IstioExtensionsV1Alpha1Wasmplugins.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientextensionsv1alpha1.WasmPlugin)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioExtensionsV1Alpha1Wasmplugins.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -766,9 +766,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Alpha3Destinationrules.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Alpha3Destinationrules.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1alpha3.DestinationRule)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Alpha3Destinationrules.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -785,9 +785,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Alpha3Envoyfilters.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Alpha3Envoyfilters.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1alpha3.EnvoyFilter)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Alpha3Envoyfilters.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -804,9 +804,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Alpha3Gateways.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Alpha3Gateways.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1alpha3.Gateway)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Alpha3Gateways.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -823,9 +823,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Alpha3Serviceentries.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Alpha3Serviceentries.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1alpha3.ServiceEntry)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Alpha3Serviceentries.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -842,9 +842,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Alpha3Sidecars.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Alpha3Sidecars.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1alpha3.Sidecar)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Alpha3Sidecars.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -861,9 +861,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Alpha3Virtualservices.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Alpha3Virtualservices.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1alpha3.VirtualService)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Alpha3Virtualservices.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -880,9 +880,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Alpha3Workloadentries.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Alpha3Workloadentries.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1alpha3.WorkloadEntry)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Alpha3Workloadentries.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -899,9 +899,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Alpha3Workloadgroups.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Alpha3Workloadgroups.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1alpha3.WorkloadGroup)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Alpha3Workloadgroups.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -918,9 +918,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioNetworkingV1Beta1Proxyconfigs.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioNetworkingV1Beta1Proxyconfigs.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientnetworkingv1beta1.ProxyConfig)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioNetworkingV1Beta1Proxyconfigs.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -937,9 +937,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioSecurityV1Beta1Authorizationpolicies.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioSecurityV1Beta1Authorizationpolicies.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientsecurityv1beta1.AuthorizationPolicy)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioSecurityV1Beta1Authorizationpolicies.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -956,9 +956,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioSecurityV1Beta1Peerauthentications.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioSecurityV1Beta1Peerauthentications.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientsecurityv1beta1.PeerAuthentication)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioSecurityV1Beta1Peerauthentications.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -975,9 +975,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioSecurityV1Beta1Requestauthentications.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioSecurityV1Beta1Requestauthentications.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clientsecurityv1beta1.RequestAuthentication)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioSecurityV1Beta1Requestauthentications.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -994,9 +994,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.IstioTelemetryV1Alpha1Telemetries.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.IstioTelemetryV1Alpha1Telemetries.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*clienttelemetryv1alpha1.Telemetry)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.IstioTelemetryV1Alpha1Telemetries.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -1013,9 +1013,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.K8SGatewayApiV1Alpha2Gatewayclasses.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.K8SGatewayApiV1Alpha2Gatewayclasses.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*gatewayv1alpha2.GatewayClass)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.K8SGatewayApiV1Alpha2Gatewayclasses.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -1032,9 +1032,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.K8SGatewayApiV1Alpha2Gateways.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.K8SGatewayApiV1Alpha2Gateways.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*gatewayv1alpha2.Gateway)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.K8SGatewayApiV1Alpha2Gateways.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -1051,9 +1051,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.K8SGatewayApiV1Alpha2Httproutes.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.K8SGatewayApiV1Alpha2Httproutes.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*gatewayv1alpha2.HTTPRoute)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.K8SGatewayApiV1Alpha2Httproutes.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -1070,9 +1070,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.K8SGatewayApiV1Alpha2Referencepolicies.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.K8SGatewayApiV1Alpha2Referencepolicies.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*gatewayv1alpha2.ReferencePolicy)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.K8SGatewayApiV1Alpha2Referencepolicies.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -1088,9 +1088,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Spec: &obj.Spec,
 		}
 	},
-	collections.K8SGatewayApiV1Alpha2Tcproutes.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.K8SGatewayApiV1Alpha2Tcproutes.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*gatewayv1alpha2.TCPRoute)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.K8SGatewayApiV1Alpha2Tcproutes.Resource().GroupVersionKind(),
 				Name:              obj.Name,
@@ -1107,9 +1107,9 @@ func delete(ic versionedclient.Interface, sc gatewayapiclient.Interface, typ con
 			Status: &obj.Status,
 		}
 	},
-	collections.K8SGatewayApiV1Alpha2Tlsroutes.Resource().GroupVersionKind(): func(r runtime.Object) *config.Config {
+	collections.K8SGatewayApiV1Alpha2Tlsroutes.Resource().GroupVersionKind(): func(r runtime.Object) config.Config {
 		obj := r.(*gatewayv1alpha2.TLSRoute)
-		return &config.Config{
+		return config.Config{
 			Meta: config.Meta{
 				GroupVersionKind:  collections.K8SGatewayApiV1Alpha2Tlsroutes.Resource().GroupVersionKind(),
 				Name:              obj.Name,
diff --git a/pkg/config/schema/fuzz_test.go b/pkg/config/schema/fuzz_test.go
index 2548a8dcf8..b80202a751 100644
--- a/pkg/config/schema/fuzz_test.go
+++ b/pkg/config/schema/fuzz_test.go
@@ -62,7 +62,7 @@ func TestValidationFuzzing(t *testing.T) {
 	fz := createFuzzer()
 	for _, r := range collections.Pilot.All() {
 		t.Run(r.VariableName(), func(t *testing.T) {
-			var iobj *config.Config
+			var iobj config.Config
 			defer func() {
 				if err := recover(); err != nil {
 					logPanic(t, err)
@@ -78,7 +78,7 @@ func TestValidationFuzzing(t *testing.T) {
 				}
 				obj := istiofuzz.Fuzz(t, kgvk, kube.IstioScheme, fz)
 				iobj = crdclient.TranslateObject(obj, gvk, "cluster.local")
-				_, _ = r.Resource().ValidateConfig(*iobj)
+				_, _ = r.Resource().ValidateConfig(iobj)
 			}
 		})
 	}
diff --git a/tests/fuzz/config_validation_fuzzer.go b/tests/fuzz/config_validation_fuzzer.go
index e1b56698ae..198421182e 100644
--- a/tests/fuzz/config_validation_fuzzer.go
+++ b/tests/fuzz/config_validation_fuzzer.go
@@ -28,7 +28,6 @@
 
 func FuzzConfigValidation(data []byte) int {
 	f := fuzz.NewConsumer(data)
-	var iobj *config.Config
 	configIndex, err := f.GetInt()
 	if err != nil {
 		return -1
@@ -55,8 +54,8 @@ func FuzzConfigValidation(data []byte) int {
 		return 0
 	}
 
-	iobj = crdclient.TranslateObject(object, gvk, "cluster.local")
-	_, _ = r.Resource().ValidateConfig(*iobj)
+	iobj := crdclient.TranslateObject(object, gvk, "cluster.local")
+	_, _ = r.Resource().ValidateConfig(iobj)
 	return 1
 }
 
-- 
2.35.3

