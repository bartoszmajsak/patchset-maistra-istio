From 6b85b0576697e6b52d40ceda113c0e66a4d17fa1 Mon Sep 17 00:00:00 2001
From: Zhonghu Xu <xuzhonghu@huawei.com>
Date: Tue, 10 May 2022 16:37:09 +0800
Subject: Make use oftransport socket name directly from envoy api (#38821)

---
 .../pkg/networking/core/v1alpha3/cluster_builder.go  |  3 ++-
 pilot/pkg/networking/core/v1alpha3/listener.go       |  4 ++--
 pilot/pkg/networking/util/util.go                    | 12 ------------
 pilot/pkg/xds/filters/filters.go                     |  2 +-
 4 files changed, 5 insertions(+), 16 deletions(-)

diff --git a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
index f4ce0ceb67..a8798a4966 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
@@ -29,6 +29,7 @@
 	auth "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3"
 	http "github.com/envoyproxy/go-control-plane/envoy/extensions/upstreams/http/v3"
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
+	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
 	any "google.golang.org/protobuf/types/known/anypb"
 	"google.golang.org/protobuf/types/known/durationpb"
 	"google.golang.org/protobuf/types/known/structpb"
@@ -987,7 +988,7 @@ func (cb *ClusterBuilder) applyUpstreamTLSSettings(opts *buildClusterOpts, tls *
 
 	if tlsContext != nil {
 		c.cluster.TransportSocket = &core.TransportSocket{
-			Name:       util.EnvoyTLSSocketName,
+			Name:       wellknown.TransportSocketTls,
 			ConfigType: &core.TransportSocket_TypedConfig{TypedConfig: util.MessageToAny(tlsContext)},
 		}
 	}
diff --git a/pilot/pkg/networking/core/v1alpha3/listener.go b/pilot/pkg/networking/core/v1alpha3/listener.go
index a103d0e0ca..fd87282011 100644
--- a/pilot/pkg/networking/core/v1alpha3/listener.go
+++ b/pilot/pkg/networking/core/v1alpha3/listener.go
@@ -1689,7 +1689,7 @@ func buildDownstreamTLSTransportSocket(tlsContext *auth.DownstreamTlsContext) *c
 		return nil
 	}
 	return &core.TransportSocket{
-		Name:       util.EnvoyTLSSocketName,
+		Name:       wellknown.TransportSocketTls,
 		ConfigType: &core.TransportSocket_TypedConfig{TypedConfig: util.MessageToAny(tlsContext)},
 	}
 }
@@ -1699,7 +1699,7 @@ func buildDownstreamQUICTransportSocket(tlsContext *auth.DownstreamTlsContext) *
 		return nil
 	}
 	return &core.TransportSocket{
-		Name: util.EnvoyQUICSocketName,
+		Name: wellknown.TransportSocketQuic,
 		ConfigType: &core.TransportSocket_TypedConfig{
 			TypedConfig: util.MessageToAny(&envoyquicv3.QuicDownstreamTransport{
 				DownstreamTlsContext: tlsContext,
diff --git a/pilot/pkg/networking/util/util.go b/pilot/pkg/networking/util/util.go
index 7f36cd553d..acb606b5b8 100644
--- a/pilot/pkg/networking/util/util.go
+++ b/pilot/pkg/networking/util/util.go
@@ -77,18 +77,6 @@
 	// which determines the endpoint level transport socket configuration.
 	EnvoyTransportSocketMetadataKey = "envoy.transport_socket_match"
 
-	// EnvoyRawBufferSocketName matched with hardcoded built-in Envoy transport name which determines
-	// endpoint level plantext transport socket configuration
-	EnvoyRawBufferSocketName = wellknown.TransportSocketRawBuffer
-
-	// EnvoyTLSSocketName matched with hardcoded built-in Envoy transport name which determines endpoint
-	// level tls transport socket configuration
-	EnvoyTLSSocketName = wellknown.TransportSocketTls
-
-	// EnvoyQUICSocketName matched with hardcoded built-in Envoy transport name which determines endpoint
-	// level QUIC transport socket configuration
-	EnvoyQUICSocketName = wellknown.TransportSocketQuic
-
 	// Well-known header names
 	AltSvcHeader = "alt-svc"
 )
diff --git a/pilot/pkg/xds/filters/filters.go b/pilot/pkg/xds/filters/filters.go
index 0b6790d1d7..c65f5182fc 100644
--- a/pilot/pkg/xds/filters/filters.go
+++ b/pilot/pkg/xds/filters/filters.go
@@ -62,7 +62,7 @@
 		},
 	}
 	RawBufferTransportSocket = &core.TransportSocket{
-		Name: util.EnvoyRawBufferSocketName,
+		Name: wellknown.TransportSocketRawBuffer,
 		ConfigType: &core.TransportSocket_TypedConfig{
 			TypedConfig: util.MessageToAny(&rawbuffer.RawBuffer{}),
 		},
-- 
2.35.3

