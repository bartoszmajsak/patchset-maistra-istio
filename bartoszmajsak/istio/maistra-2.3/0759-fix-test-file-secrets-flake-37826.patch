From 5ce0bd390c63b159b06561c9907c1daaf2c8c878 Mon Sep 17 00:00:00 2001
From: Rama Chavali <rama.rao@salesforce.com>
Date: Thu, 10 Mar 2022 00:34:35 +0530
Subject: fix test file secrets flake (#37826)

* fix testfilesecrets flake

Signed-off-by: Rama Chavali <rama.rao@salesforce.com>

* Update security/pkg/nodeagent/cache/secretcache_test.go

Co-authored-by: John Howard <howardjohn@google.com>
---
 security/pkg/nodeagent/cache/secretcache_test.go | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/security/pkg/nodeagent/cache/secretcache_test.go b/security/pkg/nodeagent/cache/secretcache_test.go
index de2f4fb42c..2062981d24 100644
--- a/security/pkg/nodeagent/cache/secretcache_test.go
+++ b/security/pkg/nodeagent/cache/secretcache_test.go
@@ -135,7 +135,7 @@ func (u *UpdateTracker) Expect(want map[string]int) {
 			return fmt.Errorf("wanted %+v got %+v", want, u.hits)
 		}
 		return nil
-	}, retry.Timeout(time.Second*2), retry.Delay(time.Millisecond))
+	}, retry.Timeout(time.Second*5))
 }
 
 func (u *UpdateTracker) Reset() {
@@ -373,6 +373,7 @@ func runFileAgentTest(t *testing.T, sds bool) {
 	})
 	// We shouldn't get an pushes; these only happen on changes
 	u.Expect(map[string]int{})
+	u.Reset()
 
 	if err := file.AtomicWrite(sc.existingCertificateFile.CertificatePath, testcerts.RotatedCert, os.FileMode(0o644)); err != nil {
 		t.Fatal(err)
@@ -396,6 +397,8 @@ func runFileAgentTest(t *testing.T, sds bool) {
 	// We do NOT expect update callback. We only watch the cert file, since the key and cert must be updated
 	// in tandem.
 	u.Expect(map[string]int{workloadResource: 1})
+	u.Reset()
+
 	checkSecret(t, sc, workloadResource, security.SecretItem{
 		ResourceName:     workloadResource,
 		CertificateChain: testcerts.RotatedCert,
@@ -406,7 +409,9 @@ func runFileAgentTest(t *testing.T, sds bool) {
 		t.Fatal(err)
 	}
 	// We expect to get an update notification, and the new root cert to be read
-	u.Expect(map[string]int{workloadResource: 1, rootResource: 1})
+	u.Expect(map[string]int{rootResource: 1})
+	u.Reset()
+
 	checkSecret(t, sc, rootResource, security.SecretItem{
 		ResourceName: rootResource,
 		RootCert:     testcerts.CACert,
@@ -416,11 +421,14 @@ func runFileAgentTest(t *testing.T, sds bool) {
 	if err := os.Remove(sc.existingCertificateFile.CaCertificatePath); err != nil {
 		t.Fatal(err)
 	}
+
 	if err := file.AtomicWrite(sc.existingCertificateFile.CaCertificatePath, testcerts.CACert, os.FileMode(0o644)); err != nil {
 		t.Fatal(err)
 	}
 	// We expect to get an update notification, and the new root cert to be read
-	u.Expect(map[string]int{workloadResource: 1, rootResource: 2})
+	// We do not expect update callback for REMOVE events.
+	u.Expect(map[string]int{rootResource: 1})
+
 	checkSecret(t, sc, rootResource, security.SecretItem{
 		ResourceName: rootResource,
 		RootCert:     testcerts.CACert,
-- 
2.35.3

