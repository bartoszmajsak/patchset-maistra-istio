From 680962c4cfe8e1a41929c71ce76a024d50b40965 Mon Sep 17 00:00:00 2001
From: Frank Budinsky <frankb@ca.ibm.com>
Date: Mon, 18 Apr 2022 18:02:14 -0400
Subject: Add revision prefix to cycle test (#38436)

---
 pilot/pkg/leaderelection/leaderelection_test.go | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/pilot/pkg/leaderelection/leaderelection_test.go b/pilot/pkg/leaderelection/leaderelection_test.go
index b142e56499..2f9ead96c5 100644
--- a/pilot/pkg/leaderelection/leaderelection_test.go
+++ b/pilot/pkg/leaderelection/leaderelection_test.go
@@ -186,12 +186,16 @@ type instance struct {
 	comp     string
 }
 
-func (i instance) GetComp() LeaderComparison {
+func (i instance) GetComp() (LeaderComparison, string) {
+	key := i.revision
 	switch i.comp {
 	case "location":
-		return LocationPrioritizedComparison
+		if i.remote {
+			key = remoteIstiodPrefix + key
+		}
+		return LocationPrioritizedComparison, key
 	case "simple":
-		return SimpleRevisionComparison
+		return SimpleRevisionComparison, key
 	default:
 		panic("unknown comparison type")
 	}
@@ -211,6 +215,7 @@ func TestPrioritizationCycles(t *testing.T) {
 			}
 		}
 	}
+
 	for _, start := range cases {
 		t.Run(fmt.Sprint(start), func(t *testing.T) {
 			checkCycles(t, start, cases, nil)
@@ -237,7 +242,8 @@ func checkCycles(t *testing.T, start instance, cases []instance, chain []instanc
 			defaultWatcher: &fakeDefaultWatcher{defaultRevision: "default"},
 			revision:       nextHop.revision,
 		}
-		if nextHop.GetComp()(start.revision, &next) {
+		cmpFunc, key := start.GetComp()
+		if cmpFunc(key, &next) {
 			nc := append([]instance{}, chain...)
 			nc = append(nc, start)
 			checkCycles(t, nextHop, cases, nc)
-- 
2.35.3

