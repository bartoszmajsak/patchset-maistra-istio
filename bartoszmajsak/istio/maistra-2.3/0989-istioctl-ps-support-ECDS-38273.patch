From a64a07b0b19e455edfdbc558e56c2857e4eba898 Mon Sep 17 00:00:00 2001
From: zirain <hejianpeng2@huawei.com>
Date: Thu, 7 Apr 2022 23:44:50 +0800
Subject: istioctl ps support ECDS (#38273)

* istioctl ps support ECDS

* add release-notes
---
 istioctl/cmd/proxystatus_test.go              |  6 +-
 istioctl/pkg/writer/pilot/status.go           | 55 ++++++++-------
 istioctl/pkg/writer/pilot/status_test.go      | 68 +++++++++++--------
 .../pilot/testdata/multiStatusMultiPilot.txt  |  8 +--
 .../pilot/testdata/multiStatusSinglePilot.txt |  6 +-
 .../testdata/multiXdsStatusMultiPilot.txt     |  8 +--
 .../testdata/multiXdsStatusSinglePilot.txt    |  6 +-
 .../writer/pilot/testdata/singleStatus.txt    |  4 +-
 .../pilot/testdata/singleStatusFallback.txt   |  4 +-
 pilot/pkg/xds/statusgen.go                    |  1 +
 releasenotes/notes/38273.yaml                 |  7 ++
 11 files changed, 100 insertions(+), 73 deletions(-)
 create mode 100644 releasenotes/notes/38273.yaml

diff --git a/istioctl/cmd/proxystatus_test.go b/istioctl/cmd/proxystatus_test.go
index d4df63b8e3..7cd651a4a1 100644
--- a/istioctl/cmd/proxystatus_test.go
+++ b/istioctl/cmd/proxystatus_test.go
@@ -24,11 +24,11 @@ func TestProxyStatus(t *testing.T) {
 	cases := []execTestCase{
 		{ // case 0
 			args:           strings.Split("proxy-status", " "),
-			expectedString: "NAME     CLUSTER     CDS     LDS     EDS     RDS     ISTIOD",
+			expectedString: "NAME     CLUSTER     CDS     LDS     EDS     RDS     ECDS     ISTIOD",
 		},
 		{ // case 1 short name "ps"
 			args:           strings.Split("ps", " "),
-			expectedString: "NAME     CLUSTER     CDS     LDS     EDS     RDS     ISTIOD",
+			expectedString: "NAME     CLUSTER     CDS     LDS     EDS     RDS     ECDS     ISTIOD",
 		},
 		{ // case 2: supplying nonexistent pod name should result in error with flag
 			args:          strings.Split("proxy-status deployment/random-gibberish", " "),
@@ -48,7 +48,7 @@ func TestProxyStatus(t *testing.T) {
 		},
 		{ // case 6: new --revision argument
 			args:           strings.Split("proxy-status --revision canary", " "),
-			expectedString: "NAME     CLUSTER     CDS     LDS     EDS     RDS     ISTIOD",
+			expectedString: "NAME     CLUSTER     CDS     LDS     EDS     RDS     ECDS     ISTIOD",
 		},
 		{ // case 7: supplying type that doesn't select pods should fail
 			args:          strings.Split("proxy-status serviceaccount/sleep", " "),
diff --git a/istioctl/pkg/writer/pilot/status.go b/istioctl/pkg/writer/pilot/status.go
index 84cfb33385..f76b7ae3f3 100644
--- a/istioctl/pkg/writer/pilot/status.go
+++ b/istioctl/pkg/writer/pilot/status.go
@@ -48,13 +48,14 @@ type XdsStatusWriter struct {
 }
 
 type xdsWriterStatus struct {
-	proxyID        string
-	istiodID       string
-	istiodVersion  string
-	clusterStatus  string
-	listenerStatus string
-	routeStatus    string
-	endpointStatus string
+	proxyID              string
+	istiodID             string
+	istiodVersion        string
+	clusterStatus        string
+	listenerStatus       string
+	routeStatus          string
+	endpointStatus       string
+	extensionconfigStaus string
 }
 
 // PrintAll takes a slice of Pilot syncz responses and outputs them using a tabwriter
@@ -88,8 +89,8 @@ func (s *StatusWriter) PrintSingle(statuses map[string][]byte, proxyName string)
 }
 
 func (s *StatusWriter) setupStatusPrint(statuses map[string][]byte) (*tabwriter.Writer, []*writerStatus, error) {
-	w := new(tabwriter.Writer).Init(s.Writer, 0, 8, 5, ' ', 0)
-	_, _ = fmt.Fprintln(w, "NAME\tCLUSTER\tCDS\tLDS\tEDS\tRDS\tISTIOD\tVERSION")
+	w := new(tabwriter.Writer).Init(s.Writer, 0, 9, 5, ' ', 0)
+	_, _ = fmt.Fprintln(w, "NAME\tCLUSTER\tCDS\tLDS\tEDS\tRDS\tECDS\tISTIOD\tVERSION")
 	fullStatus := make([]*writerStatus, 0, len(statuses))
 	for pilot, status := range statuses {
 		var ss []*writerStatus
@@ -116,6 +117,7 @@ func statusPrintln(w io.Writer, status *writerStatus) error {
 	listenerSynced := xdsStatus(status.ListenerSent, status.ListenerAcked)
 	routeSynced := xdsStatus(status.RouteSent, status.RouteAcked)
 	endpointSynced := xdsStatus(status.EndpointSent, status.EndpointAcked)
+	extensionconfigSynced := xdsStatus(status.ExtesionConfigSent, status.ExtensionConfigAcked)
 	version := status.IstioVersion
 	if version == "" {
 		// If we can't find an Istio version (talking to a 1.1 pilot), fallback to the proxy version
@@ -123,8 +125,10 @@ func statusPrintln(w io.Writer, status *writerStatus) error {
 		// but it is better than not providing any information.
 		version = status.ProxyVersion + "*"
 	}
-	_, _ = fmt.Fprintf(w, "%v\t%v\t%v\t%v\t%v\t%v\t%v\t%v\n",
-		status.ProxyID, status.ClusterID, clusterSynced, listenerSynced, endpointSynced, routeSynced, status.pilot, version)
+	_, _ = fmt.Fprintf(w, "%v\t%v\t%v\t%v\t%v\t%v\t%v\t%v\t%v\n",
+		status.ProxyID, status.ClusterID,
+		clusterSynced, listenerSynced, endpointSynced, routeSynced, extensionconfigSynced,
+		status.pilot, version)
 	return nil
 }
 
@@ -174,23 +178,24 @@ func (s *XdsStatusWriter) setupStatusPrint(drs map[string]*xdsapi.DiscoveryRespo
 				if err != nil {
 					return nil, nil, fmt.Errorf("could not unmarshal ClientConfig: %w", err)
 				}
-				cds, lds, eds, rds := getSyncStatus(&clientConfig)
+				cds, lds, eds, rds, ecds := getSyncStatus(&clientConfig)
 				cp := multixds.CpInfo(dr)
 				fullStatus = append(fullStatus, &xdsWriterStatus{
-					proxyID:        clientConfig.GetNode().GetId(),
-					istiodID:       cp.ID,
-					istiodVersion:  cp.Info.Version,
-					clusterStatus:  cds,
-					listenerStatus: lds,
-					routeStatus:    rds,
-					endpointStatus: eds,
+					proxyID:              clientConfig.GetNode().GetId(),
+					istiodID:             cp.ID,
+					istiodVersion:        cp.Info.Version,
+					clusterStatus:        cds,
+					listenerStatus:       lds,
+					routeStatus:          rds,
+					endpointStatus:       eds,
+					extensionconfigStaus: ecds,
 				})
 				if len(fullStatus) == 0 {
 					return nil, nil, fmt.Errorf("no proxies found (checked %d istiods)", len(drs))
 				}
 
-				w = new(tabwriter.Writer).Init(s.Writer, 0, 8, 5, ' ', 0)
-				_, _ = fmt.Fprintln(w, "NAME\tCDS\tLDS\tEDS\tRDS\tISTIOD\tVERSION")
+				w = new(tabwriter.Writer).Init(s.Writer, 0, 9, 5, ' ', 0)
+				_, _ = fmt.Fprintln(w, "NAME\tCDS\tLDS\tEDS\tRDS\tECDS\tISTIOD\tVERSION")
 
 				sort.Slice(fullStatus, func(i, j int) bool {
 					return fullStatus[i].proxyID < fullStatus[j].proxyID
@@ -221,14 +226,15 @@ func (s *XdsStatusWriter) setupStatusPrint(drs map[string]*xdsapi.DiscoveryRespo
 }
 
 func xdsStatusPrintln(w io.Writer, status *xdsWriterStatus) error {
-	_, err := fmt.Fprintf(w, "%v\t%v\t%v\t%v\t%v\t%v\t%v\n",
+	_, err := fmt.Fprintf(w, "%v\t%v\t%v\t%v\t%v\t%v\t%v\t%v\n",
 		status.proxyID,
 		status.clusterStatus, status.listenerStatus, status.endpointStatus, status.routeStatus,
+		status.extensionconfigStaus,
 		status.istiodID, status.istiodVersion)
 	return err
 }
 
-func getSyncStatus(clientConfig *xdsstatus.ClientConfig) (cds, lds, eds, rds string) {
+func getSyncStatus(clientConfig *xdsstatus.ClientConfig) (cds, lds, eds, rds, ecds string) {
 	configs := handleAndGetXdsConfigs(clientConfig)
 	for _, config := range configs {
 		cfgType := config.GetTypeUrl()
@@ -241,6 +247,8 @@ func getSyncStatus(clientConfig *xdsstatus.ClientConfig) (cds, lds, eds, rds str
 			rds = config.GetConfigStatus().String()
 		case xdsresource.EndpointType:
 			eds = config.GetConfigStatus().String()
+		case xdsresource.ExtensionConfigurationType:
+			ecds = config.GetConfigStatus().String()
 		default:
 			log.Infof("GenericXdsConfig unexpected type %s\n", xdsresource.GetShortType(cfgType))
 		}
@@ -278,5 +286,6 @@ func handleAndGetXdsConfigs(clientConfig *xdsstatus.ClientConfig) []*xdsstatus.C
 			})
 		}
 	}
+
 	return configs
 }
diff --git a/istioctl/pkg/writer/pilot/status_test.go b/istioctl/pkg/writer/pilot/status_test.go
index 74c69d0f35..b971caf29b 100644
--- a/istioctl/pkg/writer/pilot/status_test.go
+++ b/istioctl/pkg/writer/pilot/status_test.go
@@ -249,29 +249,32 @@ func TestXdsStatusWriter_PrintAll(t *testing.T) {
 			input: map[string]*xdsapi.DiscoveryResponse{
 				"istiod1": xdsResponseInput("istiod1", []clientConfigInput{
 					{
-						proxyID:       "proxy1",
-						cdsSyncStatus: status.ConfigStatus_STALE,
-						ldsSyncStatus: status.ConfigStatus_SYNCED,
-						rdsSyncStatus: status.ConfigStatus_NOT_SENT,
-						edsSyncStatus: status.ConfigStatus_SYNCED,
+						proxyID:        "proxy1",
+						cdsSyncStatus:  status.ConfigStatus_STALE,
+						ldsSyncStatus:  status.ConfigStatus_SYNCED,
+						rdsSyncStatus:  status.ConfigStatus_NOT_SENT,
+						edsSyncStatus:  status.ConfigStatus_SYNCED,
+						ecdsSyncStatus: status.ConfigStatus_SYNCED,
 					},
 				}),
 				"istiod2": xdsResponseInput("istiod2", []clientConfigInput{
 					{
-						proxyID:       "proxy2",
-						cdsSyncStatus: status.ConfigStatus_STALE,
-						ldsSyncStatus: status.ConfigStatus_SYNCED,
-						rdsSyncStatus: status.ConfigStatus_SYNCED,
-						edsSyncStatus: status.ConfigStatus_STALE,
+						proxyID:        "proxy2",
+						cdsSyncStatus:  status.ConfigStatus_STALE,
+						ldsSyncStatus:  status.ConfigStatus_SYNCED,
+						rdsSyncStatus:  status.ConfigStatus_SYNCED,
+						edsSyncStatus:  status.ConfigStatus_STALE,
+						ecdsSyncStatus: status.ConfigStatus_STALE,
 					},
 				}),
 				"istiod3": xdsResponseInput("istiod3", []clientConfigInput{
 					{
-						proxyID:       "proxy3",
-						cdsSyncStatus: status.ConfigStatus_UNKNOWN,
-						ldsSyncStatus: status.ConfigStatus_ERROR,
-						rdsSyncStatus: status.ConfigStatus_NOT_SENT,
-						edsSyncStatus: status.ConfigStatus_STALE,
+						proxyID:        "proxy3",
+						cdsSyncStatus:  status.ConfigStatus_UNKNOWN,
+						ldsSyncStatus:  status.ConfigStatus_ERROR,
+						rdsSyncStatus:  status.ConfigStatus_NOT_SENT,
+						edsSyncStatus:  status.ConfigStatus_STALE,
+						ecdsSyncStatus: status.ConfigStatus_NOT_SENT,
 					},
 				}),
 			},
@@ -282,18 +285,20 @@ func TestXdsStatusWriter_PrintAll(t *testing.T) {
 			input: map[string]*xdsapi.DiscoveryResponse{
 				"istiod1": xdsResponseInput("istiod1", []clientConfigInput{
 					{
-						proxyID:       "proxy1",
-						cdsSyncStatus: status.ConfigStatus_STALE,
-						ldsSyncStatus: status.ConfigStatus_SYNCED,
-						rdsSyncStatus: status.ConfigStatus_NOT_SENT,
-						edsSyncStatus: status.ConfigStatus_SYNCED,
+						proxyID:        "proxy1",
+						cdsSyncStatus:  status.ConfigStatus_STALE,
+						ldsSyncStatus:  status.ConfigStatus_SYNCED,
+						rdsSyncStatus:  status.ConfigStatus_NOT_SENT,
+						edsSyncStatus:  status.ConfigStatus_SYNCED,
+						ecdsSyncStatus: status.ConfigStatus_NOT_SENT,
 					},
 					{
-						proxyID:       "proxy2",
-						cdsSyncStatus: status.ConfigStatus_STALE,
-						ldsSyncStatus: status.ConfigStatus_SYNCED,
-						rdsSyncStatus: status.ConfigStatus_SYNCED,
-						edsSyncStatus: status.ConfigStatus_STALE,
+						proxyID:        "proxy2",
+						cdsSyncStatus:  status.ConfigStatus_STALE,
+						ldsSyncStatus:  status.ConfigStatus_SYNCED,
+						rdsSyncStatus:  status.ConfigStatus_SYNCED,
+						edsSyncStatus:  status.ConfigStatus_STALE,
+						ecdsSyncStatus: status.ConfigStatus_NOT_SENT,
 					},
 				}),
 			},
@@ -328,10 +333,11 @@ func TestXdsStatusWriter_PrintAll(t *testing.T) {
 type clientConfigInput struct {
 	proxyID string
 
-	cdsSyncStatus status.ConfigStatus
-	ldsSyncStatus status.ConfigStatus
-	rdsSyncStatus status.ConfigStatus
-	edsSyncStatus status.ConfigStatus
+	cdsSyncStatus  status.ConfigStatus
+	ldsSyncStatus  status.ConfigStatus
+	rdsSyncStatus  status.ConfigStatus
+	edsSyncStatus  status.ConfigStatus
+	ecdsSyncStatus status.ConfigStatus
 }
 
 func newXdsClientConfig(config clientConfigInput) *status.ClientConfig {
@@ -356,6 +362,10 @@ func newXdsClientConfig(config clientConfigInput) *status.ClientConfig {
 				TypeUrl:      v3.EndpointType,
 				ConfigStatus: config.edsSyncStatus,
 			},
+			{
+				TypeUrl:      v3.ExtensionConfigurationType,
+				ConfigStatus: config.ecdsSyncStatus,
+			},
 		},
 	}
 }
diff --git a/istioctl/pkg/writer/pilot/testdata/multiStatusMultiPilot.txt b/istioctl/pkg/writer/pilot/testdata/multiStatusMultiPilot.txt
index 817b1f6957..4472b9c10a 100644
--- a/istioctl/pkg/writer/pilot/testdata/multiStatusMultiPilot.txt
+++ b/istioctl/pkg/writer/pilot/testdata/multiStatusMultiPilot.txt
@@ -1,5 +1,5 @@
-NAME       CLUSTER      CDS                            LDS          EDS                            RDS          ISTIOD      VERSION
-proxy1     cluster1     STALE                          SYNCED       SYNCED                         NOT SENT     istiod1     1.1
-proxy2     cluster2     STALE                          SYNCED       STALE                          SYNCED       istiod2     1.1
-proxy3     cluster3     STALE (Never Acknowledged)     NOT SENT     STALE (Never Acknowledged)     SYNCED       istiod3     1.1
+NAME       CLUSTER      CDS                            LDS          EDS                            RDS          ECDS         ISTIOD      VERSION
+proxy1     cluster1     STALE                          SYNCED       SYNCED                         NOT SENT     NOT SENT     istiod1     1.1
+proxy2     cluster2     STALE                          SYNCED       STALE                          SYNCED       NOT SENT     istiod2     1.1
+proxy3     cluster3     STALE (Never Acknowledged)     NOT SENT     STALE (Never Acknowledged)     SYNCED       NOT SENT     istiod3     1.1
 
diff --git a/istioctl/pkg/writer/pilot/testdata/multiStatusSinglePilot.txt b/istioctl/pkg/writer/pilot/testdata/multiStatusSinglePilot.txt
index 2abb26836a..218a8a7d03 100644
--- a/istioctl/pkg/writer/pilot/testdata/multiStatusSinglePilot.txt
+++ b/istioctl/pkg/writer/pilot/testdata/multiStatusSinglePilot.txt
@@ -1,3 +1,3 @@
-NAME       CLUSTER      CDS       LDS        EDS        RDS          ISTIOD      VERSION
-proxy1     cluster1     STALE     SYNCED     SYNCED     NOT SENT     istiod1     1.1
-proxy2     cluster2     STALE     SYNCED     STALE      SYNCED       istiod1     1.1
+NAME       CLUSTER      CDS       LDS        EDS        RDS          ECDS         ISTIOD      VERSION
+proxy1     cluster1     STALE     SYNCED     SYNCED     NOT SENT     NOT SENT     istiod1     1.1
+proxy2     cluster2     STALE     SYNCED     STALE      SYNCED       NOT SENT     istiod1     1.1
diff --git a/istioctl/pkg/writer/pilot/testdata/multiXdsStatusMultiPilot.txt b/istioctl/pkg/writer/pilot/testdata/multiXdsStatusMultiPilot.txt
index 009f0f303e..3e7c93607a 100644
--- a/istioctl/pkg/writer/pilot/testdata/multiXdsStatusMultiPilot.txt
+++ b/istioctl/pkg/writer/pilot/testdata/multiXdsStatusMultiPilot.txt
@@ -1,4 +1,4 @@
-NAME       CDS         LDS        EDS        RDS          ISTIOD      VERSION
-proxy1     STALE       SYNCED     SYNCED     NOT_SENT     istiod1     1.1
-proxy2     STALE       SYNCED     STALE      SYNCED       istiod2     1.1
-proxy3     UNKNOWN     ERROR      STALE      NOT_SENT     istiod3     1.1
+NAME       CDS         LDS        EDS        RDS          ECDS         ISTIOD      VERSION
+proxy1     STALE       SYNCED     SYNCED     NOT_SENT     SYNCED       istiod1     1.1
+proxy2     STALE       SYNCED     STALE      SYNCED       STALE        istiod2     1.1
+proxy3     UNKNOWN     ERROR      STALE      NOT_SENT     NOT_SENT     istiod3     1.1
diff --git a/istioctl/pkg/writer/pilot/testdata/multiXdsStatusSinglePilot.txt b/istioctl/pkg/writer/pilot/testdata/multiXdsStatusSinglePilot.txt
index 9ac040707e..9b58c0e17b 100644
--- a/istioctl/pkg/writer/pilot/testdata/multiXdsStatusSinglePilot.txt
+++ b/istioctl/pkg/writer/pilot/testdata/multiXdsStatusSinglePilot.txt
@@ -1,3 +1,3 @@
-NAME       CDS       LDS        EDS        RDS          ISTIOD      VERSION
-proxy1     STALE     SYNCED     SYNCED     NOT_SENT     istiod1     1.1
-proxy2     STALE     SYNCED     STALE      SYNCED       istiod1     1.1
+NAME       CDS       LDS        EDS        RDS          ECDS         ISTIOD      VERSION
+proxy1     STALE     SYNCED     SYNCED     NOT_SENT     NOT_SENT     istiod1     1.1
+proxy2     STALE     SYNCED     STALE      SYNCED       NOT_SENT     istiod1     1.1
diff --git a/istioctl/pkg/writer/pilot/testdata/singleStatus.txt b/istioctl/pkg/writer/pilot/testdata/singleStatus.txt
index feebb1bbbd..6f099c3fe7 100644
--- a/istioctl/pkg/writer/pilot/testdata/singleStatus.txt
+++ b/istioctl/pkg/writer/pilot/testdata/singleStatus.txt
@@ -1,2 +1,2 @@
-NAME       CLUSTER      CDS       LDS        EDS       RDS        ISTIOD      VERSION
-proxy2     cluster2     STALE     SYNCED     STALE     SYNCED     istiod2     1.1
+NAME       CLUSTER      CDS       LDS        EDS       RDS        ECDS         ISTIOD      VERSION
+proxy2     cluster2     STALE     SYNCED     STALE     SYNCED     NOT SENT     istiod2     1.1
diff --git a/istioctl/pkg/writer/pilot/testdata/singleStatusFallback.txt b/istioctl/pkg/writer/pilot/testdata/singleStatusFallback.txt
index 589cce599d..5514401398 100644
--- a/istioctl/pkg/writer/pilot/testdata/singleStatusFallback.txt
+++ b/istioctl/pkg/writer/pilot/testdata/singleStatusFallback.txt
@@ -1,2 +1,2 @@
-NAME       CLUSTER      CDS       LDS        EDS       RDS        ISTIOD      VERSION
-proxy2     cluster2     STALE     SYNCED     STALE     SYNCED     istiod2     1.1*
+NAME       CLUSTER      CDS       LDS        EDS       RDS        ECDS         ISTIOD      VERSION
+proxy2     cluster2     STALE     SYNCED     STALE     SYNCED     NOT SENT     istiod2     1.1*
diff --git a/pilot/pkg/xds/statusgen.go b/pilot/pkg/xds/statusgen.go
index 5678163341..0363beb8b9 100644
--- a/pilot/pkg/xds/statusgen.go
+++ b/pilot/pkg/xds/statusgen.go
@@ -112,6 +112,7 @@ func (sg *StatusGen) debugSyncz() model.Resources {
 		v3.RouteType,
 		v3.EndpointType,
 		v3.ClusterType,
+		v3.ExtensionConfigurationType,
 	}
 
 	for _, con := range sg.Server.Clients() {
diff --git a/releasenotes/notes/38273.yaml b/releasenotes/notes/38273.yaml
new file mode 100644
index 0000000000..62c16e30d3
--- /dev/null
+++ b/releasenotes/notes/38273.yaml
@@ -0,0 +1,7 @@
+apiVersion: release-notes/v2
+kind: feature
+area: istioctl
+issue: []
+releaseNotes:
+- |
+  **Added** `istioctl ps` support ECDS.
\ No newline at end of file
-- 
2.35.3

