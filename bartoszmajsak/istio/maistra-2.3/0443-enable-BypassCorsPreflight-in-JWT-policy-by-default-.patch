From 070b733f5b285f6bbff3a32b8afe4f566b946e25 Mon Sep 17 00:00:00 2001
From: Yangmin Zhu <ymzhu@google.com>
Date: Tue, 25 Jan 2022 11:31:28 -0800
Subject: enable BypassCorsPreflight in JWT policy by default (#36981)

---
 .../security/authn/v1beta1/policy_applier.go  |  6 ++--
 .../authn/v1beta1/policy_applier_test.go      | 12 +++++++
 releasenotes/notes/36911.yaml                 | 11 ++++++
 tests/integration/security/jwt_test.go        | 34 +++++++++++++++++++
 4 files changed, 61 insertions(+), 2 deletions(-)
 create mode 100644 releasenotes/notes/36911.yaml

diff --git a/pilot/pkg/security/authn/v1beta1/policy_applier.go b/pilot/pkg/security/authn/v1beta1/policy_applier.go
index d95b1cf0b9..0f87344705 100644
--- a/pilot/pkg/security/authn/v1beta1/policy_applier.go
+++ b/pilot/pkg/security/authn/v1beta1/policy_applier.go
@@ -302,7 +302,8 @@ func convertToEnvoyJwtConfig(jwtRules []*v1beta1.JWTRule, push *model.PushContex
 					},
 				},
 			},
-			Providers: providers,
+			Providers:           providers,
+			BypassCorsPreflight: true,
 		}
 	}
 
@@ -338,7 +339,8 @@ func convertToEnvoyJwtConfig(jwtRules []*v1beta1.JWTRule, push *model.PushContex
 				},
 			},
 		},
-		Providers: providers,
+		Providers:           providers,
+		BypassCorsPreflight: true,
 	}
 }
 
diff --git a/pilot/pkg/security/authn/v1beta1/policy_applier_test.go b/pilot/pkg/security/authn/v1beta1/policy_applier_test.go
index 9fd535d9e6..b6c72cd65c 100644
--- a/pilot/pkg/security/authn/v1beta1/policy_applier_test.go
+++ b/pilot/pkg/security/authn/v1beta1/policy_applier_test.go
@@ -135,6 +135,7 @@ func TestJwtFilter(t *testing.T) {
 									PayloadInMetadata: "https://secret.foo.com",
 								},
 							},
+							BypassCorsPreflight: true,
 						}),
 				},
 			},
@@ -207,6 +208,7 @@ func TestJwtFilter(t *testing.T) {
 									PayloadInMetadata: "mesh cluster",
 								},
 							},
+							BypassCorsPreflight: true,
 						}),
 				},
 			},
@@ -274,6 +276,7 @@ func TestJwtFilter(t *testing.T) {
 									PayloadInMetadata: "invalid|7443|",
 								},
 							},
+							BypassCorsPreflight: true,
 						}),
 				},
 			},
@@ -409,6 +412,7 @@ func TestJwtFilter(t *testing.T) {
 									PayloadInMetadata: "https://secret.foo.com",
 								},
 							},
+							BypassCorsPreflight: true,
 						}),
 				},
 			},
@@ -475,6 +479,7 @@ func TestJwtFilter(t *testing.T) {
 									PayloadInMetadata: "https://secret.foo.com",
 								},
 							},
+							BypassCorsPreflight: true,
 						}),
 				},
 			},
@@ -541,6 +546,7 @@ func TestJwtFilter(t *testing.T) {
 									PayloadInMetadata: "https://secret.foo.com",
 								},
 							},
+							BypassCorsPreflight: true,
 						}),
 				},
 			},
@@ -608,6 +614,7 @@ func TestJwtFilter(t *testing.T) {
 									PayloadInMetadata: "https://secret.foo.com",
 								},
 							},
+							BypassCorsPreflight: true,
 						}),
 				},
 			},
@@ -677,6 +684,7 @@ func TestJwtFilter(t *testing.T) {
 									PayloadInMetadata:    "https://secret.foo.com",
 								},
 							},
+							BypassCorsPreflight: true,
 						}),
 				},
 			},
@@ -775,6 +783,7 @@ func TestConvertToEnvoyJwtConfig(t *testing.T) {
 						PayloadInMetadata: "https://secret.foo.com",
 					},
 				},
+				BypassCorsPreflight: true,
 			},
 		},
 		{
@@ -889,6 +898,7 @@ func TestConvertToEnvoyJwtConfig(t *testing.T) {
 						PayloadInMetadata: "https://secret.bar.com",
 					},
 				},
+				BypassCorsPreflight: true,
 			},
 		},
 		{
@@ -942,6 +952,7 @@ func TestConvertToEnvoyJwtConfig(t *testing.T) {
 						PayloadInMetadata: "https://secret.foo.com",
 					},
 				},
+				BypassCorsPreflight: true,
 			},
 		},
 		{
@@ -996,6 +1007,7 @@ func TestConvertToEnvoyJwtConfig(t *testing.T) {
 						PayloadInMetadata: "https://secret.foo.com",
 					},
 				},
+				BypassCorsPreflight: true,
 			},
 		},
 	}
diff --git a/releasenotes/notes/36911.yaml b/releasenotes/notes/36911.yaml
new file mode 100644
index 0000000000..a0dce6697b
--- /dev/null
+++ b/releasenotes/notes/36911.yaml
@@ -0,0 +1,11 @@
+apiVersion: release-notes/v2
+kind: bug-fix
+area: security
+
+# issue is a list of GitHub issues resolved in this note.
+issue:
+  - 36911
+
+releaseNotes:
+  - |
+    **Fixed** the request authentication policy to correctly always allow the CORS preflight request.
diff --git a/tests/integration/security/jwt_test.go b/tests/integration/security/jwt_test.go
index 3b895400be..ea8ae90184 100644
--- a/tests/integration/security/jwt_test.go
+++ b/tests/integration/security/jwt_test.go
@@ -125,6 +125,40 @@ func TestRequestAuthentication(t *testing.T) {
 						},
 						ExpectResponseCode: response.StatusUnauthorized,
 					},
+					{
+						Name:   "expired-token-cors-preflight-request-allowed",
+						Config: "authn-only",
+						CallOpts: echo.CallOptions{
+							PortName: "http",
+							Scheme:   scheme.HTTP,
+							Headers: map[string][]string{
+								authHeaderKey:                   {"Bearer " + jwt.TokenExpired},
+								"Access-Control-Request-Method": {"POST"},
+								"Origin":                        {"https://istio.io"},
+							},
+							Method: "OPTIONS",
+							Path:   "/expired-token-cors-preflight-request-allowed",
+							Count:  callCount,
+						},
+						ExpectResponseCode: response.StatusCodeOK,
+					},
+					{
+						Name:   "expired-token-bad-cors-preflight-request-rejected",
+						Config: "authn-only",
+						CallOpts: echo.CallOptions{
+							PortName: "http",
+							Scheme:   scheme.HTTP,
+							Headers: map[string][]string{
+								authHeaderKey:                   {"Bearer " + jwt.TokenExpired},
+								"Access-Control-Request-Method": {"POST"},
+								// the required Origin header is missing.
+							},
+							Method: "OPTIONS",
+							Path:   "/expired-token-cors-preflight-request-allowed",
+							Count:  callCount,
+						},
+						ExpectResponseCode: response.StatusUnauthorized,
+					},
 					{
 						Name:   "no-token-noauthz",
 						Config: "authn-only",
-- 
2.35.3

