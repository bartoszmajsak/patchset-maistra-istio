From 2ce14674800f75f92c32c604156dde1c4412729c Mon Sep 17 00:00:00 2001
From: zirain <hejianpeng2@huawei.com>
Date: Thu, 5 May 2022 02:43:41 +0800
Subject: istioctl x describe pod should respect revision (#38641)

* istioctl x describe pod should respect revision

* add release-notes

* add UT

* fix lint
---
 istioctl/cmd/describe.go      | 19 +++++++++++--
 istioctl/cmd/describe_test.go | 52 +++++++++++++++++++++++++++++++++++
 releasenotes/notes/38641.yaml |  8 ++++++
 3 files changed, 77 insertions(+), 2 deletions(-)
 create mode 100644 releasenotes/notes/38641.yaml

diff --git a/istioctl/cmd/describe.go b/istioctl/cmd/describe.go
index b526935b9a..6a9b0fb958 100644
--- a/istioctl/cmd/describe.go
+++ b/istioctl/cmd/describe.go
@@ -16,6 +16,7 @@
 
 import (
 	"context"
+	"encoding/json"
 	"fmt"
 	"io"
 	"regexp"
@@ -37,6 +38,7 @@
 	k8s_labels "k8s.io/apimachinery/pkg/labels"
 	"k8s.io/client-go/kubernetes"
 
+	apiannotation "istio.io/api/annotation"
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	"istio.io/api/networking/v1alpha3"
 	"istio.io/api/security/v1beta1"
@@ -108,8 +110,10 @@ func podDescribeCmd() *cobra.Command {
 			writer := cmd.OutOrStdout()
 
 			podLabels := k8s_labels.Set(pod.ObjectMeta.Labels)
+			annotations := k8s_labels.Set(pod.ObjectMeta.Annotations)
+			opts.Revision = getRevisionFromPodAnnotation(annotations)
 
-			printPod(writer, pod)
+			printPod(writer, pod, opts.Revision)
 
 			svcs, err := client.CoreV1().Services(ns).List(context.TODO(), metav1.ListOptions{})
 			if err != nil {
@@ -171,6 +175,16 @@ func podDescribeCmd() *cobra.Command {
 	return cmd
 }
 
+func getRevisionFromPodAnnotation(anno k8s_labels.Set) string {
+	statusString := anno.Get(apiannotation.SidecarStatus.Name)
+	var injectionStatus inject.SidecarInjectionStatus
+	if err := json.Unmarshal([]byte(statusString), &injectionStatus); err != nil {
+		return ""
+	}
+
+	return injectionStatus.Revision
+}
+
 func describe() *cobra.Command {
 	describeCmd := &cobra.Command{
 		Use:     "describe",
@@ -405,7 +419,7 @@ func renderMatch(match *v1alpha3.HTTPMatchRequest) string {
 	return strings.TrimSpace(retval)
 }
 
-func printPod(writer io.Writer, pod *v1.Pod) {
+func printPod(writer io.Writer, pod *v1.Pod, revision string) {
 	ports := []string{}
 	UserID := int64(1337)
 	for _, container := range pod.Spec.Containers {
@@ -428,6 +442,7 @@ func printPod(writer io.Writer, pod *v1.Pod) {
 	}
 
 	fmt.Fprintf(writer, "Pod: %s\n", kname(pod.ObjectMeta))
+	fmt.Fprintf(writer, "   Pod Revision: %s\n", revision)
 	if len(ports) > 0 {
 		fmt.Fprintf(writer, "   Pod Ports: %s\n", strings.Join(ports, ", "))
 	} else {
diff --git a/istioctl/cmd/describe_test.go b/istioctl/cmd/describe_test.go
index 880f916142..8ae4108b3f 100644
--- a/istioctl/cmd/describe_test.go
+++ b/istioctl/cmd/describe_test.go
@@ -23,12 +23,15 @@
 	"github.com/google/go-cmp/cmp"
 	v1 "k8s.io/api/core/v1"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
+	k8s_labels "k8s.io/apimachinery/pkg/labels"
 	"k8s.io/apimachinery/pkg/runtime"
 	"k8s.io/client-go/kubernetes"
 	"k8s.io/client-go/kubernetes/fake"
 
+	apiannotation "istio.io/api/annotation"
 	"istio.io/istio/istioctl/pkg/util/configdump"
 	"istio.io/istio/pilot/test/util"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 // execAndK8sConfigTestCase lets a test case hold some Envoy, Istio, and Kubernetes configuration
@@ -81,6 +84,55 @@ func TestDescribe(t *testing.T) {
 	}
 }
 
+func TestGetRevisionFromPodAnnotation(t *testing.T) {
+	cases := []struct {
+		anno k8s_labels.Set
+
+		expected string
+	}{
+		{
+			anno: k8s_labels.Set{
+				apiannotation.SidecarStatus.Name: "",
+			},
+			expected: "",
+		},
+		{
+			anno:     k8s_labels.Set{},
+			expected: "",
+		},
+		{
+			anno: k8s_labels.Set{
+				apiannotation.SidecarStatus.Name: `
+				{
+					"initContainers": [
+						"istio-init"
+					],
+					"containers": [
+						"istio-proxy"
+					],
+					"volumes": [
+						"istio-envoy",
+						"istio-data",
+						"istio-podinfo",
+						"istio-token",
+						"istiod-ca-cert"
+					],
+					"imagePullSecrets": null,
+					"revision": "1-13-2"
+				}`,
+			},
+			expected: "1-13-2",
+		},
+	}
+
+	for _, tc := range cases {
+		t.Run("", func(t *testing.T) {
+			got := getRevisionFromPodAnnotation(tc.anno)
+			assert.Equal(t, tc.expected, got)
+		})
+	}
+}
+
 func TestFindProtocolForPort(t *testing.T) {
 	http := "HTTP"
 	cases := []struct {
diff --git a/releasenotes/notes/38641.yaml b/releasenotes/notes/38641.yaml
new file mode 100644
index 0000000000..710bfca28b
--- /dev/null
+++ b/releasenotes/notes/38641.yaml
@@ -0,0 +1,8 @@
+apiVersion: release-notes/v2
+kind: bug-fix
+area: istioctl
+issue:
+  - 38636
+releaseNotes:
+  - |
+    **Fixed** an issue `istioctl x describe pod` return error `failed to fetch mesh config`.
\ No newline at end of file
-- 
2.35.3

