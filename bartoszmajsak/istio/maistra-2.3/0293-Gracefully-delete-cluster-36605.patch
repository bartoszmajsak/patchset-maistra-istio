From 230bc473d307a0ec4c2e8d5dc5c2f9d5c5316bca Mon Sep 17 00:00:00 2001
From: Zhonghu Xu <xuzhonghu@huawei.com>
Date: Thu, 23 Dec 2021 03:22:54 +0800
Subject: Gracefully delete cluster (#36605)

---
 pkg/kube/multicluster/secretcontroller.go | 2 +-
 pkg/queue/instance.go                     | 5 +++++
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/pkg/kube/multicluster/secretcontroller.go b/pkg/kube/multicluster/secretcontroller.go
index 0e1f500a98..0a86c5598e 100644
--- a/pkg/kube/multicluster/secretcontroller.go
+++ b/pkg/kube/multicluster/secretcontroller.go
@@ -506,12 +506,12 @@ func (c *Controller) deleteSecret(secretKey string) {
 			continue
 		}
 		log.Infof("Deleting cluster_id=%v configured by secret=%v", clusterID, secretKey)
+		close(cluster.stop)
 		err := c.handleDelete(clusterID)
 		if err != nil {
 			log.Errorf("Error removing cluster_id=%v configured by secret=%v: %v",
 				clusterID, secretKey, err)
 		}
-		close(cluster.stop)
 		delete(c.cs.remoteClusters[secretKey], clusterID)
 	}
 	delete(c.cs.remoteClusters, secretKey)
diff --git a/pkg/queue/instance.go b/pkg/queue/instance.go
index 2a551d2829..8d281605fc 100644
--- a/pkg/queue/instance.go
+++ b/pkg/queue/instance.go
@@ -108,6 +108,11 @@ func (q *queueImpl) Run(stop <-chan struct{}) {
 
 	for {
 		q.cond.L.Lock()
+		// Stop processing after queue is stopped.
+		if q.closing {
+			q.cond.L.Unlock()
+			return
+		}
 		for !q.closing && len(q.tasks) == 0 {
 			q.cond.Wait()
 		}
-- 
2.35.3

