From 325d82a555823f1eecf761f996bfbb4d1380db3d Mon Sep 17 00:00:00 2001
From: Zhonghu Xu <xuzhonghu@huawei.com>
Date: Thu, 13 Jan 2022 00:07:51 +0800
Subject: Reuse MaybeConvertWasmExtensionConfig (#36788)

---
 .../core/v1alpha3/listener_builder.go         |  5 +---
 pkg/istio-agent/xds_proxy_delta.go            |  7 ++++-
 pkg/wasm/convert.go                           | 30 -------------------
 3 files changed, 7 insertions(+), 35 deletions(-)

diff --git a/pilot/pkg/networking/core/v1alpha3/listener_builder.go b/pilot/pkg/networking/core/v1alpha3/listener_builder.go
index 133820492a..bd1874e75a 100644
--- a/pilot/pkg/networking/core/v1alpha3/listener_builder.go
+++ b/pilot/pkg/networking/core/v1alpha3/listener_builder.go
@@ -616,10 +616,7 @@ func (configgen *ConfigGeneratorImpl) buildInboundFilterchains(in *plugin.InputP
 			}
 		}
 	}
-	// only inject WasmPlugins for Sidecar inbound listeners and routers outbound listeners
-	if in.Node.Type == model.SidecarProxy {
-		extension.AddWasmPluginsToMutableObjects(mutable, in.Push.WasmPlugins(in.Node))
-	}
+	extension.AddWasmPluginsToMutableObjects(mutable, in.Push.WasmPlugins(in.Node))
 	// Merge the results back into our struct
 	for i, fc := range mutable.FilterChains {
 		newOpts[i].fc = fc
diff --git a/pkg/istio-agent/xds_proxy_delta.go b/pkg/istio-agent/xds_proxy_delta.go
index 31d839bea3..bcde2cd003 100644
--- a/pkg/istio-agent/xds_proxy_delta.go
+++ b/pkg/istio-agent/xds_proxy_delta.go
@@ -23,6 +23,7 @@
 	"google.golang.org/grpc"
 	"google.golang.org/grpc/codes"
 	"google.golang.org/grpc/metadata"
+	any "google.golang.org/protobuf/types/known/anypb"
 
 	"istio.io/istio/pilot/pkg/features"
 	istiogrpc "istio.io/istio/pilot/pkg/grpc"
@@ -257,7 +258,11 @@ func (p *XdsProxy) handleUpstreamDeltaResponse(con *ProxyConnection) {
 }
 
 func (p *XdsProxy) deltaRewriteAndForward(con *ProxyConnection, resp *discovery.DeltaDiscoveryResponse) {
-	sendNack := wasm.MaybeConvertWasmExtensionConfigDelta(resp.Resources, p.wasmCache)
+	resources := make([]*any.Any, 0, len(resp.Resources))
+	for i := range resp.Resources {
+		resources = append(resources, resp.Resources[i].Resource)
+	}
+	sendNack := wasm.MaybeConvertWasmExtensionConfig(resources, p.wasmCache)
 	if sendNack {
 		proxyLog.Debugf("sending NACK for ECDS resources %+v", resp.Resources)
 		con.sendDeltaRequest(&discovery.DeltaDiscoveryRequest{
diff --git a/pkg/wasm/convert.go b/pkg/wasm/convert.go
index 8b783609b2..2be44d2a84 100644
--- a/pkg/wasm/convert.go
+++ b/pkg/wasm/convert.go
@@ -21,7 +21,6 @@
 	udpa "github.com/cncf/xds/go/udpa/type/v1"
 	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
 	wasm "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/wasm/v3"
-	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/conversion"
 	"go.uber.org/atomic"
 	any "google.golang.org/protobuf/types/known/anypb"
@@ -62,35 +61,6 @@ func MaybeConvertWasmExtensionConfig(resources []*any.Any, cache Cache) bool {
 	return sendNack.Load()
 }
 
-// MaybeConvertWasmExtensionConfigDelta converts any presence of module remote download to local file.
-// It downloads the Wasm module and stores the module locally in the file system.
-func MaybeConvertWasmExtensionConfigDelta(resources []*discovery.Resource, cache Cache) bool {
-	var wg sync.WaitGroup
-	numResources := len(resources)
-	wg.Add(numResources)
-	sendNack := atomic.NewBool(false)
-	startTime := time.Now()
-	defer func() {
-		wasmConfigConversionDuration.Record(float64(time.Since(startTime).Milliseconds()))
-	}()
-
-	for i := 0; i < numResources; i++ {
-		go func(i int) {
-			defer wg.Done()
-
-			newExtensionConfig, nack := convert(resources[i].Resource, cache)
-			if nack {
-				sendNack.Store(true)
-				return
-			}
-			resources[i].Resource = newExtensionConfig
-		}(i)
-	}
-
-	wg.Wait()
-	return sendNack.Load()
-}
-
 func convert(resource *any.Any, cache Cache) (newExtensionConfig *any.Any, sendNack bool) {
 	ec := &core.TypedExtensionConfig{}
 	newExtensionConfig = resource
-- 
2.35.3

