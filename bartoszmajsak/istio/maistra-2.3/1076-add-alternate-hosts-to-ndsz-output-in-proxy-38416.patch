From 431c0989242ae7883eb0afcfd6dc757a0a15a0e9 Mon Sep 17 00:00:00 2001
From: Rama Chavali <rama.rao@salesforce.com>
Date: Wed, 20 Apr 2022 10:06:08 +0530
Subject: add alternate hosts to ndsz output in proxy (#38416)

Signed-off-by: Rama Chavali <rama.rao@salesforce.com>
---
 pkg/dns/client/dns.go    | 15 +++++++++++----
 pkg/istio-agent/agent.go | 23 ++++++++++++++++++++++-
 2 files changed, 33 insertions(+), 5 deletions(-)

diff --git a/pkg/dns/client/dns.go b/pkg/dns/client/dns.go
index 52c907a336..700a2b47e9 100644
--- a/pkg/dns/client/dns.go
+++ b/pkg/dns/client/dns.go
@@ -188,6 +188,16 @@ func (h *LocalDNSServer) UpdateLookupTable(nt *dnsProto.NameTable) {
 		name6:    map[string][]dns.RR{},
 		cname:    map[string][]dns.RR{},
 	}
+	h.BuildAlternateHosts(nt, lookupTable.buildDNSAnswers)
+	h.lookupTable.Store(lookupTable)
+	h.nameTable.Store(nt)
+	log.Debugf("updated lookup table with %d hosts", len(lookupTable.allHosts))
+}
+
+// BuildAlternateHosts builds alternate hosts for Kubernetes services in the name table and
+// calls the passed in function with the built alternate hosts.
+func (h *LocalDNSServer) BuildAlternateHosts(nt *dnsProto.NameTable,
+	apply func(map[string]struct{}, []net.IP, []net.IP, []string)) {
 	for hostname, ni := range nt.Table {
 		// Given a host
 		// if its a non-k8s host, store the host+. as the key with the pre-computed DNS RR records
@@ -207,11 +217,8 @@ func (h *LocalDNSServer) UpdateLookupTable(nt *dnsProto.NameTable) {
 			// malformed ips
 			continue
 		}
-		lookupTable.buildDNSAnswers(altHosts, ipv4, ipv6, h.searchNamespaces)
+		apply(altHosts, ipv4, ipv6, h.searchNamespaces)
 	}
-	h.lookupTable.Store(lookupTable)
-	h.nameTable.Store(nt)
-	log.Debugf("updated lookup table with %d hosts", len(lookupTable.allHosts))
 }
 
 // upstrem sends the requeset to the upstream server, with associated logs and metrics
diff --git a/pkg/istio-agent/agent.go b/pkg/istio-agent/agent.go
index e575422d89..b237cbc88b 100644
--- a/pkg/istio-agent/agent.go
+++ b/pkg/istio-agent/agent.go
@@ -20,6 +20,7 @@
 	"fmt"
 	"io"
 	"math/rand"
+	"net"
 	"os"
 	"path"
 	"path/filepath"
@@ -29,6 +30,7 @@
 
 	bootstrapv3 "github.com/envoyproxy/go-control-plane/envoy/config/bootstrap/v3"
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
+	"github.com/golang/protobuf/proto"
 	"google.golang.org/api/option"
 	"google.golang.org/grpc"
 	"google.golang.org/grpc/credentials/insecure"
@@ -575,7 +577,26 @@ func (a *Agent) Check() (err error) {
 
 func (a *Agent) GetDNSTable() *dnsProto.NameTable {
 	if a.localDNSServer != nil {
-		return a.localDNSServer.NameTable()
+		nt := a.localDNSServer.NameTable()
+		nt = proto.Clone(nt).(*dnsProto.NameTable)
+		a.localDNSServer.BuildAlternateHosts(nt, func(althosts map[string]struct{}, ipv4 []net.IP, ipv6 []net.IP, _ []string) {
+			for host := range althosts {
+				if _, exists := nt.Table[host]; !exists {
+					adresses := make([]string, len(ipv4)+len(ipv6))
+					for _, ip := range ipv4 {
+						adresses = append(adresses, ip.String())
+					}
+					for _, ip := range ipv6 {
+						adresses = append(adresses, ip.String())
+					}
+					nt.Table[host] = &dnsProto.NameTable_NameInfo{
+						Ips:      adresses,
+						Registry: "Kubernetes",
+					}
+				}
+			}
+		})
+		return nt
 	}
 	return nil
 }
-- 
2.35.3

