From 88b2dac619d8b3a33a732143ade22d6ddcba625f Mon Sep 17 00:00:00 2001
From: Costin Manolache <costin@gmail.com>
Date: Wed, 18 May 2022 14:07:41 -0700
Subject: Fix cert rotation for proxyless, don't start SDS (#38980)

* Fix cert rotation for proxyless, don't start SDS

* Fix lint

* Remove trailing space

* make gen

* Make gen, remove the annotation check
---
 .../istio-discovery/files/gen-istio.yaml      | 44 +++++++++-------
 .../istio-discovery/files/grpc-agent.yaml     | 44 +++++++++-------
 pkg/istio-agent/agent.go                      | 52 +++++++++++++++++--
 .../testdata/inject/grpc-agent.yaml.injected  |  8 +--
 .../custom-template.yaml.34.template.gen.yaml | 44 +++++++++-------
 .../testdata/inputs/default.template.gen.yaml | 44 +++++++++-------
 .../enable-core-dump.yaml.5.template.gen.yaml | 44 +++++++++-------
 ...cf-networks-json.yaml.16.template.gen.yaml | 44 +++++++++-------
 ...ng-cncf-networks.yaml.15.template.gen.yaml | 44 +++++++++-------
 ...mage-pull-secret.yaml.11.template.gen.yaml | 44 +++++++++-------
 ...tion-ProxyConfig.yaml.20.template.gen.yaml | 44 +++++++++-------
 .../hello-probes.yaml.18.template.gen.yaml    | 44 +++++++++-------
 .../inputs/hello.yaml.0.template.gen.yaml     | 44 +++++++++-------
 .../inputs/hello.yaml.1.template.gen.yaml     | 44 +++++++++-------
 .../inputs/hello.yaml.10.template.gen.yaml    | 44 +++++++++-------
 .../inputs/hello.yaml.12.template.gen.yaml    | 44 +++++++++-------
 .../inputs/hello.yaml.13.template.gen.yaml    | 44 +++++++++-------
 .../inputs/hello.yaml.14.template.gen.yaml    | 44 +++++++++-------
 .../inputs/hello.yaml.17.template.gen.yaml    | 44 +++++++++-------
 .../inputs/hello.yaml.3.template.gen.yaml     | 44 +++++++++-------
 .../inputs/hello.yaml.4.template.gen.yaml     | 44 +++++++++-------
 ...ubevirtInterfaces.yaml.9.template.gen.yaml | 44 +++++++++-------
 .../status_params.yaml.8.template.gen.yaml    | 44 +++++++++-------
 .../traffic-params.yaml.7.template.gen.yaml   | 44 +++++++++-------
 24 files changed, 626 insertions(+), 402 deletions(-)

diff --git a/manifests/charts/istio-control/istio-discovery/files/gen-istio.yaml b/manifests/charts/istio-control/istio-discovery/files/gen-istio.yaml
index a305453c46..3f9c5288f7 100644
--- a/manifests/charts/istio-control/istio-discovery/files/gen-istio.yaml
+++ b/manifests/charts/istio-control/istio-discovery/files/gen-istio.yaml
@@ -1037,22 +1037,6 @@ data:
           }
         spec:
           containers:
-          {{- range $index, $container := .Spec.Containers  }}
-          {{ if not (eq $container.Name "istio-proxy") }}
-          - name: {{ $container.Name }}
-            env:
-            - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-              value: "true"
-            - name: "GRPC_XDS_BOOTSTRAP"
-              value: "/etc/istio/proxy/grpc-bootstrap.json"
-            volumeMounts:
-            - mountPath: /var/lib/istio/data
-              name: istio-data
-            # UDS channel between istioagent and gRPC client for XDS/SDS
-            - mountPath: /etc/istio/proxy
-              name: istio-xds
-          {{- end }}
-          {{- end }}
           - name: istio-proxy
           {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
             image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -1060,9 +1044,9 @@ data:
             image: "{{ .ProxyImage }}"
           {{- end }}
             ports:
-            - containerPort: 15090
+            - containerPort: 15020
               protocol: TCP
-              name: http-envoy-prom
+              name: mesh-metrics
             args:
             - proxy
             - sidecar
@@ -1226,6 +1210,30 @@ data:
               {{ toYaml $value | indent 6 }}
               {{ end }}
               {{- end }}
+        {{- range $index, $container := .Spec.Containers  }}
+        {{ if not (eq $container.Name "istio-proxy") }}
+          - name: {{ $container.Name }}
+            env:
+              - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+                value: "true"
+              - name: "GRPC_XDS_BOOTSTRAP"
+                value: "/etc/istio/proxy/grpc-bootstrap.json"
+            volumeMounts:
+              - mountPath: /var/lib/istio/data
+                name: istio-data
+              # UDS channel between istioagent and gRPC client for XDS/SDS
+              - mountPath: /etc/istio/proxy
+                name: istio-xds
+              {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+              - name: gke-workload-certificate
+                mountPath: /var/run/secrets/workload-spiffe-credentials
+                readOnly: true
+              {{- else }}
+              - name: workload-certs
+                mountPath: /var/run/secrets/workload-spiffe-credentials
+              {{- end }}
+        {{- end }}
+        {{- end }}
           volumes:
           - emptyDir:
             name: workload-socket
diff --git a/manifests/charts/istio-control/istio-discovery/files/grpc-agent.yaml b/manifests/charts/istio-control/istio-discovery/files/grpc-agent.yaml
index b3dd7e0bea..a37451005f 100644
--- a/manifests/charts/istio-control/istio-discovery/files/grpc-agent.yaml
+++ b/manifests/charts/istio-control/istio-discovery/files/grpc-agent.yaml
@@ -44,22 +44,6 @@ metadata:
   }
 spec:
   containers:
-  {{- range $index, $container := .Spec.Containers  }}
-  {{ if not (eq $container.Name "istio-proxy") }}
-  - name: {{ $container.Name }}
-    env:
-    - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-      value: "true"
-    - name: "GRPC_XDS_BOOTSTRAP"
-      value: "/etc/istio/proxy/grpc-bootstrap.json"
-    volumeMounts:
-    - mountPath: /var/lib/istio/data
-      name: istio-data
-    # UDS channel between istioagent and gRPC client for XDS/SDS
-    - mountPath: /etc/istio/proxy
-      name: istio-xds
-  {{- end }}
-  {{- end }}
   - name: istio-proxy
   {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
     image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -67,9 +51,9 @@ spec:
     image: "{{ .ProxyImage }}"
   {{- end }}
     ports:
-    - containerPort: 15090
+    - containerPort: 15020
       protocol: TCP
-      name: http-envoy-prom
+      name: mesh-metrics
     args:
     - proxy
     - sidecar
@@ -233,6 +217,30 @@ spec:
       {{ toYaml $value | indent 6 }}
       {{ end }}
       {{- end }}
+{{- range $index, $container := .Spec.Containers  }}
+{{ if not (eq $container.Name "istio-proxy") }}
+  - name: {{ $container.Name }}
+    env:
+      - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+        value: "true"
+      - name: "GRPC_XDS_BOOTSTRAP"
+        value: "/etc/istio/proxy/grpc-bootstrap.json"
+    volumeMounts:
+      - mountPath: /var/lib/istio/data
+        name: istio-data
+      # UDS channel between istioagent and gRPC client for XDS/SDS
+      - mountPath: /etc/istio/proxy
+        name: istio-xds
+      {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+      - name: gke-workload-certificate
+        mountPath: /var/run/secrets/workload-spiffe-credentials
+        readOnly: true
+      {{- else }}
+      - name: workload-certs
+        mountPath: /var/run/secrets/workload-spiffe-credentials
+      {{- end }}
+{{- end }}
+{{- end }}
   volumes:
   - emptyDir:
     name: workload-socket
diff --git a/pkg/istio-agent/agent.go b/pkg/istio-agent/agent.go
index bf8d63a9f2..4528eccfcf 100644
--- a/pkg/istio-agent/agent.go
+++ b/pkg/istio-agent/agent.go
@@ -28,6 +28,7 @@
 	"sync"
 	"time"
 
+	"github.com/cenkalti/backoff/v4"
 	bootstrapv3 "github.com/envoyproxy/go-control-plane/envoy/config/bootstrap/v3"
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
 	"github.com/golang/protobuf/proto"
@@ -508,13 +509,58 @@ func (a *Agent) initSdsServer() error {
 	if err != nil {
 		return fmt.Errorf("failed to start workload secret manager %v", err)
 	}
-	pkpConf := a.proxyConfig.GetPrivateKeyProvider()
-	a.sdsServer = sds.NewServer(a.secOpts, a.secretCache, pkpConf)
-	a.secretCache.RegisterSecretHandler(a.sdsServer.OnSecretUpdate)
+	if a.cfg.DisableEnvoy {
+		// For proxyless we don't need an SDS server, but still need the keys and
+		// we need them refreshed periodically.
+		//
+		// This is based on the code from newSDSService, but customized to have explicit rotation.
+		go func() {
+			st := a.secretCache
+			st.RegisterSecretHandler(func(resourceName string) {
+				// The secret handler is called when a secret should be renewed, after invalidating the cache.
+				// The handler does not call GenerateSecret - it is a side-effect of the SDS generate() method, which
+				// is called by sdsServer.OnSecretUpdate, which triggers a push and eventually calls sdsservice.Generate
+				// TODO: extract the logic to detect expiration time, and use a simpler code to rotate to files.
+				_, _ = a.getWorkloadCerts(st)
+			})
+			_, _ = a.getWorkloadCerts(st)
+		}()
+	} else {
+		pkpConf := a.proxyConfig.GetPrivateKeyProvider()
+		a.sdsServer = sds.NewServer(a.secOpts, a.secretCache, pkpConf)
+		a.secretCache.RegisterSecretHandler(a.sdsServer.OnSecretUpdate)
+	}
 
 	return nil
 }
 
+// getWorkloadCerts will attempt to get a cert, with infinite exponential backoff
+// It will not return until both workload cert and root cert are generated.
+//
+// TODO: evaluate replacing the STS server with a file data source, to simplify Envoy config
+func (a *Agent) getWorkloadCerts(st *cache.SecretManagerClient) (sk *security.SecretItem, err error) {
+	b := backoff.NewExponentialBackOff()
+	b.MaxElapsedTime = 0
+
+	for {
+		sk, err = st.GenerateSecret(security.WorkloadKeyCertResourceName)
+		if err == nil {
+			break
+		}
+		log.Warnf("failed to get certificate: %v", err)
+		time.Sleep(b.NextBackOff())
+	}
+	for {
+		_, err := st.GenerateSecret(security.RootCertReqResourceName)
+		if err == nil {
+			break
+		}
+		log.Warnf("failed to get root certificate: %v", err)
+		time.Sleep(b.NextBackOff())
+	}
+	return
+}
+
 func (a *Agent) caFileWatcherHandler(ctx context.Context, caFile string) {
 	if err := a.caFileWatcher.Add(caFile); err != nil {
 		log.Warnf("Failed to add file watcher %s, caFile", caFile)
diff --git a/pkg/kube/inject/testdata/inject/grpc-agent.yaml.injected b/pkg/kube/inject/testdata/inject/grpc-agent.yaml.injected
index 3f37148248..3d99723a1e 100644
--- a/pkg/kube/inject/testdata/inject/grpc-agent.yaml.injected
+++ b/pkg/kube/inject/testdata/inject/grpc-agent.yaml.injected
@@ -19,7 +19,7 @@ spec:
         prometheus.io/scrape: "true"
         proxy.istio.io/overrides: '{"containers":[{"name":"traffic","image":"fake.docker.io/google-samples/traffic-go-gke:1.0","resources":{},"readinessProbe":{"httpGet":{"port":80}}}]}'
         sidecar.istio.io/rewriteAppHTTPProbers: "false"
-        sidecar.istio.io/status: '{"initContainers":null,"containers":["traffic","istio-proxy"],"volumes":["workload-socket","workload-certs","istio-xds","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
+        sidecar.istio.io/status: '{"initContainers":null,"containers":["istio-proxy","traffic"],"volumes":["workload-socket","workload-certs","istio-xds","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
       creationTimestamp: null
       labels:
         app: grpc
@@ -43,6 +43,8 @@ spec:
           name: istio-data
         - mountPath: /etc/istio/proxy
           name: istio-xds
+        - mountPath: /var/run/secrets/workload-spiffe-credentials
+          name: workload-certs
       - args:
         - proxy
         - sidecar
@@ -115,8 +117,8 @@ spec:
               - --url=http://localhost:15020/healthz/ready
         name: istio-proxy
         ports:
-        - containerPort: 15090
-          name: http-envoy-prom
+        - containerPort: 15020
+          name: mesh-metrics
           protocol: TCP
         readinessProbe:
           failureThreshold: 30
diff --git a/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.template.gen.yaml b/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.template.gen.yaml
index 654196e86e..224ab8a783 100644
--- a/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/custom-template.yaml.34.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/default.template.gen.yaml b/pkg/kube/inject/testdata/inputs/default.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/default.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/default.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.template.gen.yaml b/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/enable-core-dump.yaml.5.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks-json.yaml.16.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello-existing-cncf-networks.yaml.15.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello-image-pull-secret.yaml.11.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello-probes-noProxyHoldApplication-ProxyConfig.yaml.20.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello-probes.yaml.18.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.0.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.0.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.0.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.0.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.1.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.1.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.1.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.1.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.10.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.10.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.10.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.10.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.12.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.12.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.12.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.12.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.13.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.13.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.13.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.13.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.14.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.14.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.14.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.14.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.17.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.17.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.17.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.17.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.3.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.3.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.3.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.3.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/hello.yaml.4.template.gen.yaml b/pkg/kube/inject/testdata/inputs/hello.yaml.4.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/hello.yaml.4.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/hello.yaml.4.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.template.gen.yaml b/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/kubevirtInterfaces.yaml.9.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/status_params.yaml.8.template.gen.yaml b/pkg/kube/inject/testdata/inputs/status_params.yaml.8.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/status_params.yaml.8.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/status_params.yaml.8.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
diff --git a/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.template.gen.yaml b/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.template.gen.yaml
index 6fe590dbe1..b435a2725d 100644
--- a/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.template.gen.yaml
+++ b/pkg/kube/inject/testdata/inputs/traffic-params.yaml.7.template.gen.yaml
@@ -833,22 +833,6 @@ templates:
       }
     spec:
       containers:
-      {{- range $index, $container := .Spec.Containers  }}
-      {{ if not (eq $container.Name "istio-proxy") }}
-      - name: {{ $container.Name }}
-        env:
-        - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
-          value: "true"
-        - name: "GRPC_XDS_BOOTSTRAP"
-          value: "/etc/istio/proxy/grpc-bootstrap.json"
-        volumeMounts:
-        - mountPath: /var/lib/istio/data
-          name: istio-data
-        # UDS channel between istioagent and gRPC client for XDS/SDS
-        - mountPath: /etc/istio/proxy
-          name: istio-xds
-      {{- end }}
-      {{- end }}
       - name: istio-proxy
       {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
         image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
@@ -856,9 +840,9 @@ templates:
         image: "{{ .ProxyImage }}"
       {{- end }}
         ports:
-        - containerPort: 15090
+        - containerPort: 15020
           protocol: TCP
-          name: http-envoy-prom
+          name: mesh-metrics
         args:
         - proxy
         - sidecar
@@ -1022,6 +1006,30 @@ templates:
           {{ toYaml $value | indent 6 }}
           {{ end }}
           {{- end }}
+    {{- range $index, $container := .Spec.Containers  }}
+    {{ if not (eq $container.Name "istio-proxy") }}
+      - name: {{ $container.Name }}
+        env:
+          - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
+            value: "true"
+          - name: "GRPC_XDS_BOOTSTRAP"
+            value: "/etc/istio/proxy/grpc-bootstrap.json"
+        volumeMounts:
+          - mountPath: /var/lib/istio/data
+            name: istio-data
+          # UDS channel between istioagent and gRPC client for XDS/SDS
+          - mountPath: /etc/istio/proxy
+            name: istio-xds
+          {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
+          - name: gke-workload-certificate
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+            readOnly: true
+          {{- else }}
+          - name: workload-certs
+            mountPath: /var/run/secrets/workload-spiffe-credentials
+          {{- end }}
+    {{- end }}
+    {{- end }}
       volumes:
       - emptyDir:
         name: workload-socket
-- 
2.35.3

