From c548d8dbf1b5286d29fe77ef4b83848756cf048c Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Wed, 27 Apr 2022 21:57:44 -0700
Subject: istioctl: optimized discovery time (#38622)

* istioctl: optimized discovery time

For https://github.com/istio/istio/issues/38621 (fixes 2/3 TODOs there).

Fixes a regression in istioctl runtime from 1.13->1.14, and improves on
the old 1.13 state.

Before: 15s to run a command
After: 3s

* fix tests (hopefully)
---
 istioctl/cmd/proxystatus.go | 12 +++++++++++-
 pkg/kube/client.go          | 10 ++++++++++
 pkg/kube/client_factory.go  | 15 +--------------
 3 files changed, 22 insertions(+), 15 deletions(-)

diff --git a/istioctl/cmd/proxystatus.go b/istioctl/cmd/proxystatus.go
index 2e3ae48588..2cced86d5d 100644
--- a/istioctl/cmd/proxystatus.go
+++ b/istioctl/cmd/proxystatus.go
@@ -22,6 +22,7 @@
 
 	xdsapi "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
 	"github.com/spf13/cobra"
+	"k8s.io/client-go/rest"
 
 	"istio.io/istio/istioctl/pkg/clioptions"
 	"istio.io/istio/istioctl/pkg/multixds"
@@ -137,7 +138,16 @@ func readConfigFile(filename string) ([]byte, error) {
 }
 
 func newKubeClientWithRevision(kubeconfig, configContext string, revision string) (kube.ExtendedClient, error) {
-	return kube.NewExtendedClient(kube.BuildClientCmd(kubeconfig, configContext), revision)
+	rc, err := kube.DefaultRestConfig(kubeconfig, configContext, func(config *rest.Config) {
+		// We are running a one-off command locally, so we don't need to worry too much about rate limitting
+		// Bumping this up greatly decreases install time
+		config.QPS = 50
+		config.Burst = 100
+	})
+	if err != nil {
+		return nil, err
+	}
+	return kube.NewExtendedClient(kube.NewClientConfigForRestConfig(rc), revision)
 }
 
 func newKubeClient(kubeconfig, configContext string) (kube.ExtendedClient, error) {
diff --git a/pkg/kube/client.go b/pkg/kube/client.go
index 50302e2615..cfa50d0528 100644
--- a/pkg/kube/client.go
+++ b/pkg/kube/client.go
@@ -21,6 +21,7 @@
 	"errors"
 	"fmt"
 	"io"
+	"io/ioutil"
 	"net/http"
 	"os"
 	"reflect"
@@ -82,8 +83,10 @@
 	istiofake "istio.io/client-go/pkg/clientset/versioned/fake"
 	istioinformer "istio.io/client-go/pkg/informers/externalversions"
 	"istio.io/istio/operator/pkg/apis"
+	"istio.io/istio/pkg/config/schema/gvk"
 	"istio.io/istio/pkg/kube/mcs"
 	"istio.io/istio/pkg/queue"
+	"istio.io/istio/pkg/test/util/yml"
 	"istio.io/pkg/version"
 )
 
@@ -1006,6 +1009,13 @@ func (c *client) applyYAMLFile(namespace string, dryRun bool, file string) error
 		s := stdout.String() + stderr.String()
 		return fmt.Errorf("%v: %s", err, s)
 	}
+	// If we are changing CRDs, invalidate the discovery client so future calls will not fail
+	if !dryRun {
+		f, _ := ioutil.ReadFile(file)
+		if len(yml.SplitYamlByKind(string(f))[gvk.CustomResourceDefinition.Kind]) > 0 {
+			c.discoveryClient.Invalidate()
+		}
+	}
 	return nil
 }
 
diff --git a/pkg/kube/client_factory.go b/pkg/kube/client_factory.go
index 9bcc0f4539..a9bf9048bf 100644
--- a/pkg/kube/client_factory.go
+++ b/pkg/kube/client_factory.go
@@ -29,7 +29,6 @@
 	"k8s.io/kubectl/pkg/cmd/util"
 	"k8s.io/kubectl/pkg/util/openapi"
 	"k8s.io/kubectl/pkg/validation"
-	"sigs.k8s.io/controller-runtime/pkg/client/apiutil"
 )
 
 var _ util.Factory = &clientFactory{}
@@ -85,20 +84,8 @@ func (c *clientFactory) ToRESTMapper() (meta.RESTMapper, error) {
 	if err != nil {
 		return nil, err
 	}
-	rc, err := c.ToRESTConfig()
-	if err != nil {
-		return nil, err
-	}
 	c.mapperOnce.Do(func() {
-		c.mapper, _ = apiutil.NewDynamicRESTMapper(rc, apiutil.WithLazyDiscovery, apiutil.WithCustomMapper(func() (meta.RESTMapper, error) {
-			discoveryClient.Invalidate()
-			// Use a custom mapper so we can re-use our discoveryClient instead of creating a new one
-			groupResources, err := restmapper.GetAPIGroupResources(discoveryClient)
-			if err != nil {
-				return nil, err
-			}
-			return restmapper.NewDiscoveryRESTMapper(groupResources), nil
-		}))
+		c.mapper = restmapper.NewDeferredDiscoveryRESTMapper(discoveryClient)
 		c.expander = restmapper.NewShortcutExpander(c.mapper, discoveryClient)
 	})
 	return c.expander, nil
-- 
2.35.3

