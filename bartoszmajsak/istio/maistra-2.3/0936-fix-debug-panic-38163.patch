From 3af478fb3624f98422869c10c71efbb5639ace21 Mon Sep 17 00:00:00 2001
From: zirain <hejianpeng2@huawei.com>
Date: Tue, 29 Mar 2022 12:20:19 +0800
Subject: fix debug panic (#38163)

---
 pilot/pkg/xds/debug.go | 9 +++++++--
 pilot/pkg/xds/nds.go   | 4 ++--
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/pilot/pkg/xds/debug.go b/pilot/pkg/xds/debug.go
index ae6e09901f..3a0e7fd414 100644
--- a/pilot/pkg/xds/debug.go
+++ b/pilot/pkg/xds/debug.go
@@ -600,7 +600,10 @@ func (s *DiscoveryServer) ecdsz(w http.ResponseWriter, req *http.Request) {
 			return
 		}
 
-		resource, _, _ := s.Generators[v3.ExtensionConfigurationType].Generate(con.proxy, r, nil)
+		resource, _, _ := s.Generators[v3.ExtensionConfigurationType].Generate(con.proxy, r, &model.PushRequest{
+			Full: true,
+			Push: con.proxy.LastPushContext,
+		})
 		if len(resource) == 0 {
 			w.WriteHeader(http.StatusNotFound)
 			_, _ = w.Write([]byte(fmt.Sprintf("ExtensionConfigurationType not found, proxyID: %s\n", proxyID)))
@@ -869,7 +872,9 @@ func (s *DiscoveryServer) ndsz(w http.ResponseWriter, req *http.Request) {
 	}
 
 	if s.Generators[v3.NameTableType] != nil {
-		nds, _, _ := s.Generators[v3.NameTableType].Generate(con.proxy, nil, nil)
+		nds, _, _ := s.Generators[v3.NameTableType].Generate(con.proxy, nil, &model.PushRequest{
+			Push: con.proxy.LastPushContext,
+		})
 		if len(nds) == 0 {
 			return
 		}
diff --git a/pilot/pkg/xds/nds.go b/pilot/pkg/xds/nds.go
index 04398ffac2..2b0c95e36e 100644
--- a/pilot/pkg/xds/nds.go
+++ b/pilot/pkg/xds/nds.go
@@ -23,7 +23,7 @@
 	"istio.io/istio/pkg/config/schema/gvk"
 )
 
-// Nds stands for Name Discovery Service. Istio agents send NDS requests to istiod
+// NdsGenerator Nds stands for Name Discovery Service. Istio agents send NDS requests to istiod
 // istiod responds with a list of service entries and their associated IPs (including k8s services)
 // The agent then updates its internal DNS based on this data. If DNS capture is enabled in the pod
 // the agent will capture all DNS requests and attempt to resolve locally before forwarding to upstream
@@ -68,7 +68,7 @@ func ndsNeedsPush(req *model.PushRequest) bool {
 	return false
 }
 
-func (n NdsGenerator) Generate(proxy *model.Proxy, w *model.WatchedResource, req *model.PushRequest) (model.Resources, model.XdsLogDetails, error) {
+func (n NdsGenerator) Generate(proxy *model.Proxy, _ *model.WatchedResource, req *model.PushRequest) (model.Resources, model.XdsLogDetails, error) {
 	if !ndsNeedsPush(req) {
 		return nil, model.DefaultXdsLogDetails, nil
 	}
-- 
2.35.3

