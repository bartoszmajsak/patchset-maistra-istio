From 8e88fba62d0ceee414d363a9e3cba9798559af88 Mon Sep 17 00:00:00 2001
From: Zhonghu Xu <xuzhonghu@huawei.com>
Date: Sat, 26 Feb 2022 00:38:34 +0800
Subject: Revert (#37539)

---
 .../serviceentry/servicediscovery.go          | 27 +++++++++----------
 .../serviceentry/servicediscovery_test.go     | 22 ---------------
 .../pkg/serviceregistry/serviceentry/store.go |  1 -
 3 files changed, 13 insertions(+), 37 deletions(-)

diff --git a/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go b/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
index cd77ea2380..f94410eb8b 100644
--- a/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
+++ b/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
@@ -509,12 +509,19 @@ func (s *ServiceEntryStore) HasSynced() bool {
 
 // Services list declarations of all services in the system
 func (s *ServiceEntryStore) Services() []*model.Service {
-	if !s.processServiceEntry {
-		return nil
-	}
 	s.mutex.RLock()
-	defer s.mutex.RUnlock()
-	return s.services.getAllServices()
+	allServices := s.services.getAllServices()
+	s.mutex.RUnlock()
+
+	out := make([]*model.Service, 0, len(allServices))
+	for _, svc := range allServices {
+		// TODO: eliminate the deepcopy here
+		// autoAllocateIPs will re-allocate ips for the service,
+		// if return the pointer directly, there will be a race with `BuildNameTable`
+		out = append(out, svc.DeepCopy())
+	}
+	autoAllocateIPs(out)
+	return out
 }
 
 // GetService retrieves a service by host name if it exists.
@@ -717,7 +724,7 @@ func servicesDiff(os []*model.Service, ns []*model.Service) ([]*model.Service, [
 		newSvc, f := newServiceHosts[s.Hostname]
 		if !f {
 			deleted = append(deleted, s)
-		} else if !servicesEqual(s, newSvc) {
+		} else if !reflect.DeepEqual(s, newSvc) {
 			updated = append(updated, newSvc)
 		} else {
 			unchanged = append(unchanged, newSvc)
@@ -733,14 +740,6 @@ func servicesDiff(os []*model.Service, ns []*model.Service) ([]*model.Service, [
 	return added, deleted, updated, unchanged
 }
 
-func servicesEqual(os *model.Service, ns *model.Service) bool {
-	// Disabling `go vet` warning since this is actually safe in this case.
-	// nolint: vet
-	s := *os
-	s.AutoAllocatedAddress = ""
-	return reflect.DeepEqual(&s, ns)
-}
-
 // Automatically allocates IPs for service entry services WITHOUT an
 // address field if the hostname is not a wildcard, or when resolution
 // is not NONE. The IPs are allocated from the reserved Class E subnet
diff --git a/pilot/pkg/serviceregistry/serviceentry/servicediscovery_test.go b/pilot/pkg/serviceregistry/serviceentry/servicediscovery_test.go
index 7d5315b800..abf3d55d57 100644
--- a/pilot/pkg/serviceregistry/serviceentry/servicediscovery_test.go
+++ b/pilot/pkg/serviceregistry/serviceentry/servicediscovery_test.go
@@ -1033,17 +1033,6 @@ func expectProxyInstances(t testing.TB, sd *ServiceEntryStore, expected []*model
 		instances := sd.GetProxyServiceInstances(&model.Proxy{IPAddresses: []string{ip}, Metadata: &model.NodeMetadata{}})
 		sortServiceInstances(instances)
 		sortServiceInstances(expected)
-		sd.mutex.RLock()
-		allServices := sd.services.getAllServices()
-		sd.mutex.RUnlock()
-		for _, inst := range expected {
-			for _, asvc := range allServices {
-				if inst.Service.Hostname == asvc.Hostname {
-					inst.Service.AutoAllocatedAddress = asvc.AutoAllocatedAddress
-					break
-				}
-			}
-		}
 		if err := compare(t, instances, expected); err != nil {
 			return err
 		}
@@ -1104,17 +1093,6 @@ func expectServiceInstances(t testing.TB, sd *ServiceEntryStore, cfg *config.Con
 			instances := sd.InstancesByPort(svc, port, nil)
 			sortServiceInstances(instances)
 			sortServiceInstances(expected[i])
-			sd.mutex.RLock()
-			allServices := sd.services.getAllServices()
-			sd.mutex.RUnlock()
-			for _, inst := range expected[i] {
-				for _, asvc := range allServices {
-					if inst.Service.Hostname == asvc.Hostname {
-						inst.Service.AutoAllocatedAddress = asvc.AutoAllocatedAddress
-						break
-					}
-				}
-			}
 			if err := compare(t, instances, expected[i]); err != nil {
 				return fmt.Errorf("%d: %v", i, err)
 			}
diff --git a/pilot/pkg/serviceregistry/serviceentry/store.go b/pilot/pkg/serviceregistry/serviceentry/store.go
index 492f8a4f58..26e7a8e341 100644
--- a/pilot/pkg/serviceregistry/serviceentry/store.go
+++ b/pilot/pkg/serviceregistry/serviceentry/store.go
@@ -124,5 +124,4 @@ func (s *serviceStore) deleteServices(key types.NamespacedName) {
 
 func (s *serviceStore) updateServices(key types.NamespacedName, services []*model.Service) {
 	s.servicesBySE[key] = services
-	autoAllocateIPs(s.getAllServices())
 }
-- 
2.35.3

