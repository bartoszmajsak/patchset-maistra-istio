From 7384ea51acbca90286d3d00814695207d0478d5d Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Thu, 17 Feb 2022 16:39:35 -0800
Subject: Allow pushing to multiple tags (#37417)

Will be used for base image
---
 tools/docker-builder/main.go  | 22 ++++++++++++----------
 tools/docker-builder/types.go |  8 ++++++--
 2 files changed, 18 insertions(+), 12 deletions(-)

diff --git a/tools/docker-builder/main.go b/tools/docker-builder/main.go
index 6abde52865..bca0bdf4da 100644
--- a/tools/docker-builder/main.go
+++ b/tools/docker-builder/main.go
@@ -37,7 +37,7 @@
 
 func main() {
 	rootCmd.Flags().StringSliceVar(&args.Hubs, "hub", args.Hubs, "docker hub(s)")
-	rootCmd.Flags().StringVar(&args.Tag, "tag", args.Tag, "docker tag")
+	rootCmd.Flags().StringSliceVar(&args.Tags, "tag", args.Tags, "docker tag(s)")
 
 	rootCmd.Flags().StringVar(&args.BaseVersion, "base-version", args.BaseVersion, "base version to use")
 	rootCmd.Flags().StringVar(&args.ProxyVersion, "proxy-version", args.ProxyVersion, "proxy version to use")
@@ -267,15 +267,17 @@ func ConstructBakeFile(a Args) (map[string]string, error) {
 			}
 
 			for _, h := range a.Hubs {
-				if variant == DefaultVariant {
-					// For default, we have no suffix
-					t.Tags = append(t.Tags, fmt.Sprintf("%s/%s:%s", h, target, a.Tag))
-				} else {
-					// Otherwise, we have a suffix with the variant
-					t.Tags = append(t.Tags, fmt.Sprintf("%s/%s:%s-%s", h, target, a.Tag, variant))
-					// If we need a default as well, add it as a second tag for the same image to avoid building twice
-					if variant == PrimaryVariant && hasDoubleDefault {
-						t.Tags = append(t.Tags, fmt.Sprintf("%s/%s:%s", h, target, a.Tag))
+				for _, tg := range a.Tags {
+					if variant == DefaultVariant {
+						// For default, we have no suffix
+						t.Tags = append(t.Tags, fmt.Sprintf("%s/%s:%s", h, target, tg))
+					} else {
+						// Otherwise, we have a suffix with the variant
+						t.Tags = append(t.Tags, fmt.Sprintf("%s/%s:%s-%s", h, target, tg, variant))
+						// If we need a default as well, add it as a second tag for the same image to avoid building twice
+						if variant == PrimaryVariant && hasDoubleDefault {
+							t.Tags = append(t.Tags, fmt.Sprintf("%s/%s:%s", h, target, tg))
+						}
 					}
 				}
 			}
diff --git a/tools/docker-builder/types.go b/tools/docker-builder/types.go
index 1da283c16b..c39d7190b6 100644
--- a/tools/docker-builder/types.go
+++ b/tools/docker-builder/types.go
@@ -67,7 +67,7 @@ type Args struct {
 	BaseVersion   string
 	ProxyVersion  string
 	IstioVersion  string
-	Tag           string
+	Tags          []string
 	Hubs          []string
 }
 
@@ -140,6 +140,10 @@ func DefaultArgs() Args {
 	if hubs, f := os.LookupEnv("HUBS"); f {
 		hub = strings.Split(hubs, " ")
 	}
+	tag := []string{env.GetString("TAG", "latest")}
+	if tags, f := os.LookupEnv("TAGS"); f {
+		tag = strings.Split(tags, " ")
+	}
 
 	return Args{
 		Push:          false,
@@ -147,7 +151,7 @@ func DefaultArgs() Args {
 		NoCache:       false,
 		BuildxEnabled: true,
 		Hubs:          hub,
-		Tag:           env.GetString("TAG", "latest"),
+		Tags:          tag,
 		BaseVersion:   fetchBaseVersion(),
 		IstioVersion:  fetchIstioVersion(),
 		ProxyVersion:  pv,
-- 
2.35.3

