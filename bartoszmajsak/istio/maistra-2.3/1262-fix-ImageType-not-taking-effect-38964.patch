From 28ee5f70b28da5bb23d51c28a84bb06ebdaed62b Mon Sep 17 00:00:00 2001
From: dwq <41563853+dddddai@users.noreply.github.com>
Date: Tue, 17 May 2022 23:01:08 +0800
Subject: fix: ImageType not taking effect (#38964)

---
 pilot/pkg/model/proxy_config.go               |  8 ++++++-
 pilot/pkg/model/proxy_config_test.go          | 22 ++++++++++++++++---
 .../notes/proxy-config-image-type.yaml        |  8 +++++++
 3 files changed, 34 insertions(+), 4 deletions(-)
 create mode 100644 releasenotes/notes/proxy-config-image-type.yaml

diff --git a/pilot/pkg/model/proxy_config.go b/pilot/pkg/model/proxy_config.go
index 552fedd892..bd559d68ce 100644
--- a/pilot/pkg/model/proxy_config.go
+++ b/pilot/pkg/model/proxy_config.go
@@ -93,7 +93,7 @@ func (p *ProxyConfigs) mergedGlobalConfig() *meshconfig.ProxyConfig {
 	return p.mergedNamespaceConfig(p.rootNamespace)
 }
 
-// mergedWorkloadConfig merges ProxyConfig resources matching the given namespace.
+// mergedNamespaceConfig merges ProxyConfig resources matching the given namespace.
 func (p *ProxyConfigs) mergedNamespaceConfig(namespace string) *meshconfig.ProxyConfig {
 	for _, pc := range p.namespaceToProxyConfigs[namespace] {
 		if pc.GetSelector() == nil {
@@ -136,6 +136,9 @@ func mergeWithPrecedence(pcs ...*meshconfig.ProxyConfig) *meshconfig.ProxyConfig
 		if pcs[i].GetConcurrency() != nil {
 			merged.Concurrency = pcs[i].GetConcurrency()
 		}
+		if pcs[i].GetImage() != nil {
+			merged.Image = pcs[i].GetImage()
+		}
 	}
 	return merged
 }
@@ -148,6 +151,9 @@ func toMeshConfigProxyConfig(pc *v1beta1.ProxyConfig) *meshconfig.ProxyConfig {
 	if pc.EnvironmentVariables != nil {
 		mcpc.ProxyMetadata = pc.EnvironmentVariables
 	}
+	if pc.Image != nil {
+		mcpc.Image = pc.Image
+	}
 	return mcpc
 }
 
diff --git a/pilot/pkg/model/proxy_config_test.go b/pilot/pkg/model/proxy_config_test.go
index 2a89e022f1..0a8267edee 100644
--- a/pilot/pkg/model/proxy_config_test.go
+++ b/pilot/pkg/model/proxy_config_test.go
@@ -223,10 +223,18 @@ func TestEffectiveProxyConfig(t *testing.T) {
 				newProxyConfig("ns", "test-ns",
 					&v1beta1.ProxyConfig{
 						Concurrency: v(3),
+						Image: &v1beta1.ProxyImage{
+							ImageType: "debug",
+						},
 					}),
 			},
-			proxy:    newMeta("test-ns", nil, nil),
-			expected: &meshconfig.ProxyConfig{Concurrency: v(3)},
+			proxy: newMeta("test-ns", nil, nil),
+			expected: &meshconfig.ProxyConfig{
+				Concurrency: v(3),
+				Image: &v1beta1.ProxyImage{
+					ImageType: "debug",
+				},
+			},
 		},
 		{
 			name: "CR takes precedence over meshConfig.defaultConfig",
@@ -267,6 +275,9 @@ func TestEffectiveProxyConfig(t *testing.T) {
 							"test": "selector",
 						}),
 						Concurrency: v(3),
+						Image: &v1beta1.ProxyImage{
+							ImageType: "debug",
+						},
 					}),
 			},
 			proxy: newMeta(
@@ -276,7 +287,12 @@ func TestEffectiveProxyConfig(t *testing.T) {
 				}, map[string]string{
 					annotation.ProxyConfig.Name: "{ \"concurrency\": 5 }",
 				}),
-			expected: &meshconfig.ProxyConfig{Concurrency: v(3)},
+			expected: &meshconfig.ProxyConfig{
+				Concurrency: v(3),
+				Image: &v1beta1.ProxyImage{
+					ImageType: "debug",
+				},
+			},
 		},
 		{
 			name: "CR in other namespaces get ignored",
diff --git a/releasenotes/notes/proxy-config-image-type.yaml b/releasenotes/notes/proxy-config-image-type.yaml
new file mode 100644
index 0000000000..66a785a93a
--- /dev/null
+++ b/releasenotes/notes/proxy-config-image-type.yaml
@@ -0,0 +1,8 @@
+apiVersion: release-notes/v2
+kind: bug-fix
+area: traffic-management
+issue:
+- https://github.com/istio/istio/issues/38959
+releaseNotes:
+- |
+  **Fixed** an issue where ProxyConfig image type not taking effect
-- 
2.35.3

