From 2f645a7c4411159121cc43aafbc45f7a3e02101d Mon Sep 17 00:00:00 2001
From: zirain <hejianpeng2@huawei.com>
Date: Wed, 20 Apr 2022 16:23:07 +0800
Subject: add OTel provider validation (#38470)

---
 pkg/config/validation/extensionprovider.go    | 21 ++++++-
 .../validation/extensionprovider_test.go      | 57 +++++++++++++++++++
 2 files changed, 75 insertions(+), 3 deletions(-)

diff --git a/pkg/config/validation/extensionprovider.go b/pkg/config/validation/extensionprovider.go
index c1740c6502..4e31722f8f 100644
--- a/pkg/config/validation/extensionprovider.go
+++ b/pkg/config/validation/extensionprovider.go
@@ -167,18 +167,31 @@ func validateExtensionProviderTracingSkyWalking(config *meshconfig.MeshConfig_Ex
 	return
 }
 
-func validateExtensionProviderMetricsPrometheus(prometheus *meshconfig.MeshConfig_ExtensionProvider_PrometheusMetricsProvider) error {
+func validateExtensionProviderMetricsPrometheus(_ *meshconfig.MeshConfig_ExtensionProvider_PrometheusMetricsProvider) error {
 	return nil
 }
 
-func validateExtensionProviderStackdriver(stackdriver *meshconfig.MeshConfig_ExtensionProvider_StackdriverProvider) error {
+func validateExtensionProviderStackdriver(_ *meshconfig.MeshConfig_ExtensionProvider_StackdriverProvider) error {
 	return nil
 }
 
-func validateExtensionProviderEnvoyFileAccessLog(log *meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider) error {
+func validateExtensionProviderEnvoyFileAccessLog(_ *meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider) error {
 	return nil
 }
 
+func ValidateExtensionProviderEnvoyOtelAls(provider *meshconfig.MeshConfig_ExtensionProvider_EnvoyOpenTelemetryLogProvider) (errs error) {
+	if provider == nil {
+		return fmt.Errorf("nil EnvoyOpenTelemetryLogProvider")
+	}
+	if err := ValidatePort(int(provider.Port)); err != nil {
+		errs = appendErrors(errs, err)
+	}
+	if err := validateExtensionProviderService(provider.Service); err != nil {
+		errs = appendErrors(errs, err)
+	}
+	return
+}
+
 func validateExtensionProvider(config *meshconfig.MeshConfig) (errs error) {
 	definedProviders := map[string]struct{}{}
 	for _, c := range config.ExtensionProviders {
@@ -214,6 +227,8 @@ func validateExtensionProvider(config *meshconfig.MeshConfig) (errs error) {
 			currentErrs = appendErrors(currentErrs, validateExtensionProviderStackdriver(provider.Stackdriver))
 		case *meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLog:
 			currentErrs = appendErrors(currentErrs, validateExtensionProviderEnvoyFileAccessLog(provider.EnvoyFileAccessLog))
+		case *meshconfig.MeshConfig_ExtensionProvider_EnvoyOtelAls:
+			currentErrs = appendErrors(currentErrs, ValidateExtensionProviderEnvoyOtelAls(provider.EnvoyOtelAls))
 		default:
 			currentErrs = appendErrors(currentErrs, fmt.Errorf("unsupported provider: %v of type %T", provider, provider))
 		}
diff --git a/pkg/config/validation/extensionprovider_test.go b/pkg/config/validation/extensionprovider_test.go
index bcac84e3b1..28f69607f3 100644
--- a/pkg/config/validation/extensionprovider_test.go
+++ b/pkg/config/validation/extensionprovider_test.go
@@ -289,3 +289,60 @@ func TestValidateExtensionProviderTracingOpenCensusAgent(t *testing.T) {
 		})
 	}
 }
+
+func TestValidateExtensionProviderEnvoyOtelAls(t *testing.T) {
+	cases := []struct {
+		name     string
+		provider *meshconfig.MeshConfig_ExtensionProvider_EnvoyOpenTelemetryLogProvider
+		valid    bool
+	}{
+		{
+			name: "otel normal",
+			provider: &meshconfig.MeshConfig_ExtensionProvider_EnvoyOpenTelemetryLogProvider{
+				Service: "otel.istio-syste.svc",
+				Port:    4000,
+			},
+			valid: true,
+		},
+		{
+			name: "otel service with namespace",
+			provider: &meshconfig.MeshConfig_ExtensionProvider_EnvoyOpenTelemetryLogProvider{
+				Service: "namespace/otel.istio-syste.svc",
+				Port:    4000,
+			},
+			valid: true,
+		},
+		{
+			name: "otel service with invalid namespace",
+			provider: &meshconfig.MeshConfig_ExtensionProvider_EnvoyOpenTelemetryLogProvider{
+				Service: "name/space/otel.istio-syste.svc",
+				Port:    4000,
+			},
+			valid: false,
+		},
+		{
+			name: "otel service with port",
+			provider: &meshconfig.MeshConfig_ExtensionProvider_EnvoyOpenTelemetryLogProvider{
+				Service: "otel.istio-syste.svc:4000",
+				Port:    4000,
+			},
+			valid: false,
+		},
+		{
+			name: "otel missing port",
+			provider: &meshconfig.MeshConfig_ExtensionProvider_EnvoyOpenTelemetryLogProvider{
+				Service: "otel.istio-syste.svc",
+			},
+			valid: false,
+		},
+	}
+	for _, c := range cases {
+		t.Run(c.name, func(t *testing.T) {
+			err := ValidateExtensionProviderEnvoyOtelAls(c.provider)
+			valid := err == nil
+			if valid != c.valid {
+				t.Errorf("Expected valid=%v, got valid=%v for %v", c.valid, valid, c.provider)
+			}
+		})
+	}
+}
-- 
2.35.3

