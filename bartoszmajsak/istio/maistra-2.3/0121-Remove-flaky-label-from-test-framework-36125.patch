From cb7afa740530e110ccc97b4e86de79612e16f841 Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Thu, 18 Nov 2021 09:08:05 -0800
Subject: Remove flaky label from test framework (#36125)

* Remove flaky label from test framework

We use .Skip instead

* more cleanup

* fail open

* unit tests
---
 pkg/test/framework/label/filter.go      | 5 ++++-
 pkg/test/framework/label/labels.go      | 8 +-------
 pkg/test/framework/label/labels_test.go | 2 +-
 tests/integration/tests.mk              | 5 +++++
 4 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/pkg/test/framework/label/filter.go b/pkg/test/framework/label/filter.go
index 40e5c9309d..6069e82bfb 100644
--- a/pkg/test/framework/label/filter.go
+++ b/pkg/test/framework/label/filter.go
@@ -18,6 +18,8 @@
 	"fmt"
 	"regexp"
 	"strings"
+
+	"istio.io/pkg/log"
 )
 
 // Selector is a Set of label filter expressions that get applied together to decide whether tests should be selected
@@ -65,7 +67,8 @@ func ParseSelector(s string) (Selector, error) {
 
 		l := Instance(p)
 		if !all.contains(l) {
-			return Selector{}, fmt.Errorf("unknown label name: %q", p)
+			log.Warnf("unknown label name: %q", p)
+			continue
 		}
 
 		if negative {
diff --git a/pkg/test/framework/label/labels.go b/pkg/test/framework/label/labels.go
index 0eb49ed658..ca72bd8dbc 100644
--- a/pkg/test/framework/label/labels.go
+++ b/pkg/test/framework/label/labels.go
@@ -21,11 +21,6 @@
 	// CustomSetup indicates that the test requires a custom Istio installation.
 	CustomSetup Instance = "customsetup"
 
-	// Flaky indicates that a test is currently flaky and should not be run as part
-	// of presubmit or postsubmit. When a test is determined to be Flaky, a github
-	// issue should be created to fix the test.
-	Flaky Instance = "flaky"
-
 	// IPv4 indicates a test is only compatible with IPv4 clusters.
 	// Any usage of this should have an associated GitHub issue to make it compatible with IPv6
 	IPv4 Instance = "ipv4"
@@ -34,7 +29,6 @@
 var all = NewSet(
 	Postsubmit,
 	CustomSetup,
-	Flaky,
 	IPv4)
 
 // Find the label with the given name
@@ -44,5 +38,5 @@ func Find(name string) (Instance, bool) {
 		return candidate, true
 	}
 
-	return Instance(""), false
+	return "", false
 }
diff --git a/pkg/test/framework/label/labels_test.go b/pkg/test/framework/label/labels_test.go
index 897a59c2ee..e900bc65ae 100644
--- a/pkg/test/framework/label/labels_test.go
+++ b/pkg/test/framework/label/labels_test.go
@@ -30,7 +30,7 @@ func TestLabels(t *testing.T) {
 		{filter: "", labels: NewSet(Postsubmit), expected: true},
 		{filter: "", labels: NewSet(Postsubmit, CustomSetup), expected: true},
 		{filter: "$requires.kube", labels: NewSet(Postsubmit, CustomSetup), err: true},
-		{filter: "zoo", labels: NewSet(Postsubmit, CustomSetup), err: true},
+		{filter: "zoo", labels: NewSet(Postsubmit, CustomSetup), expected: true},
 		{filter: "postsubmit", labels: NewSet(Postsubmit), expected: true},
 		{filter: "postsubmit", labels: NewSet(CustomSetup), expected: false},
 		{filter: "postsubmit", labels: NewSet(CustomSetup, Postsubmit), expected: true},
diff --git a/tests/integration/tests.mk b/tests/integration/tests.mk
index fd4167728f..7499c70259 100644
--- a/tests/integration/tests.mk
+++ b/tests/integration/tests.mk
@@ -97,6 +97,11 @@ test.integration-fuzz.%.kube: | $(JUNIT_REPORT) check-go-tag
 test.integration.%.kube.presubmit:
 	@make test.integration.$*.kube
 
+# Run all tests
+.PHONY: test.integration.kube
+test.integration.kube: test.integration.kube.presubmit
+	@:
+
 # Presubmit integration tests targeting Kubernetes environment. Really used for postsubmit on different k8s versions.
 .PHONY: test.integration.kube.presubmit
 test.integration.kube.presubmit: | $(JUNIT_REPORT) check-go-tag
-- 
2.35.3

