From a3dda28a4eda504a0c67e4bc562223b1b8deedce Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Wed, 23 Mar 2022 10:19:38 -0700
Subject: Mirgate gogo/protobuf to golang/protobuf (#38055)

---
 bin/update_deps.sh                            |     1 -
 go.mod                                        |     5 +-
 go.sum                                        |     9 +-
 istioctl/cmd/add-to-mesh_test.go              |     2 +
 istioctl/cmd/describe.go                      |    14 +-
 istioctl/cmd/kubeinject.go                    |     6 +-
 istioctl/cmd/revision_test.go                 |     6 +-
 istioctl/cmd/workload.go                      |     8 +-
 istioctl/cmd/workload_test.go                 |     5 +-
 licenses/istio.io/gogo-genproto/LICENSE       |   202 -
 operator/cmd/mesh/install.go                  |     8 +-
 operator/cmd/mesh/manifest-generate_test.go   |     2 +-
 operator/cmd/mesh/manifest_shared_test.go     |     9 +-
 operator/cmd/operator/main.go                 |     3 +
 operator/pkg/apis/istio/common.go             |    12 +-
 operator/pkg/apis/istio/v1alpha1/common.go    |    79 +-
 .../pkg/apis/istio/v1alpha1/deepcopy_test.go  |    89 +-
 operator/pkg/apis/istio/v1alpha1/doc.go       |    16 -
 .../apis/istio/v1alpha1/operator_crd.pb.go    |   107 -
 operator/pkg/apis/istio/v1alpha1/types.go     |    72 +
 .../istio/v1alpha1/validation/validation.go   |     4 +-
 .../v1alpha1/validation/validation_test.go    |    10 +-
 .../apis/istio/v1alpha1/value_types_json.go   |    10 +-
 .../apis/istio/v1alpha1/values_types.pb.go    | 26663 +++-------------
 .../apis/istio/v1alpha1/values_types.proto    |     3 +-
 .../{deepcopy.go => zz_generated.deepcopy.go} |    66 +-
 .../istiocontrolplane_controller.go           |     6 +-
 operator/pkg/helmreconciler/prune_test.go     |     4 +-
 operator/pkg/helmreconciler/reconciler.go     |     4 +-
 operator/pkg/manifest/shared.go               |     7 +-
 operator/pkg/object/objects.go                |     2 +-
 operator/pkg/patch/patch.go                   |     6 +-
 operator/pkg/tpath/struct.go                  |    11 +-
 operator/pkg/tpath/tree.go                    |     7 +-
 operator/pkg/translate/translate.go           |    17 +-
 operator/pkg/translate/translate_common.go    |     4 +-
 .../pkg/translate/translate_value_test.go     |     9 +-
 operator/pkg/util/k8s.go                      |     2 +-
 operator/pkg/util/k8s_test.go                 |     4 +-
 operator/pkg/util/merge_iop.go                |    29 +-
 operator/pkg/util/merge_iop_test.go           |    12 +-
 operator/pkg/util/reflect.go                  |    10 +-
 operator/pkg/util/util.go                     |    13 +-
 operator/pkg/util/yaml.go                     |    58 +-
 operator/pkg/util/yaml_test.go                |    32 -
 operator/pkg/validate/common.go               |     3 +-
 operator/pkg/validate/validate.go             |    11 +-
 operator/pkg/validate/validate_test.go        |     4 +-
 operator/pkg/validate/validate_values.go      |    27 +-
 operator/pkg/validate/validate_values_test.go |     5 +-
 operator/pkg/version/version_test.go          |     8 +-
 pilot/cmd/pilot-agent/config/config.go        |     4 +-
 pilot/cmd/pilot-agent/config/config_test.go   |    20 +-
 pilot/cmd/pilot-agent/main.go                 |     4 +-
 pilot/pkg/bootstrap/server.go                 |     6 +-
 pilot/pkg/config/kube/crd/conversion_test.go  |     6 +-
 .../config/kube/gateway/conversion_test.go    |     5 +-
 .../workloadentry/workloadentry_controller.go |     8 +-
 .../workloadentry_controller_test.go          |     6 +-
 pilot/pkg/model/authorization_test.go         |     2 +-
 pilot/pkg/model/context.go                    |    10 +-
 pilot/pkg/model/context_test.go               |    15 +-
 pilot/pkg/model/conversion_test.go            |    21 +-
 pilot/pkg/model/destination_rule.go           |     2 +-
 pilot/pkg/model/extensions.go                 |     8 +-
 pilot/pkg/model/proxy_config.go               |     6 +-
 pilot/pkg/model/proxy_config_test.go          |    27 +-
 pilot/pkg/model/push_context_test.go          |    57 +-
 pilot/pkg/model/telemetry.go                  |     3 +-
 pilot/pkg/model/telemetry_test.go             |    27 +-
 pilot/pkg/model/virtualservice.go             |     6 +-
 pilot/pkg/model/virtualservice_test.go        |    45 +-
 pilot/pkg/networking/apigen/apigen.go         |    50 +-
 .../pkg/networking/core/v1alpha3/accesslog.go |    17 +-
 .../core/v1alpha3/accesslog_test.go           |    67 +-
 pilot/pkg/networking/core/v1alpha3/cluster.go |    11 +-
 .../core/v1alpha3/cluster_builder.go          |    20 +-
 .../core/v1alpha3/cluster_builder_test.go     |    94 +-
 .../networking/core/v1alpha3/cluster_test.go  |    51 +-
 .../envoyfilter/listener_patch_test.go        |    18 +-
 .../v1alpha3/extension/wasmplugin_test.go     |    14 +-
 .../pkg/networking/core/v1alpha3/listener.go  |     3 +-
 .../core/v1alpha3/listener_builder.go         |     2 +-
 .../core/v1alpha3/listener_builder_test.go    |     8 +-
 .../networking/core/v1alpha3/listener_test.go |     4 +-
 .../loadbalancer/loadbalancer_test.go         |    26 +-
 .../core/v1alpha3/route/retry/retry.go        |     2 +-
 .../core/v1alpha3/route/retry/retry_test.go   |    30 +-
 .../networking/core/v1alpha3/route/route.go   |    14 +-
 .../v1alpha3/route/route_internal_test.go     |     8 +-
 .../core/v1alpha3/route/route_test.go         |    10 +-
 pilot/pkg/networking/util/util.go             |    14 -
 .../security/authn/v1beta1/policy_applier.go  |     4 +
 .../authn/v1beta1/policy_applier_test.go      |    12 +-
 .../security/authz/builder/builder_test.go    |     6 +-
 pilot/pkg/security/authz/builder/extauthz.go  |     6 +-
 pilot/pkg/security/authz/model/model_test.go  |     3 +-
 .../serviceentry/servicediscovery.go          |     6 +-
 pilot/pkg/status/distribution/state.go        |     6 +-
 pilot/pkg/xds/pcds.go                         |     4 +-
 pilot/tools/debug/pilot_cli.go                |     4 +-
 pkg/adsc/adsc.go                              |    31 +-
 pkg/adsc/adsc_test.go                         |     8 +-
 pkg/bootstrap/config.go                       |     6 +-
 pkg/bootstrap/instance_test.go                |     5 +-
 pkg/bootstrap/option/convert.go               |     6 +-
 pkg/bootstrap/option/instance.go              |     4 +-
 pkg/bootstrap/option/instances.go             |     4 +-
 pkg/bootstrap/option/instances_test.go        |     8 +-
 .../analyzers/deprecation/deprecation.go      |     1 +
 pkg/config/analysis/local/analyze_test.go     |     7 +-
 pkg/config/conversion.go                      |    10 +-
 pkg/config/mesh/kubemesh/watcher_test.go      |    10 +-
 pkg/config/mesh/mesh.go                       |    37 +-
 pkg/config/mesh/mesh_test.go                  |    17 +-
 pkg/config/mesh/networks_watcher.go           |     6 +-
 pkg/config/mesh/watcher.go                    |     4 +-
 pkg/config/mesh/watcher_test.go               |    17 +-
 pkg/config/model.go                           |    28 +-
 pkg/config/model_test.go                      |     8 +-
 pkg/config/schema/collections/mock.go         |     2 +-
 pkg/config/schema/fuzz/fuzz.go                |   255 -
 pkg/config/schema/fuzz_test.go                |   191 -
 pkg/config/schema/resource/schema.go          |    26 +-
 pkg/config/schema/resource/schema_test.go     |    12 +-
 pkg/config/validation/validation.go           |    37 +-
 pkg/config/validation/validation_test.go      |   381 +-
 pkg/config/validation/virtualservice.go       |     1 +
 pkg/config/validation/virtualservice_test.go  |     6 +-
 pkg/config/xds/xds.go                         |    12 +-
 pkg/envoy/proxy.go                            |    23 +-
 pkg/envoy/proxy_test.go                       |     4 +-
 pkg/istio-agent/agent.go                      |     3 +-
 pkg/istio-agent/xds_proxy.go                  |     6 +-
 pkg/kube/fakemirror.go                        |     6 +-
 pkg/kube/inject/inject.go                     |     2 +-
 pkg/kube/inject/inject_test.go                |    32 +-
 pkg/kube/inject/template.go                   |    37 +-
 pkg/kube/inject/validate.go                   |     4 +-
 pkg/kube/inject/webhook.go                    |     4 +-
 pkg/kube/inject/webhook_test.go               |    12 +-
 pkg/test/config/mock_config.pb.go             |   678 +-
 pkg/test/config/mock_config.proto             |     3 +
 .../components/echo/kube/deployment.go        |     8 +-
 .../framework/components/istio/operator.go    |    26 +-
 pkg/test/framework/components/istio/util.go   |     8 +-
 pkg/util/gogo/conversion.go                   |    78 -
 pkg/util/gogo/conversion_test.go              |    95 -
 pkg/util/gogoprotomarshal/protomarshal.go     |    85 -
 pkg/util/protomarshal/protomarshal.go         |    24 +
 prow/release-commit.sh                        |     5 +-
 .../caclient/providers/citadel/client.go      |     8 +-
 .../caclient/providers/citadel/client_test.go |     2 +
 security/pkg/nodeagent/test/mock/caserver.go  |     1 +
 security/pkg/server/ca/server.go              |     1 +
 tests/integration/operator/switch_cr_test.go  |     4 +-
 .../pilot/analysis/analysis_test.go           |     7 +-
 tests/integration/pilot/vm_test.go            |     2 +-
 tools/proto/buf.gogo.yaml                     |     5 -
 tools/proto/proto.mk                          |     2 +-
 160 files changed, 6168 insertions(+), 24655 deletions(-)
 delete mode 100644 licenses/istio.io/gogo-genproto/LICENSE
 delete mode 100644 operator/pkg/apis/istio/v1alpha1/doc.go
 delete mode 100644 operator/pkg/apis/istio/v1alpha1/operator_crd.pb.go
 create mode 100644 operator/pkg/apis/istio/v1alpha1/types.go
 rename operator/pkg/apis/istio/v1alpha1/{deepcopy.go => zz_generated.deepcopy.go} (58%)
 delete mode 100644 pkg/config/schema/fuzz/fuzz.go
 delete mode 100644 pkg/config/schema/fuzz_test.go
 delete mode 100644 pkg/util/gogo/conversion.go
 delete mode 100644 pkg/util/gogo/conversion_test.go
 delete mode 100644 tools/proto/buf.gogo.yaml

diff --git a/bin/update_deps.sh b/bin/update_deps.sh
index 8fd355b1e9..1154ac1173 100755
--- a/bin/update_deps.sh
+++ b/bin/update_deps.sh
@@ -40,7 +40,6 @@ make update-common
 export GO111MODULE=on
 go get -u "istio.io/api@${UPDATE_BRANCH}"
 go get -u "istio.io/client-go@${UPDATE_BRANCH}"
-go get -u "istio.io/gogo-genproto@${UPDATE_BRANCH}"
 go get -u "istio.io/pkg@${UPDATE_BRANCH}"
 go mod tidy
 
diff --git a/go.mod b/go.mod
index 9c0e3e6272..fe00bbda0d 100644
--- a/go.mod
+++ b/go.mod
@@ -82,8 +82,8 @@ require (
 	gopkg.in/yaml.v2 v2.4.0
 	gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b
 	helm.sh/helm/v3 v3.8.1
-	istio.io/api v0.0.0-20220322234440-289bfe748e00
-	istio.io/client-go v1.12.0-alpha.5.0.20220322234840-31f16684d39c
+	istio.io/api v0.0.0-20220323151137-9d336787a432
+	istio.io/client-go v1.12.0-alpha.5.0.20220323151437-4b6ebb485474
 	istio.io/pkg v0.0.0-20220321155559-9760e274a5e3
 	k8s.io/api v0.23.5
 	k8s.io/apiextensions-apiserver v0.23.5
@@ -235,7 +235,6 @@ require (
 	gopkg.in/inf.v0 v0.9.1 // indirect
 	gopkg.in/ini.v1 v1.66.2 // indirect
 	gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 // indirect
-	istio.io/gogo-genproto v0.0.0-20220314210524-818959c51ace // indirect
 	k8s.io/component-base v0.23.5 // indirect
 	sigs.k8s.io/json v0.0.0-20211020170558-c049b76a60c6 // indirect
 	sigs.k8s.io/kustomize/api v0.10.1 // indirect
diff --git a/go.sum b/go.sum
index 3dc0bca67f..7cf6eab92e 100644
--- a/go.sum
+++ b/go.sum
@@ -2154,13 +2154,12 @@ honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWh
 honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=
 honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=
 honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=
-istio.io/api v0.0.0-20220322234440-289bfe748e00 h1:dx26IwPATzdB3j3Zo9b+GsFfMJyEUTLl+pAEsq1Ivpc=
 istio.io/api v0.0.0-20220322234440-289bfe748e00/go.mod h1:8ZZgyVgYrHhsFQarEgTfPnMGpdgTDZbxSjYhdwTUuAQ=
-istio.io/client-go v1.12.0-alpha.5.0.20220322234840-31f16684d39c h1:zr5NHLizcT8aThUAbIRvALPWe+UFX7v0KUkDwgxh2Mw=
-istio.io/client-go v1.12.0-alpha.5.0.20220322234840-31f16684d39c/go.mod h1:4TLRuiukRQZGGc5orPMuKYwMitjbOTwkYmu3P8iYJWw=
+istio.io/api v0.0.0-20220323151137-9d336787a432 h1:8mg2okvlms+Nkc7CNgYal6v4mto2oXcRd8Y1LIv4/fw=
+istio.io/api v0.0.0-20220323151137-9d336787a432/go.mod h1:qGm6l1okCpLqVKyXSfYjB+UXXgpE/LCggALuK25cSFY=
+istio.io/client-go v1.12.0-alpha.5.0.20220323151437-4b6ebb485474 h1:XiGArXlMlkp9Q4Ie6V6D2lFT2shn/ik5s7ikEWjftfk=
+istio.io/client-go v1.12.0-alpha.5.0.20220323151437-4b6ebb485474/go.mod h1:4TLRuiukRQZGGc5orPMuKYwMitjbOTwkYmu3P8iYJWw=
 istio.io/gogo-genproto v0.0.0-20211208193508-5ab4acc9eb1e/go.mod h1:vJDAniIqryf/z///fgZqVPKJ7N2lBk7Gg8DCTB7oCfU=
-istio.io/gogo-genproto v0.0.0-20220314210524-818959c51ace h1:ZOPnMxSjLNtAmRgov2NTrVOcX4yrdvp3IQx5aZ8aXDk=
-istio.io/gogo-genproto v0.0.0-20220314210524-818959c51ace/go.mod h1:vJDAniIqryf/z///fgZqVPKJ7N2lBk7Gg8DCTB7oCfU=
 istio.io/pkg v0.0.0-20220321155559-9760e274a5e3 h1:raOSncj6J3FcPcZg8TDpnouok1PcNaeaNzE+gQN1inc=
 istio.io/pkg v0.0.0-20220321155559-9760e274a5e3/go.mod h1:i95AmfHLCp5JThoiCGCyzZ6bOHJk5fD+BicBvGDr9Xg=
 k8s.io/api v0.18.2/go.mod h1:SJCWI7OLzhZSvbY7U8zwNl9UA4o1fizoug34OV/2r78=
diff --git a/istioctl/cmd/add-to-mesh_test.go b/istioctl/cmd/add-to-mesh_test.go
index c5b149db75..ed069cb2cd 100644
--- a/istioctl/cmd/add-to-mesh_test.go
+++ b/istioctl/cmd/add-to-mesh_test.go
@@ -30,6 +30,7 @@
 	"k8s.io/client-go/dynamic/fake"
 
 	"istio.io/istio/pkg/config/schema/collections"
+	"istio.io/istio/pkg/test/util/assert"
 	"istio.io/istio/pkg/url"
 )
 
@@ -302,6 +303,7 @@ func verifyAddToMeshOutput(t *testing.T, c testcase) {
 	}
 
 	if c.expectedOutput != "" && c.expectedOutput != output {
+		assert.Equal(t, c.expectedOutput, output)
 		t.Fatalf("Unexpected output for 'istioctl %s'\n got: %q\nwant: %q", strings.Join(c.args, " "), output, c.expectedOutput)
 	}
 }
diff --git a/istioctl/cmd/describe.go b/istioctl/cmd/describe.go
index 762900cbc5..10a9678894 100644
--- a/istioctl/cmd/describe.go
+++ b/istioctl/cmd/describe.go
@@ -273,7 +273,7 @@ func printDestinationRule(writer io.Writer, dr *clientnetworking.DestinationRule
 }
 
 // httpRouteMatchSvc returns true if it matches and a slice of facts about the match
-func httpRouteMatchSvc(vs clientnetworking.VirtualService, route *v1alpha3.HTTPRoute, svc v1.Service, matchingSubsets []string, nonmatchingSubsets []string, dr *clientnetworking.DestinationRule) (bool, []string) { // nolint: lll
+func httpRouteMatchSvc(vs *clientnetworking.VirtualService, route *v1alpha3.HTTPRoute, svc v1.Service, matchingSubsets []string, nonmatchingSubsets []string, dr *clientnetworking.DestinationRule) (bool, []string) { // nolint: lll
 	svcHost := extendFQDN(fmt.Sprintf("%s.%s", svc.ObjectMeta.Name, svc.ObjectMeta.Namespace))
 	facts := []string{}
 	mismatchNotes := []string{}
@@ -335,7 +335,7 @@ func httpRouteMatchSvc(vs clientnetworking.VirtualService, route *v1alpha3.HTTPR
 	return match, facts
 }
 
-func tcpRouteMatchSvc(vs clientnetworking.VirtualService, route *v1alpha3.TCPRoute, svc v1.Service) (bool, []string) {
+func tcpRouteMatchSvc(vs *clientnetworking.VirtualService, route *v1alpha3.TCPRoute, svc v1.Service) (bool, []string) {
 	match := false
 	facts := []string{}
 	svcHost := extendFQDN(fmt.Sprintf("%s.%s", svc.ObjectMeta.Name, svc.ObjectMeta.Namespace))
@@ -540,7 +540,7 @@ func (v *myProtoValue) keyAsStruct(key string) *myProtoValue {
 	return &myProtoValue{v.GetStructValue().Fields[key]}
 }
 
-// asMyProtoValue wraps a gogo Struct so we may use it with keyAsStruct and keyAsString
+// asMyProtoValue wraps a protobuf Struct so we may use it with keyAsStruct and keyAsString
 func asMyProtoValue(s *structpb.Struct) *myProtoValue {
 	return &myProtoValue{
 		&structpb.Value{
@@ -789,7 +789,7 @@ func getIstioDestinationRulePathForSvc(cd *configdump.Wrapper, svc v1.Service, p
 
 // TODO simplify this by showing for each matching Destination the negation of the previous HttpMatchRequest
 // and showing the non-matching Destinations.  (The current code is ad-hoc, and usually shows most of that information.)
-func printVirtualService(writer io.Writer, vs clientnetworking.VirtualService, svc v1.Service, matchingSubsets []string, nonmatchingSubsets []string, dr *clientnetworking.DestinationRule) { // nolint: lll
+func printVirtualService(writer io.Writer, vs *clientnetworking.VirtualService, svc v1.Service, matchingSubsets []string, nonmatchingSubsets []string, dr *clientnetworking.DestinationRule) { // nolint: lll
 	fmt.Fprintf(writer, "VirtualService: %s\n", kname(vs.ObjectMeta))
 
 	// There is no point in checking that 'port' uses HTTP (for HTTP route matches)
@@ -932,7 +932,7 @@ func printIngressInfo(writer io.Writer, matchingServices []v1.Service, podsLabel
 					}
 
 					printIngressService(writer, &ingressSvcs.Items[0], &pod, ipIngress)
-					printVirtualService(writer, *vs, svc, matchingSubsets, nonmatchingSubsets, dr)
+					printVirtualService(writer, vs, svc, matchingSubsets, nonmatchingSubsets, dr)
 				} else {
 					fmt.Fprintf(writer,
 						"WARNING: Proxy is stale; it references to non-existent virtual service %s.%s\n",
@@ -1163,7 +1163,7 @@ func describePodServices(writer io.Writer, kubeClient kube.ExtendedClient, confi
 						// If there is more than one port, prefix each DR by the port it applies to
 						fmt.Fprintf(writer, "%d ", port.Port)
 					}
-					printVirtualService(writer, *vs, svc, matchingSubsets, nonmatchingSubsets, dr)
+					printVirtualService(writer, vs, svc, matchingSubsets, nonmatchingSubsets, dr)
 				} else {
 					fmt.Fprintf(writer,
 						"WARNING: Proxy is stale; it references to non-existent virtual service %s.%s\n",
@@ -1222,7 +1222,7 @@ func describePeerAuthentication(writer io.Writer, kubeClient kube.ExtendedClient
 	var cfgs []*config.Config
 	for _, pa := range allPAs {
 		pa := pa
-		cfg := crdclient.TranslateObject(&pa, config.GroupVersionKind(pa.GroupVersionKind()), "")
+		cfg := crdclient.TranslateObject(pa, config.GroupVersionKind(pa.GroupVersionKind()), "")
 		cfgs = append(cfgs, &cfg)
 	}
 
diff --git a/istioctl/cmd/kubeinject.go b/istioctl/cmd/kubeinject.go
index d2777d0859..a13fa7cb59 100644
--- a/istioctl/cmd/kubeinject.go
+++ b/istioctl/cmd/kubeinject.go
@@ -54,7 +54,7 @@
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/kube"
 	"istio.io/istio/pkg/kube/inject"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/log"
 	"istio.io/pkg/version"
 )
@@ -452,14 +452,14 @@ func getIOPConfigs() (string, *meshconfig.MeshConfig, error) {
 			return "", nil, err
 		}
 		if iop.Spec.Values != nil {
-			values, err := gogoprotomarshal.ToJSON(iop.Spec.Values)
+			values, err := protomarshal.ToJSON(iop.Spec.Values)
 			if err != nil {
 				return "", nil, err
 			}
 			valuesConfig = values
 		}
 		if iop.Spec.MeshConfig != nil {
-			meshConfigYaml, err := gogoprotomarshal.ToYAML(iop.Spec.MeshConfig)
+			meshConfigYaml, err := protomarshal.ToYAML(iop.Spec.MeshConfig)
 			if err != nil {
 				return "", nil, err
 			}
diff --git a/istioctl/cmd/revision_test.go b/istioctl/cmd/revision_test.go
index 25f016ca57..0aca8a988c 100644
--- a/istioctl/cmd/revision_test.go
+++ b/istioctl/cmd/revision_test.go
@@ -18,14 +18,14 @@
 	"sort"
 	"testing"
 
-	"github.com/gogo/protobuf/types"
+	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 
 	"istio.io/api/operator/v1alpha1"
 )
 
 func TestGetEnabledComponentsFromIOPSpec(t *testing.T) {
-	enabledPbVal := &types.BoolValue{Value: true}
-	disabledPbVal := &types.BoolValue{Value: false}
+	enabledPbVal := &wrappers.BoolValue{Value: true}
+	disabledPbVal := &wrappers.BoolValue{Value: false}
 
 	for _, test := range []struct {
 		name     string
diff --git a/istioctl/cmd/workload.go b/istioctl/cmd/workload.go
index aa1f74e248..e4f65f65c8 100644
--- a/istioctl/cmd/workload.go
+++ b/istioctl/cmd/workload.go
@@ -49,7 +49,7 @@
 	"istio.io/istio/pkg/kube"
 	"istio.io/istio/pkg/kube/labels"
 	"istio.io/istio/pkg/url"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/istio/pkg/util/shellescape"
 	"istio.io/pkg/log"
 )
@@ -452,7 +452,7 @@ func createMeshConfig(kubeClient kube.ExtendedClient, wg *clientv1alpha3.Workloa
 			ProxyMetadata: map[string]string{},
 		},
 	}
-	if err := gogoprotomarshal.ApplyYAML(istio.Data[configMapKey], meshConfig); err != nil {
+	if err := protomarshal.ApplyYAML(istio.Data[configMapKey], meshConfig); err != nil {
 		return nil, err
 	}
 	if isRevisioned(revision) && meshConfig.DefaultConfig.DiscoveryAddress == "" {
@@ -465,7 +465,7 @@ func createMeshConfig(kubeClient kube.ExtendedClient, wg *clientv1alpha3.Workloa
 	// support proxy.istio.io/config on the WorkloadGroup, in the WorkloadGroup spec
 	for _, annotations := range []map[string]string{wg.Annotations, wg.Spec.Metadata.Annotations} {
 		if pcYaml, ok := annotations[annotation.ProxyConfig.Name]; ok {
-			if err := gogoprotomarshal.ApplyYAML(pcYaml, meshConfig.DefaultConfig); err != nil {
+			if err := protomarshal.ApplyYAML(pcYaml, meshConfig.DefaultConfig); err != nil {
 				return nil, err
 			}
 			for k, v := range meshConfig.DefaultConfig.ProxyMetadata {
@@ -522,7 +522,7 @@ func createMeshConfig(kubeClient kube.ExtendedClient, wg *clientv1alpha3.Workloa
 		md["ISTIO_META_AUTO_REGISTER_GROUP"] = wg.Name
 	}
 
-	proxyConfig, err := gogoprotomarshal.ToJSONMap(meshConfig.DefaultConfig)
+	proxyConfig, err := protomarshal.ToJSONMap(meshConfig.DefaultConfig)
 	if err != nil {
 		return nil, err
 	}
diff --git a/istioctl/cmd/workload_test.go b/istioctl/cmd/workload_test.go
index 262d94a5c0..e7d380430e 100644
--- a/istioctl/cmd/workload_test.go
+++ b/istioctl/cmd/workload_test.go
@@ -39,11 +39,8 @@
   name: foo
   namespace: bar
 spec:
-  metadata:
-    annotations: {}
-    labels: {}
+  metadata: {}
   template:
-    ports: {}
     serviceAccount: default
 `
 
diff --git a/licenses/istio.io/gogo-genproto/LICENSE b/licenses/istio.io/gogo-genproto/LICENSE
deleted file mode 100644
index 56e48aa37f..0000000000
--- a/licenses/istio.io/gogo-genproto/LICENSE
+++ /dev/null
@@ -1,202 +0,0 @@
-
-                                Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright 2016-2020 Istio Authors
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/operator/cmd/mesh/install.go b/operator/cmd/mesh/install.go
index 173d9fc553..11530e7ae4 100644
--- a/operator/cmd/mesh/install.go
+++ b/operator/cmd/mesh/install.go
@@ -26,6 +26,7 @@
 	"github.com/fatih/color"
 	"github.com/spf13/cobra"
 	"sigs.k8s.io/controller-runtime/pkg/client"
+	"sigs.k8s.io/yaml"
 
 	"istio.io/api/operator/v1alpha1"
 	"istio.io/istio/istioctl/pkg/clioptions"
@@ -38,7 +39,6 @@
 	"istio.io/istio/operator/pkg/manifest"
 	"istio.io/istio/operator/pkg/name"
 	"istio.io/istio/operator/pkg/translate"
-	"istio.io/istio/operator/pkg/util"
 	"istio.io/istio/operator/pkg/util/clog"
 	"istio.io/istio/operator/pkg/util/progress"
 	pkgversion "istio.io/istio/operator/pkg/version"
@@ -282,12 +282,12 @@ func InstallManifests(iop *v1alpha12.IstioOperator, force bool, dryRun bool, kub
 		iop.Annotations = make(map[string]string)
 	}
 	iop.Annotations[istiocontrolplane.IgnoreReconcileAnnotation] = "true"
-	iopStr, err := util.MarshalWithJSONPB(iop)
+	iopStr, err := yaml.Marshal(iop)
 	if err != nil {
 		return iop, err
 	}
 
-	return iop, saveIOPToCluster(reconciler, iopStr)
+	return iop, saveIOPToCluster(reconciler, string(iopStr))
 }
 
 func savedIOPName(iop *v1alpha12.IstioOperator) string {
@@ -406,7 +406,7 @@ func validateEnableNamespacesByDefault(iop *v1alpha12.IstioOperator) bool {
 	if iop == nil || iop.Spec == nil || iop.Spec.Values == nil {
 		return false
 	}
-	sidecarValues := v1alpha12.AsMap(iop.Spec.Values)["sidecarInjectorWebhook"]
+	sidecarValues := iop.Spec.Values.AsMap()["sidecarInjectorWebhook"]
 	sidecarMap, ok := sidecarValues.(map[string]interface{})
 	if !ok {
 		return false
diff --git a/operator/cmd/mesh/manifest-generate_test.go b/operator/cmd/mesh/manifest-generate_test.go
index 3a29c7e472..1329ae6135 100644
--- a/operator/cmd/mesh/manifest-generate_test.go
+++ b/operator/cmd/mesh/manifest-generate_test.go
@@ -719,7 +719,7 @@ func TestLDFlags(t *testing.T) {
 	if err != nil {
 		t.Fatal(err)
 	}
-	if iop.Spec.Hub != version.DockerInfo.Hub || util.ValueString(iop.Spec.Tag) != version.DockerInfo.Tag {
+	if iop.Spec.Hub != version.DockerInfo.Hub || iop.Spec.Tag.GetStringValue() != version.DockerInfo.Tag {
 		t.Fatalf("DockerInfoHub, DockerInfoTag got: %s,%s, want: %s, %s", iop.Spec.Hub, iop.Spec.Tag, version.DockerInfo.Hub, version.DockerInfo.Tag)
 	}
 }
diff --git a/operator/cmd/mesh/manifest_shared_test.go b/operator/cmd/mesh/manifest_shared_test.go
index 13b51be65d..1551dac75e 100644
--- a/operator/cmd/mesh/manifest_shared_test.go
+++ b/operator/cmd/mesh/manifest_shared_test.go
@@ -22,7 +22,6 @@
 	"path/filepath"
 	"strings"
 
-	"github.com/gogo/protobuf/proto"
 	"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
 	"k8s.io/apimachinery/pkg/runtime/schema"
 	"k8s.io/client-go/kubernetes"
@@ -30,6 +29,7 @@
 	"sigs.k8s.io/controller-runtime/pkg/client"
 	"sigs.k8s.io/controller-runtime/pkg/client/fake"
 	"sigs.k8s.io/controller-runtime/pkg/envtest"
+	"sigs.k8s.io/yaml"
 
 	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/cache"
@@ -38,7 +38,6 @@
 	"istio.io/istio/operator/pkg/manifest"
 	"istio.io/istio/operator/pkg/name"
 	"istio.io/istio/operator/pkg/object"
-	"istio.io/istio/operator/pkg/util"
 	"istio.io/istio/operator/pkg/util/clog"
 	"istio.io/istio/pkg/kube"
 	"istio.io/pkg/log"
@@ -236,7 +235,7 @@ func fakeControllerReconcile(inFile string, chartSource chartSourceType, opts *h
 // fakeInstallOperator installs the operator manifest resources into a cluster using the given reconciler.
 // The installation is for testing with a kubebuilder fake cluster only, since no functional Deployment will be
 // created.
-func fakeInstallOperator(reconciler *helmreconciler.HelmReconciler, chartSource chartSourceType, iop proto.Message) error {
+func fakeInstallOperator(reconciler *helmreconciler.HelmReconciler, chartSource chartSourceType, iop *v1alpha1.IstioOperator) error {
 	ocArgs := &operatorCommonArgs{
 		manifestsPath:     string(chartSource),
 		istioNamespace:    istioDefaultNamespace,
@@ -254,11 +253,11 @@ func fakeInstallOperator(reconciler *helmreconciler.HelmReconciler, chartSource
 	if err := applyWithReconciler(reconciler, mstr); err != nil {
 		return err
 	}
-	iopStr, err := util.MarshalWithJSONPB(iop)
+	iopStr, err := yaml.Marshal(iop)
 	if err != nil {
 		return err
 	}
-	if err := saveIOPToCluster(reconciler, iopStr); err != nil {
+	if err := saveIOPToCluster(reconciler, string(iopStr)); err != nil {
 		return err
 	}
 
diff --git a/operator/cmd/operator/main.go b/operator/cmd/operator/main.go
index 6462323fe3..4e6464bcbe 100644
--- a/operator/cmd/operator/main.go
+++ b/operator/cmd/operator/main.go
@@ -16,9 +16,12 @@
 
 import (
 	"os"
+
+	"istio.io/pkg/log"
 )
 
 func main() {
+	log.EnableKlogWithCobra()
 	rootCmd := getRootCmd(os.Args[1:])
 
 	if err := rootCmd.Execute(); err != nil {
diff --git a/operator/pkg/apis/istio/common.go b/operator/pkg/apis/istio/common.go
index 7e6502981a..74270a3b8c 100644
--- a/operator/pkg/apis/istio/common.go
+++ b/operator/pkg/apis/istio/common.go
@@ -17,6 +17,8 @@
 import (
 	"fmt"
 
+	"sigs.k8s.io/yaml"
+
 	"istio.io/api/operator/v1alpha1"
 	operator_v1alpha1 "istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/util"
@@ -40,8 +42,14 @@ func UnmarshalAndValidateIOPS(iopsYAML string) (*v1alpha1.IstioOperatorSpec, err
 // UnmarshalIstioOperator unmarshals a string containing IstioOperator YAML.
 func UnmarshalIstioOperator(iopYAML string, allowUnknownField bool) (*operator_v1alpha1.IstioOperator, error) {
 	iop := &operator_v1alpha1.IstioOperator{}
-	if err := util.UnmarshalWithJSONPB(iopYAML, iop, allowUnknownField); err != nil {
-		return nil, fmt.Errorf("could not unmarshal: %v", err)
+	if allowUnknownField {
+		if err := yaml.Unmarshal([]byte(iopYAML), iop); err != nil {
+			return nil, fmt.Errorf("could not unmarshal: %v", err)
+		}
+	} else {
+		if err := yaml.UnmarshalStrict([]byte(iopYAML), iop); err != nil {
+			return nil, fmt.Errorf("could not unmarshal: %v", err)
+		}
 	}
 	return iop, nil
 }
diff --git a/operator/pkg/apis/istio/v1alpha1/common.go b/operator/pkg/apis/istio/v1alpha1/common.go
index 086ac6f459..a02997d750 100644
--- a/operator/pkg/apis/istio/v1alpha1/common.go
+++ b/operator/pkg/apis/istio/v1alpha1/common.go
@@ -15,13 +15,7 @@
 package v1alpha1
 
 import (
-	"encoding/json"
-	"math"
-
-	"github.com/gogo/protobuf/types"
-
 	"istio.io/api/operator/v1alpha1"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
 )
 
 const (
@@ -37,7 +31,7 @@ func Namespace(iops *v1alpha1.IstioOperatorSpec) string {
 	if iops.Values == nil {
 		return ""
 	}
-	v := AsMap(iops.Values)
+	v := iops.Values.AsMap()
 	if v[globalKey] == nil {
 		return ""
 	}
@@ -56,74 +50,3 @@ func SetNamespace(iops *v1alpha1.IstioOperatorSpec, namespace string) {
 	}
 	// TODO implement
 }
-
-func MustNewStruct(m map[string]interface{}) *types.Struct {
-	r, err := NewStruct(m)
-	if err != nil {
-		panic(err.Error())
-	}
-	return r
-}
-
-func NewStruct(m map[string]interface{}) (*types.Struct, error) {
-	b, err := json.Marshal(m)
-	if err != nil {
-		return nil, err
-	}
-	s := &types.Struct{}
-	if err := gogoprotomarshal.ApplyJSON(string(b), s); err != nil {
-		return nil, err
-	}
-	return s, nil
-}
-
-func AsMap(x *types.Struct) map[string]interface{} {
-	vs := make(map[string]interface{})
-	for k, v := range x.GetFields() {
-		vs[k] = AsInterface(v)
-	}
-	return vs
-}
-
-func asSlice(x *types.ListValue) []interface{} {
-	vs := make([]interface{}, len(x.GetValues()))
-	for i, v := range x.GetValues() {
-		vs[i] = AsInterface(v)
-	}
-	return vs
-}
-
-func AsInterface(x *types.Value) interface{} {
-	switch v := x.GetKind().(type) {
-	case *types.Value_NumberValue:
-		if v != nil {
-			switch {
-			case math.IsNaN(v.NumberValue):
-				return "NaN"
-			case math.IsInf(v.NumberValue, +1):
-				return "Infinity"
-			case math.IsInf(v.NumberValue, -1):
-				return "-Infinity"
-			default:
-				return v.NumberValue
-			}
-		}
-	case *types.Value_StringValue:
-		if v != nil {
-			return v.StringValue
-		}
-	case *types.Value_BoolValue:
-		if v != nil {
-			return v.BoolValue
-		}
-	case *types.Value_StructValue:
-		if v != nil {
-			return AsMap(v.StructValue)
-		}
-	case *types.Value_ListValue:
-		if v != nil {
-			return asSlice(v.ListValue)
-		}
-	}
-	return nil
-}
diff --git a/operator/pkg/apis/istio/v1alpha1/deepcopy_test.go b/operator/pkg/apis/istio/v1alpha1/deepcopy_test.go
index 2e23e6f2a0..c24e3b6083 100644
--- a/operator/pkg/apis/istio/v1alpha1/deepcopy_test.go
+++ b/operator/pkg/apis/istio/v1alpha1/deepcopy_test.go
@@ -20,13 +20,95 @@
 
 	"github.com/google/go-cmp/cmp"
 	"google.golang.org/protobuf/testing/protocmp"
+	"sigs.k8s.io/yaml"
 
+	v1alpha12 "istio.io/api/operator/v1alpha1"
 	"istio.io/istio/operator/pkg/apis/istio"
-	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
+	install "istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 )
 
 // This is to verify that certain proto types handle marshal and unmarshal properly
 func TestIstioOperatorSpec_DeepCopy(t *testing.T) {
+	x := &v1alpha12.ResourceMetricSource{}
+	err := yaml.UnmarshalStrict([]byte("targetAverageValue: 100m"), x)
+	t.Log(x)
+	if err != nil {
+		t.Fatal(err)
+	}
+	y := &v1alpha12.MetricSpec{}
+	err = yaml.UnmarshalStrict([]byte(`
+type: Resource
+resource:
+  targetAverageValue: 100m`), y)
+	t.Log(y)
+	if err != nil {
+		t.Fatal(err)
+	}
+	z := &v1alpha12.HorizontalPodAutoscalerSpec{}
+	err = yaml.UnmarshalStrict([]byte(`metrics:
+- type: Resource
+  resource:
+    targetAverageValue: 100m`), z)
+	t.Log(z)
+	if err != nil {
+		t.Fatal(err)
+	}
+	fa := &install.IstioOperator{}
+	err = yaml.UnmarshalStrict([]byte(`apiVersion: install.istio.io/v1alpha1
+kind: IstioOperator
+metadata:
+  namespace: istio-system
+  name: example-istiocontrolplane
+spec:
+  profile: demo
+  components:
+    pilot:
+      k8s:
+        hpaSpec:
+          scaleTargetRef:
+            apiVersion: extensions/v1beta1
+            kind: Deployment
+            name: istiod
+          minReplicas: 1
+          maxReplicas: 5
+          metrics:
+          - type: Resource
+            resource:
+              name: cpu
+              targetAverageValue: 100m
+`), fa)
+	t.Log(fa)
+	if err != nil {
+		t.Error(err)
+	}
+	f := &install.IstioOperator{}
+	err = yaml.UnmarshalStrict([]byte(`apiVersion: install.istio.io/v1alpha1
+kind: IstioOperator
+metadata:
+  namespace: istio-system
+  name: example-istiocontrolplane
+spec:
+  profile: demo
+  components:
+    pilot:
+      k8s:
+        hpaSpec:
+          scaleTargetRef:
+            apiVersion: extensions/v1beta1
+            kind: Deployment
+            name: istiod
+          minReplicas: 1
+          maxReplicas: 5
+          metrics:
+          - type: Resource
+            resource:
+              name: cpu
+              targetAverageValue: 100m
+`), f)
+	t.Log(f)
+	if err != nil {
+		t.Fatal(err)
+	}
 	tests := []struct {
 		name string
 		iop  string
@@ -47,7 +129,8 @@ func TestIstioOperatorSpec_DeepCopy(t *testing.T) {
 	}
 }
 
-func loadResource(t *testing.T, filepath string) v1alpha1.IstioOperator {
+func loadResource(t *testing.T, filepath string) *install.IstioOperator {
+	t.Helper()
 	contents, err := os.ReadFile(filepath)
 	if err != nil {
 		t.Fatal(err)
@@ -56,5 +139,5 @@ func loadResource(t *testing.T, filepath string) v1alpha1.IstioOperator {
 	if err != nil {
 		t.Fatal(err)
 	}
-	return *resource
+	return resource
 }
diff --git a/operator/pkg/apis/istio/v1alpha1/doc.go b/operator/pkg/apis/istio/v1alpha1/doc.go
deleted file mode 100644
index 540479cd72..0000000000
--- a/operator/pkg/apis/istio/v1alpha1/doc.go
+++ /dev/null
@@ -1,16 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-// Package v1alpha1 contains API Schema definitions for the istio v1alpha1 API group
-package v1alpha1
diff --git a/operator/pkg/apis/istio/v1alpha1/operator_crd.pb.go b/operator/pkg/apis/istio/v1alpha1/operator_crd.pb.go
deleted file mode 100644
index 0ced12a6c2..0000000000
--- a/operator/pkg/apis/istio/v1alpha1/operator_crd.pb.go
+++ /dev/null
@@ -1,107 +0,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// source: pkg/apis/istio/v1alpha1/operator_crd.proto
-
-package v1alpha1
-
-import (
-	fmt "fmt"
-	math "math"
-
-	proto "github.com/gogo/protobuf/proto"
-	v11 "k8s.io/apimachinery/pkg/apis/meta/v1"
-
-	"istio.io/api/operator/v1alpha1"
-)
-
-// Reference imports to suppress errors if they are not otherwise used.
-var _ = proto.Marshal
-var _ = fmt.Errorf
-var _ = math.Inf
-
-// This is a compile-time assertion to ensure that this generated file
-// is compatible with the proto package it is being compiled against.
-// A compilation error at this line likely means your copy of the
-// proto package needs to be updated.
-const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package
-
-// IstioOperator is a CustomResourceDefinition (CRD) for an operator.
-type IstioOperator struct {
-	Kind                 string                      `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
-	ApiVersion           string                      `protobuf:"bytes,6,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
-	Spec                 *v1alpha1.IstioOperatorSpec `protobuf:"bytes,7,opt,name=spec,proto3" json:"spec,omitempty"`
-	Status				 *v1alpha1.InstallStatus     `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
-	v11.ObjectMeta       `json:"metadata,omitempty" protobuf:"bytes,9,opt,name=metadata"`
-	v11.TypeMeta         `json:",inline"`
-	Placeholder          string   `protobuf:"bytes,111,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
-
-func (m *IstioOperator) Reset()         { *m = IstioOperator{} }
-func (m *IstioOperator) String() string { return proto.CompactTextString(m) }
-func (*IstioOperator) ProtoMessage()    {}
-func (*IstioOperator) Descriptor() ([]byte, []int) {
-	return fileDescriptor_8eb082c28e72c148, []int{0}
-}
-
-func (m *IstioOperator) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_IstioOperator.Unmarshal(m, b)
-}
-func (m *IstioOperator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_IstioOperator.Marshal(b, m, deterministic)
-}
-func (m *IstioOperator) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_IstioOperator.Merge(m, src)
-}
-func (m *IstioOperator) XXX_Size() int {
-	return xxx_messageInfo_IstioOperator.Size(m)
-}
-func (m *IstioOperator) XXX_DiscardUnknown() {
-	xxx_messageInfo_IstioOperator.DiscardUnknown(m)
-}
-
-var xxx_messageInfo_IstioOperator proto.InternalMessageInfo
-
-func (m *IstioOperator) GetKind() string {
-	if m != nil {
-		return m.Kind
-	}
-	return ""
-}
-
-func (m *IstioOperator) GetApiVersion() string {
-	if m != nil {
-		return m.ApiVersion
-	}
-	return ""
-}
-
-func (m *IstioOperator) GetPlaceholder() string {
-	if m != nil {
-		return m.Placeholder
-	}
-	return ""
-}
-
-func init() {
-	proto.RegisterType((*IstioOperator)(nil), "v1alpha1.IstioOperator")
-}
-
-func init() {
-	proto.RegisterFile("pkg/apis/istio/v1alpha1/operator_crd.proto", fileDescriptor_8eb082c28e72c148)
-}
-
-var fileDescriptor_8eb082c28e72c148 = []byte{
-	// 145 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2a, 0xc8, 0x4e, 0xd7,
-	0x4f, 0x2c, 0xc8, 0x2c, 0xd6, 0xcf, 0x2c, 0x2e, 0xc9, 0xcc, 0xd7, 0x2f, 0x33, 0x4c, 0xcc, 0x29,
-	0xc8, 0x48, 0x34, 0xd4, 0xcf, 0x2f, 0x48, 0x2d, 0x4a, 0x2c, 0xc9, 0x2f, 0x8a, 0x4f, 0x2e, 0x4a,
-	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0x49, 0x2a, 0xa5, 0x72, 0xf1, 0x7a, 0x82,
-	0x94, 0xfb, 0x43, 0x15, 0x09, 0x09, 0x71, 0xb1, 0x64, 0x67, 0xe6, 0xa5, 0x48, 0xb0, 0x2a, 0x30,
-	0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x72, 0x5c, 0x5c, 0x89, 0x05, 0x99, 0x61, 0xa9, 0x45, 0xc5,
-	0x99, 0xf9, 0x79, 0x12, 0x6c, 0x60, 0x19, 0x24, 0x11, 0x21, 0x05, 0x2e, 0xee, 0x82, 0x9c, 0xc4,
-	0xe4, 0xd4, 0x8c, 0xfc, 0x9c, 0x94, 0xd4, 0x22, 0x89, 0x7c, 0xb0, 0x02, 0x64, 0xa1, 0x24, 0x36,
-	0xb0, 0xbd, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0x9f, 0x05, 0xf0, 0xa5, 0x00, 0x00,
-	0x00,
-}
diff --git a/operator/pkg/apis/istio/v1alpha1/types.go b/operator/pkg/apis/istio/v1alpha1/types.go
new file mode 100644
index 0000000000..8907cdb4d0
--- /dev/null
+++ b/operator/pkg/apis/istio/v1alpha1/types.go
@@ -0,0 +1,72 @@
+// Copyright Istio Authors
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+// Code generated by kubetype-gen. DO NOT EDIT.
+
+package v1alpha1
+
+import (
+	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
+
+	operatorv1alpha1 "istio.io/api/operator/v1alpha1"
+)
+
+//
+// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
+
+// IstioOperatorSpec defines the desired installed state of Istio components.
+// The spec is a used to define a customization of the default profile values that are supplied with each Istio release.
+// Because the spec is a customization API, specifying an empty IstioOperatorSpec results in a default Istio
+// component values.
+//
+// ```yaml
+// apiVersion: install.istio.io/v1alpha1
+// kind: IstioOperator
+// spec:
+//   profile: default
+//   hub: gcr.io/istio-testing
+//   tag: latest
+//   revision: 1-8-0
+//   meshConfig:
+//     accessLogFile: /dev/stdout
+//     enableTracing: true
+//   components:
+//     egressGateways:
+//     - name: istio-egressgateway
+//       enabled: true
+// ```
+// +kubetype-gen
+// +kubetype-gen:groupVersion=install.istio.io/v1alpha1
+// +k8s:deepcopy-gen=true
+type IstioOperator struct {
+	v1.TypeMeta `json:",inline"`
+	// +optional
+	v1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
+
+	// Spec defines the implementation of this definition.
+	// +optional
+	Spec *operatorv1alpha1.IstioOperatorSpec `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`
+
+	Status *operatorv1alpha1.InstallStatus `json:"status,omitempty"`
+}
+
+// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
+
+// IstioOperatorSpecList is a collection of IstioOperatorSpecs.
+type IstioOperatorList struct {
+	v1.TypeMeta `json:",inline"`
+	// +optional
+	v1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
+	Items       []IstioOperator `json:"items" protobuf:"bytes,2,rep,name=items"`
+}
diff --git a/operator/pkg/apis/istio/v1alpha1/validation/validation.go b/operator/pkg/apis/istio/v1alpha1/validation/validation.go
index 91f9d3ce0d..66ba832640 100644
--- a/operator/pkg/apis/istio/v1alpha1/validation/validation.go
+++ b/operator/pkg/apis/istio/v1alpha1/validation/validation.go
@@ -222,9 +222,9 @@ func CheckServicePorts(values *valuesv1alpha1.Values, spec *v1alpha1.IstioOperat
 	if !values.GetGateways().GetIstioEgressgateway().GetRunAsRoot().GetValue() {
 		errs = util.AppendErrs(errs, validateGateways(spec.GetComponents().GetEgressGateways(), "istio-egressgateway"))
 	}
-	for _, port := range values.GetGateways().GetIstioIngressgateway().GetIngressPorts() {
+	for _, raw := range values.GetGateways().GetIstioIngressgateway().GetIngressPorts() {
+		p := raw.AsMap()
 		var tp int
-		p := valuesv1alpha1.AsMap(port)
 		if p["targetPort"] != nil {
 			t, ok := p["targetPort"].(float64)
 			if !ok {
diff --git a/operator/pkg/apis/istio/v1alpha1/validation/validation_test.go b/operator/pkg/apis/istio/v1alpha1/validation/validation_test.go
index 8e7f6c2fdc..34bcbe455d 100644
--- a/operator/pkg/apis/istio/v1alpha1/validation/validation_test.go
+++ b/operator/pkg/apis/istio/v1alpha1/validation/validation_test.go
@@ -21,7 +21,7 @@
 	"strings"
 	"testing"
 
-	"github.com/gogo/protobuf/types"
+	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 
 	v1alpha12 "istio.io/api/operator/v1alpha1"
 	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
@@ -47,10 +47,10 @@ func TestValidateConfig(t *testing.T) {
 			value: &v1alpha12.IstioOperatorSpec{
 				AddonComponents: map[string]*v1alpha12.ExternalComponentSpec{
 					"grafana": {
-						Enabled: &types.BoolValue{Value: true},
+						Enabled: &wrappers.BoolValue{Value: true},
 					},
 				},
-				Values: v1alpha1.MustNewStruct(map[string]interface{}{
+				Values: util.MustStruct(map[string]interface{}{
 					"grafana": map[string]interface{}{
 						"enabled": true,
 					},
@@ -63,7 +63,7 @@ func TestValidateConfig(t *testing.T) {
 		{
 			name: "global",
 			value: &v1alpha12.IstioOperatorSpec{
-				Values: v1alpha1.MustNewStruct(map[string]interface{}{
+				Values: util.MustStruct(map[string]interface{}{
 					"global": map[string]interface{}{
 						"localityLbSetting": map[string]interface{}{"foo": "bar"},
 					},
@@ -290,7 +290,7 @@ func TestValidate(t *testing.T) {
 			name: "With CNI defined",
 			toValidate: &v1alpha1.Values{
 				Cni: &v1alpha1.CNIConfig{
-					Enabled: &types.BoolValue{Value: true},
+					Enabled: &wrappers.BoolValue{Value: true},
 				},
 			},
 			validated: true,
diff --git a/operator/pkg/apis/istio/v1alpha1/value_types_json.go b/operator/pkg/apis/istio/v1alpha1/value_types_json.go
index fb3b3ed552..a97a0e7561 100644
--- a/operator/pkg/apis/istio/v1alpha1/value_types_json.go
+++ b/operator/pkg/apis/istio/v1alpha1/value_types_json.go
@@ -22,11 +22,13 @@
 import (
 	"encoding/json"
 
-	github_com_golang_protobuf_jsonpb "github.com/gogo/protobuf/jsonpb"
-	"github.com/gogo/protobuf/types"
+	github_com_golang_protobuf_jsonpb "github.com/golang/protobuf/jsonpb"
+	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 	"k8s.io/apimachinery/pkg/util/intstr"
 )
 
+var _ github_com_golang_protobuf_jsonpb.JSONPBUnmarshaler = &IntOrString{}
+
 // UnmarshalJSON implements the json.Unmarshaller interface.
 func (this *IntOrString) UnmarshalJSON(value []byte) error {
 	if value[0] == '"' {
@@ -36,7 +38,7 @@ func (this *IntOrString) UnmarshalJSON(value []byte) error {
 		if err != nil {
 			return err
 		}
-		this.StrVal = &types.StringValue{Value: s}
+		this.StrVal = &wrappers.StringValue{Value: s}
 		return nil
 	}
 	this.Type = int64(intstr.Int)
@@ -45,7 +47,7 @@ func (this *IntOrString) UnmarshalJSON(value []byte) error {
 	if err != nil {
 		return err
 	}
-	this.IntVal = &types.Int32Value{Value: s}
+	this.IntVal = &wrappers.Int32Value{Value: s}
 	return nil
 }
 
diff --git a/operator/pkg/apis/istio/v1alpha1/values_types.pb.go b/operator/pkg/apis/istio/v1alpha1/values_types.pb.go
index b832651410..3f0f6f5613 100644
--- a/operator/pkg/apis/istio/v1alpha1/values_types.pb.go
+++ b/operator/pkg/apis/istio/v1alpha1/values_types.pb.go
@@ -1,29 +1,42 @@
-// Code generated by protoc-gen-gogo. DO NOT EDIT.
+// Copyright Istio Authors
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+// Code generated by protoc-gen-go. DO NOT EDIT.
+// versions:
+// 	protoc-gen-go v1.27.1
+// 	protoc        (unknown)
 // source: pkg/apis/istio/v1alpha1/values_types.proto
 
 package v1alpha1
 
 import (
-	encoding_binary "encoding/binary"
-	fmt "fmt"
-	_ "github.com/gogo/protobuf/gogoproto"
-	proto "github.com/gogo/protobuf/proto"
-	types "github.com/gogo/protobuf/types"
-	io "io"
-	math "math"
-	math_bits "math/bits"
+	_ "github.com/golang/protobuf/ptypes/any"
+	duration "github.com/golang/protobuf/ptypes/duration"
+	_struct "github.com/golang/protobuf/ptypes/struct"
+	wrappers "github.com/golang/protobuf/ptypes/wrappers"
+	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
+	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
+	reflect "reflect"
+	sync "sync"
 )
 
-// Reference imports to suppress errors if they are not otherwise used.
-var _ = proto.Marshal
-var _ = fmt.Errorf
-var _ = math.Inf
-
-// This is a compile-time assertion to ensure that this generated file
-// is compatible with the proto package it is being compiled against.
-// A compilation error at this line likely means your copy of the
-// proto package needs to be updated.
-const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package
+const (
+	// Verify that this generated code is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
+	// Verify that runtime/protoimpl is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
+)
 
 // Mode for the ingress controller.
 type IngressControllerMode int32
@@ -39,26 +52,47 @@
 	IngressControllerMode_OFF IngressControllerMode = 3
 )
 
-var IngressControllerMode_name = map[int32]string{
-	0: "UNSPECIFIED",
-	1: "DEFAULT",
-	2: "STRICT",
-	3: "OFF",
-}
+// Enum value maps for IngressControllerMode.
+var (
+	IngressControllerMode_name = map[int32]string{
+		0: "UNSPECIFIED",
+		1: "DEFAULT",
+		2: "STRICT",
+		3: "OFF",
+	}
+	IngressControllerMode_value = map[string]int32{
+		"UNSPECIFIED": 0,
+		"DEFAULT":     1,
+		"STRICT":      2,
+		"OFF":         3,
+	}
+)
 
-var IngressControllerMode_value = map[string]int32{
-	"UNSPECIFIED": 0,
-	"DEFAULT":     1,
-	"STRICT":      2,
-	"OFF":         3,
+func (x IngressControllerMode) Enum() *IngressControllerMode {
+	p := new(IngressControllerMode)
+	*p = x
+	return p
 }
 
 func (x IngressControllerMode) String() string {
-	return proto.EnumName(IngressControllerMode_name, int32(x))
+	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
+}
+
+func (IngressControllerMode) Descriptor() protoreflect.EnumDescriptor {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes[0].Descriptor()
+}
+
+func (IngressControllerMode) Type() protoreflect.EnumType {
+	return &file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes[0]
+}
+
+func (x IngressControllerMode) Number() protoreflect.EnumNumber {
+	return protoreflect.EnumNumber(x)
 }
 
+// Deprecated: Use IngressControllerMode.Descriptor instead.
 func (IngressControllerMode) EnumDescriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{0}
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{0}
 }
 
 // Specifies which tracer to use.
@@ -73,30 +107,51 @@ func (IngressControllerMode) EnumDescriptor() ([]byte, []int) {
 	Tracer_none            Tracer = 5
 )
 
-var Tracer_name = map[int32]string{
-	0: "zipkin",
-	1: "lightstep",
-	2: "datadog",
-	3: "stackdriver",
-	4: "openCensusAgent",
-	5: "none",
-}
+// Enum value maps for Tracer.
+var (
+	Tracer_name = map[int32]string{
+		0: "zipkin",
+		1: "lightstep",
+		2: "datadog",
+		3: "stackdriver",
+		4: "openCensusAgent",
+		5: "none",
+	}
+	Tracer_value = map[string]int32{
+		"zipkin":          0,
+		"lightstep":       1,
+		"datadog":         2,
+		"stackdriver":     3,
+		"openCensusAgent": 4,
+		"none":            5,
+	}
+)
 
-var Tracer_value = map[string]int32{
-	"zipkin":          0,
-	"lightstep":       1,
-	"datadog":         2,
-	"stackdriver":     3,
-	"openCensusAgent": 4,
-	"none":            5,
+func (x Tracer) Enum() *Tracer {
+	p := new(Tracer)
+	*p = x
+	return p
 }
 
 func (x Tracer) String() string {
-	return proto.EnumName(Tracer_name, int32(x))
+	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
+}
+
+func (Tracer) Descriptor() protoreflect.EnumDescriptor {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes[1].Descriptor()
+}
+
+func (Tracer) Type() protoreflect.EnumType {
+	return &file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes[1]
 }
 
+func (x Tracer) Number() protoreflect.EnumNumber {
+	return protoreflect.EnumNumber(x)
+}
+
+// Deprecated: Use Tracer.Descriptor instead.
 func (Tracer) EnumDescriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{1}
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{1}
 }
 
 // Specifies the sidecar's default behavior when handling outbound traffic from the application.
@@ -109,22 +164,43 @@ func (Tracer) EnumDescriptor() ([]byte, []int) {
 	OutboundTrafficPolicyConfig_REGISTRY_ONLY OutboundTrafficPolicyConfig_Mode = 1
 )
 
-var OutboundTrafficPolicyConfig_Mode_name = map[int32]string{
-	0: "ALLOW_ANY",
-	1: "REGISTRY_ONLY",
-}
+// Enum value maps for OutboundTrafficPolicyConfig_Mode.
+var (
+	OutboundTrafficPolicyConfig_Mode_name = map[int32]string{
+		0: "ALLOW_ANY",
+		1: "REGISTRY_ONLY",
+	}
+	OutboundTrafficPolicyConfig_Mode_value = map[string]int32{
+		"ALLOW_ANY":     0,
+		"REGISTRY_ONLY": 1,
+	}
+)
 
-var OutboundTrafficPolicyConfig_Mode_value = map[string]int32{
-	"ALLOW_ANY":     0,
-	"REGISTRY_ONLY": 1,
+func (x OutboundTrafficPolicyConfig_Mode) Enum() *OutboundTrafficPolicyConfig_Mode {
+	p := new(OutboundTrafficPolicyConfig_Mode)
+	*p = x
+	return p
 }
 
 func (x OutboundTrafficPolicyConfig_Mode) String() string {
-	return proto.EnumName(OutboundTrafficPolicyConfig_Mode_name, int32(x))
+	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
+}
+
+func (OutboundTrafficPolicyConfig_Mode) Descriptor() protoreflect.EnumDescriptor {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes[2].Descriptor()
+}
+
+func (OutboundTrafficPolicyConfig_Mode) Type() protoreflect.EnumType {
+	return &file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes[2]
+}
+
+func (x OutboundTrafficPolicyConfig_Mode) Number() protoreflect.EnumNumber {
+	return protoreflect.EnumNumber(x)
 }
 
+// Deprecated: Use OutboundTrafficPolicyConfig_Mode.Descriptor instead.
 func (OutboundTrafficPolicyConfig_Mode) EnumDescriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{19, 0}
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{19, 0}
 }
 
 // Types of Access logs to export.
@@ -141,29 +217,54 @@ func (OutboundTrafficPolicyConfig_Mode) EnumDescriptor() ([]byte, []int) {
 	TelemetryV2StackDriverConfig_ERRORS_ONLY TelemetryV2StackDriverConfig_AccessLogging = 2
 )
 
-var TelemetryV2StackDriverConfig_AccessLogging_name = map[int32]string{
-	0: "NONE",
-	1: "FULL",
-	2: "ERRORS_ONLY",
-}
+// Enum value maps for TelemetryV2StackDriverConfig_AccessLogging.
+var (
+	TelemetryV2StackDriverConfig_AccessLogging_name = map[int32]string{
+		0: "NONE",
+		1: "FULL",
+		2: "ERRORS_ONLY",
+	}
+	TelemetryV2StackDriverConfig_AccessLogging_value = map[string]int32{
+		"NONE":        0,
+		"FULL":        1,
+		"ERRORS_ONLY": 2,
+	}
+)
 
-var TelemetryV2StackDriverConfig_AccessLogging_value = map[string]int32{
-	"NONE":        0,
-	"FULL":        1,
-	"ERRORS_ONLY": 2,
+func (x TelemetryV2StackDriverConfig_AccessLogging) Enum() *TelemetryV2StackDriverConfig_AccessLogging {
+	p := new(TelemetryV2StackDriverConfig_AccessLogging)
+	*p = x
+	return p
 }
 
 func (x TelemetryV2StackDriverConfig_AccessLogging) String() string {
-	return proto.EnumName(TelemetryV2StackDriverConfig_AccessLogging_name, int32(x))
+	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
+}
+
+func (TelemetryV2StackDriverConfig_AccessLogging) Descriptor() protoreflect.EnumDescriptor {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes[3].Descriptor()
+}
+
+func (TelemetryV2StackDriverConfig_AccessLogging) Type() protoreflect.EnumType {
+	return &file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes[3]
+}
+
+func (x TelemetryV2StackDriverConfig_AccessLogging) Number() protoreflect.EnumNumber {
+	return protoreflect.EnumNumber(x)
 }
 
+// Deprecated: Use TelemetryV2StackDriverConfig_AccessLogging.Descriptor instead.
 func (TelemetryV2StackDriverConfig_AccessLogging) EnumDescriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{27, 0}
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{27, 0}
 }
 
 // ArchConfig specifies the pod scheduling target architecture(amd64, ppc64le, s390x, arm64)
 // for all the Istio control plane components.
 type ArchConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Sets pod scheduling weight for amd64 arch
 	Amd64 uint32 `protobuf:"varint,1,opt,name=amd64,proto3" json:"amd64,omitempty"`
 	// Sets pod scheduling weight for ppc64le arch.
@@ -171,636 +272,634 @@ type ArchConfig struct {
 	// Sets pod scheduling weight for s390x arch.
 	S390X uint32 `protobuf:"varint,3,opt,name=s390x,proto3" json:"s390x,omitempty"`
 	// Sets pod scheduling weight for arm64 arch.
-	Arm64                uint32   `protobuf:"varint,4,opt,name=arm64,proto3" json:"arm64,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	Arm64 uint32 `protobuf:"varint,4,opt,name=arm64,proto3" json:"arm64,omitempty"`
 }
 
-func (m *ArchConfig) Reset()         { *m = ArchConfig{} }
-func (m *ArchConfig) String() string { return proto.CompactTextString(m) }
-func (*ArchConfig) ProtoMessage()    {}
-func (*ArchConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{0}
-}
-func (m *ArchConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *ArchConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_ArchConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *ArchConfig) Reset() {
+	*x = ArchConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[0]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *ArchConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ArchConfig.Merge(m, src)
-}
-func (m *ArchConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *ArchConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *ArchConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_ArchConfig.DiscardUnknown(m)
+
+func (*ArchConfig) ProtoMessage() {}
+
+func (x *ArchConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[0]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_ArchConfig proto.InternalMessageInfo
+// Deprecated: Use ArchConfig.ProtoReflect.Descriptor instead.
+func (*ArchConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{0}
+}
 
-func (m *ArchConfig) GetAmd64() uint32 {
-	if m != nil {
-		return m.Amd64
+func (x *ArchConfig) GetAmd64() uint32 {
+	if x != nil {
+		return x.Amd64
 	}
 	return 0
 }
 
-func (m *ArchConfig) GetPpc64Le() uint32 {
-	if m != nil {
-		return m.Ppc64Le
+func (x *ArchConfig) GetPpc64Le() uint32 {
+	if x != nil {
+		return x.Ppc64Le
 	}
 	return 0
 }
 
-func (m *ArchConfig) GetS390X() uint32 {
-	if m != nil {
-		return m.S390X
+func (x *ArchConfig) GetS390X() uint32 {
+	if x != nil {
+		return x.S390X
 	}
 	return 0
 }
 
-func (m *ArchConfig) GetArm64() uint32 {
-	if m != nil {
-		return m.Arm64
+func (x *ArchConfig) GetArm64() uint32 {
+	if x != nil {
+		return x.Arm64
 	}
 	return 0
 }
 
 // Configuration for CNI.
 type CNIConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether CNI is enabled.
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	Hub                  string           `protobuf:"bytes,2,opt,name=hub,proto3" json:"hub,omitempty"`
-	Tag                  *types.Value     `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
-	Image                string           `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
-	PullPolicy           string           `protobuf:"bytes,5,opt,name=pullPolicy,proto3" json:"pullPolicy,omitempty"`
-	CniBinDir            string           `protobuf:"bytes,6,opt,name=cniBinDir,proto3" json:"cniBinDir,omitempty"`
-	CniConfDir           string           `protobuf:"bytes,7,opt,name=cniConfDir,proto3" json:"cniConfDir,omitempty"`
-	CniConfFileName      string           `protobuf:"bytes,8,opt,name=cniConfFileName,proto3" json:"cniConfFileName,omitempty"`
-	ExcludeNamespaces    []string         `protobuf:"bytes,9,rep,name=excludeNamespaces,proto3" json:"excludeNamespaces,omitempty"`
-	PodAnnotations       *types.Struct    `protobuf:"bytes,10,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
-	PspClusterRole       string           `protobuf:"bytes,11,opt,name=psp_cluster_role,json=pspClusterRole,proto3" json:"psp_cluster_role,omitempty"`
-	LogLevel             string           `protobuf:"bytes,12,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
-	Repair               *CNIRepairConfig `protobuf:"bytes,13,opt,name=repair,proto3" json:"repair,omitempty"`
-	Chained              *types.BoolValue `protobuf:"bytes,14,opt,name=chained,proto3" json:"chained,omitempty"`
-	Taint                *CNITaintConfig  `protobuf:"bytes,15,opt,name=taint,proto3" json:"taint,omitempty"`
-	ResourceQuotas       *ResourceQuotas  `protobuf:"bytes,16,opt,name=resource_quotas,json=resourceQuotas,proto3" json:"resource_quotas,omitempty"`
-	Resources            *Resources       `protobuf:"bytes,17,opt,name=resources,proto3" json:"resources,omitempty"`
-	Privileged           *types.BoolValue `protobuf:"bytes,18,opt,name=privileged,proto3" json:"privileged,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
-}
-
-func (m *CNIConfig) Reset()         { *m = CNIConfig{} }
-func (m *CNIConfig) String() string { return proto.CompactTextString(m) }
-func (*CNIConfig) ProtoMessage()    {}
-func (*CNIConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{1}
-}
-func (m *CNIConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *CNIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_CNIConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
-	}
+	Enabled           *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Hub               string              `protobuf:"bytes,2,opt,name=hub,proto3" json:"hub,omitempty"`
+	Tag               *_struct.Value      `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
+	Image             string              `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
+	PullPolicy        string              `protobuf:"bytes,5,opt,name=pullPolicy,proto3" json:"pullPolicy,omitempty"`
+	CniBinDir         string              `protobuf:"bytes,6,opt,name=cniBinDir,proto3" json:"cniBinDir,omitempty"`
+	CniConfDir        string              `protobuf:"bytes,7,opt,name=cniConfDir,proto3" json:"cniConfDir,omitempty"`
+	CniConfFileName   string              `protobuf:"bytes,8,opt,name=cniConfFileName,proto3" json:"cniConfFileName,omitempty"`
+	ExcludeNamespaces []string            `protobuf:"bytes,9,rep,name=excludeNamespaces,proto3" json:"excludeNamespaces,omitempty"`
+	// Deprecated: Do not use.
+	PodAnnotations *_struct.Struct     `protobuf:"bytes,10,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"`
+	PspClusterRole string              `protobuf:"bytes,11,opt,name=psp_cluster_role,json=pspClusterRole,proto3" json:"psp_cluster_role,omitempty"`
+	LogLevel       string              `protobuf:"bytes,12,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
+	Repair         *CNIRepairConfig    `protobuf:"bytes,13,opt,name=repair,proto3" json:"repair,omitempty"`
+	Chained        *wrappers.BoolValue `protobuf:"bytes,14,opt,name=chained,proto3" json:"chained,omitempty"`
+	Taint          *CNITaintConfig     `protobuf:"bytes,15,opt,name=taint,proto3" json:"taint,omitempty"`
+	ResourceQuotas *ResourceQuotas     `protobuf:"bytes,16,opt,name=resource_quotas,json=resourceQuotas,proto3" json:"resource_quotas,omitempty"`
+	Resources      *Resources          `protobuf:"bytes,17,opt,name=resources,proto3" json:"resources,omitempty"`
+	Privileged     *wrappers.BoolValue `protobuf:"bytes,18,opt,name=privileged,proto3" json:"privileged,omitempty"`
 }
-func (m *CNIConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_CNIConfig.Merge(m, src)
+
+func (x *CNIConfig) Reset() {
+	*x = CNIConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[1]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *CNIConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *CNIConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *CNIConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_CNIConfig.DiscardUnknown(m)
+
+func (*CNIConfig) ProtoMessage() {}
+
+func (x *CNIConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[1]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_CNIConfig proto.InternalMessageInfo
+// Deprecated: Use CNIConfig.ProtoReflect.Descriptor instead.
+func (*CNIConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{1}
+}
 
-func (m *CNIConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *CNIConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *CNIConfig) GetHub() string {
-	if m != nil {
-		return m.Hub
+func (x *CNIConfig) GetHub() string {
+	if x != nil {
+		return x.Hub
 	}
 	return ""
 }
 
-func (m *CNIConfig) GetTag() *types.Value {
-	if m != nil {
-		return m.Tag
+func (x *CNIConfig) GetTag() *_struct.Value {
+	if x != nil {
+		return x.Tag
 	}
 	return nil
 }
 
-func (m *CNIConfig) GetImage() string {
-	if m != nil {
-		return m.Image
+func (x *CNIConfig) GetImage() string {
+	if x != nil {
+		return x.Image
 	}
 	return ""
 }
 
-func (m *CNIConfig) GetPullPolicy() string {
-	if m != nil {
-		return m.PullPolicy
+func (x *CNIConfig) GetPullPolicy() string {
+	if x != nil {
+		return x.PullPolicy
 	}
 	return ""
 }
 
-func (m *CNIConfig) GetCniBinDir() string {
-	if m != nil {
-		return m.CniBinDir
+func (x *CNIConfig) GetCniBinDir() string {
+	if x != nil {
+		return x.CniBinDir
 	}
 	return ""
 }
 
-func (m *CNIConfig) GetCniConfDir() string {
-	if m != nil {
-		return m.CniConfDir
+func (x *CNIConfig) GetCniConfDir() string {
+	if x != nil {
+		return x.CniConfDir
 	}
 	return ""
 }
 
-func (m *CNIConfig) GetCniConfFileName() string {
-	if m != nil {
-		return m.CniConfFileName
+func (x *CNIConfig) GetCniConfFileName() string {
+	if x != nil {
+		return x.CniConfFileName
 	}
 	return ""
 }
 
-func (m *CNIConfig) GetExcludeNamespaces() []string {
-	if m != nil {
-		return m.ExcludeNamespaces
+func (x *CNIConfig) GetExcludeNamespaces() []string {
+	if x != nil {
+		return x.ExcludeNamespaces
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *CNIConfig) GetPodAnnotations() *types.Struct {
-	if m != nil {
-		return m.PodAnnotations
+func (x *CNIConfig) GetPodAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.PodAnnotations
 	}
 	return nil
 }
 
-func (m *CNIConfig) GetPspClusterRole() string {
-	if m != nil {
-		return m.PspClusterRole
+func (x *CNIConfig) GetPspClusterRole() string {
+	if x != nil {
+		return x.PspClusterRole
 	}
 	return ""
 }
 
-func (m *CNIConfig) GetLogLevel() string {
-	if m != nil {
-		return m.LogLevel
+func (x *CNIConfig) GetLogLevel() string {
+	if x != nil {
+		return x.LogLevel
 	}
 	return ""
 }
 
-func (m *CNIConfig) GetRepair() *CNIRepairConfig {
-	if m != nil {
-		return m.Repair
+func (x *CNIConfig) GetRepair() *CNIRepairConfig {
+	if x != nil {
+		return x.Repair
 	}
 	return nil
 }
 
-func (m *CNIConfig) GetChained() *types.BoolValue {
-	if m != nil {
-		return m.Chained
+func (x *CNIConfig) GetChained() *wrappers.BoolValue {
+	if x != nil {
+		return x.Chained
 	}
 	return nil
 }
 
-func (m *CNIConfig) GetTaint() *CNITaintConfig {
-	if m != nil {
-		return m.Taint
+func (x *CNIConfig) GetTaint() *CNITaintConfig {
+	if x != nil {
+		return x.Taint
 	}
 	return nil
 }
 
-func (m *CNIConfig) GetResourceQuotas() *ResourceQuotas {
-	if m != nil {
-		return m.ResourceQuotas
+func (x *CNIConfig) GetResourceQuotas() *ResourceQuotas {
+	if x != nil {
+		return x.ResourceQuotas
 	}
 	return nil
 }
 
-func (m *CNIConfig) GetResources() *Resources {
-	if m != nil {
-		return m.Resources
+func (x *CNIConfig) GetResources() *Resources {
+	if x != nil {
+		return x.Resources
 	}
 	return nil
 }
 
-func (m *CNIConfig) GetPrivileged() *types.BoolValue {
-	if m != nil {
-		return m.Privileged
+func (x *CNIConfig) GetPrivileged() *wrappers.BoolValue {
+	if x != nil {
+		return x.Privileged
 	}
 	return nil
 }
 
 type CNITaintConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether taint behavior is enabled.
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
 }
 
-func (m *CNITaintConfig) Reset()         { *m = CNITaintConfig{} }
-func (m *CNITaintConfig) String() string { return proto.CompactTextString(m) }
-func (*CNITaintConfig) ProtoMessage()    {}
-func (*CNITaintConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{2}
-}
-func (m *CNITaintConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *CNITaintConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_CNITaintConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *CNITaintConfig) Reset() {
+	*x = CNITaintConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[2]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *CNITaintConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_CNITaintConfig.Merge(m, src)
-}
-func (m *CNITaintConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *CNITaintConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *CNITaintConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_CNITaintConfig.DiscardUnknown(m)
+
+func (*CNITaintConfig) ProtoMessage() {}
+
+func (x *CNITaintConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[2]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_CNITaintConfig proto.InternalMessageInfo
+// Deprecated: Use CNITaintConfig.ProtoReflect.Descriptor instead.
+func (*CNITaintConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{2}
+}
 
-func (m *CNITaintConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *CNITaintConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
 type CNIRepairConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether repair behavior is enabled.
-	Enabled *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	Hub     string           `protobuf:"bytes,2,opt,name=hub,proto3" json:"hub,omitempty"`
-	Tag     *types.Value     `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
-	Image   string           `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Hub     string              `protobuf:"bytes,2,opt,name=hub,proto3" json:"hub,omitempty"`
+	Tag     *_struct.Value      `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
+	Image   string              `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
 	// Controls whether various repair behaviors are enabled.
-	LabelPods            bool     `protobuf:"varint,5,opt,name=labelPods,proto3" json:"labelPods,omitempty"`
-	CreateEvents         string   `protobuf:"bytes,6,opt,name=createEvents,proto3" json:"createEvents,omitempty"` // Deprecated: Do not use.
-	DeletePods           bool     `protobuf:"varint,7,opt,name=deletePods,proto3" json:"deletePods,omitempty"`
-	BrokenPodLabelKey    string   `protobuf:"bytes,8,opt,name=brokenPodLabelKey,proto3" json:"brokenPodLabelKey,omitempty"`
-	BrokenPodLabelValue  string   `protobuf:"bytes,9,opt,name=brokenPodLabelValue,proto3" json:"brokenPodLabelValue,omitempty"`
-	InitContainerName    string   `protobuf:"bytes,10,opt,name=initContainerName,proto3" json:"initContainerName,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
-
-func (m *CNIRepairConfig) Reset()         { *m = CNIRepairConfig{} }
-func (m *CNIRepairConfig) String() string { return proto.CompactTextString(m) }
-func (*CNIRepairConfig) ProtoMessage()    {}
-func (*CNIRepairConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{3}
-}
-func (m *CNIRepairConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *CNIRepairConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_CNIRepairConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
-	}
+	LabelPods bool `protobuf:"varint,5,opt,name=labelPods,proto3" json:"labelPods,omitempty"`
+	// Deprecated: Do not use.
+	CreateEvents        string `protobuf:"bytes,6,opt,name=createEvents,proto3" json:"createEvents,omitempty"`
+	DeletePods          bool   `protobuf:"varint,7,opt,name=deletePods,proto3" json:"deletePods,omitempty"`
+	BrokenPodLabelKey   string `protobuf:"bytes,8,opt,name=brokenPodLabelKey,proto3" json:"brokenPodLabelKey,omitempty"`
+	BrokenPodLabelValue string `protobuf:"bytes,9,opt,name=brokenPodLabelValue,proto3" json:"brokenPodLabelValue,omitempty"`
+	InitContainerName   string `protobuf:"bytes,10,opt,name=initContainerName,proto3" json:"initContainerName,omitempty"`
 }
-func (m *CNIRepairConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_CNIRepairConfig.Merge(m, src)
+
+func (x *CNIRepairConfig) Reset() {
+	*x = CNIRepairConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[3]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *CNIRepairConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *CNIRepairConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *CNIRepairConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_CNIRepairConfig.DiscardUnknown(m)
+
+func (*CNIRepairConfig) ProtoMessage() {}
+
+func (x *CNIRepairConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[3]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_CNIRepairConfig proto.InternalMessageInfo
+// Deprecated: Use CNIRepairConfig.ProtoReflect.Descriptor instead.
+func (*CNIRepairConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{3}
+}
 
-func (m *CNIRepairConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *CNIRepairConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *CNIRepairConfig) GetHub() string {
-	if m != nil {
-		return m.Hub
+func (x *CNIRepairConfig) GetHub() string {
+	if x != nil {
+		return x.Hub
 	}
 	return ""
 }
 
-func (m *CNIRepairConfig) GetTag() *types.Value {
-	if m != nil {
-		return m.Tag
+func (x *CNIRepairConfig) GetTag() *_struct.Value {
+	if x != nil {
+		return x.Tag
 	}
 	return nil
 }
 
-func (m *CNIRepairConfig) GetImage() string {
-	if m != nil {
-		return m.Image
+func (x *CNIRepairConfig) GetImage() string {
+	if x != nil {
+		return x.Image
 	}
 	return ""
 }
 
-func (m *CNIRepairConfig) GetLabelPods() bool {
-	if m != nil {
-		return m.LabelPods
+func (x *CNIRepairConfig) GetLabelPods() bool {
+	if x != nil {
+		return x.LabelPods
 	}
 	return false
 }
 
 // Deprecated: Do not use.
-func (m *CNIRepairConfig) GetCreateEvents() string {
-	if m != nil {
-		return m.CreateEvents
+func (x *CNIRepairConfig) GetCreateEvents() string {
+	if x != nil {
+		return x.CreateEvents
 	}
 	return ""
 }
 
-func (m *CNIRepairConfig) GetDeletePods() bool {
-	if m != nil {
-		return m.DeletePods
+func (x *CNIRepairConfig) GetDeletePods() bool {
+	if x != nil {
+		return x.DeletePods
 	}
 	return false
 }
 
-func (m *CNIRepairConfig) GetBrokenPodLabelKey() string {
-	if m != nil {
-		return m.BrokenPodLabelKey
+func (x *CNIRepairConfig) GetBrokenPodLabelKey() string {
+	if x != nil {
+		return x.BrokenPodLabelKey
 	}
 	return ""
 }
 
-func (m *CNIRepairConfig) GetBrokenPodLabelValue() string {
-	if m != nil {
-		return m.BrokenPodLabelValue
+func (x *CNIRepairConfig) GetBrokenPodLabelValue() string {
+	if x != nil {
+		return x.BrokenPodLabelValue
 	}
 	return ""
 }
 
-func (m *CNIRepairConfig) GetInitContainerName() string {
-	if m != nil {
-		return m.InitContainerName
+func (x *CNIRepairConfig) GetInitContainerName() string {
+	if x != nil {
+		return x.InitContainerName
 	}
 	return ""
 }
 
 type ResourceQuotas struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether to create resource quotas or not for the CNI DaemonSet.
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	Pods                 int64            `protobuf:"varint,2,opt,name=pods,proto3" json:"pods,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Pods    int64               `protobuf:"varint,2,opt,name=pods,proto3" json:"pods,omitempty"`
 }
 
-func (m *ResourceQuotas) Reset()         { *m = ResourceQuotas{} }
-func (m *ResourceQuotas) String() string { return proto.CompactTextString(m) }
-func (*ResourceQuotas) ProtoMessage()    {}
-func (*ResourceQuotas) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{4}
-}
-func (m *ResourceQuotas) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *ResourceQuotas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_ResourceQuotas.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *ResourceQuotas) Reset() {
+	*x = ResourceQuotas{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[4]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *ResourceQuotas) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ResourceQuotas.Merge(m, src)
-}
-func (m *ResourceQuotas) XXX_Size() int {
-	return m.Size()
+
+func (x *ResourceQuotas) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *ResourceQuotas) XXX_DiscardUnknown() {
-	xxx_messageInfo_ResourceQuotas.DiscardUnknown(m)
+
+func (*ResourceQuotas) ProtoMessage() {}
+
+func (x *ResourceQuotas) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[4]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_ResourceQuotas proto.InternalMessageInfo
+// Deprecated: Use ResourceQuotas.ProtoReflect.Descriptor instead.
+func (*ResourceQuotas) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{4}
+}
 
-func (m *ResourceQuotas) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *ResourceQuotas) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *ResourceQuotas) GetPods() int64 {
-	if m != nil {
-		return m.Pods
+func (x *ResourceQuotas) GetPods() int64 {
+	if x != nil {
+		return x.Pods
 	}
 	return 0
 }
 
 // Configuration for CPU target utilization for HorizontalPodAutoscaler target.
 type CPUTargetUtilizationConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// K8s utilization setting for HorizontalPodAutoscaler target.
 	//
 	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
-	TargetAverageUtilization int32    `protobuf:"varint,1,opt,name=targetAverageUtilization,proto3" json:"targetAverageUtilization,omitempty"`
-	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
-	XXX_unrecognized         []byte   `json:"-"`
-	XXX_sizecache            int32    `json:"-"`
+	TargetAverageUtilization int32 `protobuf:"varint,1,opt,name=targetAverageUtilization,proto3" json:"targetAverageUtilization,omitempty"`
 }
 
-func (m *CPUTargetUtilizationConfig) Reset()         { *m = CPUTargetUtilizationConfig{} }
-func (m *CPUTargetUtilizationConfig) String() string { return proto.CompactTextString(m) }
-func (*CPUTargetUtilizationConfig) ProtoMessage()    {}
-func (*CPUTargetUtilizationConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{5}
-}
-func (m *CPUTargetUtilizationConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *CPUTargetUtilizationConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_CPUTargetUtilizationConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *CPUTargetUtilizationConfig) Reset() {
+	*x = CPUTargetUtilizationConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[5]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *CPUTargetUtilizationConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_CPUTargetUtilizationConfig.Merge(m, src)
-}
-func (m *CPUTargetUtilizationConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *CPUTargetUtilizationConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *CPUTargetUtilizationConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_CPUTargetUtilizationConfig.DiscardUnknown(m)
+
+func (*CPUTargetUtilizationConfig) ProtoMessage() {}
+
+func (x *CPUTargetUtilizationConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[5]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_CPUTargetUtilizationConfig proto.InternalMessageInfo
+// Deprecated: Use CPUTargetUtilizationConfig.ProtoReflect.Descriptor instead.
+func (*CPUTargetUtilizationConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{5}
+}
 
-func (m *CPUTargetUtilizationConfig) GetTargetAverageUtilization() int32 {
-	if m != nil {
-		return m.TargetAverageUtilization
+func (x *CPUTargetUtilizationConfig) GetTargetAverageUtilization() int32 {
+	if x != nil {
+		return x.TargetAverageUtilization
 	}
 	return 0
 }
 
 // Mirrors Resources for unmarshaling.
 type Resources struct {
-	Limits               map[string]string `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
-	Requests             map[string]string `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
-	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
-	XXX_unrecognized     []byte            `json:"-"`
-	XXX_sizecache        int32             `json:"-"`
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Limits   map[string]string `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
+	Requests map[string]string `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
 }
 
-func (m *Resources) Reset()         { *m = Resources{} }
-func (m *Resources) String() string { return proto.CompactTextString(m) }
-func (*Resources) ProtoMessage()    {}
-func (*Resources) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{6}
-}
-func (m *Resources) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *Resources) Reset() {
+	*x = Resources{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[6]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *Resources) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Resources.Merge(m, src)
-}
-func (m *Resources) XXX_Size() int {
-	return m.Size()
+
+func (x *Resources) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *Resources) XXX_DiscardUnknown() {
-	xxx_messageInfo_Resources.DiscardUnknown(m)
+
+func (*Resources) ProtoMessage() {}
+
+func (x *Resources) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[6]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_Resources proto.InternalMessageInfo
+// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
+func (*Resources) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{6}
+}
 
-func (m *Resources) GetLimits() map[string]string {
-	if m != nil {
-		return m.Limits
+func (x *Resources) GetLimits() map[string]string {
+	if x != nil {
+		return x.Limits
 	}
 	return nil
 }
 
-func (m *Resources) GetRequests() map[string]string {
-	if m != nil {
-		return m.Requests
+func (x *Resources) GetRequests() map[string]string {
+	if x != nil {
+		return x.Requests
 	}
 	return nil
 }
 
 // Mirrors ServiceAccount for unmarshaling.
 type ServiceAccount struct {
-	Annotations          *types.Struct `protobuf:"bytes,1,opt,name=annotations,proto3" json:"annotations,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
-	XXX_unrecognized     []byte        `json:"-"`
-	XXX_sizecache        int32         `json:"-"`
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Annotations *_struct.Struct `protobuf:"bytes,1,opt,name=annotations,proto3" json:"annotations,omitempty"`
 }
 
-func (m *ServiceAccount) Reset()         { *m = ServiceAccount{} }
-func (m *ServiceAccount) String() string { return proto.CompactTextString(m) }
-func (*ServiceAccount) ProtoMessage()    {}
-func (*ServiceAccount) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{7}
-}
-func (m *ServiceAccount) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *ServiceAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_ServiceAccount.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *ServiceAccount) Reset() {
+	*x = ServiceAccount{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[7]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *ServiceAccount) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ServiceAccount.Merge(m, src)
-}
-func (m *ServiceAccount) XXX_Size() int {
-	return m.Size()
+
+func (x *ServiceAccount) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *ServiceAccount) XXX_DiscardUnknown() {
-	xxx_messageInfo_ServiceAccount.DiscardUnknown(m)
+
+func (*ServiceAccount) ProtoMessage() {}
+
+func (x *ServiceAccount) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[7]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_ServiceAccount proto.InternalMessageInfo
+// Deprecated: Use ServiceAccount.ProtoReflect.Descriptor instead.
+func (*ServiceAccount) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{7}
+}
 
-func (m *ServiceAccount) GetAnnotations() *types.Struct {
-	if m != nil {
-		return m.Annotations
+func (x *ServiceAccount) GetAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.Annotations
 	}
 	return nil
 }
@@ -809,108 +908,112 @@ func (m *ServiceAccount) GetAnnotations() *types.Struct {
 //
 // See https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
 type DefaultPodDisruptionBudgetConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether a PodDisruptionBudget with a default minAvailable value of 1 is created for each deployment.
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
 }
 
-func (m *DefaultPodDisruptionBudgetConfig) Reset()         { *m = DefaultPodDisruptionBudgetConfig{} }
-func (m *DefaultPodDisruptionBudgetConfig) String() string { return proto.CompactTextString(m) }
-func (*DefaultPodDisruptionBudgetConfig) ProtoMessage()    {}
-func (*DefaultPodDisruptionBudgetConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{8}
-}
-func (m *DefaultPodDisruptionBudgetConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *DefaultPodDisruptionBudgetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *DefaultPodDisruptionBudgetConfig) Reset() {
+	*x = DefaultPodDisruptionBudgetConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[8]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *DefaultPodDisruptionBudgetConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Merge(m, src)
-}
-func (m *DefaultPodDisruptionBudgetConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *DefaultPodDisruptionBudgetConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *DefaultPodDisruptionBudgetConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_DefaultPodDisruptionBudgetConfig.DiscardUnknown(m)
+
+func (*DefaultPodDisruptionBudgetConfig) ProtoMessage() {}
+
+func (x *DefaultPodDisruptionBudgetConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[8]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_DefaultPodDisruptionBudgetConfig proto.InternalMessageInfo
+// Deprecated: Use DefaultPodDisruptionBudgetConfig.ProtoReflect.Descriptor instead.
+func (*DefaultPodDisruptionBudgetConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{8}
+}
 
-func (m *DefaultPodDisruptionBudgetConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *DefaultPodDisruptionBudgetConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
 // DefaultResourcesConfig specifies the default k8s resources settings for all Istio control plane components.
 type DefaultResourcesConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// k8s resources settings.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
-	Requests             *ResourcesRequestsConfig `protobuf:"bytes,1,opt,name=requests,proto3" json:"requests,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
-	XXX_unrecognized     []byte                   `json:"-"`
-	XXX_sizecache        int32                    `json:"-"`
+	Requests *ResourcesRequestsConfig `protobuf:"bytes,1,opt,name=requests,proto3" json:"requests,omitempty"`
 }
 
-func (m *DefaultResourcesConfig) Reset()         { *m = DefaultResourcesConfig{} }
-func (m *DefaultResourcesConfig) String() string { return proto.CompactTextString(m) }
-func (*DefaultResourcesConfig) ProtoMessage()    {}
-func (*DefaultResourcesConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{9}
-}
-func (m *DefaultResourcesConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *DefaultResourcesConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_DefaultResourcesConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *DefaultResourcesConfig) Reset() {
+	*x = DefaultResourcesConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[9]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *DefaultResourcesConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_DefaultResourcesConfig.Merge(m, src)
-}
-func (m *DefaultResourcesConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *DefaultResourcesConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *DefaultResourcesConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_DefaultResourcesConfig.DiscardUnknown(m)
+
+func (*DefaultResourcesConfig) ProtoMessage() {}
+
+func (x *DefaultResourcesConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[9]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_DefaultResourcesConfig proto.InternalMessageInfo
+// Deprecated: Use DefaultResourcesConfig.ProtoReflect.Descriptor instead.
+func (*DefaultResourcesConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{9}
+}
 
-func (m *DefaultResourcesConfig) GetRequests() *ResourcesRequestsConfig {
-	if m != nil {
-		return m.Requests
+func (x *DefaultResourcesConfig) GetRequests() *ResourcesRequestsConfig {
+	if x != nil {
+		return x.Requests
 	}
 	return nil
 }
 
 // Configuration for an egress gateway.
 type EgressGatewayConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether auto scaling with a HorizontalPodAutoscaler is enabled.
-	AutoscaleEnabled *types.BoolValue `protobuf:"bytes,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
+	AutoscaleEnabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
 	// maxReplicas setting for HorizontalPodAutoscaler.
 	AutoscaleMax uint32 `protobuf:"varint,2,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
 	// minReplicas setting for HorizontalPodAutoscaler.
@@ -918,21 +1021,27 @@ type EgressGatewayConfig struct {
 	// K8s utilization setting for HorizontalPodAutoscaler target.
 	//
 	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
-	Cpu *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	Cpu *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
 	// Controls whether an egress gateway is enabled.
-	Enabled *types.BoolValue `protobuf:"bytes,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
 	// Environment variables passed to the proxy container.
-	Env    *types.Struct     `protobuf:"bytes,8,opt,name=env,proto3" json:"env,omitempty"`
+	Env    *_struct.Struct   `protobuf:"bytes,8,opt,name=env,proto3" json:"env,omitempty"`
 	Labels map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
 	Name   string            `protobuf:"bytes,25,opt,name=name,proto3" json:"name,omitempty"`
 	// K8s node selector.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
-	NodeSelector *types.Struct `protobuf:"bytes,10,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	NodeSelector *_struct.Struct `protobuf:"bytes,10,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"`
 	// K8s annotations for pods.
 	//
 	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
-	PodAnnotations *types.Struct `protobuf:"bytes,11,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	PodAnnotations *_struct.Struct `protobuf:"bytes,11,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"`
 	// Pod anti-affinity label selector.
 	//
 	// Specify the pod anti-affinity that allows you to constrain which nodes
@@ -955,334 +1064,345 @@ type EgressGatewayConfig struct {
 	//  This pod anti-affinity rule says that the pod requires not to be scheduled
 	//  onto a node if that node is already running a pod with label having key
 	//  “security” and value “S1”.
-	PodAntiAffinityLabelSelector []*types.Struct `protobuf:"bytes,12,rep,name=podAntiAffinityLabelSelector,proto3" json:"podAntiAffinityLabelSelector,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	PodAntiAffinityLabelSelector []*_struct.Struct `protobuf:"bytes,12,rep,name=podAntiAffinityLabelSelector,proto3" json:"podAntiAffinityLabelSelector,omitempty"`
 	// See PodAntiAffinityLabelSelector.
-	PodAntiAffinityTermLabelSelector []*types.Struct `protobuf:"bytes,13,rep,name=podAntiAffinityTermLabelSelector,proto3" json:"podAntiAffinityTermLabelSelector,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	PodAntiAffinityTermLabelSelector []*_struct.Struct `protobuf:"bytes,13,rep,name=podAntiAffinityTermLabelSelector,proto3" json:"podAntiAffinityTermLabelSelector,omitempty"`
 	// Ports Configuration for the egress gateway service.
 	Ports []*PortsConfig `protobuf:"bytes,14,rep,name=ports,proto3" json:"ports,omitempty"`
 	// K8s resources settings.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
-	Resources *Resources `protobuf:"bytes,15,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	Resources *Resources `protobuf:"bytes,15,opt,name=resources,proto3" json:"resources,omitempty"`
 	// Config for secret volume mounts.
 	SecretVolumes []*SecretVolume `protobuf:"bytes,16,rep,name=secretVolumes,proto3" json:"secretVolumes,omitempty"`
 	// Annotations to add to the egress gateway service.
-	ServiceAnnotations *types.Struct `protobuf:"bytes,17,opt,name=serviceAnnotations,proto3" json:"serviceAnnotations,omitempty"`
+	ServiceAnnotations *_struct.Struct `protobuf:"bytes,17,opt,name=serviceAnnotations,proto3" json:"serviceAnnotations,omitempty"`
 	// Service type.
 	//
 	// See https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
 	Type string `protobuf:"bytes,18,opt,name=type,proto3" json:"type,omitempty"`
 	// Enables cross-cluster access using SNI matching.
-	Zvpn        *ZeroVPNConfig  `protobuf:"bytes,19,opt,name=zvpn,proto3" json:"zvpn,omitempty"`
-	Tolerations []*types.Struct `protobuf:"bytes,20,rep,name=tolerations,proto3" json:"tolerations,omitempty"` // Deprecated: Do not use.
+	Zvpn *ZeroVPNConfig `protobuf:"bytes,19,opt,name=zvpn,proto3" json:"zvpn,omitempty"`
+	// Deprecated: Do not use.
+	Tolerations []*_struct.Struct `protobuf:"bytes,20,rep,name=tolerations,proto3" json:"tolerations,omitempty"`
 	// K8s rolling update strategy
-	RollingMaxSurge *IntOrString `protobuf:"bytes,21,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	RollingMaxSurge *IntOrString `protobuf:"bytes,21,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"`
 	// K8s rolling update strategy
-	RollingMaxUnavailable *IntOrString     `protobuf:"bytes,22,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"` // Deprecated: Do not use.
-	ConfigVolumes         []*types.Struct  `protobuf:"bytes,23,rep,name=configVolumes,proto3" json:"configVolumes,omitempty"`
-	AdditionalContainers  []*types.Struct  `protobuf:"bytes,24,rep,name=additionalContainers,proto3" json:"additionalContainers,omitempty"`
-	RunAsRoot             *types.BoolValue `protobuf:"bytes,26,opt,name=runAsRoot,proto3" json:"runAsRoot,omitempty"`
+	//
+	// Deprecated: Do not use.
+	RollingMaxUnavailable *IntOrString        `protobuf:"bytes,22,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"`
+	ConfigVolumes         []*_struct.Struct   `protobuf:"bytes,23,rep,name=configVolumes,proto3" json:"configVolumes,omitempty"`
+	AdditionalContainers  []*_struct.Struct   `protobuf:"bytes,24,rep,name=additionalContainers,proto3" json:"additionalContainers,omitempty"`
+	RunAsRoot             *wrappers.BoolValue `protobuf:"bytes,26,opt,name=runAsRoot,proto3" json:"runAsRoot,omitempty"`
 	// The injection template to use for the gateway. If not set, no injection will be performed.
-	InjectionTemplate    string          `protobuf:"bytes,27,opt,name=injectionTemplate,proto3" json:"injectionTemplate,omitempty"`
-	ServiceAccount       *ServiceAccount `protobuf:"bytes,28,opt,name=serviceAccount,proto3" json:"serviceAccount,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
-	XXX_unrecognized     []byte          `json:"-"`
-	XXX_sizecache        int32           `json:"-"`
+	InjectionTemplate string          `protobuf:"bytes,27,opt,name=injectionTemplate,proto3" json:"injectionTemplate,omitempty"`
+	ServiceAccount    *ServiceAccount `protobuf:"bytes,28,opt,name=serviceAccount,proto3" json:"serviceAccount,omitempty"`
 }
 
-func (m *EgressGatewayConfig) Reset()         { *m = EgressGatewayConfig{} }
-func (m *EgressGatewayConfig) String() string { return proto.CompactTextString(m) }
-func (*EgressGatewayConfig) ProtoMessage()    {}
-func (*EgressGatewayConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{10}
-}
-func (m *EgressGatewayConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *EgressGatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_EgressGatewayConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *EgressGatewayConfig) Reset() {
+	*x = EgressGatewayConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[10]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *EgressGatewayConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_EgressGatewayConfig.Merge(m, src)
-}
-func (m *EgressGatewayConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *EgressGatewayConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *EgressGatewayConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_EgressGatewayConfig.DiscardUnknown(m)
+
+func (*EgressGatewayConfig) ProtoMessage() {}
+
+func (x *EgressGatewayConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[10]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_EgressGatewayConfig proto.InternalMessageInfo
+// Deprecated: Use EgressGatewayConfig.ProtoReflect.Descriptor instead.
+func (*EgressGatewayConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{10}
+}
 
-func (m *EgressGatewayConfig) GetAutoscaleEnabled() *types.BoolValue {
-	if m != nil {
-		return m.AutoscaleEnabled
+func (x *EgressGatewayConfig) GetAutoscaleEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.AutoscaleEnabled
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetAutoscaleMax() uint32 {
-	if m != nil {
-		return m.AutoscaleMax
+func (x *EgressGatewayConfig) GetAutoscaleMax() uint32 {
+	if x != nil {
+		return x.AutoscaleMax
 	}
 	return 0
 }
 
-func (m *EgressGatewayConfig) GetAutoscaleMin() uint32 {
-	if m != nil {
-		return m.AutoscaleMin
+func (x *EgressGatewayConfig) GetAutoscaleMin() uint32 {
+	if x != nil {
+		return x.AutoscaleMin
 	}
 	return 0
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
-	if m != nil {
-		return m.Cpu
+func (x *EgressGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
+	if x != nil {
+		return x.Cpu
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *EgressGatewayConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetEnv() *types.Struct {
-	if m != nil {
-		return m.Env
+func (x *EgressGatewayConfig) GetEnv() *_struct.Struct {
+	if x != nil {
+		return x.Env
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetLabels() map[string]string {
-	if m != nil {
-		return m.Labels
+func (x *EgressGatewayConfig) GetLabels() map[string]string {
+	if x != nil {
+		return x.Labels
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetName() string {
-	if m != nil {
-		return m.Name
+func (x *EgressGatewayConfig) GetName() string {
+	if x != nil {
+		return x.Name
 	}
 	return ""
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetNodeSelector() *types.Struct {
-	if m != nil {
-		return m.NodeSelector
+func (x *EgressGatewayConfig) GetNodeSelector() *_struct.Struct {
+	if x != nil {
+		return x.NodeSelector
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetPodAnnotations() *types.Struct {
-	if m != nil {
-		return m.PodAnnotations
+func (x *EgressGatewayConfig) GetPodAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.PodAnnotations
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetPodAntiAffinityLabelSelector() []*types.Struct {
-	if m != nil {
-		return m.PodAntiAffinityLabelSelector
+func (x *EgressGatewayConfig) GetPodAntiAffinityLabelSelector() []*_struct.Struct {
+	if x != nil {
+		return x.PodAntiAffinityLabelSelector
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetPodAntiAffinityTermLabelSelector() []*types.Struct {
-	if m != nil {
-		return m.PodAntiAffinityTermLabelSelector
+func (x *EgressGatewayConfig) GetPodAntiAffinityTermLabelSelector() []*_struct.Struct {
+	if x != nil {
+		return x.PodAntiAffinityTermLabelSelector
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetPorts() []*PortsConfig {
-	if m != nil {
-		return m.Ports
+func (x *EgressGatewayConfig) GetPorts() []*PortsConfig {
+	if x != nil {
+		return x.Ports
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetResources() *Resources {
-	if m != nil {
-		return m.Resources
+func (x *EgressGatewayConfig) GetResources() *Resources {
+	if x != nil {
+		return x.Resources
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetSecretVolumes() []*SecretVolume {
-	if m != nil {
-		return m.SecretVolumes
+func (x *EgressGatewayConfig) GetSecretVolumes() []*SecretVolume {
+	if x != nil {
+		return x.SecretVolumes
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetServiceAnnotations() *types.Struct {
-	if m != nil {
-		return m.ServiceAnnotations
+func (x *EgressGatewayConfig) GetServiceAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.ServiceAnnotations
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetType() string {
-	if m != nil {
-		return m.Type
+func (x *EgressGatewayConfig) GetType() string {
+	if x != nil {
+		return x.Type
 	}
 	return ""
 }
 
-func (m *EgressGatewayConfig) GetZvpn() *ZeroVPNConfig {
-	if m != nil {
-		return m.Zvpn
+func (x *EgressGatewayConfig) GetZvpn() *ZeroVPNConfig {
+	if x != nil {
+		return x.Zvpn
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetTolerations() []*types.Struct {
-	if m != nil {
-		return m.Tolerations
+func (x *EgressGatewayConfig) GetTolerations() []*_struct.Struct {
+	if x != nil {
+		return x.Tolerations
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetRollingMaxSurge() *IntOrString {
-	if m != nil {
-		return m.RollingMaxSurge
+func (x *EgressGatewayConfig) GetRollingMaxSurge() *IntOrString {
+	if x != nil {
+		return x.RollingMaxSurge
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *EgressGatewayConfig) GetRollingMaxUnavailable() *IntOrString {
-	if m != nil {
-		return m.RollingMaxUnavailable
+func (x *EgressGatewayConfig) GetRollingMaxUnavailable() *IntOrString {
+	if x != nil {
+		return x.RollingMaxUnavailable
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetConfigVolumes() []*types.Struct {
-	if m != nil {
-		return m.ConfigVolumes
+func (x *EgressGatewayConfig) GetConfigVolumes() []*_struct.Struct {
+	if x != nil {
+		return x.ConfigVolumes
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetAdditionalContainers() []*types.Struct {
-	if m != nil {
-		return m.AdditionalContainers
+func (x *EgressGatewayConfig) GetAdditionalContainers() []*_struct.Struct {
+	if x != nil {
+		return x.AdditionalContainers
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetRunAsRoot() *types.BoolValue {
-	if m != nil {
-		return m.RunAsRoot
+func (x *EgressGatewayConfig) GetRunAsRoot() *wrappers.BoolValue {
+	if x != nil {
+		return x.RunAsRoot
 	}
 	return nil
 }
 
-func (m *EgressGatewayConfig) GetInjectionTemplate() string {
-	if m != nil {
-		return m.InjectionTemplate
+func (x *EgressGatewayConfig) GetInjectionTemplate() string {
+	if x != nil {
+		return x.InjectionTemplate
 	}
 	return ""
 }
 
-func (m *EgressGatewayConfig) GetServiceAccount() *ServiceAccount {
-	if m != nil {
-		return m.ServiceAccount
+func (x *EgressGatewayConfig) GetServiceAccount() *ServiceAccount {
+	if x != nil {
+		return x.ServiceAccount
 	}
 	return nil
 }
 
 // Configuration for gateways.
 type GatewaysConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Configuration for an egress gateway.
 	IstioEgressgateway *EgressGatewayConfig `protobuf:"bytes,1,opt,name=istio_egressgateway,json=istio-egressgateway,proto3" json:"istio_egressgateway,omitempty"`
 	// Controls whether any gateways are enabled.
-	Enabled *types.BoolValue `protobuf:"bytes,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
 	// Configuration for an ingress gateway.
-	IstioIngressgateway  *IngressGatewayConfig `protobuf:"bytes,4,opt,name=istio_ingressgateway,json=istio-ingressgateway,proto3" json:"istio_ingressgateway,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
-	XXX_unrecognized     []byte                `json:"-"`
-	XXX_sizecache        int32                 `json:"-"`
+	IstioIngressgateway *IngressGatewayConfig `protobuf:"bytes,4,opt,name=istio_ingressgateway,json=istio-ingressgateway,proto3" json:"istio_ingressgateway,omitempty"`
 }
 
-func (m *GatewaysConfig) Reset()         { *m = GatewaysConfig{} }
-func (m *GatewaysConfig) String() string { return proto.CompactTextString(m) }
-func (*GatewaysConfig) ProtoMessage()    {}
-func (*GatewaysConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{11}
-}
-func (m *GatewaysConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *GatewaysConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_GatewaysConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *GatewaysConfig) Reset() {
+	*x = GatewaysConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[11]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *GatewaysConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_GatewaysConfig.Merge(m, src)
-}
-func (m *GatewaysConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *GatewaysConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *GatewaysConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_GatewaysConfig.DiscardUnknown(m)
+
+func (*GatewaysConfig) ProtoMessage() {}
+
+func (x *GatewaysConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[11]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_GatewaysConfig proto.InternalMessageInfo
+// Deprecated: Use GatewaysConfig.ProtoReflect.Descriptor instead.
+func (*GatewaysConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{11}
+}
 
-func (m *GatewaysConfig) GetIstioEgressgateway() *EgressGatewayConfig {
-	if m != nil {
-		return m.IstioEgressgateway
+func (x *GatewaysConfig) GetIstioEgressgateway() *EgressGatewayConfig {
+	if x != nil {
+		return x.IstioEgressgateway
 	}
 	return nil
 }
 
-func (m *GatewaysConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *GatewaysConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *GatewaysConfig) GetIstioIngressgateway() *IngressGatewayConfig {
-	if m != nil {
-		return m.IstioIngressgateway
+func (x *GatewaysConfig) GetIstioIngressgateway() *IngressGatewayConfig {
+	if x != nil {
+		return x.IstioIngressgateway
 	}
 	return nil
 }
 
 // Global Configuration for Istio components.
 type GlobalConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Specifies pod scheduling arch(amd64, ppc64le, s390x, arm64) and weight as follows:
 	//   0 - Never scheduled
 	//   1 - Least preferred
@@ -1290,33 +1410,42 @@ type GlobalConfig struct {
 	//   3 - Most preferred
 	//
 	// Deprecated: replaced by the affinity k8s settings which allows architecture nodeAffinity configuration of this behavior.
-	Arch                *ArchConfig `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	Arch                *ArchConfig `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch,omitempty"`
 	ConfigRootNamespace string      `protobuf:"bytes,50,opt,name=configRootNamespace,proto3" json:"configRootNamespace,omitempty"`
 	// Controls whether the server-side validation is enabled.
-	ConfigValidation                *types.BoolValue `protobuf:"bytes,3,opt,name=configValidation,proto3" json:"configValidation,omitempty"`
-	DefaultConfigVisibilitySettings []string         `protobuf:"bytes,52,rep,name=defaultConfigVisibilitySettings,proto3" json:"defaultConfigVisibilitySettings,omitempty"`
+	ConfigValidation                *wrappers.BoolValue `protobuf:"bytes,3,opt,name=configValidation,proto3" json:"configValidation,omitempty"`
+	DefaultConfigVisibilitySettings []string            `protobuf:"bytes,52,rep,name=defaultConfigVisibilitySettings,proto3" json:"defaultConfigVisibilitySettings,omitempty"`
 	// Default k8s node selector for all the Istio control plane components
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
-	DefaultNodeSelector *types.Struct `protobuf:"bytes,6,opt,name=defaultNodeSelector,proto3" json:"defaultNodeSelector,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	DefaultNodeSelector *_struct.Struct `protobuf:"bytes,6,opt,name=defaultNodeSelector,proto3" json:"defaultNodeSelector,omitempty"`
 	// Specifies the default pod disruption budget configuration.
-	DefaultPodDisruptionBudget *DefaultPodDisruptionBudgetConfig `protobuf:"bytes,7,opt,name=defaultPodDisruptionBudget,proto3" json:"defaultPodDisruptionBudget,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	DefaultPodDisruptionBudget *DefaultPodDisruptionBudgetConfig `protobuf:"bytes,7,opt,name=defaultPodDisruptionBudget,proto3" json:"defaultPodDisruptionBudget,omitempty"`
 	// Default k8s resources settings for all Istio control plane components.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
-	DefaultResources   *DefaultResourcesConfig `protobuf:"bytes,9,opt,name=defaultResources,proto3" json:"defaultResources,omitempty"`      // Deprecated: Do not use.
-	DefaultTolerations []*types.Struct         `protobuf:"bytes,55,rep,name=defaultTolerations,proto3" json:"defaultTolerations,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	DefaultResources *DefaultResourcesConfig `protobuf:"bytes,9,opt,name=defaultResources,proto3" json:"defaultResources,omitempty"`
+	// Deprecated: Do not use.
+	DefaultTolerations []*_struct.Struct `protobuf:"bytes,55,rep,name=defaultTolerations,proto3" json:"defaultTolerations,omitempty"`
 	// Specifies the docker hub for Istio images.
 	Hub string `protobuf:"bytes,12,opt,name=hub,proto3" json:"hub,omitempty"`
 	// Specifies the image pull policy for the Istio images. one of Always, Never, IfNotPresent.
 	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
 	//
 	// More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
-	ImagePullPolicy  string   `protobuf:"bytes,13,opt,name=imagePullPolicy,proto3" json:"imagePullPolicy,omitempty"`
+	ImagePullPolicy  string   `protobuf:"bytes,13,opt,name=imagePullPolicy,proto3" json:"imagePullPolicy,omitempty"` // ImagePullPolicy             v1.PullPolicy                 `json:"imagePullPolicy,omitempty"`
 	ImagePullSecrets []string `protobuf:"bytes,37,rep,name=imagePullSecrets,proto3" json:"imagePullSecrets,omitempty"`
 	// Specifies the default namespace for the Istio control plane components.
-	IstioNamespace string           `protobuf:"bytes,14,opt,name=istioNamespace,proto3" json:"istioNamespace,omitempty"`
-	LogAsJson      *types.BoolValue `protobuf:"bytes,36,opt,name=logAsJson,proto3" json:"logAsJson,omitempty"`
+	IstioNamespace string              `protobuf:"bytes,14,opt,name=istioNamespace,proto3" json:"istioNamespace,omitempty"`
+	LogAsJson      *wrappers.BoolValue `protobuf:"bytes,36,opt,name=logAsJson,proto3" json:"logAsJson,omitempty"`
 	// Specifies the global logging level settings for the Istio control plane components.
 	Logging *GlobalLoggingConfig `protobuf:"bytes,17,opt,name=logging,proto3" json:"logging,omitempty"`
 	MeshID  string               `protobuf:"bytes,53,opt,name=meshID,proto3" json:"meshID,omitempty"`
@@ -1347,7 +1476,7 @@ type GlobalConfig struct {
 	//     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local
 	//       port: 443
 	//
-	MeshNetworks *types.Struct `protobuf:"bytes,19,opt,name=meshNetworks,proto3" json:"meshNetworks,omitempty"`
+	MeshNetworks *_struct.Struct `protobuf:"bytes,19,opt,name=meshNetworks,proto3" json:"meshNetworks,omitempty"`
 	// Specifies the Configuration for Istio mesh across multiple clusters through Istio gateways.
 	MultiCluster *MultiClusterConfig `protobuf:"bytes,22,opt,name=multiCluster,proto3" json:"multiCluster,omitempty"`
 	Network      string              `protobuf:"bytes,39,opt,name=network,proto3" json:"network,omitempty"`
@@ -1356,28 +1485,30 @@ type GlobalConfig struct {
 	// see https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config
 	// This does not apply to gateway pods as they typically need a different
 	// set of DNS settings than the normal application pods (e.g. in multicluster scenarios).
-	PodDNSSearchNamespaces       []string         `protobuf:"bytes,43,rep,name=podDNSSearchNamespaces,proto3" json:"podDNSSearchNamespaces,omitempty"`
-	OmitSidecarInjectorConfigMap *types.BoolValue `protobuf:"bytes,38,opt,name=omitSidecarInjectorConfigMap,proto3" json:"omitSidecarInjectorConfigMap,omitempty"`
+	PodDNSSearchNamespaces       []string            `protobuf:"bytes,43,rep,name=podDNSSearchNamespaces,proto3" json:"podDNSSearchNamespaces,omitempty"`
+	OmitSidecarInjectorConfigMap *wrappers.BoolValue `protobuf:"bytes,38,opt,name=omitSidecarInjectorConfigMap,proto3" json:"omitSidecarInjectorConfigMap,omitempty"`
 	// Controls whether to restrict the applications namespace the controller manages;
 	// If set it to false, the controller watches all namespaces.
-	OneNamespace           *types.BoolValue `protobuf:"bytes,23,opt,name=oneNamespace,proto3" json:"oneNamespace,omitempty"`
-	OperatorManageWebhooks *types.BoolValue `protobuf:"bytes,41,opt,name=operatorManageWebhooks,proto3" json:"operatorManageWebhooks,omitempty"`
+	OneNamespace           *wrappers.BoolValue `protobuf:"bytes,23,opt,name=oneNamespace,proto3" json:"oneNamespace,omitempty"`
+	OperatorManageWebhooks *wrappers.BoolValue `protobuf:"bytes,41,opt,name=operatorManageWebhooks,proto3" json:"operatorManageWebhooks,omitempty"`
 	// Specifies the k8s priorityClassName for the istio control plane components.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
-	PriorityClassName string `protobuf:"bytes,27,opt,name=priorityClassName,proto3" json:"priorityClassName,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	PriorityClassName string `protobuf:"bytes,27,opt,name=priorityClassName,proto3" json:"priorityClassName,omitempty"`
 	// Specifies how proxies are configured within Istio.
 	Proxy *ProxyConfig `protobuf:"bytes,28,opt,name=proxy,proto3" json:"proxy,omitempty"`
 	// Specifies the Configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
-	ProxyInit *ProxyInitConfig `protobuf:"bytes,29,opt,name=proxyInit,json=proxy_init,proto3" json:"proxy_init,omitempty"`
+	ProxyInit *ProxyInitConfig `protobuf:"bytes,29,opt,name=proxy_init,proto3" json:"proxy_init,omitempty"`
 	// Specifies the Configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
 	Sds *SDSConfig `protobuf:"bytes,30,opt,name=sds,proto3" json:"sds,omitempty"`
 	// Specifies the tag for the Istio docker images.
-	Tag *types.Value `protobuf:"bytes,31,opt,name=tag,proto3" json:"tag,omitempty"`
+	Tag *_struct.Value `protobuf:"bytes,31,opt,name=tag,proto3" json:"tag,omitempty"`
 	// Specifies the Configuration for each of the supported tracers.
 	Tracer *TracerConfig `protobuf:"bytes,33,opt,name=tracer,proto3" json:"tracer,omitempty"`
 	// Controls whether to use of Mesh Configuration Protocol to distribute configuration.
-	UseMCP *types.BoolValue `protobuf:"bytes,35,opt,name=useMCP,proto3" json:"useMCP,omitempty"`
+	UseMCP *wrappers.BoolValue `protobuf:"bytes,35,opt,name=useMCP,proto3" json:"useMCP,omitempty"`
 	// Specifies the Istio control plane’s pilot Pod IP address or remote cluster DNS resolvable hostname.
 	RemotePilotAddress string `protobuf:"bytes,48,opt,name=remotePilotAddress,proto3" json:"remotePilotAddress,omitempty"`
 	// Specifies the configution of istiod
@@ -1393,339 +1524,335 @@ type GlobalConfig struct {
 	// Configures the revision this control plane is a part of
 	Revision string `protobuf:"bytes,59,opt,name=revision,proto3" json:"revision,omitempty"`
 	// Controls whether the in-cluster MTLS key and certs are loaded from the secret volume mounts.
-	MountMtlsCerts *types.BoolValue `protobuf:"bytes,60,opt,name=mountMtlsCerts,proto3" json:"mountMtlsCerts,omitempty"`
+	MountMtlsCerts *wrappers.BoolValue `protobuf:"bytes,60,opt,name=mountMtlsCerts,proto3" json:"mountMtlsCerts,omitempty"`
 	// The address of the CA for CSR.
 	CaAddress string `protobuf:"bytes,61,opt,name=caAddress,proto3" json:"caAddress,omitempty"`
 	// Controls whether one external istiod is enabled.
-	ExternalIstiod *types.BoolValue `protobuf:"bytes,62,opt,name=externalIstiod,proto3" json:"externalIstiod,omitempty"`
+	ExternalIstiod *wrappers.BoolValue `protobuf:"bytes,62,opt,name=externalIstiod,proto3" json:"externalIstiod,omitempty"`
 	// Controls whether a remote cluster is the config cluster for an external istiod
-	ConfigCluster *types.BoolValue `protobuf:"bytes,64,opt,name=configCluster,proto3" json:"configCluster,omitempty"`
+	ConfigCluster *wrappers.BoolValue `protobuf:"bytes,64,opt,name=configCluster,proto3" json:"configCluster,omitempty"`
 	// The name of the CA for workloads.
 	// For example, when caName=GkeWorkloadCertificate, GKE workload certificates
 	// will be used as the certificates for workloads.
 	// The default value is "" and when caName="", the CA will be configured by other
 	// mechanisms (e.g., environmental variable CA_PROVIDER).
-	CaName               string   `protobuf:"bytes,65,opt,name=caName,proto3" json:"caName,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	CaName string `protobuf:"bytes,65,opt,name=caName,proto3" json:"caName,omitempty"`
 }
 
-func (m *GlobalConfig) Reset()         { *m = GlobalConfig{} }
-func (m *GlobalConfig) String() string { return proto.CompactTextString(m) }
-func (*GlobalConfig) ProtoMessage()    {}
-func (*GlobalConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{12}
-}
-func (m *GlobalConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *GlobalConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_GlobalConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *GlobalConfig) Reset() {
+	*x = GlobalConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[12]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *GlobalConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_GlobalConfig.Merge(m, src)
-}
-func (m *GlobalConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *GlobalConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *GlobalConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_GlobalConfig.DiscardUnknown(m)
+
+func (*GlobalConfig) ProtoMessage() {}
+
+func (x *GlobalConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[12]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_GlobalConfig proto.InternalMessageInfo
+// Deprecated: Use GlobalConfig.ProtoReflect.Descriptor instead.
+func (*GlobalConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{12}
+}
 
 // Deprecated: Do not use.
-func (m *GlobalConfig) GetArch() *ArchConfig {
-	if m != nil {
-		return m.Arch
+func (x *GlobalConfig) GetArch() *ArchConfig {
+	if x != nil {
+		return x.Arch
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetConfigRootNamespace() string {
-	if m != nil {
-		return m.ConfigRootNamespace
+func (x *GlobalConfig) GetConfigRootNamespace() string {
+	if x != nil {
+		return x.ConfigRootNamespace
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetConfigValidation() *types.BoolValue {
-	if m != nil {
-		return m.ConfigValidation
+func (x *GlobalConfig) GetConfigValidation() *wrappers.BoolValue {
+	if x != nil {
+		return x.ConfigValidation
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetDefaultConfigVisibilitySettings() []string {
-	if m != nil {
-		return m.DefaultConfigVisibilitySettings
+func (x *GlobalConfig) GetDefaultConfigVisibilitySettings() []string {
+	if x != nil {
+		return x.DefaultConfigVisibilitySettings
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *GlobalConfig) GetDefaultNodeSelector() *types.Struct {
-	if m != nil {
-		return m.DefaultNodeSelector
+func (x *GlobalConfig) GetDefaultNodeSelector() *_struct.Struct {
+	if x != nil {
+		return x.DefaultNodeSelector
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *GlobalConfig) GetDefaultPodDisruptionBudget() *DefaultPodDisruptionBudgetConfig {
-	if m != nil {
-		return m.DefaultPodDisruptionBudget
+func (x *GlobalConfig) GetDefaultPodDisruptionBudget() *DefaultPodDisruptionBudgetConfig {
+	if x != nil {
+		return x.DefaultPodDisruptionBudget
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *GlobalConfig) GetDefaultResources() *DefaultResourcesConfig {
-	if m != nil {
-		return m.DefaultResources
+func (x *GlobalConfig) GetDefaultResources() *DefaultResourcesConfig {
+	if x != nil {
+		return x.DefaultResources
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *GlobalConfig) GetDefaultTolerations() []*types.Struct {
-	if m != nil {
-		return m.DefaultTolerations
+func (x *GlobalConfig) GetDefaultTolerations() []*_struct.Struct {
+	if x != nil {
+		return x.DefaultTolerations
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetHub() string {
-	if m != nil {
-		return m.Hub
+func (x *GlobalConfig) GetHub() string {
+	if x != nil {
+		return x.Hub
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetImagePullPolicy() string {
-	if m != nil {
-		return m.ImagePullPolicy
+func (x *GlobalConfig) GetImagePullPolicy() string {
+	if x != nil {
+		return x.ImagePullPolicy
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetImagePullSecrets() []string {
-	if m != nil {
-		return m.ImagePullSecrets
+func (x *GlobalConfig) GetImagePullSecrets() []string {
+	if x != nil {
+		return x.ImagePullSecrets
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetIstioNamespace() string {
-	if m != nil {
-		return m.IstioNamespace
+func (x *GlobalConfig) GetIstioNamespace() string {
+	if x != nil {
+		return x.IstioNamespace
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetLogAsJson() *types.BoolValue {
-	if m != nil {
-		return m.LogAsJson
+func (x *GlobalConfig) GetLogAsJson() *wrappers.BoolValue {
+	if x != nil {
+		return x.LogAsJson
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetLogging() *GlobalLoggingConfig {
-	if m != nil {
-		return m.Logging
+func (x *GlobalConfig) GetLogging() *GlobalLoggingConfig {
+	if x != nil {
+		return x.Logging
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetMeshID() string {
-	if m != nil {
-		return m.MeshID
+func (x *GlobalConfig) GetMeshID() string {
+	if x != nil {
+		return x.MeshID
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetMeshNetworks() *types.Struct {
-	if m != nil {
-		return m.MeshNetworks
+func (x *GlobalConfig) GetMeshNetworks() *_struct.Struct {
+	if x != nil {
+		return x.MeshNetworks
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetMultiCluster() *MultiClusterConfig {
-	if m != nil {
-		return m.MultiCluster
+func (x *GlobalConfig) GetMultiCluster() *MultiClusterConfig {
+	if x != nil {
+		return x.MultiCluster
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetNetwork() string {
-	if m != nil {
-		return m.Network
+func (x *GlobalConfig) GetNetwork() string {
+	if x != nil {
+		return x.Network
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetPodDNSSearchNamespaces() []string {
-	if m != nil {
-		return m.PodDNSSearchNamespaces
+func (x *GlobalConfig) GetPodDNSSearchNamespaces() []string {
+	if x != nil {
+		return x.PodDNSSearchNamespaces
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetOmitSidecarInjectorConfigMap() *types.BoolValue {
-	if m != nil {
-		return m.OmitSidecarInjectorConfigMap
+func (x *GlobalConfig) GetOmitSidecarInjectorConfigMap() *wrappers.BoolValue {
+	if x != nil {
+		return x.OmitSidecarInjectorConfigMap
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetOneNamespace() *types.BoolValue {
-	if m != nil {
-		return m.OneNamespace
+func (x *GlobalConfig) GetOneNamespace() *wrappers.BoolValue {
+	if x != nil {
+		return x.OneNamespace
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetOperatorManageWebhooks() *types.BoolValue {
-	if m != nil {
-		return m.OperatorManageWebhooks
+func (x *GlobalConfig) GetOperatorManageWebhooks() *wrappers.BoolValue {
+	if x != nil {
+		return x.OperatorManageWebhooks
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *GlobalConfig) GetPriorityClassName() string {
-	if m != nil {
-		return m.PriorityClassName
+func (x *GlobalConfig) GetPriorityClassName() string {
+	if x != nil {
+		return x.PriorityClassName
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetProxy() *ProxyConfig {
-	if m != nil {
-		return m.Proxy
+func (x *GlobalConfig) GetProxy() *ProxyConfig {
+	if x != nil {
+		return x.Proxy
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetProxyInit() *ProxyInitConfig {
-	if m != nil {
-		return m.ProxyInit
+func (x *GlobalConfig) GetProxyInit() *ProxyInitConfig {
+	if x != nil {
+		return x.ProxyInit
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetSds() *SDSConfig {
-	if m != nil {
-		return m.Sds
+func (x *GlobalConfig) GetSds() *SDSConfig {
+	if x != nil {
+		return x.Sds
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetTag() *types.Value {
-	if m != nil {
-		return m.Tag
+func (x *GlobalConfig) GetTag() *_struct.Value {
+	if x != nil {
+		return x.Tag
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetTracer() *TracerConfig {
-	if m != nil {
-		return m.Tracer
+func (x *GlobalConfig) GetTracer() *TracerConfig {
+	if x != nil {
+		return x.Tracer
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetUseMCP() *types.BoolValue {
-	if m != nil {
-		return m.UseMCP
+func (x *GlobalConfig) GetUseMCP() *wrappers.BoolValue {
+	if x != nil {
+		return x.UseMCP
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetRemotePilotAddress() string {
-	if m != nil {
-		return m.RemotePilotAddress
+func (x *GlobalConfig) GetRemotePilotAddress() string {
+	if x != nil {
+		return x.RemotePilotAddress
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetIstiod() *IstiodConfig {
-	if m != nil {
-		return m.Istiod
+func (x *GlobalConfig) GetIstiod() *IstiodConfig {
+	if x != nil {
+		return x.Istiod
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetPilotCertProvider() string {
-	if m != nil {
-		return m.PilotCertProvider
+func (x *GlobalConfig) GetPilotCertProvider() string {
+	if x != nil {
+		return x.PilotCertProvider
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetJwtPolicy() string {
-	if m != nil {
-		return m.JwtPolicy
+func (x *GlobalConfig) GetJwtPolicy() string {
+	if x != nil {
+		return x.JwtPolicy
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetSts() *STSConfig {
-	if m != nil {
-		return m.Sts
+func (x *GlobalConfig) GetSts() *STSConfig {
+	if x != nil {
+		return x.Sts
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetRevision() string {
-	if m != nil {
-		return m.Revision
+func (x *GlobalConfig) GetRevision() string {
+	if x != nil {
+		return x.Revision
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetMountMtlsCerts() *types.BoolValue {
-	if m != nil {
-		return m.MountMtlsCerts
+func (x *GlobalConfig) GetMountMtlsCerts() *wrappers.BoolValue {
+	if x != nil {
+		return x.MountMtlsCerts
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetCaAddress() string {
-	if m != nil {
-		return m.CaAddress
+func (x *GlobalConfig) GetCaAddress() string {
+	if x != nil {
+		return x.CaAddress
 	}
 	return ""
 }
 
-func (m *GlobalConfig) GetExternalIstiod() *types.BoolValue {
-	if m != nil {
-		return m.ExternalIstiod
+func (x *GlobalConfig) GetExternalIstiod() *wrappers.BoolValue {
+	if x != nil {
+		return x.ExternalIstiod
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetConfigCluster() *types.BoolValue {
-	if m != nil {
-		return m.ConfigCluster
+func (x *GlobalConfig) GetConfigCluster() *wrappers.BoolValue {
+	if x != nil {
+		return x.ConfigCluster
 	}
 	return nil
 }
 
-func (m *GlobalConfig) GetCaName() string {
-	if m != nil {
-		return m.CaName
+func (x *GlobalConfig) GetCaName() string {
+	if x != nil {
+		return x.CaName
 	}
 	return ""
 }
@@ -1734,155 +1861,159 @@ func (m *GlobalConfig) GetCaName() string {
 //
 // See https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16
 type STSConfig struct {
-	ServicePort          uint32   `protobuf:"varint,1,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	ServicePort uint32 `protobuf:"varint,1,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
 }
 
-func (m *STSConfig) Reset()         { *m = STSConfig{} }
-func (m *STSConfig) String() string { return proto.CompactTextString(m) }
-func (*STSConfig) ProtoMessage()    {}
-func (*STSConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{13}
-}
-func (m *STSConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *STSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_STSConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *STSConfig) Reset() {
+	*x = STSConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[13]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *STSConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_STSConfig.Merge(m, src)
-}
-func (m *STSConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *STSConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *STSConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_STSConfig.DiscardUnknown(m)
+
+func (*STSConfig) ProtoMessage() {}
+
+func (x *STSConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[13]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_STSConfig proto.InternalMessageInfo
+// Deprecated: Use STSConfig.ProtoReflect.Descriptor instead.
+func (*STSConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{13}
+}
 
-func (m *STSConfig) GetServicePort() uint32 {
-	if m != nil {
-		return m.ServicePort
+func (x *STSConfig) GetServicePort() uint32 {
+	if x != nil {
+		return x.ServicePort
 	}
 	return 0
 }
 
 type IstiodConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// If enabled, istiod will perform config analysis
-	EnableAnalysis       *types.BoolValue `protobuf:"bytes,2,opt,name=enableAnalysis,proto3" json:"enableAnalysis,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	EnableAnalysis *wrappers.BoolValue `protobuf:"bytes,2,opt,name=enableAnalysis,proto3" json:"enableAnalysis,omitempty"`
 }
 
-func (m *IstiodConfig) Reset()         { *m = IstiodConfig{} }
-func (m *IstiodConfig) String() string { return proto.CompactTextString(m) }
-func (*IstiodConfig) ProtoMessage()    {}
-func (*IstiodConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{14}
-}
-func (m *IstiodConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *IstiodConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_IstiodConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *IstiodConfig) Reset() {
+	*x = IstiodConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[14]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *IstiodConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_IstiodConfig.Merge(m, src)
-}
-func (m *IstiodConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *IstiodConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *IstiodConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_IstiodConfig.DiscardUnknown(m)
+
+func (*IstiodConfig) ProtoMessage() {}
+
+func (x *IstiodConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[14]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_IstiodConfig proto.InternalMessageInfo
+// Deprecated: Use IstiodConfig.ProtoReflect.Descriptor instead.
+func (*IstiodConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{14}
+}
 
-func (m *IstiodConfig) GetEnableAnalysis() *types.BoolValue {
-	if m != nil {
-		return m.EnableAnalysis
+func (x *IstiodConfig) GetEnableAnalysis() *wrappers.BoolValue {
+	if x != nil {
+		return x.EnableAnalysis
 	}
 	return nil
 }
 
 // GlobalLoggingConfig specifies the global logging level settings for the Istio control plane components.
 type GlobalLoggingConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
 	// The control plane has different scopes depending on component, but can configure default log level across all components
 	// If empty, default scope and level will be used as configured in code
-	Level                string   `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	Level string `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
 }
 
-func (m *GlobalLoggingConfig) Reset()         { *m = GlobalLoggingConfig{} }
-func (m *GlobalLoggingConfig) String() string { return proto.CompactTextString(m) }
-func (*GlobalLoggingConfig) ProtoMessage()    {}
-func (*GlobalLoggingConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{15}
-}
-func (m *GlobalLoggingConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *GlobalLoggingConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_GlobalLoggingConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *GlobalLoggingConfig) Reset() {
+	*x = GlobalLoggingConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[15]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *GlobalLoggingConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_GlobalLoggingConfig.Merge(m, src)
-}
-func (m *GlobalLoggingConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *GlobalLoggingConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *GlobalLoggingConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_GlobalLoggingConfig.DiscardUnknown(m)
+
+func (*GlobalLoggingConfig) ProtoMessage() {}
+
+func (x *GlobalLoggingConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[15]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_GlobalLoggingConfig proto.InternalMessageInfo
+// Deprecated: Use GlobalLoggingConfig.ProtoReflect.Descriptor instead.
+func (*GlobalLoggingConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{15}
+}
 
-func (m *GlobalLoggingConfig) GetLevel() string {
-	if m != nil {
-		return m.Level
+func (x *GlobalLoggingConfig) GetLevel() string {
+	if x != nil {
+		return x.Level
 	}
 	return ""
 }
 
 // Configuration for an ingress gateway.
 type IngressGatewayConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether auto scaling with a HorizontalPodAutoscaler is enabled.
-	AutoscaleEnabled *types.BoolValue `protobuf:"bytes,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
+	AutoscaleEnabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
 	// maxReplicas setting for HorizontalPodAutoscaler.
 	AutoscaleMax uint32 `protobuf:"varint,2,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
 	// minReplicas setting for HorizontalPodAutoscaler.
@@ -1890,12 +2021,14 @@ type IngressGatewayConfig struct {
 	// K8s utilization setting for HorizontalPodAutoscaler target.
 	//
 	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
-	Cpu           *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"` // Deprecated: Do not use.
-	CustomService *types.BoolValue            `protobuf:"bytes,6,opt,name=customService,proto3" json:"customService,omitempty"`
+	//
+	// Deprecated: Do not use.
+	Cpu           *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
+	CustomService *wrappers.BoolValue         `protobuf:"bytes,6,opt,name=customService,proto3" json:"customService,omitempty"`
 	// Controls whether an ingress gateway is enabled.
-	Enabled *types.BoolValue `protobuf:"bytes,10,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,10,opt,name=enabled,proto3" json:"enabled,omitempty"`
 	// Environment variables passed to the proxy container.
-	Env                      *types.Struct     `protobuf:"bytes,11,opt,name=env,proto3" json:"env,omitempty"`
+	Env                      *_struct.Struct   `protobuf:"bytes,11,opt,name=env,proto3" json:"env,omitempty"`
 	Labels                   map[string]string `protobuf:"bytes,15,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
 	LoadBalancerIP           string            `protobuf:"bytes,16,opt,name=loadBalancerIP,proto3" json:"loadBalancerIP,omitempty"`
 	LoadBalancerSourceRanges []string          `protobuf:"bytes,17,rep,name=loadBalancerSourceRanges,proto3" json:"loadBalancerSourceRanges,omitempty"`
@@ -1903,27 +2036,39 @@ type IngressGatewayConfig struct {
 	// K8s node selector.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
-	NodeSelector *types.Struct `protobuf:"bytes,19,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	NodeSelector *_struct.Struct `protobuf:"bytes,19,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"`
 	// K8s annotations for pods.
 	//
 	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
-	PodAnnotations *types.Struct `protobuf:"bytes,20,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	PodAnnotations *_struct.Struct `protobuf:"bytes,20,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"`
 	// See EgressGatewayConfig.
-	PodAntiAffinityLabelSelector []*types.Struct `protobuf:"bytes,21,rep,name=podAntiAffinityLabelSelector,proto3" json:"podAntiAffinityLabelSelector,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	PodAntiAffinityLabelSelector []*_struct.Struct `protobuf:"bytes,21,rep,name=podAntiAffinityLabelSelector,proto3" json:"podAntiAffinityLabelSelector,omitempty"`
 	// See EgressGatewayConfig.
-	PodAntiAffinityTermLabelSelector []*types.Struct `protobuf:"bytes,22,rep,name=podAntiAffinityTermLabelSelector,proto3" json:"podAntiAffinityTermLabelSelector,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	PodAntiAffinityTermLabelSelector []*_struct.Struct `protobuf:"bytes,22,rep,name=podAntiAffinityTermLabelSelector,proto3" json:"podAntiAffinityTermLabelSelector,omitempty"`
 	// Port Configuration for the ingress gateway.
 	Ports []*PortsConfig `protobuf:"bytes,23,rep,name=ports,proto3" json:"ports,omitempty"`
 	// Number of replicas for the ingress gateway Deployment.
-	ReplicaCount uint32 `protobuf:"varint,24,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	ReplicaCount uint32 `protobuf:"varint,24,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
 	// K8s resources settings.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
-	Resources *types.Struct `protobuf:"bytes,25,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	Resources *_struct.Struct `protobuf:"bytes,25,opt,name=resources,proto3" json:"resources,omitempty"`
 	// Config for secret volume mounts.
 	SecretVolumes []*SecretVolume `protobuf:"bytes,27,rep,name=secretVolumes,proto3" json:"secretVolumes,omitempty"`
 	// Annotations to add to the egress gateway service.
-	ServiceAnnotations *types.Struct `protobuf:"bytes,28,opt,name=serviceAnnotations,proto3" json:"serviceAnnotations,omitempty"`
+	ServiceAnnotations *_struct.Struct `protobuf:"bytes,28,opt,name=serviceAnnotations,proto3" json:"serviceAnnotations,omitempty"`
 	// Service type.
 	//
 	// See https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
@@ -1931,481 +2076,488 @@ type IngressGatewayConfig struct {
 	// Enables cross-cluster access using SNI matching.
 	Zvpn *IngressGatewayZvpnConfig `protobuf:"bytes,30,opt,name=zvpn,proto3" json:"zvpn,omitempty"`
 	// K8s rolling update strategy
-	RollingMaxSurge *IntOrString `protobuf:"bytes,31,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	RollingMaxSurge *IntOrString `protobuf:"bytes,31,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"`
 	// K8s rolling update strategy
-	RollingMaxUnavailable *IntOrString     `protobuf:"bytes,32,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"` // Deprecated: Do not use.
-	ExternalTrafficPolicy string           `protobuf:"bytes,34,opt,name=externalTrafficPolicy,proto3" json:"externalTrafficPolicy,omitempty"`
-	Tolerations           []*types.Struct  `protobuf:"bytes,35,rep,name=tolerations,proto3" json:"tolerations,omitempty"` // Deprecated: Do not use.
-	IngressPorts          []*types.Struct  `protobuf:"bytes,36,rep,name=ingressPorts,proto3" json:"ingressPorts,omitempty"`
-	AdditionalContainers  []*types.Struct  `protobuf:"bytes,37,rep,name=additionalContainers,proto3" json:"additionalContainers,omitempty"`
-	ConfigVolumes         []*types.Struct  `protobuf:"bytes,38,rep,name=configVolumes,proto3" json:"configVolumes,omitempty"`
-	RunAsRoot             *types.BoolValue `protobuf:"bytes,45,opt,name=runAsRoot,proto3" json:"runAsRoot,omitempty"`
+	//
+	// Deprecated: Do not use.
+	RollingMaxUnavailable *IntOrString `protobuf:"bytes,32,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"`
+	ExternalTrafficPolicy string       `protobuf:"bytes,34,opt,name=externalTrafficPolicy,proto3" json:"externalTrafficPolicy,omitempty"`
+	// Deprecated: Do not use.
+	Tolerations          []*_struct.Struct   `protobuf:"bytes,35,rep,name=tolerations,proto3" json:"tolerations,omitempty"`
+	IngressPorts         []*_struct.Struct   `protobuf:"bytes,36,rep,name=ingressPorts,proto3" json:"ingressPorts,omitempty"`
+	AdditionalContainers []*_struct.Struct   `protobuf:"bytes,37,rep,name=additionalContainers,proto3" json:"additionalContainers,omitempty"`
+	ConfigVolumes        []*_struct.Struct   `protobuf:"bytes,38,rep,name=configVolumes,proto3" json:"configVolumes,omitempty"`
+	RunAsRoot            *wrappers.BoolValue `protobuf:"bytes,45,opt,name=runAsRoot,proto3" json:"runAsRoot,omitempty"`
 	// The injection template to use for the gateway. If not set, no injection will be performed.
-	InjectionTemplate    string          `protobuf:"bytes,46,opt,name=injectionTemplate,proto3" json:"injectionTemplate,omitempty"`
-	ServiceAccount       *ServiceAccount `protobuf:"bytes,47,opt,name=serviceAccount,proto3" json:"serviceAccount,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
-	XXX_unrecognized     []byte          `json:"-"`
-	XXX_sizecache        int32           `json:"-"`
+	InjectionTemplate string          `protobuf:"bytes,46,opt,name=injectionTemplate,proto3" json:"injectionTemplate,omitempty"`
+	ServiceAccount    *ServiceAccount `protobuf:"bytes,47,opt,name=serviceAccount,proto3" json:"serviceAccount,omitempty"`
 }
 
-func (m *IngressGatewayConfig) Reset()         { *m = IngressGatewayConfig{} }
-func (m *IngressGatewayConfig) String() string { return proto.CompactTextString(m) }
-func (*IngressGatewayConfig) ProtoMessage()    {}
-func (*IngressGatewayConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{16}
-}
-func (m *IngressGatewayConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *IngressGatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_IngressGatewayConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *IngressGatewayConfig) Reset() {
+	*x = IngressGatewayConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[16]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *IngressGatewayConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_IngressGatewayConfig.Merge(m, src)
-}
-func (m *IngressGatewayConfig) XXX_Size() int {
-	return m.Size()
-}
-func (m *IngressGatewayConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_IngressGatewayConfig.DiscardUnknown(m)
+
+func (x *IngressGatewayConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
 
-var xxx_messageInfo_IngressGatewayConfig proto.InternalMessageInfo
+func (*IngressGatewayConfig) ProtoMessage() {}
 
-func (m *IngressGatewayConfig) GetAutoscaleEnabled() *types.BoolValue {
-	if m != nil {
-		return m.AutoscaleEnabled
+func (x *IngressGatewayConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[16]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
+}
+
+// Deprecated: Use IngressGatewayConfig.ProtoReflect.Descriptor instead.
+func (*IngressGatewayConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{16}
+}
+
+func (x *IngressGatewayConfig) GetAutoscaleEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.AutoscaleEnabled
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetAutoscaleMax() uint32 {
-	if m != nil {
-		return m.AutoscaleMax
+func (x *IngressGatewayConfig) GetAutoscaleMax() uint32 {
+	if x != nil {
+		return x.AutoscaleMax
 	}
 	return 0
 }
 
-func (m *IngressGatewayConfig) GetAutoscaleMin() uint32 {
-	if m != nil {
-		return m.AutoscaleMin
+func (x *IngressGatewayConfig) GetAutoscaleMin() uint32 {
+	if x != nil {
+		return x.AutoscaleMin
 	}
 	return 0
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
-	if m != nil {
-		return m.Cpu
+func (x *IngressGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
+	if x != nil {
+		return x.Cpu
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetCustomService() *types.BoolValue {
-	if m != nil {
-		return m.CustomService
+func (x *IngressGatewayConfig) GetCustomService() *wrappers.BoolValue {
+	if x != nil {
+		return x.CustomService
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *IngressGatewayConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetEnv() *types.Struct {
-	if m != nil {
-		return m.Env
+func (x *IngressGatewayConfig) GetEnv() *_struct.Struct {
+	if x != nil {
+		return x.Env
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetLabels() map[string]string {
-	if m != nil {
-		return m.Labels
+func (x *IngressGatewayConfig) GetLabels() map[string]string {
+	if x != nil {
+		return x.Labels
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetLoadBalancerIP() string {
-	if m != nil {
-		return m.LoadBalancerIP
+func (x *IngressGatewayConfig) GetLoadBalancerIP() string {
+	if x != nil {
+		return x.LoadBalancerIP
 	}
 	return ""
 }
 
-func (m *IngressGatewayConfig) GetLoadBalancerSourceRanges() []string {
-	if m != nil {
-		return m.LoadBalancerSourceRanges
+func (x *IngressGatewayConfig) GetLoadBalancerSourceRanges() []string {
+	if x != nil {
+		return x.LoadBalancerSourceRanges
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetName() string {
-	if m != nil {
-		return m.Name
+func (x *IngressGatewayConfig) GetName() string {
+	if x != nil {
+		return x.Name
 	}
 	return ""
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetNodeSelector() *types.Struct {
-	if m != nil {
-		return m.NodeSelector
+func (x *IngressGatewayConfig) GetNodeSelector() *_struct.Struct {
+	if x != nil {
+		return x.NodeSelector
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetPodAnnotations() *types.Struct {
-	if m != nil {
-		return m.PodAnnotations
+func (x *IngressGatewayConfig) GetPodAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.PodAnnotations
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetPodAntiAffinityLabelSelector() []*types.Struct {
-	if m != nil {
-		return m.PodAntiAffinityLabelSelector
+func (x *IngressGatewayConfig) GetPodAntiAffinityLabelSelector() []*_struct.Struct {
+	if x != nil {
+		return x.PodAntiAffinityLabelSelector
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetPodAntiAffinityTermLabelSelector() []*types.Struct {
-	if m != nil {
-		return m.PodAntiAffinityTermLabelSelector
+func (x *IngressGatewayConfig) GetPodAntiAffinityTermLabelSelector() []*_struct.Struct {
+	if x != nil {
+		return x.PodAntiAffinityTermLabelSelector
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetPorts() []*PortsConfig {
-	if m != nil {
-		return m.Ports
+func (x *IngressGatewayConfig) GetPorts() []*PortsConfig {
+	if x != nil {
+		return x.Ports
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetReplicaCount() uint32 {
-	if m != nil {
-		return m.ReplicaCount
+func (x *IngressGatewayConfig) GetReplicaCount() uint32 {
+	if x != nil {
+		return x.ReplicaCount
 	}
 	return 0
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetResources() *types.Struct {
-	if m != nil {
-		return m.Resources
+func (x *IngressGatewayConfig) GetResources() *_struct.Struct {
+	if x != nil {
+		return x.Resources
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetSecretVolumes() []*SecretVolume {
-	if m != nil {
-		return m.SecretVolumes
+func (x *IngressGatewayConfig) GetSecretVolumes() []*SecretVolume {
+	if x != nil {
+		return x.SecretVolumes
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetServiceAnnotations() *types.Struct {
-	if m != nil {
-		return m.ServiceAnnotations
+func (x *IngressGatewayConfig) GetServiceAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.ServiceAnnotations
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetType() string {
-	if m != nil {
-		return m.Type
+func (x *IngressGatewayConfig) GetType() string {
+	if x != nil {
+		return x.Type
 	}
 	return ""
 }
 
-func (m *IngressGatewayConfig) GetZvpn() *IngressGatewayZvpnConfig {
-	if m != nil {
-		return m.Zvpn
+func (x *IngressGatewayConfig) GetZvpn() *IngressGatewayZvpnConfig {
+	if x != nil {
+		return x.Zvpn
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetRollingMaxSurge() *IntOrString {
-	if m != nil {
-		return m.RollingMaxSurge
+func (x *IngressGatewayConfig) GetRollingMaxSurge() *IntOrString {
+	if x != nil {
+		return x.RollingMaxSurge
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetRollingMaxUnavailable() *IntOrString {
-	if m != nil {
-		return m.RollingMaxUnavailable
+func (x *IngressGatewayConfig) GetRollingMaxUnavailable() *IntOrString {
+	if x != nil {
+		return x.RollingMaxUnavailable
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetExternalTrafficPolicy() string {
-	if m != nil {
-		return m.ExternalTrafficPolicy
+func (x *IngressGatewayConfig) GetExternalTrafficPolicy() string {
+	if x != nil {
+		return x.ExternalTrafficPolicy
 	}
 	return ""
 }
 
 // Deprecated: Do not use.
-func (m *IngressGatewayConfig) GetTolerations() []*types.Struct {
-	if m != nil {
-		return m.Tolerations
+func (x *IngressGatewayConfig) GetTolerations() []*_struct.Struct {
+	if x != nil {
+		return x.Tolerations
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetIngressPorts() []*types.Struct {
-	if m != nil {
-		return m.IngressPorts
+func (x *IngressGatewayConfig) GetIngressPorts() []*_struct.Struct {
+	if x != nil {
+		return x.IngressPorts
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetAdditionalContainers() []*types.Struct {
-	if m != nil {
-		return m.AdditionalContainers
+func (x *IngressGatewayConfig) GetAdditionalContainers() []*_struct.Struct {
+	if x != nil {
+		return x.AdditionalContainers
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetConfigVolumes() []*types.Struct {
-	if m != nil {
-		return m.ConfigVolumes
+func (x *IngressGatewayConfig) GetConfigVolumes() []*_struct.Struct {
+	if x != nil {
+		return x.ConfigVolumes
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetRunAsRoot() *types.BoolValue {
-	if m != nil {
-		return m.RunAsRoot
+func (x *IngressGatewayConfig) GetRunAsRoot() *wrappers.BoolValue {
+	if x != nil {
+		return x.RunAsRoot
 	}
 	return nil
 }
 
-func (m *IngressGatewayConfig) GetInjectionTemplate() string {
-	if m != nil {
-		return m.InjectionTemplate
+func (x *IngressGatewayConfig) GetInjectionTemplate() string {
+	if x != nil {
+		return x.InjectionTemplate
 	}
 	return ""
 }
 
-func (m *IngressGatewayConfig) GetServiceAccount() *ServiceAccount {
-	if m != nil {
-		return m.ServiceAccount
+func (x *IngressGatewayConfig) GetServiceAccount() *ServiceAccount {
+	if x != nil {
+		return x.ServiceAccount
 	}
 	return nil
 }
 
 // IngressGatewayZvpnConfig enables cross-cluster access using SNI matching.
 type IngressGatewayZvpnConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether ZeroVPN is enabled.
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	Suffix               string           `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Suffix  string              `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
 }
 
-func (m *IngressGatewayZvpnConfig) Reset()         { *m = IngressGatewayZvpnConfig{} }
-func (m *IngressGatewayZvpnConfig) String() string { return proto.CompactTextString(m) }
-func (*IngressGatewayZvpnConfig) ProtoMessage()    {}
-func (*IngressGatewayZvpnConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{17}
-}
-func (m *IngressGatewayZvpnConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *IngressGatewayZvpnConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_IngressGatewayZvpnConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *IngressGatewayZvpnConfig) Reset() {
+	*x = IngressGatewayZvpnConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[17]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *IngressGatewayZvpnConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_IngressGatewayZvpnConfig.Merge(m, src)
-}
-func (m *IngressGatewayZvpnConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *IngressGatewayZvpnConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *IngressGatewayZvpnConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_IngressGatewayZvpnConfig.DiscardUnknown(m)
+
+func (*IngressGatewayZvpnConfig) ProtoMessage() {}
+
+func (x *IngressGatewayZvpnConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[17]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_IngressGatewayZvpnConfig proto.InternalMessageInfo
+// Deprecated: Use IngressGatewayZvpnConfig.ProtoReflect.Descriptor instead.
+func (*IngressGatewayZvpnConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{17}
+}
 
-func (m *IngressGatewayZvpnConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *IngressGatewayZvpnConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *IngressGatewayZvpnConfig) GetSuffix() string {
-	if m != nil {
-		return m.Suffix
+func (x *IngressGatewayZvpnConfig) GetSuffix() string {
+	if x != nil {
+		return x.Suffix
 	}
 	return ""
 }
 
 // MultiClusterConfig specifies the Configuration for Istio mesh across multiple clusters through the istio gateways.
 type MultiClusterConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Enables the connection between two kubernetes clusters via their respective ingressgateway services.
 	// Use if the pods in each cluster cannot directly talk to one another.
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	ClusterName          string           `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
-	GlobalDomainSuffix   string           `protobuf:"bytes,3,opt,name=globalDomainSuffix,proto3" json:"globalDomainSuffix,omitempty"`
-	IncludeEnvoyFilter   *types.BoolValue `protobuf:"bytes,4,opt,name=includeEnvoyFilter,proto3" json:"includeEnvoyFilter,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
-}
-
-func (m *MultiClusterConfig) Reset()         { *m = MultiClusterConfig{} }
-func (m *MultiClusterConfig) String() string { return proto.CompactTextString(m) }
-func (*MultiClusterConfig) ProtoMessage()    {}
-func (*MultiClusterConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{18}
-}
-func (m *MultiClusterConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *MultiClusterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_MultiClusterConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
-	}
+	Enabled            *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	ClusterName        string              `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
+	GlobalDomainSuffix string              `protobuf:"bytes,3,opt,name=globalDomainSuffix,proto3" json:"globalDomainSuffix,omitempty"`
+	IncludeEnvoyFilter *wrappers.BoolValue `protobuf:"bytes,4,opt,name=includeEnvoyFilter,proto3" json:"includeEnvoyFilter,omitempty"`
 }
-func (m *MultiClusterConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_MultiClusterConfig.Merge(m, src)
+
+func (x *MultiClusterConfig) Reset() {
+	*x = MultiClusterConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[18]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *MultiClusterConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *MultiClusterConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *MultiClusterConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_MultiClusterConfig.DiscardUnknown(m)
+
+func (*MultiClusterConfig) ProtoMessage() {}
+
+func (x *MultiClusterConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[18]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_MultiClusterConfig proto.InternalMessageInfo
+// Deprecated: Use MultiClusterConfig.ProtoReflect.Descriptor instead.
+func (*MultiClusterConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{18}
+}
 
-func (m *MultiClusterConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *MultiClusterConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *MultiClusterConfig) GetClusterName() string {
-	if m != nil {
-		return m.ClusterName
+func (x *MultiClusterConfig) GetClusterName() string {
+	if x != nil {
+		return x.ClusterName
 	}
 	return ""
 }
 
-func (m *MultiClusterConfig) GetGlobalDomainSuffix() string {
-	if m != nil {
-		return m.GlobalDomainSuffix
+func (x *MultiClusterConfig) GetGlobalDomainSuffix() string {
+	if x != nil {
+		return x.GlobalDomainSuffix
 	}
 	return ""
 }
 
-func (m *MultiClusterConfig) GetIncludeEnvoyFilter() *types.BoolValue {
-	if m != nil {
-		return m.IncludeEnvoyFilter
+func (x *MultiClusterConfig) GetIncludeEnvoyFilter() *wrappers.BoolValue {
+	if x != nil {
+		return x.IncludeEnvoyFilter
 	}
 	return nil
 }
 
 // OutboundTrafficPolicyConfig controls the default behavior of the sidecar for handling outbound traffic from the application.
 type OutboundTrafficPolicyConfig struct {
-	Mode                 OutboundTrafficPolicyConfig_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=v1alpha1.OutboundTrafficPolicyConfig_Mode" json:"mode,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
-	XXX_unrecognized     []byte                           `json:"-"`
-	XXX_sizecache        int32                            `json:"-"`
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Mode OutboundTrafficPolicyConfig_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=v1alpha1.OutboundTrafficPolicyConfig_Mode" json:"mode,omitempty"`
 }
 
-func (m *OutboundTrafficPolicyConfig) Reset()         { *m = OutboundTrafficPolicyConfig{} }
-func (m *OutboundTrafficPolicyConfig) String() string { return proto.CompactTextString(m) }
-func (*OutboundTrafficPolicyConfig) ProtoMessage()    {}
-func (*OutboundTrafficPolicyConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{19}
-}
-func (m *OutboundTrafficPolicyConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *OutboundTrafficPolicyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_OutboundTrafficPolicyConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *OutboundTrafficPolicyConfig) Reset() {
+	*x = OutboundTrafficPolicyConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[19]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *OutboundTrafficPolicyConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_OutboundTrafficPolicyConfig.Merge(m, src)
-}
-func (m *OutboundTrafficPolicyConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *OutboundTrafficPolicyConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *OutboundTrafficPolicyConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_OutboundTrafficPolicyConfig.DiscardUnknown(m)
+
+func (*OutboundTrafficPolicyConfig) ProtoMessage() {}
+
+func (x *OutboundTrafficPolicyConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[19]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_OutboundTrafficPolicyConfig proto.InternalMessageInfo
+// Deprecated: Use OutboundTrafficPolicyConfig.ProtoReflect.Descriptor instead.
+func (*OutboundTrafficPolicyConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{19}
+}
 
-func (m *OutboundTrafficPolicyConfig) GetMode() OutboundTrafficPolicyConfig_Mode {
-	if m != nil {
-		return m.Mode
+func (x *OutboundTrafficPolicyConfig) GetMode() OutboundTrafficPolicyConfig_Mode {
+	if x != nil {
+		return x.Mode
 	}
 	return OutboundTrafficPolicyConfig_ALLOW_ANY
 }
 
 // Configuration for Pilot.
 type PilotConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether Pilot is enabled.
-	Enabled *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
 	// Controls whether a HorizontalPodAutoscaler is installed for Pilot.
-	AutoscaleEnabled *types.BoolValue `protobuf:"bytes,2,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
+	AutoscaleEnabled *wrappers.BoolValue `protobuf:"bytes,2,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
 	// Minimum number of replicas in the HorizontalPodAutoscaler for Pilot.
 	AutoscaleMin uint32 `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
 	// Maximum number of replicas in the HorizontalPodAutoscaler for Pilot.
 	AutoscaleMax uint32 `protobuf:"varint,4,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
 	// Number of replicas in the Pilot Deployment.
-	ReplicaCount uint32 `protobuf:"varint,5,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	ReplicaCount uint32 `protobuf:"varint,5,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"`
 	// Image name used for Pilot.
 	//
 	// This can be set either to image name if hub is also set, or can be set to the full hub:name string.
@@ -2421,59 +2573,73 @@ type PilotConfig struct {
 	// K8s resources settings.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
-	Resources *Resources `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	Resources *Resources `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"`
 	// Namespace that the configuration management feature is installed into, if different from Pilot namespace.
 	ConfigNamespace string `protobuf:"bytes,10,opt,name=configNamespace,proto3" json:"configNamespace,omitempty"`
 	// Target CPU utilization used in HorizontalPodAutoscaler.
 	//
 	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
-	Cpu *CPUTargetUtilizationConfig `protobuf:"bytes,11,opt,name=cpu,proto3" json:"cpu,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	Cpu *CPUTargetUtilizationConfig `protobuf:"bytes,11,opt,name=cpu,proto3" json:"cpu,omitempty"`
 	// K8s node selector.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
-	NodeSelector *types.Struct `protobuf:"bytes,12,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	NodeSelector *_struct.Struct `protobuf:"bytes,12,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"`
 	// Maximum duration that a sidecar can be connected to a pilot.
 	//
 	// This setting balances out load across pilot instances, but adds some resource overhead.
 	//
 	// Examples: 300s, 30m, 1h
-	KeepaliveMaxServerConnectionAge *types.Duration `protobuf:"bytes,13,opt,name=keepaliveMaxServerConnectionAge,proto3" json:"keepaliveMaxServerConnectionAge,omitempty"`
+	KeepaliveMaxServerConnectionAge *duration.Duration `protobuf:"bytes,13,opt,name=keepaliveMaxServerConnectionAge,proto3" json:"keepaliveMaxServerConnectionAge,omitempty"`
 	// Labels that are added to Pilot deployment and pods.
 	//
 	// See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
-	DeploymentLabels *types.Struct `protobuf:"bytes,14,opt,name=deploymentLabels,proto3" json:"deploymentLabels,omitempty"`
-	PodLabels        *types.Struct `protobuf:"bytes,36,opt,name=podLabels,proto3" json:"podLabels,omitempty"`
+	DeploymentLabels *_struct.Struct `protobuf:"bytes,14,opt,name=deploymentLabels,proto3" json:"deploymentLabels,omitempty"`
+	PodLabels        *_struct.Struct `protobuf:"bytes,36,opt,name=podLabels,proto3" json:"podLabels,omitempty"`
 	// Configuration settings passed to Pilot as a ConfigMap.
 	//
 	// This controls whether the mesh config map, generated from values.yaml is generated.
 	// If false, pilot wil use default values or user-supplied values, in that order of preference.
-	ConfigMap *types.BoolValue `protobuf:"bytes,18,opt,name=configMap,proto3" json:"configMap,omitempty"`
+	ConfigMap *wrappers.BoolValue `protobuf:"bytes,18,opt,name=configMap,proto3" json:"configMap,omitempty"`
 	// Controls whether Pilot is configured through the Mesh Control Protocol (MCP).
 	//
 	// If set to true, Pilot requires an MCP server (like Galley) to be installed.
-	UseMCP *types.BoolValue `protobuf:"bytes,20,opt,name=useMCP,proto3" json:"useMCP,omitempty"`
+	UseMCP *wrappers.BoolValue `protobuf:"bytes,20,opt,name=useMCP,proto3" json:"useMCP,omitempty"`
 	// Environment variables passed to the Pilot container.
 	//
 	// Examples:
 	// env:
 	//   ENV_VAR_1: value1
 	//   ENV_VAR_2: value2
-	Env *types.Struct `protobuf:"bytes,21,opt,name=env,proto3" json:"env,omitempty"`
+	Env *_struct.Struct `protobuf:"bytes,21,opt,name=env,proto3" json:"env,omitempty"`
 	// K8s rolling update strategy
-	RollingMaxSurge *IntOrString `protobuf:"bytes,24,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"` // Deprecated: Do not use.
+	//
+	// Deprecated: Do not use.
+	RollingMaxSurge *IntOrString `protobuf:"bytes,24,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"`
 	// K8s rolling update strategy
-	RollingMaxUnavailable *IntOrString `protobuf:"bytes,25,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"` // Deprecated: Do not use.
 	//
-	Tolerations []*types.Struct `protobuf:"bytes,26,rep,name=tolerations,proto3" json:"tolerations,omitempty"` // Deprecated: Do not use.
+	// Deprecated: Do not use.
+	RollingMaxUnavailable *IntOrString `protobuf:"bytes,25,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"`
+	//
+	//
+	// Deprecated: Do not use.
+	Tolerations []*_struct.Struct `protobuf:"bytes,26,rep,name=tolerations,proto3" json:"tolerations,omitempty"`
 	// if protocol sniffing is enabled for outbound
-	EnableProtocolSniffingForOutbound *types.BoolValue `protobuf:"bytes,28,opt,name=enableProtocolSniffingForOutbound,proto3" json:"enableProtocolSniffingForOutbound,omitempty"`
+	EnableProtocolSniffingForOutbound *wrappers.BoolValue `protobuf:"bytes,28,opt,name=enableProtocolSniffingForOutbound,proto3" json:"enableProtocolSniffingForOutbound,omitempty"`
 	// if protocol sniffing is enabled for inbound
-	EnableProtocolSniffingForInbound *types.BoolValue `protobuf:"bytes,29,opt,name=enableProtocolSniffingForInbound,proto3" json:"enableProtocolSniffingForInbound,omitempty"`
+	EnableProtocolSniffingForInbound *wrappers.BoolValue `protobuf:"bytes,29,opt,name=enableProtocolSniffingForInbound,proto3" json:"enableProtocolSniffingForInbound,omitempty"`
 	// K8s annotations for pods.
 	//
 	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
-	PodAnnotations     *types.Struct `protobuf:"bytes,30,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
-	ServiceAnnotations *types.Struct `protobuf:"bytes,37,opt,name=serviceAnnotations,proto3" json:"serviceAnnotations,omitempty"`
+	//
+	// Deprecated: Do not use.
+	PodAnnotations     *_struct.Struct `protobuf:"bytes,30,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"`
+	ServiceAnnotations *_struct.Struct `protobuf:"bytes,37,opt,name=serviceAnnotations,proto3" json:"serviceAnnotations,omitempty"`
 	// ConfigSource describes a source of configuration data for networking
 	// rules, and other Istio configuration artifacts. Multiple data sources
 	// can be configured for a single control plane.
@@ -2481,258 +2647,258 @@ type PilotConfig struct {
 	JwksResolverExtraRootCA string             `protobuf:"bytes,32,opt,name=jwksResolverExtraRootCA,proto3" json:"jwksResolverExtraRootCA,omitempty"`
 	Plugins                 []string           `protobuf:"bytes,33,rep,name=plugins,proto3" json:"plugins,omitempty"`
 	Hub                     string             `protobuf:"bytes,34,opt,name=hub,proto3" json:"hub,omitempty"`
-	Tag                     *types.Value       `protobuf:"bytes,35,opt,name=tag,proto3" json:"tag,omitempty"`
-	XXX_NoUnkeyedLiteral    struct{}           `json:"-"`
-	XXX_unrecognized        []byte             `json:"-"`
-	XXX_sizecache           int32              `json:"-"`
+	Tag                     *_struct.Value     `protobuf:"bytes,35,opt,name=tag,proto3" json:"tag,omitempty"`
 }
 
-func (m *PilotConfig) Reset()         { *m = PilotConfig{} }
-func (m *PilotConfig) String() string { return proto.CompactTextString(m) }
-func (*PilotConfig) ProtoMessage()    {}
-func (*PilotConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{20}
-}
-func (m *PilotConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *PilotConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_PilotConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *PilotConfig) Reset() {
+	*x = PilotConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[20]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *PilotConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_PilotConfig.Merge(m, src)
-}
-func (m *PilotConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *PilotConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *PilotConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_PilotConfig.DiscardUnknown(m)
+
+func (*PilotConfig) ProtoMessage() {}
+
+func (x *PilotConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[20]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_PilotConfig proto.InternalMessageInfo
+// Deprecated: Use PilotConfig.ProtoReflect.Descriptor instead.
+func (*PilotConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{20}
+}
 
-func (m *PilotConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *PilotConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetAutoscaleEnabled() *types.BoolValue {
-	if m != nil {
-		return m.AutoscaleEnabled
+func (x *PilotConfig) GetAutoscaleEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.AutoscaleEnabled
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetAutoscaleMin() uint32 {
-	if m != nil {
-		return m.AutoscaleMin
+func (x *PilotConfig) GetAutoscaleMin() uint32 {
+	if x != nil {
+		return x.AutoscaleMin
 	}
 	return 0
 }
 
-func (m *PilotConfig) GetAutoscaleMax() uint32 {
-	if m != nil {
-		return m.AutoscaleMax
+func (x *PilotConfig) GetAutoscaleMax() uint32 {
+	if x != nil {
+		return x.AutoscaleMax
 	}
 	return 0
 }
 
 // Deprecated: Do not use.
-func (m *PilotConfig) GetReplicaCount() uint32 {
-	if m != nil {
-		return m.ReplicaCount
+func (x *PilotConfig) GetReplicaCount() uint32 {
+	if x != nil {
+		return x.ReplicaCount
 	}
 	return 0
 }
 
-func (m *PilotConfig) GetImage() string {
-	if m != nil {
-		return m.Image
+func (x *PilotConfig) GetImage() string {
+	if x != nil {
+		return x.Image
 	}
 	return ""
 }
 
-func (m *PilotConfig) GetTraceSampling() float64 {
-	if m != nil {
-		return m.TraceSampling
+func (x *PilotConfig) GetTraceSampling() float64 {
+	if x != nil {
+		return x.TraceSampling
 	}
 	return 0
 }
 
 // Deprecated: Do not use.
-func (m *PilotConfig) GetResources() *Resources {
-	if m != nil {
-		return m.Resources
+func (x *PilotConfig) GetResources() *Resources {
+	if x != nil {
+		return x.Resources
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetConfigNamespace() string {
-	if m != nil {
-		return m.ConfigNamespace
+func (x *PilotConfig) GetConfigNamespace() string {
+	if x != nil {
+		return x.ConfigNamespace
 	}
 	return ""
 }
 
 // Deprecated: Do not use.
-func (m *PilotConfig) GetCpu() *CPUTargetUtilizationConfig {
-	if m != nil {
-		return m.Cpu
+func (x *PilotConfig) GetCpu() *CPUTargetUtilizationConfig {
+	if x != nil {
+		return x.Cpu
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *PilotConfig) GetNodeSelector() *types.Struct {
-	if m != nil {
-		return m.NodeSelector
+func (x *PilotConfig) GetNodeSelector() *_struct.Struct {
+	if x != nil {
+		return x.NodeSelector
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetKeepaliveMaxServerConnectionAge() *types.Duration {
-	if m != nil {
-		return m.KeepaliveMaxServerConnectionAge
+func (x *PilotConfig) GetKeepaliveMaxServerConnectionAge() *duration.Duration {
+	if x != nil {
+		return x.KeepaliveMaxServerConnectionAge
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetDeploymentLabels() *types.Struct {
-	if m != nil {
-		return m.DeploymentLabels
+func (x *PilotConfig) GetDeploymentLabels() *_struct.Struct {
+	if x != nil {
+		return x.DeploymentLabels
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetPodLabels() *types.Struct {
-	if m != nil {
-		return m.PodLabels
+func (x *PilotConfig) GetPodLabels() *_struct.Struct {
+	if x != nil {
+		return x.PodLabels
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetConfigMap() *types.BoolValue {
-	if m != nil {
-		return m.ConfigMap
+func (x *PilotConfig) GetConfigMap() *wrappers.BoolValue {
+	if x != nil {
+		return x.ConfigMap
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetUseMCP() *types.BoolValue {
-	if m != nil {
-		return m.UseMCP
+func (x *PilotConfig) GetUseMCP() *wrappers.BoolValue {
+	if x != nil {
+		return x.UseMCP
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetEnv() *types.Struct {
-	if m != nil {
-		return m.Env
+func (x *PilotConfig) GetEnv() *_struct.Struct {
+	if x != nil {
+		return x.Env
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *PilotConfig) GetRollingMaxSurge() *IntOrString {
-	if m != nil {
-		return m.RollingMaxSurge
+func (x *PilotConfig) GetRollingMaxSurge() *IntOrString {
+	if x != nil {
+		return x.RollingMaxSurge
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *PilotConfig) GetRollingMaxUnavailable() *IntOrString {
-	if m != nil {
-		return m.RollingMaxUnavailable
+func (x *PilotConfig) GetRollingMaxUnavailable() *IntOrString {
+	if x != nil {
+		return x.RollingMaxUnavailable
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *PilotConfig) GetTolerations() []*types.Struct {
-	if m != nil {
-		return m.Tolerations
+func (x *PilotConfig) GetTolerations() []*_struct.Struct {
+	if x != nil {
+		return x.Tolerations
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetEnableProtocolSniffingForOutbound() *types.BoolValue {
-	if m != nil {
-		return m.EnableProtocolSniffingForOutbound
+func (x *PilotConfig) GetEnableProtocolSniffingForOutbound() *wrappers.BoolValue {
+	if x != nil {
+		return x.EnableProtocolSniffingForOutbound
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetEnableProtocolSniffingForInbound() *types.BoolValue {
-	if m != nil {
-		return m.EnableProtocolSniffingForInbound
+func (x *PilotConfig) GetEnableProtocolSniffingForInbound() *wrappers.BoolValue {
+	if x != nil {
+		return x.EnableProtocolSniffingForInbound
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *PilotConfig) GetPodAnnotations() *types.Struct {
-	if m != nil {
-		return m.PodAnnotations
+func (x *PilotConfig) GetPodAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.PodAnnotations
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetServiceAnnotations() *types.Struct {
-	if m != nil {
-		return m.ServiceAnnotations
+func (x *PilotConfig) GetServiceAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.ServiceAnnotations
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetConfigSource() *PilotConfigSource {
-	if m != nil {
-		return m.ConfigSource
+func (x *PilotConfig) GetConfigSource() *PilotConfigSource {
+	if x != nil {
+		return x.ConfigSource
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetJwksResolverExtraRootCA() string {
-	if m != nil {
-		return m.JwksResolverExtraRootCA
+func (x *PilotConfig) GetJwksResolverExtraRootCA() string {
+	if x != nil {
+		return x.JwksResolverExtraRootCA
 	}
 	return ""
 }
 
-func (m *PilotConfig) GetPlugins() []string {
-	if m != nil {
-		return m.Plugins
+func (x *PilotConfig) GetPlugins() []string {
+	if x != nil {
+		return x.Plugins
 	}
 	return nil
 }
 
-func (m *PilotConfig) GetHub() string {
-	if m != nil {
-		return m.Hub
+func (x *PilotConfig) GetHub() string {
+	if x != nil {
+		return x.Hub
 	}
 	return ""
 }
 
-func (m *PilotConfig) GetTag() *types.Value {
-	if m != nil {
-		return m.Tag
+func (x *PilotConfig) GetTag() *_struct.Value {
+	if x != nil {
+		return x.Tag
 	}
 	return nil
 }
 
 // Controls legacy k8s ingress. Only one pilot profile should enable ingress support.
 type PilotIngressConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Sets the type ingress service for Pilot.
 	//
 	// If empty, node-port is assumed.
@@ -2741,599 +2907,525 @@ type PilotIngressConfig struct {
 	IngressService        string                `protobuf:"bytes,1,opt,name=ingressService,proto3" json:"ingressService,omitempty"`
 	IngressControllerMode IngressControllerMode `protobuf:"varint,2,opt,name=ingressControllerMode,proto3,enum=v1alpha1.IngressControllerMode" json:"ingressControllerMode,omitempty"`
 	// If mode is STRICT, this value must be set on "kubernetes.io/ingress.class" annotation to activate.
-	IngressClass         string   `protobuf:"bytes,3,opt,name=ingressClass,proto3" json:"ingressClass,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	IngressClass string `protobuf:"bytes,3,opt,name=ingressClass,proto3" json:"ingressClass,omitempty"`
 }
 
-func (m *PilotIngressConfig) Reset()         { *m = PilotIngressConfig{} }
-func (m *PilotIngressConfig) String() string { return proto.CompactTextString(m) }
-func (*PilotIngressConfig) ProtoMessage()    {}
-func (*PilotIngressConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{21}
-}
-func (m *PilotIngressConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *PilotIngressConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_PilotIngressConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *PilotIngressConfig) Reset() {
+	*x = PilotIngressConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[21]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *PilotIngressConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_PilotIngressConfig.Merge(m, src)
-}
-func (m *PilotIngressConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *PilotIngressConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *PilotIngressConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_PilotIngressConfig.DiscardUnknown(m)
+
+func (*PilotIngressConfig) ProtoMessage() {}
+
+func (x *PilotIngressConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[21]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_PilotIngressConfig proto.InternalMessageInfo
+// Deprecated: Use PilotIngressConfig.ProtoReflect.Descriptor instead.
+func (*PilotIngressConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{21}
+}
 
-func (m *PilotIngressConfig) GetIngressService() string {
-	if m != nil {
-		return m.IngressService
+func (x *PilotIngressConfig) GetIngressService() string {
+	if x != nil {
+		return x.IngressService
 	}
 	return ""
 }
 
-func (m *PilotIngressConfig) GetIngressControllerMode() IngressControllerMode {
-	if m != nil {
-		return m.IngressControllerMode
+func (x *PilotIngressConfig) GetIngressControllerMode() IngressControllerMode {
+	if x != nil {
+		return x.IngressControllerMode
 	}
 	return IngressControllerMode_UNSPECIFIED
 }
 
-func (m *PilotIngressConfig) GetIngressClass() string {
-	if m != nil {
-		return m.IngressClass
+func (x *PilotIngressConfig) GetIngressClass() string {
+	if x != nil {
+		return x.IngressClass
 	}
 	return ""
 }
 
 // Controls whether Istio policy is applied to Pilot.
 type PilotPolicyConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether Istio policy is applied to Pilot.
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
 }
 
-func (m *PilotPolicyConfig) Reset()         { *m = PilotPolicyConfig{} }
-func (m *PilotPolicyConfig) String() string { return proto.CompactTextString(m) }
-func (*PilotPolicyConfig) ProtoMessage()    {}
-func (*PilotPolicyConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{22}
-}
-func (m *PilotPolicyConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *PilotPolicyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_PilotPolicyConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *PilotPolicyConfig) Reset() {
+	*x = PilotPolicyConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[22]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *PilotPolicyConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_PilotPolicyConfig.Merge(m, src)
-}
-func (m *PilotPolicyConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *PilotPolicyConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *PilotPolicyConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_PilotPolicyConfig.DiscardUnknown(m)
+
+func (*PilotPolicyConfig) ProtoMessage() {}
+
+func (x *PilotPolicyConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[22]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_PilotPolicyConfig proto.InternalMessageInfo
+// Deprecated: Use PilotPolicyConfig.ProtoReflect.Descriptor instead.
+func (*PilotPolicyConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{22}
+}
 
-func (m *PilotPolicyConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *PilotPolicyConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
 // Controls telemetry configuration
 type TelemetryConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether telemetry is exported for Pilot.
-	Enabled *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
 	// Use telemetry v2.
-	V2                   *TelemetryV2Config `protobuf:"bytes,3,opt,name=v2,proto3" json:"v2,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
-	XXX_unrecognized     []byte             `json:"-"`
-	XXX_sizecache        int32              `json:"-"`
+	V2 *TelemetryV2Config `protobuf:"bytes,3,opt,name=v2,proto3" json:"v2,omitempty"`
 }
 
-func (m *TelemetryConfig) Reset()         { *m = TelemetryConfig{} }
-func (m *TelemetryConfig) String() string { return proto.CompactTextString(m) }
-func (*TelemetryConfig) ProtoMessage()    {}
-func (*TelemetryConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{23}
-}
-func (m *TelemetryConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TelemetryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TelemetryConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *TelemetryConfig) Reset() {
+	*x = TelemetryConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[23]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TelemetryConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TelemetryConfig.Merge(m, src)
-}
-func (m *TelemetryConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TelemetryConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TelemetryConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TelemetryConfig.DiscardUnknown(m)
+
+func (*TelemetryConfig) ProtoMessage() {}
+
+func (x *TelemetryConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[23]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TelemetryConfig proto.InternalMessageInfo
+// Deprecated: Use TelemetryConfig.ProtoReflect.Descriptor instead.
+func (*TelemetryConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{23}
+}
 
-func (m *TelemetryConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *TelemetryConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *TelemetryConfig) GetV2() *TelemetryV2Config {
-	if m != nil {
-		return m.V2
+func (x *TelemetryConfig) GetV2() *TelemetryV2Config {
+	if x != nil {
+		return x.V2
 	}
 	return nil
 }
 
 // Controls whether pilot will configure telemetry v2.
 type TelemetryV2Config struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether pilot will configure telemetry v2.
-	Enabled              *types.BoolValue                        `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	MetadataExchange     *TelemetryV2MetadataExchangeConfig      `protobuf:"bytes,4,opt,name=metadata_exchange,json=metadataExchange,proto3" json:"metadata_exchange,omitempty"`
-	Prometheus           *TelemetryV2PrometheusConfig            `protobuf:"bytes,2,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
-	Stackdriver          *TelemetryV2StackDriverConfig           `protobuf:"bytes,3,opt,name=stackdriver,proto3" json:"stackdriver,omitempty"`
-	AccessLogPolicy      *TelemetryV2AccessLogPolicyFilterConfig `protobuf:"bytes,5,opt,name=access_log_policy,json=accessLogPolicy,proto3" json:"access_log_policy,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
-	XXX_unrecognized     []byte                                  `json:"-"`
-	XXX_sizecache        int32                                   `json:"-"`
-}
-
-func (m *TelemetryV2Config) Reset()         { *m = TelemetryV2Config{} }
-func (m *TelemetryV2Config) String() string { return proto.CompactTextString(m) }
-func (*TelemetryV2Config) ProtoMessage()    {}
-func (*TelemetryV2Config) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{24}
-}
-func (m *TelemetryV2Config) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TelemetryV2Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TelemetryV2Config.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
-	}
+	Enabled          *wrappers.BoolValue                     `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	MetadataExchange *TelemetryV2MetadataExchangeConfig      `protobuf:"bytes,4,opt,name=metadata_exchange,json=metadataExchange,proto3" json:"metadata_exchange,omitempty"`
+	Prometheus       *TelemetryV2PrometheusConfig            `protobuf:"bytes,2,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
+	Stackdriver      *TelemetryV2StackDriverConfig           `protobuf:"bytes,3,opt,name=stackdriver,proto3" json:"stackdriver,omitempty"`
+	AccessLogPolicy  *TelemetryV2AccessLogPolicyFilterConfig `protobuf:"bytes,5,opt,name=access_log_policy,json=accessLogPolicy,proto3" json:"access_log_policy,omitempty"`
 }
-func (m *TelemetryV2Config) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TelemetryV2Config.Merge(m, src)
+
+func (x *TelemetryV2Config) Reset() {
+	*x = TelemetryV2Config{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[24]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *TelemetryV2Config) XXX_Size() int {
-	return m.Size()
+
+func (x *TelemetryV2Config) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TelemetryV2Config) XXX_DiscardUnknown() {
-	xxx_messageInfo_TelemetryV2Config.DiscardUnknown(m)
+
+func (*TelemetryV2Config) ProtoMessage() {}
+
+func (x *TelemetryV2Config) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[24]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TelemetryV2Config proto.InternalMessageInfo
+// Deprecated: Use TelemetryV2Config.ProtoReflect.Descriptor instead.
+func (*TelemetryV2Config) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{24}
+}
 
-func (m *TelemetryV2Config) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *TelemetryV2Config) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *TelemetryV2Config) GetMetadataExchange() *TelemetryV2MetadataExchangeConfig {
-	if m != nil {
-		return m.MetadataExchange
+func (x *TelemetryV2Config) GetMetadataExchange() *TelemetryV2MetadataExchangeConfig {
+	if x != nil {
+		return x.MetadataExchange
 	}
 	return nil
 }
 
-func (m *TelemetryV2Config) GetPrometheus() *TelemetryV2PrometheusConfig {
-	if m != nil {
-		return m.Prometheus
+func (x *TelemetryV2Config) GetPrometheus() *TelemetryV2PrometheusConfig {
+	if x != nil {
+		return x.Prometheus
 	}
 	return nil
 }
 
-func (m *TelemetryV2Config) GetStackdriver() *TelemetryV2StackDriverConfig {
-	if m != nil {
-		return m.Stackdriver
+func (x *TelemetryV2Config) GetStackdriver() *TelemetryV2StackDriverConfig {
+	if x != nil {
+		return x.Stackdriver
 	}
 	return nil
 }
 
-func (m *TelemetryV2Config) GetAccessLogPolicy() *TelemetryV2AccessLogPolicyFilterConfig {
-	if m != nil {
-		return m.AccessLogPolicy
+func (x *TelemetryV2Config) GetAccessLogPolicy() *TelemetryV2AccessLogPolicyFilterConfig {
+	if x != nil {
+		return x.AccessLogPolicy
 	}
 	return nil
 }
 
 type TelemetryV2MetadataExchangeConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether enabled WebAssembly runtime for metadata exchange filter.
-	WasmEnabled          *types.BoolValue `protobuf:"bytes,2,opt,name=wasmEnabled,proto3" json:"wasmEnabled,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	WasmEnabled *wrappers.BoolValue `protobuf:"bytes,2,opt,name=wasmEnabled,proto3" json:"wasmEnabled,omitempty"`
 }
 
-func (m *TelemetryV2MetadataExchangeConfig) Reset()         { *m = TelemetryV2MetadataExchangeConfig{} }
-func (m *TelemetryV2MetadataExchangeConfig) String() string { return proto.CompactTextString(m) }
-func (*TelemetryV2MetadataExchangeConfig) ProtoMessage()    {}
-func (*TelemetryV2MetadataExchangeConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{25}
-}
-func (m *TelemetryV2MetadataExchangeConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TelemetryV2MetadataExchangeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TelemetryV2MetadataExchangeConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *TelemetryV2MetadataExchangeConfig) Reset() {
+	*x = TelemetryV2MetadataExchangeConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[25]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TelemetryV2MetadataExchangeConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TelemetryV2MetadataExchangeConfig.Merge(m, src)
-}
-func (m *TelemetryV2MetadataExchangeConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TelemetryV2MetadataExchangeConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TelemetryV2MetadataExchangeConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TelemetryV2MetadataExchangeConfig.DiscardUnknown(m)
+
+func (*TelemetryV2MetadataExchangeConfig) ProtoMessage() {}
+
+func (x *TelemetryV2MetadataExchangeConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[25]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TelemetryV2MetadataExchangeConfig proto.InternalMessageInfo
+// Deprecated: Use TelemetryV2MetadataExchangeConfig.ProtoReflect.Descriptor instead.
+func (*TelemetryV2MetadataExchangeConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{25}
+}
 
-func (m *TelemetryV2MetadataExchangeConfig) GetWasmEnabled() *types.BoolValue {
-	if m != nil {
-		return m.WasmEnabled
+func (x *TelemetryV2MetadataExchangeConfig) GetWasmEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.WasmEnabled
 	}
 	return nil
 }
 
 // Conrols telemetry v2 prometheus settings.
 type TelemetryV2PrometheusConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether stats envoyfilter would be enabled or not.
-	Enabled *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
 	// Controls whether enabled WebAssembly runtime for stats filter.
-	WasmEnabled *types.BoolValue `protobuf:"bytes,2,opt,name=wasmEnabled,proto3" json:"wasmEnabled,omitempty"`
+	WasmEnabled *wrappers.BoolValue `protobuf:"bytes,2,opt,name=wasmEnabled,proto3" json:"wasmEnabled,omitempty"`
 	// Overrides default telemetry v2 filter configuration.
-	ConfigOverride       *TelemetryV2PrometheusConfig_ConfigOverride `protobuf:"bytes,3,opt,name=config_override,json=configOverride,proto3" json:"config_override,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
-	XXX_unrecognized     []byte                                      `json:"-"`
-	XXX_sizecache        int32                                       `json:"-"`
-}
-
-func (m *TelemetryV2PrometheusConfig) Reset()         { *m = TelemetryV2PrometheusConfig{} }
-func (m *TelemetryV2PrometheusConfig) String() string { return proto.CompactTextString(m) }
-func (*TelemetryV2PrometheusConfig) ProtoMessage()    {}
-func (*TelemetryV2PrometheusConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{26}
-}
-func (m *TelemetryV2PrometheusConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TelemetryV2PrometheusConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TelemetryV2PrometheusConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
-	}
-}
-func (m *TelemetryV2PrometheusConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TelemetryV2PrometheusConfig.Merge(m, src)
-}
-func (m *TelemetryV2PrometheusConfig) XXX_Size() int {
-	return m.Size()
-}
-func (m *TelemetryV2PrometheusConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TelemetryV2PrometheusConfig.DiscardUnknown(m)
-}
-
-var xxx_messageInfo_TelemetryV2PrometheusConfig proto.InternalMessageInfo
-
-func (m *TelemetryV2PrometheusConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
-	}
-	return nil
+	ConfigOverride *TelemetryV2PrometheusConfig_ConfigOverride `protobuf:"bytes,3,opt,name=config_override,json=configOverride,proto3" json:"config_override,omitempty"`
 }
 
-func (m *TelemetryV2PrometheusConfig) GetWasmEnabled() *types.BoolValue {
-	if m != nil {
-		return m.WasmEnabled
+func (x *TelemetryV2PrometheusConfig) Reset() {
+	*x = TelemetryV2PrometheusConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[26]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
-	return nil
 }
 
-func (m *TelemetryV2PrometheusConfig) GetConfigOverride() *TelemetryV2PrometheusConfig_ConfigOverride {
-	if m != nil {
-		return m.ConfigOverride
-	}
-	return nil
+func (x *TelemetryV2PrometheusConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
 
-type TelemetryV2PrometheusConfig_ConfigOverride struct {
-	// Overrides default gateway telemetry v2 configuration.
-	Gateway *types.Struct `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
-	// Overrides default inbound sidecar telemetry v2 configuration.
-	InboundSidecar *types.Struct `protobuf:"bytes,2,opt,name=inboundSidecar,proto3" json:"inboundSidecar,omitempty"`
-	// Overrides default outbound sidecar telemetry v2 configuration.
-	OutboundSidecar      *types.Struct `protobuf:"bytes,3,opt,name=outboundSidecar,proto3" json:"outboundSidecar,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
-	XXX_unrecognized     []byte        `json:"-"`
-	XXX_sizecache        int32         `json:"-"`
-}
+func (*TelemetryV2PrometheusConfig) ProtoMessage() {}
 
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) Reset() {
-	*m = TelemetryV2PrometheusConfig_ConfigOverride{}
-}
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) String() string {
-	return proto.CompactTextString(m)
-}
-func (*TelemetryV2PrometheusConfig_ConfigOverride) ProtoMessage() {}
-func (*TelemetryV2PrometheusConfig_ConfigOverride) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{26, 0}
-}
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TelemetryV2PrometheusConfig_ConfigOverride.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
+func (x *TelemetryV2PrometheusConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[26]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
 		}
-		return b[:n], nil
+		return ms
 	}
-}
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TelemetryV2PrometheusConfig_ConfigOverride.Merge(m, src)
-}
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) XXX_Size() int {
-	return m.Size()
-}
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) XXX_DiscardUnknown() {
-	xxx_messageInfo_TelemetryV2PrometheusConfig_ConfigOverride.DiscardUnknown(m)
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TelemetryV2PrometheusConfig_ConfigOverride proto.InternalMessageInfo
+// Deprecated: Use TelemetryV2PrometheusConfig.ProtoReflect.Descriptor instead.
+func (*TelemetryV2PrometheusConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{26}
+}
 
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) GetGateway() *types.Struct {
-	if m != nil {
-		return m.Gateway
+func (x *TelemetryV2PrometheusConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) GetInboundSidecar() *types.Struct {
-	if m != nil {
-		return m.InboundSidecar
+func (x *TelemetryV2PrometheusConfig) GetWasmEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.WasmEnabled
 	}
 	return nil
 }
 
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) GetOutboundSidecar() *types.Struct {
-	if m != nil {
-		return m.OutboundSidecar
+func (x *TelemetryV2PrometheusConfig) GetConfigOverride() *TelemetryV2PrometheusConfig_ConfigOverride {
+	if x != nil {
+		return x.ConfigOverride
 	}
 	return nil
 }
 
 // Conrols telemetry v2 stackdriver settings.
 type TelemetryV2StackDriverConfig struct {
-	Enabled               *types.BoolValue                           `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	Logging               *types.BoolValue                           `protobuf:"bytes,2,opt,name=logging,proto3" json:"logging,omitempty"` // Deprecated: Do not use.
-	Monitoring            *types.BoolValue                           `protobuf:"bytes,3,opt,name=monitoring,proto3" json:"monitoring,omitempty"`
-	Topology              *types.BoolValue                           `protobuf:"bytes,4,opt,name=topology,proto3" json:"topology,omitempty"` // Deprecated: Do not use.
-	DisableOutbound       *types.BoolValue                           `protobuf:"bytes,6,opt,name=disableOutbound,proto3" json:"disableOutbound,omitempty"`
-	ConfigOverride        *types.Struct                              `protobuf:"bytes,5,opt,name=configOverride,proto3" json:"configOverride,omitempty"`
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	// Deprecated: Do not use.
+	Logging    *wrappers.BoolValue `protobuf:"bytes,2,opt,name=logging,proto3" json:"logging,omitempty"`
+	Monitoring *wrappers.BoolValue `protobuf:"bytes,3,opt,name=monitoring,proto3" json:"monitoring,omitempty"`
+	// Deprecated: Do not use.
+	Topology              *wrappers.BoolValue                        `protobuf:"bytes,4,opt,name=topology,proto3" json:"topology,omitempty"`
+	DisableOutbound       *wrappers.BoolValue                        `protobuf:"bytes,6,opt,name=disableOutbound,proto3" json:"disableOutbound,omitempty"`
+	ConfigOverride        *_struct.Struct                            `protobuf:"bytes,5,opt,name=configOverride,proto3" json:"configOverride,omitempty"`
 	OutboundAccessLogging TelemetryV2StackDriverConfig_AccessLogging `protobuf:"varint,7,opt,name=outboundAccessLogging,proto3,enum=v1alpha1.TelemetryV2StackDriverConfig_AccessLogging" json:"outboundAccessLogging,omitempty"`
 	InboundAccessLogging  TelemetryV2StackDriverConfig_AccessLogging `protobuf:"varint,8,opt,name=inboundAccessLogging,proto3,enum=v1alpha1.TelemetryV2StackDriverConfig_AccessLogging" json:"inboundAccessLogging,omitempty"`
-	XXX_NoUnkeyedLiteral  struct{}                                   `json:"-"`
-	XXX_unrecognized      []byte                                     `json:"-"`
-	XXX_sizecache         int32                                      `json:"-"`
 }
 
-func (m *TelemetryV2StackDriverConfig) Reset()         { *m = TelemetryV2StackDriverConfig{} }
-func (m *TelemetryV2StackDriverConfig) String() string { return proto.CompactTextString(m) }
-func (*TelemetryV2StackDriverConfig) ProtoMessage()    {}
-func (*TelemetryV2StackDriverConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{27}
-}
-func (m *TelemetryV2StackDriverConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TelemetryV2StackDriverConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TelemetryV2StackDriverConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *TelemetryV2StackDriverConfig) Reset() {
+	*x = TelemetryV2StackDriverConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[27]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TelemetryV2StackDriverConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TelemetryV2StackDriverConfig.Merge(m, src)
-}
-func (m *TelemetryV2StackDriverConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TelemetryV2StackDriverConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TelemetryV2StackDriverConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TelemetryV2StackDriverConfig.DiscardUnknown(m)
+
+func (*TelemetryV2StackDriverConfig) ProtoMessage() {}
+
+func (x *TelemetryV2StackDriverConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[27]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TelemetryV2StackDriverConfig proto.InternalMessageInfo
+// Deprecated: Use TelemetryV2StackDriverConfig.ProtoReflect.Descriptor instead.
+func (*TelemetryV2StackDriverConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{27}
+}
 
-func (m *TelemetryV2StackDriverConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *TelemetryV2StackDriverConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *TelemetryV2StackDriverConfig) GetLogging() *types.BoolValue {
-	if m != nil {
-		return m.Logging
+func (x *TelemetryV2StackDriverConfig) GetLogging() *wrappers.BoolValue {
+	if x != nil {
+		return x.Logging
 	}
 	return nil
 }
 
-func (m *TelemetryV2StackDriverConfig) GetMonitoring() *types.BoolValue {
-	if m != nil {
-		return m.Monitoring
+func (x *TelemetryV2StackDriverConfig) GetMonitoring() *wrappers.BoolValue {
+	if x != nil {
+		return x.Monitoring
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *TelemetryV2StackDriverConfig) GetTopology() *types.BoolValue {
-	if m != nil {
-		return m.Topology
+func (x *TelemetryV2StackDriverConfig) GetTopology() *wrappers.BoolValue {
+	if x != nil {
+		return x.Topology
 	}
 	return nil
 }
 
-func (m *TelemetryV2StackDriverConfig) GetDisableOutbound() *types.BoolValue {
-	if m != nil {
-		return m.DisableOutbound
+func (x *TelemetryV2StackDriverConfig) GetDisableOutbound() *wrappers.BoolValue {
+	if x != nil {
+		return x.DisableOutbound
 	}
 	return nil
 }
 
-func (m *TelemetryV2StackDriverConfig) GetConfigOverride() *types.Struct {
-	if m != nil {
-		return m.ConfigOverride
+func (x *TelemetryV2StackDriverConfig) GetConfigOverride() *_struct.Struct {
+	if x != nil {
+		return x.ConfigOverride
 	}
 	return nil
 }
 
-func (m *TelemetryV2StackDriverConfig) GetOutboundAccessLogging() TelemetryV2StackDriverConfig_AccessLogging {
-	if m != nil {
-		return m.OutboundAccessLogging
+func (x *TelemetryV2StackDriverConfig) GetOutboundAccessLogging() TelemetryV2StackDriverConfig_AccessLogging {
+	if x != nil {
+		return x.OutboundAccessLogging
 	}
 	return TelemetryV2StackDriverConfig_NONE
 }
 
-func (m *TelemetryV2StackDriverConfig) GetInboundAccessLogging() TelemetryV2StackDriverConfig_AccessLogging {
-	if m != nil {
-		return m.InboundAccessLogging
+func (x *TelemetryV2StackDriverConfig) GetInboundAccessLogging() TelemetryV2StackDriverConfig_AccessLogging {
+	if x != nil {
+		return x.InboundAccessLogging
 	}
 	return TelemetryV2StackDriverConfig_NONE
 }
 
 // Conrols telemetry v2 access log policy filter settings.
 type TelemetryV2AccessLogPolicyFilterConfig struct {
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	LogWindowDuration    *types.Duration  `protobuf:"bytes,2,opt,name=logWindowDuration,proto3" json:"logWindowDuration,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
-}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
 
-func (m *TelemetryV2AccessLogPolicyFilterConfig) Reset() {
-	*m = TelemetryV2AccessLogPolicyFilterConfig{}
+	Enabled           *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	LogWindowDuration *duration.Duration  `protobuf:"bytes,2,opt,name=logWindowDuration,proto3" json:"logWindowDuration,omitempty"`
 }
-func (m *TelemetryV2AccessLogPolicyFilterConfig) String() string { return proto.CompactTextString(m) }
-func (*TelemetryV2AccessLogPolicyFilterConfig) ProtoMessage()    {}
-func (*TelemetryV2AccessLogPolicyFilterConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{28}
-}
-func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+
+func (x *TelemetryV2AccessLogPolicyFilterConfig) Reset() {
+	*x = TelemetryV2AccessLogPolicyFilterConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[28]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig.Merge(m, src)
-}
-func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TelemetryV2AccessLogPolicyFilterConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig.DiscardUnknown(m)
+
+func (*TelemetryV2AccessLogPolicyFilterConfig) ProtoMessage() {}
+
+func (x *TelemetryV2AccessLogPolicyFilterConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[28]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig proto.InternalMessageInfo
+// Deprecated: Use TelemetryV2AccessLogPolicyFilterConfig.ProtoReflect.Descriptor instead.
+func (*TelemetryV2AccessLogPolicyFilterConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{28}
+}
 
-func (m *TelemetryV2AccessLogPolicyFilterConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *TelemetryV2AccessLogPolicyFilterConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *TelemetryV2AccessLogPolicyFilterConfig) GetLogWindowDuration() *types.Duration {
-	if m != nil {
-		return m.LogWindowDuration
+func (x *TelemetryV2AccessLogPolicyFilterConfig) GetLogWindowDuration() *duration.Duration {
+	if x != nil {
+		return x.LogWindowDuration
 	}
 	return nil
 }
@@ -3342,55 +3434,59 @@ func (m *TelemetryV2AccessLogPolicyFilterConfig) GetLogWindowDuration() *types.D
 // mesh. A single control plane instance can interact with one or more data
 // sources.
 type PilotConfigSource struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Describes the source of configuration, if nothing is specified default is MCP.
-	SubscribedResources  []string `protobuf:"bytes,1,rep,name=subscribedResources,proto3" json:"subscribedResources,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	SubscribedResources []string `protobuf:"bytes,1,rep,name=subscribedResources,proto3" json:"subscribedResources,omitempty"`
 }
 
-func (m *PilotConfigSource) Reset()         { *m = PilotConfigSource{} }
-func (m *PilotConfigSource) String() string { return proto.CompactTextString(m) }
-func (*PilotConfigSource) ProtoMessage()    {}
-func (*PilotConfigSource) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{29}
-}
-func (m *PilotConfigSource) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *PilotConfigSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_PilotConfigSource.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *PilotConfigSource) Reset() {
+	*x = PilotConfigSource{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[29]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *PilotConfigSource) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_PilotConfigSource.Merge(m, src)
-}
-func (m *PilotConfigSource) XXX_Size() int {
-	return m.Size()
+
+func (x *PilotConfigSource) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *PilotConfigSource) XXX_DiscardUnknown() {
-	xxx_messageInfo_PilotConfigSource.DiscardUnknown(m)
+
+func (*PilotConfigSource) ProtoMessage() {}
+
+func (x *PilotConfigSource) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[29]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_PilotConfigSource proto.InternalMessageInfo
+// Deprecated: Use PilotConfigSource.ProtoReflect.Descriptor instead.
+func (*PilotConfigSource) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{29}
+}
 
-func (m *PilotConfigSource) GetSubscribedResources() []string {
-	if m != nil {
-		return m.SubscribedResources
+func (x *PilotConfigSource) GetSubscribedResources() []string {
+	if x != nil {
+		return x.SubscribedResources
 	}
 	return nil
 }
 
 // Configuration for a port.
 type PortsConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Port name.
 	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
 	// Port number.
@@ -3400,82 +3496,82 @@ type PortsConfig struct {
 	// Target port number.
 	TargetPort int32 `protobuf:"varint,4,opt,name=targetPort,proto3" json:"targetPort,omitempty"`
 	// Protocol name.
-	Protocol             string   `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	Protocol string `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
 }
 
-func (m *PortsConfig) Reset()         { *m = PortsConfig{} }
-func (m *PortsConfig) String() string { return proto.CompactTextString(m) }
-func (*PortsConfig) ProtoMessage()    {}
-func (*PortsConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{30}
-}
-func (m *PortsConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *PortsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_PortsConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *PortsConfig) Reset() {
+	*x = PortsConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[30]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *PortsConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_PortsConfig.Merge(m, src)
-}
-func (m *PortsConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *PortsConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *PortsConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_PortsConfig.DiscardUnknown(m)
+
+func (*PortsConfig) ProtoMessage() {}
+
+func (x *PortsConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[30]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_PortsConfig proto.InternalMessageInfo
+// Deprecated: Use PortsConfig.ProtoReflect.Descriptor instead.
+func (*PortsConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{30}
+}
 
-func (m *PortsConfig) GetName() string {
-	if m != nil {
-		return m.Name
+func (x *PortsConfig) GetName() string {
+	if x != nil {
+		return x.Name
 	}
 	return ""
 }
 
-func (m *PortsConfig) GetPort() int32 {
-	if m != nil {
-		return m.Port
+func (x *PortsConfig) GetPort() int32 {
+	if x != nil {
+		return x.Port
 	}
 	return 0
 }
 
-func (m *PortsConfig) GetNodePort() int32 {
-	if m != nil {
-		return m.NodePort
+func (x *PortsConfig) GetNodePort() int32 {
+	if x != nil {
+		return x.NodePort
 	}
 	return 0
 }
 
-func (m *PortsConfig) GetTargetPort() int32 {
-	if m != nil {
-		return m.TargetPort
+func (x *PortsConfig) GetTargetPort() int32 {
+	if x != nil {
+		return x.TargetPort
 	}
 	return 0
 }
 
-func (m *PortsConfig) GetProtocol() string {
-	if m != nil {
-		return m.Protocol
+func (x *PortsConfig) GetProtocol() string {
+	if x != nil {
+		return x.Protocol
 	}
 	return ""
 }
 
 // Configuration for Proxy.
 type ProxyConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	AutoInject string `protobuf:"bytes,4,opt,name=autoInject,proto3" json:"autoInject,omitempty"`
 	// Domain for the cluster, default: "cluster.local".
 	//
@@ -3488,7 +3584,7 @@ type ProxyConfig struct {
 	// Enables core dumps for newly injected sidecars.
 	//
 	// If set, newly injected sidecars will have core dumps enabled.
-	EnableCoreDump *types.BoolValue `protobuf:"bytes,9,opt,name=enableCoreDump,proto3" json:"enableCoreDump,omitempty"`
+	EnableCoreDump *wrappers.BoolValue `protobuf:"bytes,9,opt,name=enableCoreDump,proto3" json:"enableCoreDump,omitempty"`
 	// Specifies the Istio ingress ports not to capture.
 	ExcludeInboundPorts string `protobuf:"bytes,12,opt,name=excludeInboundPorts,proto3" json:"excludeInboundPorts,omitempty"`
 	// Lists the excluded IP ranges of Istio egress traffic that the sidecar captures.
@@ -3509,7 +3605,7 @@ type ProxyConfig struct {
 	// Enables privileged securityContext for the istio-proxy container.
 	//
 	// See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
-	Privileged *types.BoolValue `protobuf:"bytes,19,opt,name=privileged,proto3" json:"privileged,omitempty"`
+	Privileged *wrappers.BoolValue `protobuf:"bytes,19,opt,name=privileged,proto3" json:"privileged,omitempty"`
 	// Sets the initial delay for readiness probes in seconds.
 	ReadinessInitialDelaySeconds uint32 `protobuf:"varint,20,opt,name=readinessInitialDelaySeconds,proto3" json:"readinessInitialDelaySeconds,omitempty"`
 	// Sets the interval between readiness probes in seconds.
@@ -3521,365 +3617,368 @@ type ProxyConfig struct {
 	// K8s resources settings.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
-	Resources            *Resources    `protobuf:"bytes,24,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
-	Tracer               Tracer        `protobuf:"varint,25,opt,name=tracer,proto3,enum=v1alpha1.Tracer" json:"tracer,omitempty"`
-	ExcludeOutboundPorts string        `protobuf:"bytes,28,opt,name=excludeOutboundPorts,proto3" json:"excludeOutboundPorts,omitempty"`
-	Lifecycle            *types.Struct `protobuf:"bytes,36,opt,name=lifecycle,proto3" json:"lifecycle,omitempty"`
+	//
+	// Deprecated: Do not use.
+	Resources            *Resources      `protobuf:"bytes,24,opt,name=resources,proto3" json:"resources,omitempty"`
+	Tracer               Tracer          `protobuf:"varint,25,opt,name=tracer,proto3,enum=v1alpha1.Tracer" json:"tracer,omitempty"`
+	ExcludeOutboundPorts string          `protobuf:"bytes,28,opt,name=excludeOutboundPorts,proto3" json:"excludeOutboundPorts,omitempty"`
+	Lifecycle            *_struct.Struct `protobuf:"bytes,36,opt,name=lifecycle,proto3" json:"lifecycle,omitempty"`
 	// Controls if sidecar is injected at the front of the container list and blocks the start of the other containers until the proxy is ready
 	//
 	// Deprecated: replaced by ProxyConfig setting which allows per-pod configuration of this behavior.
-	HoldApplicationUntilProxyStarts *types.BoolValue `protobuf:"bytes,37,opt,name=holdApplicationUntilProxyStarts,proto3" json:"holdApplicationUntilProxyStarts,omitempty"` // Deprecated: Do not use.
-	IncludeInboundPorts             string           `protobuf:"bytes,38,opt,name=includeInboundPorts,proto3" json:"includeInboundPorts,omitempty"`
-	IncludeOutboundPorts            string           `protobuf:"bytes,39,opt,name=includeOutboundPorts,proto3" json:"includeOutboundPorts,omitempty"`
-	XXX_NoUnkeyedLiteral            struct{}         `json:"-"`
-	XXX_unrecognized                []byte           `json:"-"`
-	XXX_sizecache                   int32            `json:"-"`
+	//
+	// Deprecated: Do not use.
+	HoldApplicationUntilProxyStarts *wrappers.BoolValue `protobuf:"bytes,37,opt,name=holdApplicationUntilProxyStarts,proto3" json:"holdApplicationUntilProxyStarts,omitempty"`
+	IncludeInboundPorts             string              `protobuf:"bytes,38,opt,name=includeInboundPorts,proto3" json:"includeInboundPorts,omitempty"`
+	IncludeOutboundPorts            string              `protobuf:"bytes,39,opt,name=includeOutboundPorts,proto3" json:"includeOutboundPorts,omitempty"`
 }
 
-func (m *ProxyConfig) Reset()         { *m = ProxyConfig{} }
-func (m *ProxyConfig) String() string { return proto.CompactTextString(m) }
-func (*ProxyConfig) ProtoMessage()    {}
-func (*ProxyConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{31}
-}
-func (m *ProxyConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *ProxyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_ProxyConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *ProxyConfig) Reset() {
+	*x = ProxyConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[31]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *ProxyConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ProxyConfig.Merge(m, src)
-}
-func (m *ProxyConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *ProxyConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *ProxyConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_ProxyConfig.DiscardUnknown(m)
+
+func (*ProxyConfig) ProtoMessage() {}
+
+func (x *ProxyConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[31]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_ProxyConfig proto.InternalMessageInfo
+// Deprecated: Use ProxyConfig.ProtoReflect.Descriptor instead.
+func (*ProxyConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{31}
+}
 
-func (m *ProxyConfig) GetAutoInject() string {
-	if m != nil {
-		return m.AutoInject
+func (x *ProxyConfig) GetAutoInject() string {
+	if x != nil {
+		return x.AutoInject
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetClusterDomain() string {
-	if m != nil {
-		return m.ClusterDomain
+func (x *ProxyConfig) GetClusterDomain() string {
+	if x != nil {
+		return x.ClusterDomain
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetComponentLogLevel() string {
-	if m != nil {
-		return m.ComponentLogLevel
+func (x *ProxyConfig) GetComponentLogLevel() string {
+	if x != nil {
+		return x.ComponentLogLevel
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetEnableCoreDump() *types.BoolValue {
-	if m != nil {
-		return m.EnableCoreDump
+func (x *ProxyConfig) GetEnableCoreDump() *wrappers.BoolValue {
+	if x != nil {
+		return x.EnableCoreDump
 	}
 	return nil
 }
 
-func (m *ProxyConfig) GetExcludeInboundPorts() string {
-	if m != nil {
-		return m.ExcludeInboundPorts
+func (x *ProxyConfig) GetExcludeInboundPorts() string {
+	if x != nil {
+		return x.ExcludeInboundPorts
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetExcludeIPRanges() string {
-	if m != nil {
-		return m.ExcludeIPRanges
+func (x *ProxyConfig) GetExcludeIPRanges() string {
+	if x != nil {
+		return x.ExcludeIPRanges
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetImage() string {
-	if m != nil {
-		return m.Image
+func (x *ProxyConfig) GetImage() string {
+	if x != nil {
+		return x.Image
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetIncludeIPRanges() string {
-	if m != nil {
-		return m.IncludeIPRanges
+func (x *ProxyConfig) GetIncludeIPRanges() string {
+	if x != nil {
+		return x.IncludeIPRanges
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetLogLevel() string {
-	if m != nil {
-		return m.LogLevel
+func (x *ProxyConfig) GetLogLevel() string {
+	if x != nil {
+		return x.LogLevel
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetPrivileged() *types.BoolValue {
-	if m != nil {
-		return m.Privileged
+func (x *ProxyConfig) GetPrivileged() *wrappers.BoolValue {
+	if x != nil {
+		return x.Privileged
 	}
 	return nil
 }
 
-func (m *ProxyConfig) GetReadinessInitialDelaySeconds() uint32 {
-	if m != nil {
-		return m.ReadinessInitialDelaySeconds
+func (x *ProxyConfig) GetReadinessInitialDelaySeconds() uint32 {
+	if x != nil {
+		return x.ReadinessInitialDelaySeconds
 	}
 	return 0
 }
 
-func (m *ProxyConfig) GetReadinessPeriodSeconds() uint32 {
-	if m != nil {
-		return m.ReadinessPeriodSeconds
+func (x *ProxyConfig) GetReadinessPeriodSeconds() uint32 {
+	if x != nil {
+		return x.ReadinessPeriodSeconds
 	}
 	return 0
 }
 
-func (m *ProxyConfig) GetReadinessFailureThreshold() uint32 {
-	if m != nil {
-		return m.ReadinessFailureThreshold
+func (x *ProxyConfig) GetReadinessFailureThreshold() uint32 {
+	if x != nil {
+		return x.ReadinessFailureThreshold
 	}
 	return 0
 }
 
-func (m *ProxyConfig) GetStatusPort() uint32 {
-	if m != nil {
-		return m.StatusPort
+func (x *ProxyConfig) GetStatusPort() uint32 {
+	if x != nil {
+		return x.StatusPort
 	}
 	return 0
 }
 
 // Deprecated: Do not use.
-func (m *ProxyConfig) GetResources() *Resources {
-	if m != nil {
-		return m.Resources
+func (x *ProxyConfig) GetResources() *Resources {
+	if x != nil {
+		return x.Resources
 	}
 	return nil
 }
 
-func (m *ProxyConfig) GetTracer() Tracer {
-	if m != nil {
-		return m.Tracer
+func (x *ProxyConfig) GetTracer() Tracer {
+	if x != nil {
+		return x.Tracer
 	}
 	return Tracer_zipkin
 }
 
-func (m *ProxyConfig) GetExcludeOutboundPorts() string {
-	if m != nil {
-		return m.ExcludeOutboundPorts
+func (x *ProxyConfig) GetExcludeOutboundPorts() string {
+	if x != nil {
+		return x.ExcludeOutboundPorts
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetLifecycle() *types.Struct {
-	if m != nil {
-		return m.Lifecycle
+func (x *ProxyConfig) GetLifecycle() *_struct.Struct {
+	if x != nil {
+		return x.Lifecycle
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *ProxyConfig) GetHoldApplicationUntilProxyStarts() *types.BoolValue {
-	if m != nil {
-		return m.HoldApplicationUntilProxyStarts
+func (x *ProxyConfig) GetHoldApplicationUntilProxyStarts() *wrappers.BoolValue {
+	if x != nil {
+		return x.HoldApplicationUntilProxyStarts
 	}
 	return nil
 }
 
-func (m *ProxyConfig) GetIncludeInboundPorts() string {
-	if m != nil {
-		return m.IncludeInboundPorts
+func (x *ProxyConfig) GetIncludeInboundPorts() string {
+	if x != nil {
+		return x.IncludeInboundPorts
 	}
 	return ""
 }
 
-func (m *ProxyConfig) GetIncludeOutboundPorts() string {
-	if m != nil {
-		return m.IncludeOutboundPorts
+func (x *ProxyConfig) GetIncludeOutboundPorts() string {
+	if x != nil {
+		return x.IncludeOutboundPorts
 	}
 	return ""
 }
 
 // Configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
 type ProxyInitConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Specifies the image for the proxy_init container.
 	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
 	// K8s resources settings.
 	//
 	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
-	Resources            *Resources `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
-	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
-	XXX_unrecognized     []byte     `json:"-"`
-	XXX_sizecache        int32      `json:"-"`
+	//
+	// Deprecated: Do not use.
+	Resources *Resources `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
 }
 
-func (m *ProxyInitConfig) Reset()         { *m = ProxyInitConfig{} }
-func (m *ProxyInitConfig) String() string { return proto.CompactTextString(m) }
-func (*ProxyInitConfig) ProtoMessage()    {}
-func (*ProxyInitConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{32}
-}
-func (m *ProxyInitConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *ProxyInitConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_ProxyInitConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *ProxyInitConfig) Reset() {
+	*x = ProxyInitConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[32]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *ProxyInitConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ProxyInitConfig.Merge(m, src)
-}
-func (m *ProxyInitConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *ProxyInitConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *ProxyInitConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_ProxyInitConfig.DiscardUnknown(m)
+
+func (*ProxyInitConfig) ProtoMessage() {}
+
+func (x *ProxyInitConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[32]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_ProxyInitConfig proto.InternalMessageInfo
+// Deprecated: Use ProxyInitConfig.ProtoReflect.Descriptor instead.
+func (*ProxyInitConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{32}
+}
 
-func (m *ProxyInitConfig) GetImage() string {
-	if m != nil {
-		return m.Image
+func (x *ProxyInitConfig) GetImage() string {
+	if x != nil {
+		return x.Image
 	}
 	return ""
 }
 
 // Deprecated: Do not use.
-func (m *ProxyInitConfig) GetResources() *Resources {
-	if m != nil {
-		return m.Resources
+func (x *ProxyInitConfig) GetResources() *Resources {
+	if x != nil {
+		return x.Resources
 	}
 	return nil
 }
 
 // Configuration for K8s resource requests.
 type ResourcesRequestsConfig struct {
-	Cpu                  string   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
-	Memory               string   `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Cpu    string `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
+	Memory string `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
 }
 
-func (m *ResourcesRequestsConfig) Reset()         { *m = ResourcesRequestsConfig{} }
-func (m *ResourcesRequestsConfig) String() string { return proto.CompactTextString(m) }
-func (*ResourcesRequestsConfig) ProtoMessage()    {}
-func (*ResourcesRequestsConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{33}
-}
-func (m *ResourcesRequestsConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *ResourcesRequestsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_ResourcesRequestsConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *ResourcesRequestsConfig) Reset() {
+	*x = ResourcesRequestsConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[33]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *ResourcesRequestsConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ResourcesRequestsConfig.Merge(m, src)
-}
-func (m *ResourcesRequestsConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *ResourcesRequestsConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *ResourcesRequestsConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_ResourcesRequestsConfig.DiscardUnknown(m)
+
+func (*ResourcesRequestsConfig) ProtoMessage() {}
+
+func (x *ResourcesRequestsConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[33]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_ResourcesRequestsConfig proto.InternalMessageInfo
+// Deprecated: Use ResourcesRequestsConfig.ProtoReflect.Descriptor instead.
+func (*ResourcesRequestsConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{33}
+}
 
-func (m *ResourcesRequestsConfig) GetCpu() string {
-	if m != nil {
-		return m.Cpu
+func (x *ResourcesRequestsConfig) GetCpu() string {
+	if x != nil {
+		return x.Cpu
 	}
 	return ""
 }
 
-func (m *ResourcesRequestsConfig) GetMemory() string {
-	if m != nil {
-		return m.Memory
+func (x *ResourcesRequestsConfig) GetMemory() string {
+	if x != nil {
+		return x.Memory
 	}
 	return ""
 }
 
 // Configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
 type SDSConfig struct {
-	Token                *types.Struct `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"` // Deprecated: Do not use.
-	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
-	XXX_unrecognized     []byte        `json:"-"`
-	XXX_sizecache        int32         `json:"-"`
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	// Deprecated: Do not use.
+	Token *_struct.Struct `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
 }
 
-func (m *SDSConfig) Reset()         { *m = SDSConfig{} }
-func (m *SDSConfig) String() string { return proto.CompactTextString(m) }
-func (*SDSConfig) ProtoMessage()    {}
-func (*SDSConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{34}
-}
-func (m *SDSConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *SDSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_SDSConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *SDSConfig) Reset() {
+	*x = SDSConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[34]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *SDSConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_SDSConfig.Merge(m, src)
-}
-func (m *SDSConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *SDSConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *SDSConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_SDSConfig.DiscardUnknown(m)
+
+func (*SDSConfig) ProtoMessage() {}
+
+func (x *SDSConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[34]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_SDSConfig proto.InternalMessageInfo
+// Deprecated: Use SDSConfig.ProtoReflect.Descriptor instead.
+func (*SDSConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{34}
+}
 
 // Deprecated: Do not use.
-func (m *SDSConfig) GetToken() *types.Struct {
-	if m != nil {
-		return m.Token
+func (x *SDSConfig) GetToken() *_struct.Struct {
+	if x != nil {
+		return x.Token
 	}
 	return nil
 }
@@ -3888,159 +3987,163 @@ func (m *SDSConfig) GetToken() *types.Struct {
 //
 // See https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets.
 type SecretVolume struct {
-	MountPath            string   `protobuf:"bytes,1,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
-	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
-	SecretName           string   `protobuf:"bytes,3,opt,name=secretName,proto3" json:"secretName,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	MountPath  string `protobuf:"bytes,1,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
+	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
+	SecretName string `protobuf:"bytes,3,opt,name=secretName,proto3" json:"secretName,omitempty"`
 }
 
-func (m *SecretVolume) Reset()         { *m = SecretVolume{} }
-func (m *SecretVolume) String() string { return proto.CompactTextString(m) }
-func (*SecretVolume) ProtoMessage()    {}
-func (*SecretVolume) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{35}
-}
-func (m *SecretVolume) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *SecretVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_SecretVolume.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *SecretVolume) Reset() {
+	*x = SecretVolume{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[35]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *SecretVolume) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_SecretVolume.Merge(m, src)
-}
-func (m *SecretVolume) XXX_Size() int {
-	return m.Size()
+
+func (x *SecretVolume) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *SecretVolume) XXX_DiscardUnknown() {
-	xxx_messageInfo_SecretVolume.DiscardUnknown(m)
+
+func (*SecretVolume) ProtoMessage() {}
+
+func (x *SecretVolume) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[35]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_SecretVolume proto.InternalMessageInfo
+// Deprecated: Use SecretVolume.ProtoReflect.Descriptor instead.
+func (*SecretVolume) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{35}
+}
 
-func (m *SecretVolume) GetMountPath() string {
-	if m != nil {
-		return m.MountPath
+func (x *SecretVolume) GetMountPath() string {
+	if x != nil {
+		return x.MountPath
 	}
 	return ""
 }
 
-func (m *SecretVolume) GetName() string {
-	if m != nil {
-		return m.Name
+func (x *SecretVolume) GetName() string {
+	if x != nil {
+		return x.Name
 	}
 	return ""
 }
 
-func (m *SecretVolume) GetSecretName() string {
-	if m != nil {
-		return m.SecretName
+func (x *SecretVolume) GetSecretName() string {
+	if x != nil {
+		return x.SecretName
 	}
 	return ""
 }
 
 // ServiceConfig is described in istio.io documentation.
 type ServiceConfig struct {
-	Annotations          *types.Struct `protobuf:"bytes,1,opt,name=annotations,proto3" json:"annotations,omitempty"`
-	ExternalPort         uint32        `protobuf:"varint,2,opt,name=externalPort,proto3" json:"externalPort,omitempty"`
-	Name                 string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
-	Type                 string        `protobuf:"bytes,18,opt,name=type,proto3" json:"type,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
-	XXX_unrecognized     []byte        `json:"-"`
-	XXX_sizecache        int32         `json:"-"`
-}
-
-func (m *ServiceConfig) Reset()         { *m = ServiceConfig{} }
-func (m *ServiceConfig) String() string { return proto.CompactTextString(m) }
-func (*ServiceConfig) ProtoMessage()    {}
-func (*ServiceConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{36}
-}
-func (m *ServiceConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *ServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_ServiceConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Annotations  *_struct.Struct `protobuf:"bytes,1,opt,name=annotations,proto3" json:"annotations,omitempty"`
+	ExternalPort uint32          `protobuf:"varint,2,opt,name=externalPort,proto3" json:"externalPort,omitempty"`
+	Name         string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
+	Type         string          `protobuf:"bytes,18,opt,name=type,proto3" json:"type,omitempty"`
+}
+
+func (x *ServiceConfig) Reset() {
+	*x = ServiceConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[36]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *ServiceConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ServiceConfig.Merge(m, src)
-}
-func (m *ServiceConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *ServiceConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *ServiceConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_ServiceConfig.DiscardUnknown(m)
+
+func (*ServiceConfig) ProtoMessage() {}
+
+func (x *ServiceConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[36]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_ServiceConfig proto.InternalMessageInfo
+// Deprecated: Use ServiceConfig.ProtoReflect.Descriptor instead.
+func (*ServiceConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{36}
+}
 
-func (m *ServiceConfig) GetAnnotations() *types.Struct {
-	if m != nil {
-		return m.Annotations
+func (x *ServiceConfig) GetAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.Annotations
 	}
 	return nil
 }
 
-func (m *ServiceConfig) GetExternalPort() uint32 {
-	if m != nil {
-		return m.ExternalPort
+func (x *ServiceConfig) GetExternalPort() uint32 {
+	if x != nil {
+		return x.ExternalPort
 	}
 	return 0
 }
 
-func (m *ServiceConfig) GetName() string {
-	if m != nil {
-		return m.Name
+func (x *ServiceConfig) GetName() string {
+	if x != nil {
+		return x.Name
 	}
 	return ""
 }
 
-func (m *ServiceConfig) GetType() string {
-	if m != nil {
-		return m.Type
+func (x *ServiceConfig) GetType() string {
+	if x != nil {
+		return x.Type
 	}
 	return ""
 }
 
 // SidecarInjectorConfig is described in istio.io documentation.
 type SidecarInjectorConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Enables sidecar auto-injection in namespaces by default.
-	EnableNamespacesByDefault *types.BoolValue `protobuf:"bytes,2,opt,name=enableNamespacesByDefault,proto3" json:"enableNamespacesByDefault,omitempty"`
+	EnableNamespacesByDefault *wrappers.BoolValue `protobuf:"bytes,2,opt,name=enableNamespacesByDefault,proto3" json:"enableNamespacesByDefault,omitempty"`
 	// Instructs Istio to not inject the sidecar on those pods, based on labels that are present in those pods.
 	//
 	// Annotations in the pods have higher precedence than the label selectors.
 	// Order of evaluation: Pod Annotations → NeverInjectSelector → AlwaysInjectSelector → Default Policy.
 	// See https://istio.io/docs/setup/kubernetes/additional-setup/sidecar-injection/#more-control-adding-exceptions
-	NeverInjectSelector []*types.Struct `protobuf:"bytes,11,rep,name=neverInjectSelector,proto3" json:"neverInjectSelector,omitempty"`
+	NeverInjectSelector []*_struct.Struct `protobuf:"bytes,11,rep,name=neverInjectSelector,proto3" json:"neverInjectSelector,omitempty"`
 	// See NeverInjectSelector.
-	AlwaysInjectSelector []*types.Struct `protobuf:"bytes,12,rep,name=alwaysInjectSelector,proto3" json:"alwaysInjectSelector,omitempty"`
+	AlwaysInjectSelector []*_struct.Struct `protobuf:"bytes,12,rep,name=alwaysInjectSelector,proto3" json:"alwaysInjectSelector,omitempty"`
 	//  If true, webhook or istioctl injector will rewrite PodSpec for liveness health check to redirect request to sidecar. This makes liveness check work even when mTLS is enabled.
-	RewriteAppHTTPProbe *types.BoolValue `protobuf:"bytes,16,opt,name=rewriteAppHTTPProbe,proto3" json:"rewriteAppHTTPProbe,omitempty"`
+	RewriteAppHTTPProbe *wrappers.BoolValue `protobuf:"bytes,16,opt,name=rewriteAppHTTPProbe,proto3" json:"rewriteAppHTTPProbe,omitempty"`
 	// injectedAnnotations are additional annotations that will be added to the pod spec after injection
 	// This is primarily to support PSP annotations.
-	InjectedAnnotations *types.Struct `protobuf:"bytes,19,opt,name=injectedAnnotations,proto3" json:"injectedAnnotations,omitempty"`
+	InjectedAnnotations *_struct.Struct `protobuf:"bytes,19,opt,name=injectedAnnotations,proto3" json:"injectedAnnotations,omitempty"`
 	// Enable objectSelector to filter out pods with no need for sidecar before calling istio-sidecar-injector.
-	ObjectSelector *types.Struct `protobuf:"bytes,21,opt,name=objectSelector,proto3" json:"objectSelector,omitempty"`
+	ObjectSelector *_struct.Struct `protobuf:"bytes,21,opt,name=objectSelector,proto3" json:"objectSelector,omitempty"`
 	// Configure the injection url for sidecar injector webhook
 	InjectionURL string `protobuf:"bytes,22,opt,name=injectionURL,proto3" json:"injectionURL,omitempty"`
 	// Templates defines a set of custom injection templates that can be used. For example, defining:
@@ -4054,124 +4157,126 @@ type SidecarInjectorConfig struct {
 	// Then starting a pod with the `inject.istio.io/templates: hello` annotation, will result in the pod
 	// being injected with the hello=world labels.
 	// This is intended for advanced configuration only; most users should use the built in template
-	Templates *types.Struct `protobuf:"bytes,23,opt,name=templates,proto3" json:"templates,omitempty"`
+	Templates *_struct.Struct `protobuf:"bytes,23,opt,name=templates,proto3" json:"templates,omitempty"`
 	// defaultTemplates: ["sidecar", "hello"]
 	DefaultTemplates []string `protobuf:"bytes,24,rep,name=defaultTemplates,proto3" json:"defaultTemplates,omitempty"`
 	// If enabled, the legacy webhook selection logic will be used. This relies on filtering of webhook
 	// requests in Istiod, rather than at the webhook selection level.
 	// This is option is intended for migration purposes only and will be removed in Istio 1.10.
-	UseLegacySelectors   *types.BoolValue `protobuf:"bytes,4,opt,name=useLegacySelectors,proto3" json:"useLegacySelectors,omitempty"` // Deprecated: Do not use.
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	//
+	// Deprecated: Do not use.
+	UseLegacySelectors *wrappers.BoolValue `protobuf:"bytes,4,opt,name=useLegacySelectors,proto3" json:"useLegacySelectors,omitempty"`
 }
 
-func (m *SidecarInjectorConfig) Reset()         { *m = SidecarInjectorConfig{} }
-func (m *SidecarInjectorConfig) String() string { return proto.CompactTextString(m) }
-func (*SidecarInjectorConfig) ProtoMessage()    {}
-func (*SidecarInjectorConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{37}
-}
-func (m *SidecarInjectorConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *SidecarInjectorConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_SidecarInjectorConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *SidecarInjectorConfig) Reset() {
+	*x = SidecarInjectorConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[37]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *SidecarInjectorConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_SidecarInjectorConfig.Merge(m, src)
-}
-func (m *SidecarInjectorConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *SidecarInjectorConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *SidecarInjectorConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_SidecarInjectorConfig.DiscardUnknown(m)
+
+func (*SidecarInjectorConfig) ProtoMessage() {}
+
+func (x *SidecarInjectorConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[37]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_SidecarInjectorConfig proto.InternalMessageInfo
+// Deprecated: Use SidecarInjectorConfig.ProtoReflect.Descriptor instead.
+func (*SidecarInjectorConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{37}
+}
 
-func (m *SidecarInjectorConfig) GetEnableNamespacesByDefault() *types.BoolValue {
-	if m != nil {
-		return m.EnableNamespacesByDefault
+func (x *SidecarInjectorConfig) GetEnableNamespacesByDefault() *wrappers.BoolValue {
+	if x != nil {
+		return x.EnableNamespacesByDefault
 	}
 	return nil
 }
 
-func (m *SidecarInjectorConfig) GetNeverInjectSelector() []*types.Struct {
-	if m != nil {
-		return m.NeverInjectSelector
+func (x *SidecarInjectorConfig) GetNeverInjectSelector() []*_struct.Struct {
+	if x != nil {
+		return x.NeverInjectSelector
 	}
 	return nil
 }
 
-func (m *SidecarInjectorConfig) GetAlwaysInjectSelector() []*types.Struct {
-	if m != nil {
-		return m.AlwaysInjectSelector
+func (x *SidecarInjectorConfig) GetAlwaysInjectSelector() []*_struct.Struct {
+	if x != nil {
+		return x.AlwaysInjectSelector
 	}
 	return nil
 }
 
-func (m *SidecarInjectorConfig) GetRewriteAppHTTPProbe() *types.BoolValue {
-	if m != nil {
-		return m.RewriteAppHTTPProbe
+func (x *SidecarInjectorConfig) GetRewriteAppHTTPProbe() *wrappers.BoolValue {
+	if x != nil {
+		return x.RewriteAppHTTPProbe
 	}
 	return nil
 }
 
-func (m *SidecarInjectorConfig) GetInjectedAnnotations() *types.Struct {
-	if m != nil {
-		return m.InjectedAnnotations
+func (x *SidecarInjectorConfig) GetInjectedAnnotations() *_struct.Struct {
+	if x != nil {
+		return x.InjectedAnnotations
 	}
 	return nil
 }
 
-func (m *SidecarInjectorConfig) GetObjectSelector() *types.Struct {
-	if m != nil {
-		return m.ObjectSelector
+func (x *SidecarInjectorConfig) GetObjectSelector() *_struct.Struct {
+	if x != nil {
+		return x.ObjectSelector
 	}
 	return nil
 }
 
-func (m *SidecarInjectorConfig) GetInjectionURL() string {
-	if m != nil {
-		return m.InjectionURL
+func (x *SidecarInjectorConfig) GetInjectionURL() string {
+	if x != nil {
+		return x.InjectionURL
 	}
 	return ""
 }
 
-func (m *SidecarInjectorConfig) GetTemplates() *types.Struct {
-	if m != nil {
-		return m.Templates
+func (x *SidecarInjectorConfig) GetTemplates() *_struct.Struct {
+	if x != nil {
+		return x.Templates
 	}
 	return nil
 }
 
-func (m *SidecarInjectorConfig) GetDefaultTemplates() []string {
-	if m != nil {
-		return m.DefaultTemplates
+func (x *SidecarInjectorConfig) GetDefaultTemplates() []string {
+	if x != nil {
+		return x.DefaultTemplates
 	}
 	return nil
 }
 
 // Deprecated: Do not use.
-func (m *SidecarInjectorConfig) GetUseLegacySelectors() *types.BoolValue {
-	if m != nil {
-		return m.UseLegacySelectors
+func (x *SidecarInjectorConfig) GetUseLegacySelectors() *wrappers.BoolValue {
+	if x != nil {
+		return x.UseLegacySelectors
 	}
 	return nil
 }
 
 // Configuration for each of the supported tracers.
 type TracerConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Configuration for the datadog tracing service.
 	Datadog *TracerDatadogConfig `protobuf:"bytes,1,opt,name=datadog,proto3" json:"datadog,omitempty"`
 	// Configuration for the lightstep tracing service.
@@ -4179,431 +4284,431 @@ type TracerConfig struct {
 	// Configuration for the zipkin tracing service.
 	Zipkin *TracerZipkinConfig `protobuf:"bytes,3,opt,name=zipkin,proto3" json:"zipkin,omitempty"`
 	// Configuration for the stackdriver tracing service.
-	Stackdriver          *TracerStackdriverConfig `protobuf:"bytes,4,opt,name=stackdriver,proto3" json:"stackdriver,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
-	XXX_unrecognized     []byte                   `json:"-"`
-	XXX_sizecache        int32                    `json:"-"`
+	Stackdriver *TracerStackdriverConfig `protobuf:"bytes,4,opt,name=stackdriver,proto3" json:"stackdriver,omitempty"`
 }
 
-func (m *TracerConfig) Reset()         { *m = TracerConfig{} }
-func (m *TracerConfig) String() string { return proto.CompactTextString(m) }
-func (*TracerConfig) ProtoMessage()    {}
-func (*TracerConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{38}
-}
-func (m *TracerConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TracerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TracerConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *TracerConfig) Reset() {
+	*x = TracerConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[38]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TracerConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TracerConfig.Merge(m, src)
-}
-func (m *TracerConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TracerConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TracerConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TracerConfig.DiscardUnknown(m)
+
+func (*TracerConfig) ProtoMessage() {}
+
+func (x *TracerConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[38]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TracerConfig proto.InternalMessageInfo
+// Deprecated: Use TracerConfig.ProtoReflect.Descriptor instead.
+func (*TracerConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{38}
+}
 
-func (m *TracerConfig) GetDatadog() *TracerDatadogConfig {
-	if m != nil {
-		return m.Datadog
+func (x *TracerConfig) GetDatadog() *TracerDatadogConfig {
+	if x != nil {
+		return x.Datadog
 	}
 	return nil
 }
 
-func (m *TracerConfig) GetLightstep() *TracerLightStepConfig {
-	if m != nil {
-		return m.Lightstep
+func (x *TracerConfig) GetLightstep() *TracerLightStepConfig {
+	if x != nil {
+		return x.Lightstep
 	}
 	return nil
 }
 
-func (m *TracerConfig) GetZipkin() *TracerZipkinConfig {
-	if m != nil {
-		return m.Zipkin
+func (x *TracerConfig) GetZipkin() *TracerZipkinConfig {
+	if x != nil {
+		return x.Zipkin
 	}
 	return nil
 }
 
-func (m *TracerConfig) GetStackdriver() *TracerStackdriverConfig {
-	if m != nil {
-		return m.Stackdriver
+func (x *TracerConfig) GetStackdriver() *TracerStackdriverConfig {
+	if x != nil {
+		return x.Stackdriver
 	}
 	return nil
 }
 
 // Configuration for the datadog tracing service.
 type TracerDatadogConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Address in host:port format for reporting trace data to the Datadog agent.
-	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
 }
 
-func (m *TracerDatadogConfig) Reset()         { *m = TracerDatadogConfig{} }
-func (m *TracerDatadogConfig) String() string { return proto.CompactTextString(m) }
-func (*TracerDatadogConfig) ProtoMessage()    {}
-func (*TracerDatadogConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{39}
-}
-func (m *TracerDatadogConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TracerDatadogConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TracerDatadogConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *TracerDatadogConfig) Reset() {
+	*x = TracerDatadogConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[39]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TracerDatadogConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TracerDatadogConfig.Merge(m, src)
-}
-func (m *TracerDatadogConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TracerDatadogConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TracerDatadogConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TracerDatadogConfig.DiscardUnknown(m)
+
+func (*TracerDatadogConfig) ProtoMessage() {}
+
+func (x *TracerDatadogConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[39]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TracerDatadogConfig proto.InternalMessageInfo
+// Deprecated: Use TracerDatadogConfig.ProtoReflect.Descriptor instead.
+func (*TracerDatadogConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{39}
+}
 
-func (m *TracerDatadogConfig) GetAddress() string {
-	if m != nil {
-		return m.Address
+func (x *TracerDatadogConfig) GetAddress() string {
+	if x != nil {
+		return x.Address
 	}
 	return ""
 }
 
 // Configuration for the lightstep tracing service.
 type TracerLightStepConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Sets the lightstep satellite pool address in host:port format for reporting trace data.
 	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
 	// Sets the lightstep access token.
-	AccessToken          string   `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	AccessToken string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
 }
 
-func (m *TracerLightStepConfig) Reset()         { *m = TracerLightStepConfig{} }
-func (m *TracerLightStepConfig) String() string { return proto.CompactTextString(m) }
-func (*TracerLightStepConfig) ProtoMessage()    {}
-func (*TracerLightStepConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{40}
-}
-func (m *TracerLightStepConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TracerLightStepConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TracerLightStepConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *TracerLightStepConfig) Reset() {
+	*x = TracerLightStepConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[40]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TracerLightStepConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TracerLightStepConfig.Merge(m, src)
-}
-func (m *TracerLightStepConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TracerLightStepConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TracerLightStepConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TracerLightStepConfig.DiscardUnknown(m)
+
+func (*TracerLightStepConfig) ProtoMessage() {}
+
+func (x *TracerLightStepConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[40]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TracerLightStepConfig proto.InternalMessageInfo
+// Deprecated: Use TracerLightStepConfig.ProtoReflect.Descriptor instead.
+func (*TracerLightStepConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{40}
+}
 
-func (m *TracerLightStepConfig) GetAddress() string {
-	if m != nil {
-		return m.Address
+func (x *TracerLightStepConfig) GetAddress() string {
+	if x != nil {
+		return x.Address
 	}
 	return ""
 }
 
-func (m *TracerLightStepConfig) GetAccessToken() string {
-	if m != nil {
-		return m.AccessToken
+func (x *TracerLightStepConfig) GetAccessToken() string {
+	if x != nil {
+		return x.AccessToken
 	}
 	return ""
 }
 
 // Configuration for the zipkin tracing service.
 type TracerZipkinConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Address of zipkin instance in host:port format for reporting trace data.
 	//
 	// Example: <zipkin-collector-service>.<zipkin-collector-namespace>:941
-	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
 }
 
-func (m *TracerZipkinConfig) Reset()         { *m = TracerZipkinConfig{} }
-func (m *TracerZipkinConfig) String() string { return proto.CompactTextString(m) }
-func (*TracerZipkinConfig) ProtoMessage()    {}
-func (*TracerZipkinConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{41}
-}
-func (m *TracerZipkinConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TracerZipkinConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TracerZipkinConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *TracerZipkinConfig) Reset() {
+	*x = TracerZipkinConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[41]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TracerZipkinConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TracerZipkinConfig.Merge(m, src)
-}
-func (m *TracerZipkinConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TracerZipkinConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TracerZipkinConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TracerZipkinConfig.DiscardUnknown(m)
+
+func (*TracerZipkinConfig) ProtoMessage() {}
+
+func (x *TracerZipkinConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[41]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TracerZipkinConfig proto.InternalMessageInfo
+// Deprecated: Use TracerZipkinConfig.ProtoReflect.Descriptor instead.
+func (*TracerZipkinConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{41}
+}
 
-func (m *TracerZipkinConfig) GetAddress() string {
-	if m != nil {
-		return m.Address
+func (x *TracerZipkinConfig) GetAddress() string {
+	if x != nil {
+		return x.Address
 	}
 	return ""
 }
 
 // Configuration for the stackdriver tracing service.
 type TracerStackdriverConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// enables trace output to stdout.
-	Debug *types.BoolValue `protobuf:"bytes,1,opt,name=debug,proto3" json:"debug,omitempty"`
+	Debug *wrappers.BoolValue `protobuf:"bytes,1,opt,name=debug,proto3" json:"debug,omitempty"`
 	// The global default max number of attributes per span.
 	MaxNumberOfAttributes uint32 `protobuf:"varint,2,opt,name=maxNumberOfAttributes,proto3" json:"maxNumberOfAttributes,omitempty"`
 	// The global default max number of annotation events per span.
 	MaxNumberOfAnnotations uint32 `protobuf:"varint,3,opt,name=maxNumberOfAnnotations,proto3" json:"maxNumberOfAnnotations,omitempty"`
 	// The global default max number of message events per span.
-	MaxNumberOfMessageEvents uint32   `protobuf:"varint,4,opt,name=maxNumberOfMessageEvents,proto3" json:"maxNumberOfMessageEvents,omitempty"`
-	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
-	XXX_unrecognized         []byte   `json:"-"`
-	XXX_sizecache            int32    `json:"-"`
+	MaxNumberOfMessageEvents uint32 `protobuf:"varint,4,opt,name=maxNumberOfMessageEvents,proto3" json:"maxNumberOfMessageEvents,omitempty"`
 }
 
-func (m *TracerStackdriverConfig) Reset()         { *m = TracerStackdriverConfig{} }
-func (m *TracerStackdriverConfig) String() string { return proto.CompactTextString(m) }
-func (*TracerStackdriverConfig) ProtoMessage()    {}
-func (*TracerStackdriverConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{42}
-}
-func (m *TracerStackdriverConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *TracerStackdriverConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_TracerStackdriverConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *TracerStackdriverConfig) Reset() {
+	*x = TracerStackdriverConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[42]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *TracerStackdriverConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_TracerStackdriverConfig.Merge(m, src)
-}
-func (m *TracerStackdriverConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *TracerStackdriverConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *TracerStackdriverConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_TracerStackdriverConfig.DiscardUnknown(m)
+
+func (*TracerStackdriverConfig) ProtoMessage() {}
+
+func (x *TracerStackdriverConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[42]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_TracerStackdriverConfig proto.InternalMessageInfo
+// Deprecated: Use TracerStackdriverConfig.ProtoReflect.Descriptor instead.
+func (*TracerStackdriverConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{42}
+}
 
-func (m *TracerStackdriverConfig) GetDebug() *types.BoolValue {
-	if m != nil {
-		return m.Debug
+func (x *TracerStackdriverConfig) GetDebug() *wrappers.BoolValue {
+	if x != nil {
+		return x.Debug
 	}
 	return nil
 }
 
-func (m *TracerStackdriverConfig) GetMaxNumberOfAttributes() uint32 {
-	if m != nil {
-		return m.MaxNumberOfAttributes
+func (x *TracerStackdriverConfig) GetMaxNumberOfAttributes() uint32 {
+	if x != nil {
+		return x.MaxNumberOfAttributes
 	}
 	return 0
 }
 
-func (m *TracerStackdriverConfig) GetMaxNumberOfAnnotations() uint32 {
-	if m != nil {
-		return m.MaxNumberOfAnnotations
+func (x *TracerStackdriverConfig) GetMaxNumberOfAnnotations() uint32 {
+	if x != nil {
+		return x.MaxNumberOfAnnotations
 	}
 	return 0
 }
 
-func (m *TracerStackdriverConfig) GetMaxNumberOfMessageEvents() uint32 {
-	if m != nil {
-		return m.MaxNumberOfMessageEvents
+func (x *TracerStackdriverConfig) GetMaxNumberOfMessageEvents() uint32 {
+	if x != nil {
+		return x.MaxNumberOfMessageEvents
 	}
 	return 0
 }
 
 type BaseConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// For Helm2 use, adds the CRDs to templates.
-	EnableCRDTemplates *types.BoolValue `protobuf:"bytes,1,opt,name=enableCRDTemplates,proto3" json:"enableCRDTemplates,omitempty"`
+	EnableCRDTemplates *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enableCRDTemplates,proto3" json:"enableCRDTemplates,omitempty"`
 	// URL to use for validating webhook.
 	ValidationURL string `protobuf:"bytes,2,opt,name=validationURL,proto3" json:"validationURL,omitempty"`
 	// For istioctl usage to disable istio config crds in base
-	EnableIstioConfigCRDs *types.BoolValue `protobuf:"bytes,3,opt,name=enableIstioConfigCRDs,proto3" json:"enableIstioConfigCRDs,omitempty"`
-	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
-	XXX_unrecognized      []byte           `json:"-"`
-	XXX_sizecache         int32            `json:"-"`
+	EnableIstioConfigCRDs *wrappers.BoolValue `protobuf:"bytes,3,opt,name=enableIstioConfigCRDs,proto3" json:"enableIstioConfigCRDs,omitempty"`
 }
 
-func (m *BaseConfig) Reset()         { *m = BaseConfig{} }
-func (m *BaseConfig) String() string { return proto.CompactTextString(m) }
-func (*BaseConfig) ProtoMessage()    {}
-func (*BaseConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{43}
-}
-func (m *BaseConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *BaseConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_BaseConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *BaseConfig) Reset() {
+	*x = BaseConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[43]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *BaseConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_BaseConfig.Merge(m, src)
-}
-func (m *BaseConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *BaseConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *BaseConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_BaseConfig.DiscardUnknown(m)
+
+func (*BaseConfig) ProtoMessage() {}
+
+func (x *BaseConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[43]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_BaseConfig proto.InternalMessageInfo
+// Deprecated: Use BaseConfig.ProtoReflect.Descriptor instead.
+func (*BaseConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{43}
+}
 
-func (m *BaseConfig) GetEnableCRDTemplates() *types.BoolValue {
-	if m != nil {
-		return m.EnableCRDTemplates
+func (x *BaseConfig) GetEnableCRDTemplates() *wrappers.BoolValue {
+	if x != nil {
+		return x.EnableCRDTemplates
 	}
 	return nil
 }
 
-func (m *BaseConfig) GetValidationURL() string {
-	if m != nil {
-		return m.ValidationURL
+func (x *BaseConfig) GetValidationURL() string {
+	if x != nil {
+		return x.ValidationURL
 	}
 	return ""
 }
 
-func (m *BaseConfig) GetEnableIstioConfigCRDs() *types.BoolValue {
-	if m != nil {
-		return m.EnableIstioConfigCRDs
+func (x *BaseConfig) GetEnableIstioConfigCRDs() *wrappers.BoolValue {
+	if x != nil {
+		return x.EnableIstioConfigCRDs
 	}
 	return nil
 }
 
 type IstiodRemoteConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// URL to use for sidecar injector webhook.
 	InjectionURL string `protobuf:"bytes,1,opt,name=injectionURL,proto3" json:"injectionURL,omitempty"`
 	// Path to use for the sidecar injector webhook service.
-	InjectionPath        string   `protobuf:"bytes,2,opt,name=injectionPath,proto3" json:"injectionPath,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	InjectionPath string `protobuf:"bytes,2,opt,name=injectionPath,proto3" json:"injectionPath,omitempty"`
 }
 
-func (m *IstiodRemoteConfig) Reset()         { *m = IstiodRemoteConfig{} }
-func (m *IstiodRemoteConfig) String() string { return proto.CompactTextString(m) }
-func (*IstiodRemoteConfig) ProtoMessage()    {}
-func (*IstiodRemoteConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{44}
-}
-func (m *IstiodRemoteConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *IstiodRemoteConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_IstiodRemoteConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *IstiodRemoteConfig) Reset() {
+	*x = IstiodRemoteConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[44]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *IstiodRemoteConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_IstiodRemoteConfig.Merge(m, src)
-}
-func (m *IstiodRemoteConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *IstiodRemoteConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *IstiodRemoteConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_IstiodRemoteConfig.DiscardUnknown(m)
+
+func (*IstiodRemoteConfig) ProtoMessage() {}
+
+func (x *IstiodRemoteConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[44]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_IstiodRemoteConfig proto.InternalMessageInfo
+// Deprecated: Use IstiodRemoteConfig.ProtoReflect.Descriptor instead.
+func (*IstiodRemoteConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{44}
+}
 
-func (m *IstiodRemoteConfig) GetInjectionURL() string {
-	if m != nil {
-		return m.InjectionURL
+func (x *IstiodRemoteConfig) GetInjectionURL() string {
+	if x != nil {
+		return x.InjectionURL
 	}
 	return ""
 }
 
-func (m *IstiodRemoteConfig) GetInjectionPath() string {
-	if m != nil {
-		return m.InjectionPath
+func (x *IstiodRemoteConfig) GetInjectionPath() string {
+	if x != nil {
+		return x.InjectionPath
 	}
 	return ""
 }
 
 type Values struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	Cni      *CNIConfig      `protobuf:"bytes,2,opt,name=cni,proto3" json:"cni,omitempty"`
 	Gateways *GatewaysConfig `protobuf:"bytes,5,opt,name=gateways,proto3" json:"gateways,omitempty"`
 	Global   *GlobalConfig   `protobuf:"bytes,6,opt,name=global,proto3" json:"global,omitempty"`
@@ -4615,200 +4720,196 @@ type Values struct {
 	Revision               string                 `protobuf:"bytes,21,opt,name=revision,proto3" json:"revision,omitempty"`
 	OwnerName              string                 `protobuf:"bytes,22,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
 	// TODO can this import the real mesh config API?
-	MeshConfig           *types.Value        `protobuf:"bytes,36,opt,name=meshConfig,proto3" json:"meshConfig,omitempty"`
-	Base                 *BaseConfig         `protobuf:"bytes,37,opt,name=base,proto3" json:"base,omitempty"`
-	IstiodRemote         *IstiodRemoteConfig `protobuf:"bytes,38,opt,name=istiodRemote,proto3" json:"istiodRemote,omitempty"`
-	RevisionTags         []string            `protobuf:"bytes,39,rep,name=revisionTags,proto3" json:"revisionTags,omitempty"`
-	DefaultRevision      string              `protobuf:"bytes,40,opt,name=defaultRevision,proto3" json:"defaultRevision,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
-	XXX_unrecognized     []byte              `json:"-"`
-	XXX_sizecache        int32               `json:"-"`
-}
-
-func (m *Values) Reset()         { *m = Values{} }
-func (m *Values) String() string { return proto.CompactTextString(m) }
-func (*Values) ProtoMessage()    {}
-func (*Values) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{45}
-}
-func (m *Values) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *Values) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_Values.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
-	}
+	MeshConfig      *_struct.Value      `protobuf:"bytes,36,opt,name=meshConfig,proto3" json:"meshConfig,omitempty"`
+	Base            *BaseConfig         `protobuf:"bytes,37,opt,name=base,proto3" json:"base,omitempty"`
+	IstiodRemote    *IstiodRemoteConfig `protobuf:"bytes,38,opt,name=istiodRemote,proto3" json:"istiodRemote,omitempty"`
+	RevisionTags    []string            `protobuf:"bytes,39,rep,name=revisionTags,proto3" json:"revisionTags,omitempty"`
+	DefaultRevision string              `protobuf:"bytes,40,opt,name=defaultRevision,proto3" json:"defaultRevision,omitempty"`
 }
-func (m *Values) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Values.Merge(m, src)
+
+func (x *Values) Reset() {
+	*x = Values{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[45]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *Values) XXX_Size() int {
-	return m.Size()
+
+func (x *Values) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *Values) XXX_DiscardUnknown() {
-	xxx_messageInfo_Values.DiscardUnknown(m)
+
+func (*Values) ProtoMessage() {}
+
+func (x *Values) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[45]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_Values proto.InternalMessageInfo
+// Deprecated: Use Values.ProtoReflect.Descriptor instead.
+func (*Values) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{45}
+}
 
-func (m *Values) GetCni() *CNIConfig {
-	if m != nil {
-		return m.Cni
+func (x *Values) GetCni() *CNIConfig {
+	if x != nil {
+		return x.Cni
 	}
 	return nil
 }
 
-func (m *Values) GetGateways() *GatewaysConfig {
-	if m != nil {
-		return m.Gateways
+func (x *Values) GetGateways() *GatewaysConfig {
+	if x != nil {
+		return x.Gateways
 	}
 	return nil
 }
 
-func (m *Values) GetGlobal() *GlobalConfig {
-	if m != nil {
-		return m.Global
+func (x *Values) GetGlobal() *GlobalConfig {
+	if x != nil {
+		return x.Global
 	}
 	return nil
 }
 
-func (m *Values) GetPilot() *PilotConfig {
-	if m != nil {
-		return m.Pilot
+func (x *Values) GetPilot() *PilotConfig {
+	if x != nil {
+		return x.Pilot
 	}
 	return nil
 }
 
-func (m *Values) GetTelemetry() *TelemetryConfig {
-	if m != nil {
-		return m.Telemetry
+func (x *Values) GetTelemetry() *TelemetryConfig {
+	if x != nil {
+		return x.Telemetry
 	}
 	return nil
 }
 
-func (m *Values) GetSidecarInjectorWebhook() *SidecarInjectorConfig {
-	if m != nil {
-		return m.SidecarInjectorWebhook
+func (x *Values) GetSidecarInjectorWebhook() *SidecarInjectorConfig {
+	if x != nil {
+		return x.SidecarInjectorWebhook
 	}
 	return nil
 }
 
-func (m *Values) GetIstioCni() *CNIConfig {
-	if m != nil {
-		return m.IstioCni
+func (x *Values) GetIstioCni() *CNIConfig {
+	if x != nil {
+		return x.IstioCni
 	}
 	return nil
 }
 
-func (m *Values) GetRevision() string {
-	if m != nil {
-		return m.Revision
+func (x *Values) GetRevision() string {
+	if x != nil {
+		return x.Revision
 	}
 	return ""
 }
 
-func (m *Values) GetOwnerName() string {
-	if m != nil {
-		return m.OwnerName
+func (x *Values) GetOwnerName() string {
+	if x != nil {
+		return x.OwnerName
 	}
 	return ""
 }
 
-func (m *Values) GetMeshConfig() *types.Value {
-	if m != nil {
-		return m.MeshConfig
+func (x *Values) GetMeshConfig() *_struct.Value {
+	if x != nil {
+		return x.MeshConfig
 	}
 	return nil
 }
 
-func (m *Values) GetBase() *BaseConfig {
-	if m != nil {
-		return m.Base
+func (x *Values) GetBase() *BaseConfig {
+	if x != nil {
+		return x.Base
 	}
 	return nil
 }
 
-func (m *Values) GetIstiodRemote() *IstiodRemoteConfig {
-	if m != nil {
-		return m.IstiodRemote
+func (x *Values) GetIstiodRemote() *IstiodRemoteConfig {
+	if x != nil {
+		return x.IstiodRemote
 	}
 	return nil
 }
 
-func (m *Values) GetRevisionTags() []string {
-	if m != nil {
-		return m.RevisionTags
+func (x *Values) GetRevisionTags() []string {
+	if x != nil {
+		return x.RevisionTags
 	}
 	return nil
 }
 
-func (m *Values) GetDefaultRevision() string {
-	if m != nil {
-		return m.DefaultRevision
+func (x *Values) GetDefaultRevision() string {
+	if x != nil {
+		return x.DefaultRevision
 	}
 	return ""
 }
 
 // ZeroVPNConfig enables cross-cluster access using SNI matching.
 type ZeroVPNConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	// Controls whether ZeroVPN is enabled.
-	Enabled              *types.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
-	Suffix               string           `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
-	XXX_unrecognized     []byte           `json:"-"`
-	XXX_sizecache        int32            `json:"-"`
+	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
+	Suffix  string              `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
 }
 
-func (m *ZeroVPNConfig) Reset()         { *m = ZeroVPNConfig{} }
-func (m *ZeroVPNConfig) String() string { return proto.CompactTextString(m) }
-func (*ZeroVPNConfig) ProtoMessage()    {}
-func (*ZeroVPNConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{46}
-}
-func (m *ZeroVPNConfig) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *ZeroVPNConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_ZeroVPNConfig.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
+func (x *ZeroVPNConfig) Reset() {
+	*x = ZeroVPNConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[46]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
 }
-func (m *ZeroVPNConfig) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ZeroVPNConfig.Merge(m, src)
-}
-func (m *ZeroVPNConfig) XXX_Size() int {
-	return m.Size()
+
+func (x *ZeroVPNConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *ZeroVPNConfig) XXX_DiscardUnknown() {
-	xxx_messageInfo_ZeroVPNConfig.DiscardUnknown(m)
+
+func (*ZeroVPNConfig) ProtoMessage() {}
+
+func (x *ZeroVPNConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[46]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_ZeroVPNConfig proto.InternalMessageInfo
+// Deprecated: Use ZeroVPNConfig.ProtoReflect.Descriptor instead.
+func (*ZeroVPNConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{46}
+}
 
-func (m *ZeroVPNConfig) GetEnabled() *types.BoolValue {
-	if m != nil {
-		return m.Enabled
+func (x *ZeroVPNConfig) GetEnabled() *wrappers.BoolValue {
+	if x != nil {
+		return x.Enabled
 	}
 	return nil
 }
 
-func (m *ZeroVPNConfig) GetSuffix() string {
-	if m != nil {
-		return m.Suffix
+func (x *ZeroVPNConfig) GetSuffix() string {
+	if x != nil {
+		return x.Suffix
 	}
 	return ""
 }
@@ -4823,19299 +4924,2103 @@ func (m *ZeroVPNConfig) GetSuffix() string {
 // +protobuf.options.(gogoproto.goproto_stringer)=false
 // +k8s:openapi-gen=true
 type IntOrString struct {
-	Type                 int64              `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
-	IntVal               *types.Int32Value  `protobuf:"bytes,2,opt,name=intVal,proto3" json:"intVal,omitempty"`
-	StrVal               *types.StringValue `protobuf:"bytes,3,opt,name=strVal,proto3" json:"strVal,omitempty"`
-	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
-	XXX_unrecognized     []byte             `json:"-"`
-	XXX_sizecache        int32              `json:"-"`
-}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
 
-func (m *IntOrString) Reset()         { *m = IntOrString{} }
-func (m *IntOrString) String() string { return proto.CompactTextString(m) }
-func (*IntOrString) ProtoMessage()    {}
-func (*IntOrString) Descriptor() ([]byte, []int) {
-	return fileDescriptor_261260e22432516f, []int{47}
-}
-func (m *IntOrString) XXX_Unmarshal(b []byte) error {
-	return m.Unmarshal(b)
-}
-func (m *IntOrString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	if deterministic {
-		return xxx_messageInfo_IntOrString.Marshal(b, m, deterministic)
-	} else {
-		b = b[:cap(b)]
-		n, err := m.MarshalToSizedBuffer(b)
-		if err != nil {
-			return nil, err
-		}
-		return b[:n], nil
-	}
-}
-func (m *IntOrString) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_IntOrString.Merge(m, src)
-}
-func (m *IntOrString) XXX_Size() int {
-	return m.Size()
-}
-func (m *IntOrString) XXX_DiscardUnknown() {
-	xxx_messageInfo_IntOrString.DiscardUnknown(m)
+	Type   int64                 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
+	IntVal *wrappers.Int32Value  `protobuf:"bytes,2,opt,name=intVal,proto3" json:"intVal,omitempty"`
+	StrVal *wrappers.StringValue `protobuf:"bytes,3,opt,name=strVal,proto3" json:"strVal,omitempty"`
 }
 
-var xxx_messageInfo_IntOrString proto.InternalMessageInfo
-
-func (m *IntOrString) GetType() int64 {
-	if m != nil {
-		return m.Type
+func (x *IntOrString) Reset() {
+	*x = IntOrString{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[47]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
-	return 0
 }
 
-func (m *IntOrString) GetIntVal() *types.Int32Value {
-	if m != nil {
-		return m.IntVal
-	}
-	return nil
+func (x *IntOrString) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
 
-func (m *IntOrString) GetStrVal() *types.StringValue {
-	if m != nil {
-		return m.StrVal
-	}
-	return nil
-}
+func (*IntOrString) ProtoMessage() {}
 
-func init() {
-	proto.RegisterEnum("v1alpha1.IngressControllerMode", IngressControllerMode_name, IngressControllerMode_value)
-	proto.RegisterEnum("v1alpha1.Tracer", Tracer_name, Tracer_value)
-	proto.RegisterEnum("v1alpha1.OutboundTrafficPolicyConfig_Mode", OutboundTrafficPolicyConfig_Mode_name, OutboundTrafficPolicyConfig_Mode_value)
-	proto.RegisterEnum("v1alpha1.TelemetryV2StackDriverConfig_AccessLogging", TelemetryV2StackDriverConfig_AccessLogging_name, TelemetryV2StackDriverConfig_AccessLogging_value)
-	proto.RegisterType((*ArchConfig)(nil), "v1alpha1.ArchConfig")
-	proto.RegisterType((*CNIConfig)(nil), "v1alpha1.CNIConfig")
-	proto.RegisterType((*CNITaintConfig)(nil), "v1alpha1.CNITaintConfig")
-	proto.RegisterType((*CNIRepairConfig)(nil), "v1alpha1.CNIRepairConfig")
-	proto.RegisterType((*ResourceQuotas)(nil), "v1alpha1.ResourceQuotas")
-	proto.RegisterType((*CPUTargetUtilizationConfig)(nil), "v1alpha1.CPUTargetUtilizationConfig")
-	proto.RegisterType((*Resources)(nil), "v1alpha1.Resources")
-	proto.RegisterMapType((map[string]string)(nil), "v1alpha1.Resources.LimitsEntry")
-	proto.RegisterMapType((map[string]string)(nil), "v1alpha1.Resources.RequestsEntry")
-	proto.RegisterType((*ServiceAccount)(nil), "v1alpha1.ServiceAccount")
-	proto.RegisterType((*DefaultPodDisruptionBudgetConfig)(nil), "v1alpha1.DefaultPodDisruptionBudgetConfig")
-	proto.RegisterType((*DefaultResourcesConfig)(nil), "v1alpha1.DefaultResourcesConfig")
-	proto.RegisterType((*EgressGatewayConfig)(nil), "v1alpha1.EgressGatewayConfig")
-	proto.RegisterMapType((map[string]string)(nil), "v1alpha1.EgressGatewayConfig.LabelsEntry")
-	proto.RegisterType((*GatewaysConfig)(nil), "v1alpha1.GatewaysConfig")
-	proto.RegisterType((*GlobalConfig)(nil), "v1alpha1.GlobalConfig")
-	proto.RegisterType((*STSConfig)(nil), "v1alpha1.STSConfig")
-	proto.RegisterType((*IstiodConfig)(nil), "v1alpha1.IstiodConfig")
-	proto.RegisterType((*GlobalLoggingConfig)(nil), "v1alpha1.GlobalLoggingConfig")
-	proto.RegisterType((*IngressGatewayConfig)(nil), "v1alpha1.IngressGatewayConfig")
-	proto.RegisterMapType((map[string]string)(nil), "v1alpha1.IngressGatewayConfig.LabelsEntry")
-	proto.RegisterType((*IngressGatewayZvpnConfig)(nil), "v1alpha1.IngressGatewayZvpnConfig")
-	proto.RegisterType((*MultiClusterConfig)(nil), "v1alpha1.MultiClusterConfig")
-	proto.RegisterType((*OutboundTrafficPolicyConfig)(nil), "v1alpha1.OutboundTrafficPolicyConfig")
-	proto.RegisterType((*PilotConfig)(nil), "v1alpha1.PilotConfig")
-	proto.RegisterType((*PilotIngressConfig)(nil), "v1alpha1.PilotIngressConfig")
-	proto.RegisterType((*PilotPolicyConfig)(nil), "v1alpha1.PilotPolicyConfig")
-	proto.RegisterType((*TelemetryConfig)(nil), "v1alpha1.TelemetryConfig")
-	proto.RegisterType((*TelemetryV2Config)(nil), "v1alpha1.TelemetryV2Config")
-	proto.RegisterType((*TelemetryV2MetadataExchangeConfig)(nil), "v1alpha1.TelemetryV2MetadataExchangeConfig")
-	proto.RegisterType((*TelemetryV2PrometheusConfig)(nil), "v1alpha1.TelemetryV2PrometheusConfig")
-	proto.RegisterType((*TelemetryV2PrometheusConfig_ConfigOverride)(nil), "v1alpha1.TelemetryV2PrometheusConfig.ConfigOverride")
-	proto.RegisterType((*TelemetryV2StackDriverConfig)(nil), "v1alpha1.TelemetryV2StackDriverConfig")
-	proto.RegisterType((*TelemetryV2AccessLogPolicyFilterConfig)(nil), "v1alpha1.TelemetryV2AccessLogPolicyFilterConfig")
-	proto.RegisterType((*PilotConfigSource)(nil), "v1alpha1.PilotConfigSource")
-	proto.RegisterType((*PortsConfig)(nil), "v1alpha1.PortsConfig")
-	proto.RegisterType((*ProxyConfig)(nil), "v1alpha1.ProxyConfig")
-	proto.RegisterType((*ProxyInitConfig)(nil), "v1alpha1.ProxyInitConfig")
-	proto.RegisterType((*ResourcesRequestsConfig)(nil), "v1alpha1.ResourcesRequestsConfig")
-	proto.RegisterType((*SDSConfig)(nil), "v1alpha1.SDSConfig")
-	proto.RegisterType((*SecretVolume)(nil), "v1alpha1.SecretVolume")
-	proto.RegisterType((*ServiceConfig)(nil), "v1alpha1.ServiceConfig")
-	proto.RegisterType((*SidecarInjectorConfig)(nil), "v1alpha1.SidecarInjectorConfig")
-	proto.RegisterType((*TracerConfig)(nil), "v1alpha1.TracerConfig")
-	proto.RegisterType((*TracerDatadogConfig)(nil), "v1alpha1.TracerDatadogConfig")
-	proto.RegisterType((*TracerLightStepConfig)(nil), "v1alpha1.TracerLightStepConfig")
-	proto.RegisterType((*TracerZipkinConfig)(nil), "v1alpha1.TracerZipkinConfig")
-	proto.RegisterType((*TracerStackdriverConfig)(nil), "v1alpha1.TracerStackdriverConfig")
-	proto.RegisterType((*BaseConfig)(nil), "v1alpha1.BaseConfig")
-	proto.RegisterType((*IstiodRemoteConfig)(nil), "v1alpha1.IstiodRemoteConfig")
-	proto.RegisterType((*Values)(nil), "v1alpha1.Values")
-	proto.RegisterType((*ZeroVPNConfig)(nil), "v1alpha1.ZeroVPNConfig")
-	proto.RegisterType((*IntOrString)(nil), "v1alpha1.IntOrString")
-}
-
-func init() {
-	proto.RegisterFile("pkg/apis/istio/v1alpha1/values_types.proto", fileDescriptor_261260e22432516f)
-}
-
-var fileDescriptor_261260e22432516f = []byte{
-	// 4826 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x3c, 0x49, 0x73, 0x1b, 0x57,
-	0x7a, 0x06, 0xc1, 0x0d, 0x1f, 0xb8, 0x80, 0x8f, 0x8b, 0x5a, 0x14, 0x2d, 0xd1, 0x3d, 0x96, 0x42,
-	0x4b, 0x36, 0x25, 0xd1, 0x1c, 0xd9, 0x96, 0x2d, 0xdb, 0xe0, 0x66, 0xd3, 0xe6, 0x82, 0x34, 0x28,
-	0x79, 0xa9, 0x8c, 0x39, 0xcd, 0xee, 0x47, 0xb0, 0xad, 0x46, 0xbf, 0x9e, 0x7e, 0x0f, 0x90, 0xe0,
-	0x5b, 0x4e, 0xb9, 0x64, 0x2e, 0xa9, 0x9a, 0x54, 0xe5, 0x94, 0x63, 0x4e, 0xa9, 0x54, 0xe5, 0x92,
-	0xaa, 0xf9, 0x03, 0xc9, 0x71, 0xee, 0xa9, 0x4a, 0xa5, 0x7c, 0x4a, 0x25, 0xe7, 0x9c, 0x72, 0x49,
-	0xbd, 0xa5, 0x1b, 0xdd, 0x8d, 0x06, 0x1a, 0xa4, 0x54, 0x53, 0xa9, 0x9c, 0x88, 0xf7, 0x6d, 0x6f,
-	0xff, 0xb6, 0xf7, 0x35, 0xe1, 0xae, 0xff, 0xbc, 0x71, 0xdf, 0xf4, 0x1d, 0x7a, 0xdf, 0xa1, 0xcc,
-	0x21, 0xf7, 0xdb, 0x0f, 0x4d, 0xd7, 0xbf, 0x30, 0x1f, 0xde, 0x6f, 0x9b, 0x6e, 0x0b, 0xd3, 0x53,
-	0xd6, 0xf1, 0x31, 0x5d, 0xf7, 0x03, 0xc2, 0x08, 0x9a, 0x0c, 0x91, 0xcb, 0xd7, 0x1b, 0x84, 0x34,
-	0x5c, 0x7c, 0x5f, 0xc0, 0xcf, 0x5a, 0xe7, 0xf7, 0x4d, 0xaf, 0x23, 0x89, 0x96, 0x57, 0xd2, 0x28,
-	0xca, 0x82, 0x96, 0xc5, 0x14, 0xf6, 0x66, 0x1a, 0xfb, 0x22, 0x30, 0x7d, 0x1f, 0x07, 0xb4, 0x1f,
-	0xde, 0x6e, 0x05, 0x26, 0x73, 0x88, 0xa7, 0xf0, 0x0b, 0x0d, 0xd2, 0x20, 0xe2, 0xe7, 0x7d, 0xfe,
-	0x4b, 0x42, 0xf5, 0x0b, 0x80, 0x6a, 0x60, 0x5d, 0x6c, 0x13, 0xef, 0xdc, 0x69, 0xa0, 0x05, 0x18,
-	0x33, 0x9b, 0xf6, 0xa3, 0x4d, 0xad, 0xb0, 0x5a, 0x58, 0x9b, 0x36, 0x64, 0x03, 0x69, 0x30, 0xe1,
-	0xfb, 0xd6, 0xa3, 0x4d, 0x17, 0x6b, 0x23, 0x02, 0x1e, 0x36, 0x39, 0x3d, 0x7d, 0xff, 0xa3, 0x07,
-	0x2f, 0xb5, 0xa2, 0xa4, 0x17, 0x0d, 0x21, 0x25, 0x68, 0x3e, 0xda, 0xd4, 0x46, 0x95, 0x14, 0xde,
-	0xd0, 0xff, 0x76, 0x1c, 0x4a, 0xdb, 0x47, 0xfb, 0xaa, 0xa7, 0x4d, 0x98, 0xc0, 0x9e, 0x79, 0xe6,
-	0x62, 0x5b, 0xf4, 0x55, 0xde, 0x58, 0x5e, 0x97, 0xe3, 0x5f, 0x0f, 0xc7, 0xbf, 0xbe, 0x45, 0x88,
-	0xfb, 0x8c, 0x2f, 0xa5, 0x11, 0x92, 0xa2, 0x0a, 0x14, 0x2f, 0x5a, 0x67, 0x62, 0x14, 0x25, 0x83,
-	0xff, 0x44, 0x6b, 0x50, 0x64, 0x66, 0x43, 0xf4, 0x5f, 0xde, 0x58, 0xea, 0x91, 0x21, 0xf9, 0x39,
-	0x09, 0x1f, 0x95, 0xd3, 0x34, 0x1b, 0x58, 0x8c, 0xaa, 0x64, 0xc8, 0x06, 0xba, 0x09, 0xe0, 0xb7,
-	0x5c, 0xb7, 0x46, 0x5c, 0xc7, 0xea, 0x68, 0x63, 0x02, 0x15, 0x83, 0xa0, 0x15, 0x28, 0x59, 0x9e,
-	0xb3, 0xe5, 0x78, 0x3b, 0x4e, 0xa0, 0x8d, 0x0b, 0x74, 0x17, 0xc0, 0xb9, 0x2d, 0xcf, 0xe1, 0x53,
-	0xe2, 0xe8, 0x09, 0xc9, 0xdd, 0x85, 0xa0, 0x35, 0x98, 0x55, 0xad, 0x3d, 0xc7, 0xc5, 0x47, 0x66,
-	0x13, 0x6b, 0x93, 0x82, 0x28, 0x0d, 0x46, 0xef, 0xc2, 0x1c, 0x7e, 0x69, 0xb9, 0x2d, 0x5b, 0x34,
-	0xa9, 0x6f, 0x5a, 0x98, 0x6a, 0xa5, 0xd5, 0xe2, 0x5a, 0xc9, 0xe8, 0x45, 0xa0, 0x6d, 0x98, 0xf1,
-	0x89, 0x5d, 0xf5, 0x3c, 0xc2, 0xc4, 0x16, 0x53, 0x0d, 0xc4, 0x02, 0x5c, 0xeb, 0x59, 0x80, 0xba,
-	0x38, 0x42, 0x5b, 0x23, 0x5a, 0xc1, 0x48, 0xb1, 0xa0, 0x35, 0xa8, 0xf8, 0xd4, 0x3f, 0xb5, 0xdc,
-	0x16, 0x65, 0x38, 0x38, 0x0d, 0x88, 0x8b, 0xb5, 0xb2, 0x18, 0xdd, 0x8c, 0x4f, 0xfd, 0x6d, 0x09,
-	0x36, 0x88, 0x8b, 0xd1, 0x32, 0x4c, 0xba, 0xa4, 0x71, 0x80, 0xdb, 0xd8, 0xd5, 0xa6, 0x04, 0x45,
-	0xd4, 0x46, 0x0f, 0x61, 0x3c, 0xc0, 0xbe, 0xe9, 0x04, 0xda, 0xb4, 0x18, 0xc2, 0xf5, 0xf5, 0xf0,
-	0xa8, 0xaf, 0x6f, 0x1f, 0xed, 0x1b, 0x02, 0x25, 0xf7, 0xdc, 0x50, 0x84, 0x7c, 0xef, 0xad, 0x0b,
-	0xd3, 0xf1, 0xb0, 0xad, 0xcd, 0xe4, 0xef, 0xbd, 0x22, 0x45, 0xeb, 0x30, 0xc6, 0x4c, 0xc7, 0x63,
-	0xda, 0xac, 0xe0, 0xd1, 0x12, 0xfd, 0x9c, 0x70, 0x8c, 0xea, 0x46, 0x92, 0xa1, 0x2a, 0xcc, 0x06,
-	0x98, 0x92, 0x56, 0x60, 0xe1, 0xd3, 0xdf, 0xb4, 0x08, 0x33, 0xa9, 0x56, 0x49, 0x73, 0x1a, 0x8a,
-	0xe0, 0x4f, 0x05, 0xde, 0x98, 0x09, 0x12, 0x6d, 0xf4, 0x10, 0x4a, 0x21, 0x84, 0x6a, 0x73, 0x82,
-	0x79, 0xbe, 0x97, 0x99, 0x1a, 0x5d, 0x2a, 0xf4, 0x18, 0xc0, 0x0f, 0x9c, 0xb6, 0xe3, 0xe2, 0x06,
-	0xb6, 0x35, 0x94, 0x3b, 0xbd, 0x18, 0xb5, 0xbe, 0x07, 0x33, 0xc9, 0xa9, 0x5c, 0xed, 0x96, 0xe8,
-	0xbf, 0x2d, 0xc2, 0x6c, 0x6a, 0xed, 0xff, 0xcf, 0xdc, 0xb7, 0x15, 0x28, 0xb9, 0xe6, 0x19, 0x76,
-	0x6b, 0xc4, 0xa6, 0xe2, 0xba, 0x4d, 0x1a, 0x5d, 0x00, 0xba, 0x03, 0x53, 0x56, 0x80, 0x4d, 0x86,
-	0x77, 0xdb, 0xd8, 0x63, 0x54, 0x5e, 0x38, 0x71, 0x78, 0x13, 0x70, 0x7e, 0xef, 0x6c, 0xec, 0x62,
-	0x86, 0x85, 0x98, 0x09, 0x21, 0x26, 0x06, 0xe1, 0xb7, 0xe9, 0x2c, 0x20, 0xcf, 0xb1, 0x57, 0x23,
-	0xf6, 0x01, 0x97, 0xfe, 0x35, 0xee, 0xa8, 0x9b, 0xd7, 0x8b, 0x40, 0x0f, 0x60, 0x3e, 0x09, 0x14,
-	0xb3, 0xd0, 0x4a, 0x82, 0x3e, 0x0b, 0xc5, 0xe5, 0x3b, 0x9e, 0xc3, 0x77, 0x89, 0x9f, 0x35, 0x1c,
-	0x88, 0x9b, 0x0d, 0x52, 0x7e, 0x0f, 0x42, 0xff, 0x1e, 0x66, 0x92, 0x07, 0xed, 0x8a, 0xbb, 0x81,
-	0x60, 0xd4, 0xe7, 0xf3, 0xe5, 0xdb, 0x51, 0x34, 0xc4, 0x6f, 0xfd, 0x5b, 0x58, 0xde, 0xae, 0x3d,
-	0x3d, 0x31, 0x83, 0x06, 0x66, 0x4f, 0x99, 0xe3, 0x3a, 0x3f, 0x89, 0xdb, 0xad, 0x76, 0xfd, 0x31,
-	0x68, 0x4c, 0xa0, 0xaa, 0x6d, 0x1c, 0x98, 0x0d, 0x1c, 0xa3, 0x10, 0x1d, 0x8f, 0x19, 0x7d, 0xf1,
-	0xfa, 0xff, 0x14, 0xa0, 0x14, 0x1d, 0x71, 0xf4, 0x01, 0x8c, 0xbb, 0x4e, 0xd3, 0x61, 0x54, 0x2b,
-	0xac, 0x16, 0xd7, 0xca, 0x1b, 0xb7, 0x32, 0xee, 0xc1, 0xfa, 0x81, 0xa0, 0xd8, 0xf5, 0x58, 0xd0,
-	0x31, 0x14, 0x39, 0x7a, 0x02, 0x93, 0x01, 0xfe, 0x4d, 0x0b, 0x53, 0xc6, 0x07, 0xce, 0x59, 0xdf,
-	0xca, 0x62, 0x35, 0x14, 0x8d, 0x64, 0x8e, 0x58, 0x96, 0x3f, 0x82, 0x72, 0x4c, 0x2a, 0x3f, 0x90,
-	0xcf, 0x71, 0x47, 0x8c, 0xbd, 0x64, 0xf0, 0x9f, 0xfc, 0x98, 0x09, 0x7b, 0xab, 0x0e, 0xa9, 0x6c,
-	0x3c, 0x1e, 0xf9, 0xb0, 0xb0, 0xfc, 0x31, 0x4c, 0x27, 0xa4, 0x5e, 0x86, 0x59, 0xff, 0x1a, 0x66,
-	0xea, 0x38, 0x68, 0x3b, 0x16, 0xae, 0x5a, 0x16, 0x69, 0x79, 0x0c, 0x7d, 0x04, 0x65, 0x33, 0xa6,
-	0x70, 0x0b, 0x03, 0x15, 0xae, 0x11, 0xa7, 0xd5, 0xbf, 0x85, 0xd5, 0x1d, 0x7c, 0x6e, 0xb6, 0x5c,
-	0x56, 0x23, 0xf6, 0x8e, 0x43, 0x83, 0x96, 0xcf, 0x11, 0x5b, 0x2d, 0xbb, 0x81, 0x5f, 0xed, 0xaa,
-	0x7f, 0x03, 0x4b, 0x4a, 0x72, 0xb4, 0x94, 0x4a, 0x5e, 0x7c, 0xdd, 0xa5, 0xc0, 0xac, 0x75, 0x0f,
-	0x17, 0x48, 0xa9, 0xce, 0x88, 0x45, 0xff, 0xd7, 0x29, 0x98, 0xdf, 0x6d, 0x04, 0x98, 0xd2, 0x2f,
-	0x4c, 0x86, 0x5f, 0x98, 0x1d, 0x25, 0x76, 0x0f, 0x2a, 0x66, 0x8b, 0x11, 0x6a, 0x99, 0x2e, 0xde,
-	0x1d, 0x7a, 0xbc, 0x3d, 0x3c, 0x48, 0x87, 0xa9, 0x08, 0x76, 0x68, 0xbe, 0x54, 0x8e, 0x45, 0x02,
-	0x96, 0xa4, 0x71, 0x3c, 0xe5, 0x64, 0x24, 0x60, 0xe8, 0x31, 0x14, 0x2d, 0xbf, 0x25, 0x34, 0x49,
-	0x79, 0xe3, 0xed, 0x98, 0x4d, 0xe8, 0x7b, 0x29, 0x84, 0x3a, 0xe1, 0x4c, 0xf1, 0x25, 0x9f, 0x18,
-	0xfe, 0x16, 0xbe, 0x03, 0x45, 0xec, 0xb5, 0x85, 0x36, 0x19, 0xb0, 0xff, 0x9c, 0x06, 0x55, 0x61,
-	0x5c, 0xe8, 0x36, 0x69, 0xc9, 0xcb, 0x1b, 0xef, 0x74, 0xc7, 0x97, 0xb1, 0xb6, 0xeb, 0x42, 0xc1,
-	0x44, 0xd7, 0x47, 0x34, 0xf8, 0x9d, 0xf7, 0xb8, 0x72, 0xb9, 0x2e, 0x0e, 0xa8, 0xf8, 0x8d, 0x3e,
-	0x83, 0x29, 0x8f, 0xd8, 0xb8, 0x8e, 0x5d, 0x6c, 0x31, 0x12, 0x0c, 0x63, 0xfb, 0x13, 0x0c, 0x19,
-	0xee, 0x43, 0xf9, 0xf2, 0xee, 0xc3, 0x29, 0xac, 0x08, 0x08, 0x73, 0xaa, 0xe7, 0xe7, 0x5c, 0xe9,
-	0x75, 0xc4, 0xf8, 0xa3, 0x51, 0x4d, 0x89, 0x29, 0x0f, 0x14, 0x39, 0x50, 0x00, 0x6a, 0xc0, 0x6a,
-	0x0a, 0x7f, 0x82, 0x83, 0x66, 0xb2, 0x93, 0xe9, 0xfc, 0x4e, 0x72, 0x85, 0xa0, 0x7b, 0x30, 0xe6,
-	0x93, 0x80, 0x51, 0x6d, 0x46, 0x48, 0x5b, 0xec, 0xee, 0x52, 0x8d, 0x83, 0x43, 0xb7, 0x42, 0xd0,
-	0xa0, 0x5f, 0xc6, 0x7d, 0x82, 0xd9, 0xbe, 0x3e, 0x81, 0xe8, 0x3a, 0xe6, 0x17, 0x7c, 0x02, 0xd3,
-	0x14, 0x5b, 0x01, 0x66, 0xcf, 0x88, 0xdb, 0x6a, 0x62, 0xee, 0x8b, 0x14, 0x85, 0x05, 0x8d, 0x58,
-	0xeb, 0x31, 0xb4, 0x91, 0x24, 0x46, 0x5f, 0x00, 0xa2, 0x4a, 0x1b, 0xc5, 0x36, 0x6d, 0x6e, 0xf0,
-	0x11, 0xcc, 0x60, 0xe1, 0xc7, 0x89, 0x87, 0x25, 0xc2, 0x31, 0x29, 0x19, 0xe2, 0x37, 0xba, 0x07,
-	0xa3, 0x3f, 0xb5, 0x7d, 0x4f, 0x9b, 0x57, 0xe2, 0xa2, 0x11, 0x7d, 0x8f, 0x03, 0xf2, 0xac, 0x76,
-	0xa4, 0xe6, 0x2f, 0x88, 0xd0, 0x13, 0x28, 0x33, 0xe2, 0xe2, 0x40, 0x0d, 0x61, 0x21, 0x7f, 0xfd,
-	0xe3, 0xf4, 0x68, 0x1b, 0x66, 0x03, 0xe2, 0xba, 0x8e, 0xd7, 0x38, 0x34, 0x5f, 0xd6, 0x5b, 0x41,
-	0x03, 0x6b, 0x8b, 0xa2, 0xdb, 0xd8, 0xa2, 0xef, 0x7b, 0xec, 0x38, 0xa8, 0xb3, 0xc0, 0xf1, 0xe4,
-	0x5d, 0x4d, 0x73, 0xa0, 0x63, 0x58, 0xec, 0x82, 0x9e, 0x7a, 0x66, 0xdb, 0x74, 0x5c, 0x7e, 0x37,
-	0xb5, 0xa5, 0x3c, 0x51, 0xd9, 0x7c, 0xe8, 0x09, 0x4c, 0x5b, 0x62, 0x92, 0xe1, 0xe6, 0x5c, 0x1b,
-	0x38, 0x2d, 0x23, 0x49, 0x8d, 0xbe, 0x86, 0x05, 0xd3, 0xb6, 0x1d, 0x3e, 0x43, 0xd3, 0x8d, 0x4c,
-	0x3f, 0xd5, 0xb4, 0xc1, 0x52, 0x32, 0x99, 0xd0, 0x87, 0x50, 0x0a, 0x5a, 0x5e, 0x95, 0x1a, 0x84,
-	0x30, 0x6d, 0x39, 0x57, 0x2d, 0x75, 0x89, 0xa5, 0x53, 0xf2, 0x23, 0xb6, 0xb8, 0xc8, 0x13, 0xdc,
-	0xf4, 0x5d, 0x93, 0x61, 0xed, 0x46, 0xe8, 0x94, 0xa4, 0x10, 0xe8, 0x73, 0x98, 0xa1, 0x09, 0x03,
-	0xa7, 0xad, 0xa4, 0xbd, 0xe3, 0xa4, 0x01, 0x34, 0x52, 0xf4, 0xc2, 0x34, 0x77, 0x35, 0xd6, 0xa5,
-	0xac, 0xeb, 0x7f, 0x15, 0x60, 0x46, 0xe9, 0xbe, 0xd0, 0x5e, 0x1d, 0xc3, 0xbc, 0x08, 0xa3, 0x4f,
-	0xb1, 0xd0, 0x8c, 0x0d, 0x89, 0x55, 0xb6, 0xe5, 0xcd, 0x81, 0x8a, 0xd3, 0x90, 0x9c, 0xef, 0x25,
-	0x38, 0xe3, 0xda, 0x7d, 0x64, 0x78, 0xed, 0x6e, 0xc0, 0x82, 0x1c, 0x86, 0xe3, 0x25, 0xc6, 0x31,
-	0x2a, 0x44, 0xdc, 0x8c, 0x1f, 0xad, 0x8c, 0x81, 0x48, 0xde, 0xf7, 0x92, 0xbc, 0xfa, 0xef, 0xe6,
-	0x60, 0xea, 0x0b, 0x97, 0x9c, 0x89, 0x7d, 0xe6, 0x73, 0x7d, 0x17, 0x46, 0xcd, 0xc0, 0xba, 0x50,
-	0x93, 0x5b, 0xe8, 0x0a, 0xed, 0x86, 0xe2, 0xe2, 0xb8, 0x0a, 0x2a, 0xee, 0x9e, 0xca, 0xf3, 0xc6,
-	0x77, 0x39, 0x0a, 0x02, 0xb5, 0x0d, 0xe9, 0x9e, 0x66, 0xa0, 0xb8, 0x91, 0x56, 0x27, 0xd4, 0x74,
-	0x1d, 0x5b, 0xba, 0x7b, 0xc5, 0x7c, 0x23, 0x9d, 0xe6, 0x41, 0x5f, 0xc2, 0x2d, 0x5b, 0x7a, 0x17,
-	0x72, 0x50, 0xcf, 0x1c, 0xea, 0x9c, 0x39, 0xae, 0xc3, 0x3a, 0x75, 0xcc, 0x98, 0xe3, 0x35, 0xa8,
-	0xb6, 0x29, 0x42, 0xd4, 0x3c, 0x32, 0x74, 0x08, 0xf3, 0x8a, 0xe4, 0x28, 0x6e, 0xb9, 0xc6, 0xf3,
-	0xcd, 0x4e, 0x16, 0x1f, 0xf2, 0x60, 0xd9, 0xee, 0xeb, 0x50, 0x29, 0x63, 0x7e, 0xb7, 0xbb, 0xac,
-	0x79, 0xce, 0x97, 0xe8, 0x68, 0x80, 0x44, 0x54, 0x83, 0x8a, 0x9d, 0x72, 0xb3, 0x44, 0x78, 0x50,
-	0xde, 0x58, 0xed, 0xe9, 0x25, 0xe5, 0x88, 0x09, 0xd9, 0x3d, 0xdc, 0xe8, 0x6b, 0x40, 0x0a, 0x76,
-	0x12, 0x53, 0xa7, 0x1f, 0xe4, 0xab, 0xd3, 0x0c, 0xb6, 0x30, 0x4c, 0x9b, 0x8a, 0x87, 0x69, 0xb3,
-	0x22, 0xde, 0xaa, 0x75, 0x73, 0x1b, 0xd3, 0x32, 0xf1, 0x90, 0x02, 0xa3, 0xbb, 0x50, 0x89, 0x40,
-	0xd2, 0x04, 0x51, 0xed, 0xb6, 0xd8, 0xd4, 0x1e, 0x38, 0xba, 0x03, 0x33, 0xe2, 0x80, 0x77, 0x0f,
-	0xe1, 0x8c, 0xcc, 0x17, 0x24, 0xa1, 0x5c, 0x87, 0xb9, 0xa4, 0x51, 0xa5, 0x5f, 0x51, 0xe2, 0x69,
-	0x6f, 0xe7, 0xeb, 0xb0, 0x88, 0x18, 0x7d, 0x00, 0x13, 0x2e, 0x69, 0x34, 0x1c, 0xaf, 0xa1, 0xac,
-	0x5b, 0xec, 0xe6, 0xcb, 0x2b, 0x74, 0x20, 0xd1, 0xea, 0xc2, 0x85, 0xd4, 0x68, 0x09, 0xc6, 0x9b,
-	0x98, 0x5e, 0xec, 0xef, 0x68, 0xbf, 0x14, 0x43, 0x52, 0x2d, 0xf4, 0x31, 0x4c, 0xf1, 0x5f, 0x47,
-	0x98, 0xbd, 0x20, 0xc1, 0x73, 0x1a, 0x19, 0xb9, 0x3e, 0x3a, 0x39, 0x41, 0x8c, 0x3e, 0x87, 0xa9,
-	0x66, 0xcb, 0x65, 0x8e, 0xca, 0x85, 0x28, 0xfb, 0xb2, 0xd2, 0x1d, 0xd2, 0x61, 0x0c, 0xab, 0x46,
-	0x94, 0xe0, 0x40, 0x1a, 0x4c, 0x78, 0x52, 0x9a, 0xf6, 0x27, 0x62, 0x5c, 0x61, 0x13, 0x3d, 0x82,
-	0x25, 0x9f, 0xd8, 0x3b, 0x47, 0xf5, 0x3a, 0xe6, 0xb7, 0x3c, 0x96, 0xf5, 0xb9, 0x27, 0x56, 0xbf,
-	0x0f, 0x16, 0xfd, 0x00, 0x2b, 0xa4, 0xe9, 0xb0, 0xba, 0x63, 0x63, 0xcb, 0x0c, 0xf6, 0x85, 0x5e,
-	0x27, 0xaa, 0xf3, 0x43, 0xd3, 0xd7, 0xee, 0xe4, 0x2e, 0xf7, 0x40, 0x7e, 0xf4, 0x29, 0x4c, 0x11,
-	0xaf, 0x9b, 0x6b, 0xd2, 0xae, 0xe5, 0xca, 0x4b, 0xd0, 0x23, 0x03, 0x96, 0x88, 0xcf, 0x4f, 0x26,
-	0x09, 0x0e, 0x4d, 0xcf, 0x6c, 0xe0, 0x6f, 0xf0, 0xd9, 0x05, 0x21, 0xcf, 0xa9, 0xf6, 0x4e, 0xae,
-	0xa4, 0x3e, 0x9c, 0xe8, 0x01, 0xcc, 0xf9, 0x81, 0x43, 0x02, 0x87, 0x75, 0xb6, 0x5d, 0x93, 0x52,
-	0x11, 0x6e, 0xdf, 0x88, 0x72, 0x03, 0xbd, 0x48, 0xe1, 0xd2, 0x05, 0xe4, 0x65, 0x47, 0x19, 0xb5,
-	0xb8, 0x4b, 0xc7, 0xc1, 0x91, 0x4b, 0xc7, 0x1b, 0xc8, 0x80, 0x92, 0xf8, 0xb1, 0xef, 0x39, 0x4c,
-	0x7b, 0x33, 0x9d, 0xc5, 0xaa, 0x85, 0x28, 0x75, 0x9f, 0xb5, 0xff, 0xfc, 0xb7, 0x5b, 0x0b, 0x82,
-	0xfe, 0x94, 0xfb, 0x93, 0xef, 0xf2, 0xd5, 0xc4, 0x4d, 0x9f, 0x75, 0x0c, 0xe8, 0x42, 0xd1, 0x6d,
-	0x28, 0x52, 0x9b, 0x6a, 0x37, 0xd3, 0x0e, 0x62, 0x7d, 0xa7, 0xae, 0x3a, 0xe7, 0xf8, 0x30, 0x9d,
-	0x72, 0x2b, 0x3f, 0x9d, 0xb2, 0x0e, 0xe3, 0x2c, 0x30, 0x2d, 0x1c, 0x68, 0x6f, 0x29, 0xe2, 0x48,
-	0xe6, 0x89, 0x80, 0x87, 0x49, 0x36, 0x49, 0x85, 0x36, 0x60, 0xbc, 0x45, 0xf1, 0xe1, 0x76, 0x4d,
-	0xfb, 0x45, 0xee, 0xba, 0x2b, 0x4a, 0xb4, 0x0e, 0x28, 0xc0, 0x4d, 0xc2, 0x70, 0xcd, 0x71, 0x09,
-	0xab, 0xda, 0x36, 0xb7, 0x62, 0xda, 0x03, 0x71, 0x70, 0x33, 0x30, 0x7c, 0x4c, 0xe2, 0xe6, 0xdb,
-	0xda, 0xa3, 0xf4, 0x98, 0xf6, 0x05, 0x3c, 0x1c, 0x93, 0xa4, 0xe2, 0x1e, 0x8a, 0xcf, 0xf9, 0xb7,
-	0x71, 0xc0, 0x6a, 0x01, 0x69, 0x3b, 0x36, 0x0e, 0xb4, 0x0f, 0xa5, 0x87, 0xd2, 0x83, 0x40, 0x2b,
-	0x50, 0xfa, 0xf1, 0x05, 0x53, 0xda, 0xeb, 0x23, 0x99, 0x7a, 0x8d, 0x00, 0x62, 0x81, 0x19, 0xd5,
-	0x1e, 0xf7, 0x2c, 0xf0, 0x49, 0x77, 0x81, 0x19, 0x45, 0xcb, 0x3c, 0x0c, 0x6e, 0x3b, 0x94, 0x9b,
-	0xc0, 0x8f, 0x65, 0xea, 0x32, 0x6c, 0xa3, 0x2d, 0x98, 0x69, 0x72, 0x4f, 0xe6, 0x90, 0xb9, 0x94,
-	0xf7, 0x4c, 0xb5, 0x4f, 0x72, 0x97, 0x2a, 0xc5, 0x21, 0xf2, 0xc3, 0x66, 0xb8, 0x52, 0x4f, 0x54,
-	0x7e, 0x38, 0x04, 0xf0, 0x1e, 0xf0, 0x4b, 0x86, 0x03, 0xcf, 0x74, 0xe5, 0x82, 0x68, 0x9f, 0xe6,
-	0xf7, 0x90, 0xe4, 0x40, 0x9f, 0x87, 0xce, 0x69, 0xa8, 0x85, 0x3e, 0xcf, 0x15, 0x91, 0x64, 0xe0,
-	0xba, 0xd1, 0x32, 0xc5, 0x9d, 0xa9, 0x4a, 0xdd, 0x28, 0x5b, 0xfa, 0x7b, 0x50, 0x8a, 0x56, 0x0b,
-	0xad, 0x42, 0x59, 0xf9, 0x77, 0x3c, 0xe8, 0x51, 0x0f, 0x00, 0x71, 0x90, 0x6e, 0xc0, 0x54, 0x7c,
-	0x57, 0xc5, 0xe4, 0x84, 0xd7, 0x54, 0xf5, 0x4c, 0xb7, 0x43, 0x1d, 0x3a, 0x84, 0x9f, 0x95, 0xe2,
-	0xd0, 0xef, 0xc1, 0x7c, 0x86, 0x5a, 0xe7, 0x9e, 0xa3, 0x2b, 0xb2, 0xcd, 0xd2, 0x9b, 0x94, 0x0d,
-	0xfd, 0xef, 0x67, 0x61, 0x21, 0xcb, 0xed, 0xfa, 0x7f, 0x95, 0x94, 0xe0, 0xdb, 0xdd, 0xa2, 0x8c,
-	0x34, 0x95, 0xf7, 0xad, 0x7c, 0xa4, 0xc1, 0xdb, 0x1d, 0x67, 0x88, 0x3b, 0xbe, 0x70, 0xe9, 0xb4,
-	0x46, 0x79, 0x88, 0xb4, 0xc6, 0x56, 0x94, 0xd6, 0x98, 0x15, 0xfe, 0xca, 0xdd, 0xc1, 0x5e, 0x71,
-	0x66, 0x5e, 0xe3, 0x0e, 0xcc, 0xb8, 0xc4, 0xb4, 0xb7, 0x4c, 0xd7, 0xf4, 0x2c, 0x1c, 0xec, 0xd7,
-	0x44, 0x72, 0xbe, 0x64, 0xa4, 0xa0, 0xe8, 0x31, 0x68, 0x71, 0x48, 0x5d, 0xb8, 0x4f, 0x86, 0xe9,
-	0x35, 0x44, 0x46, 0x9e, 0x1b, 0xca, 0xbe, 0xf8, 0x28, 0x77, 0xf2, 0xee, 0x80, 0xdc, 0xc9, 0xfc,
-	0xab, 0xe7, 0x4e, 0x16, 0x5e, 0x7f, 0xee, 0x64, 0xf1, 0x8f, 0x91, 0x3b, 0x59, 0x7a, 0xad, 0xb9,
-	0x93, 0x6b, 0x43, 0xe4, 0x4e, 0xee, 0xc0, 0x54, 0x80, 0x7d, 0xd7, 0xb1, 0xcc, 0x6d, 0x11, 0x71,
-	0x6a, 0xfc, 0xee, 0xc8, 0x35, 0x8e, 0xc3, 0xd1, 0x47, 0xf1, 0x1c, 0xcb, 0xf5, 0xfc, 0xe5, 0x1d,
-	0x94, 0x67, 0xb9, 0xf1, 0xea, 0x79, 0x96, 0x95, 0xab, 0xe7, 0x59, 0xde, 0x8c, 0xe5, 0x59, 0x1e,
-	0xa9, 0x3c, 0x8b, 0xf4, 0x09, 0xf4, 0x7e, 0x97, 0xe6, 0xfb, 0xb6, 0xef, 0x25, 0x52, 0x2e, 0x19,
-	0x39, 0x93, 0x5b, 0xaf, 0x2f, 0x67, 0xb2, 0x7a, 0xc5, 0x9c, 0xc9, 0x26, 0x2c, 0x86, 0x86, 0xea,
-	0x24, 0x30, 0xcf, 0xcf, 0x1d, 0x4b, 0x59, 0x6a, 0x5d, 0x4c, 0x39, 0x1b, 0x99, 0x4e, 0x1f, 0xfd,
-	0xe2, 0x92, 0xe9, 0xa3, 0x8f, 0x61, 0x4a, 0xc5, 0xd6, 0xe2, 0x74, 0x69, 0x6f, 0x0f, 0xce, 0xb0,
-	0x24, 0x88, 0xfb, 0xa6, 0x69, 0x6e, 0x5f, 0x25, 0x4d, 0xd3, 0x93, 0x32, 0xba, 0x73, 0xa9, 0x94,
-	0x51, 0x22, 0xcb, 0xf3, 0xde, 0x2b, 0x67, 0x79, 0xd6, 0x87, 0xcf, 0xf2, 0xdc, 0xff, 0xe3, 0x65,
-	0x79, 0x2e, 0x40, 0xeb, 0x77, 0xb4, 0xaf, 0xf8, 0x02, 0xb6, 0x04, 0xe3, 0xb4, 0x75, 0x7e, 0xee,
-	0xbc, 0x54, 0x9d, 0xa9, 0x96, 0xfe, 0x1f, 0x05, 0x40, 0xbd, 0xb1, 0xd8, 0x15, 0x3b, 0x59, 0x85,
-	0xb2, 0x7a, 0x13, 0x17, 0x3e, 0x93, 0xec, 0x29, 0x0e, 0xe2, 0x7e, 0x72, 0x43, 0x78, 0x2d, 0x3b,
-	0xa4, 0x69, 0x3a, 0x5e, 0x5d, 0x0e, 0xa9, 0x28, 0xfd, 0xe4, 0x5e, 0x0c, 0xfa, 0x0a, 0x90, 0xe3,
-	0x89, 0x37, 0xfc, 0x5d, 0xaf, 0x4d, 0x3a, 0x7b, 0x8e, 0xcb, 0xfd, 0xb8, 0xd1, 0xdc, 0x21, 0x65,
-	0x70, 0xe9, 0x7f, 0x51, 0x80, 0x1b, 0xc7, 0x2d, 0x76, 0x46, 0x5a, 0x9e, 0x9d, 0xb8, 0x5b, 0x6a,
-	0xce, 0x9f, 0xc2, 0x68, 0x93, 0xd8, 0x72, 0xd8, 0x33, 0x71, 0xd3, 0x3c, 0x80, 0x69, 0xfd, 0x90,
-	0xd8, 0xd8, 0x10, 0x7c, 0xfa, 0x1a, 0x8c, 0xf2, 0x16, 0x9a, 0x86, 0x52, 0xf5, 0xe0, 0xe0, 0xf8,
-	0x9b, 0xd3, 0xea, 0xd1, 0x77, 0x95, 0x37, 0xd0, 0x1c, 0x4c, 0x1b, 0xbb, 0x5f, 0xec, 0xd7, 0x4f,
-	0x8c, 0xef, 0x4e, 0x8f, 0x8f, 0x0e, 0xbe, 0xab, 0x14, 0xf4, 0xdf, 0x4d, 0x43, 0x59, 0x84, 0x03,
-	0xaf, 0xb4, 0xda, 0x59, 0xbe, 0xdb, 0xc8, 0xab, 0xfa, 0x6e, 0x7d, 0xfc, 0xb2, 0xb4, 0x7f, 0x37,
-	0x9a, 0xe1, 0xdf, 0xa5, 0x6d, 0xd4, 0x58, 0x1f, 0x1b, 0x15, 0x3d, 0x6f, 0x8f, 0xc7, 0x9f, 0xb7,
-	0xdf, 0x86, 0x69, 0x11, 0x7f, 0xd5, 0xcd, 0xa6, 0xcf, 0x95, 0xa6, 0x78, 0x26, 0x2a, 0x18, 0x49,
-	0x60, 0xf2, 0x0d, 0xa1, 0x34, 0xf4, 0x1b, 0xc2, 0x1a, 0xcc, 0x4a, 0x2d, 0xd2, 0x8d, 0xce, 0x41,
-	0x55, 0x93, 0x24, 0xc1, 0xa1, 0x03, 0x5a, 0xbe, 0x8a, 0x03, 0x9a, 0xf6, 0x90, 0xa6, 0x2e, 0xeb,
-	0x21, 0x59, 0x70, 0xeb, 0x39, 0xc6, 0xbe, 0xe9, 0x3a, 0x6d, 0xbe, 0xa2, 0x5c, 0xbf, 0x88, 0x1b,
-	0xe9, 0x49, 0xdd, 0x54, 0x6d, 0xe0, 0xa8, 0x54, 0x24, 0x2d, 0x73, 0x47, 0x95, 0x2c, 0x19, 0x79,
-	0x12, 0xd0, 0x36, 0x54, 0x6c, 0xec, 0xbb, 0xa4, 0xd3, 0xc4, 0x1e, 0x93, 0x0a, 0x4a, 0x15, 0x93,
-	0xf4, 0x55, 0xc1, 0x3d, 0x0c, 0x7c, 0x1f, 0x7c, 0xf5, 0xae, 0x4f, 0x55, 0x9e, 0xaa, 0x2f, 0x77,
-	0x97, 0x92, 0x2b, 0x6f, 0x2b, 0xca, 0xb7, 0xe4, 0x97, 0x78, 0x74, 0x89, 0x63, 0x41, 0xf9, 0xc2,
-	0xd0, 0x41, 0xb9, 0x72, 0xcc, 0x17, 0x87, 0x70, 0xcc, 0x33, 0x3c, 0x05, 0xed, 0xf5, 0x79, 0x0a,
-	0xd7, 0xaf, 0xfc, 0xba, 0x92, 0xb0, 0xf9, 0xcb, 0x97, 0xb4, 0xf9, 0x17, 0xf0, 0x96, 0xd4, 0x15,
-	0x35, 0x4e, 0x69, 0x11, 0xb7, 0xee, 0x39, 0xdc, 0x1d, 0x6d, 0xec, 0x91, 0x20, 0xd4, 0x69, 0xca,
-	0x45, 0x1b, 0xb4, 0x9c, 0xf9, 0x42, 0xd0, 0x39, 0xac, 0xf6, 0x25, 0xda, 0xf7, 0x64, 0x47, 0x6f,
-	0xe6, 0x76, 0x94, 0x2b, 0x23, 0x23, 0x84, 0xb8, 0x79, 0xf9, 0x10, 0x22, 0xdb, 0x55, 0xbd, 0x7d,
-	0x79, 0x57, 0xf5, 0x33, 0x98, 0x92, 0x07, 0x54, 0xc6, 0x4e, 0xca, 0xb7, 0xbc, 0x11, 0x73, 0xe4,
-	0xbb, 0x3a, 0x5e, 0x85, 0x57, 0x09, 0x06, 0xf4, 0x21, 0x5c, 0xfb, 0xf1, 0xc5, 0x73, 0xca, 0xd5,
-	0x96, 0xdb, 0xc6, 0xc1, 0xee, 0x4b, 0x16, 0x98, 0xdc, 0x55, 0xd9, 0xae, 0x0a, 0xe7, 0xb2, 0x64,
-	0xf4, 0x43, 0x8b, 0xc2, 0x42, 0xb7, 0xd5, 0x70, 0x3c, 0xaa, 0xbd, 0x25, 0x62, 0xb9, 0xb0, 0x19,
-	0x66, 0xb4, 0xf5, 0x9e, 0xc2, 0xa3, 0x5f, 0xe4, 0x66, 0xca, 0xf4, 0x7f, 0x2a, 0x00, 0x12, 0x63,
-	0x56, 0xce, 0x87, 0x32, 0x4f, 0x77, 0x60, 0x46, 0xb9, 0x83, 0x61, 0x64, 0x5d, 0x50, 0xc9, 0xeb,
-	0x04, 0x14, 0x3d, 0x85, 0x45, 0x27, 0x62, 0x64, 0xfc, 0x48, 0xe3, 0xe0, 0xb0, 0x6b, 0x51, 0x63,
-	0x85, 0x2f, 0x99, 0x64, 0x46, 0x36, 0x37, 0xb7, 0x3d, 0x21, 0xc2, 0x35, 0x29, 0x55, 0xde, 0x42,
-	0x02, 0xa6, 0xef, 0xc3, 0x9c, 0x18, 0x78, 0xc2, 0xa0, 0x5f, 0xad, 0x30, 0x84, 0xc1, 0xec, 0x09,
-	0x76, 0x71, 0x13, 0xb3, 0xe0, 0x95, 0x04, 0xa1, 0x7b, 0x30, 0xd2, 0xde, 0x50, 0xaf, 0x47, 0xb1,
-	0x43, 0x11, 0x09, 0x7f, 0xb6, 0xa1, 0x82, 0x95, 0x91, 0xf6, 0x86, 0xfe, 0x57, 0x45, 0x98, 0xeb,
-	0xc1, 0x5c, 0xb1, 0xe3, 0x6f, 0x61, 0xae, 0x89, 0x99, 0x69, 0x9b, 0xcc, 0x3c, 0xc5, 0x2f, 0xad,
-	0x0b, 0x1e, 0xd3, 0x2b, 0x9f, 0xe9, 0x5e, 0xe6, 0x38, 0x0e, 0x15, 0xf5, 0xae, 0x22, 0x56, 0xe3,
-	0xaa, 0x34, 0x53, 0x70, 0xb4, 0x0b, 0xe0, 0x07, 0xa4, 0x89, 0xd9, 0x05, 0x6e, 0x85, 0x49, 0xab,
-	0xdb, 0x99, 0x22, 0x6b, 0x11, 0x99, 0x12, 0x16, 0x63, 0x44, 0x5f, 0x42, 0x99, 0x32, 0xd3, 0x7a,
-	0x6e, 0x07, 0x4e, 0x1b, 0x07, 0x6a, 0x89, 0xee, 0x64, 0xca, 0xa9, 0x73, 0xba, 0x1d, 0x41, 0xa7,
-	0x04, 0xc5, 0x59, 0xd1, 0x9f, 0xc1, 0x9c, 0x69, 0x59, 0x98, 0xd2, 0x53, 0x97, 0x34, 0x4e, 0xfd,
-	0x6e, 0x2d, 0x6a, 0x79, 0xe3, 0x41, 0xa6, 0xbc, 0xaa, 0xa0, 0x3e, 0x20, 0x0d, 0x79, 0x52, 0xa4,
-	0x6b, 0xa8, 0x24, 0xcf, 0x9a, 0x49, 0xa4, 0x6e, 0xc2, 0x5b, 0xb9, 0xab, 0x84, 0x3e, 0x81, 0xf2,
-	0x0b, 0x93, 0x36, 0x87, 0xf7, 0xc0, 0xe2, 0xe4, 0xfa, 0xef, 0x8b, 0x70, 0x63, 0xc0, 0xb2, 0x5d,
-	0xf1, 0x04, 0xbc, 0xd2, 0x98, 0xd0, 0xaf, 0x42, 0x6f, 0xe9, 0x94, 0xb4, 0x71, 0x10, 0x38, 0x36,
-	0x56, 0x5b, 0xb4, 0x39, 0xd4, 0x56, 0xaf, 0xcb, 0x3f, 0xc7, 0x8a, 0xd7, 0x98, 0xb1, 0x12, 0xed,
-	0xe5, 0x7f, 0x2e, 0xc0, 0x4c, 0x92, 0x04, 0x3d, 0x84, 0x89, 0xe4, 0xb3, 0x75, 0x5f, 0x3d, 0x1c,
-	0xd2, 0xa1, 0xcf, 0xb8, 0x52, 0x12, 0x56, 0x41, 0x3d, 0xc8, 0xa8, 0x59, 0xf6, 0xe5, 0x4c, 0x91,
-	0xa3, 0x2a, 0xcc, 0x12, 0x65, 0xbf, 0x42, 0x09, 0xc5, 0xc1, 0x12, 0xd2, 0xf4, 0xfa, 0xdf, 0x8c,
-	0xc1, 0xca, 0xa0, 0xb3, 0x7a, 0xc5, 0xdd, 0xfb, 0xb0, 0xfb, 0x94, 0x97, 0xbb, 0x73, 0xc2, 0xc2,
-	0x45, 0x6f, 0x79, 0x8f, 0x01, 0x9a, 0xc4, 0x73, 0x18, 0xe1, 0x9e, 0xc5, 0x10, 0x0f, 0xd7, 0x31,
-	0x6a, 0xf4, 0x18, 0x26, 0x19, 0xf1, 0x89, 0x4b, 0x1a, 0x9d, 0xfc, 0x00, 0x4b, 0x74, 0x1b, 0xd1,
-	0xa3, 0x1d, 0x98, 0xb5, 0x1d, 0xca, 0x47, 0x1f, 0xf9, 0x15, 0xf9, 0xc9, 0xd7, 0x34, 0x0b, 0xdf,
-	0xd2, 0xe4, 0x51, 0x51, 0x37, 0xb9, 0xff, 0x96, 0x26, 0xc9, 0xd1, 0x8f, 0xb0, 0x18, 0x6e, 0x51,
-	0x74, 0xcf, 0xc5, 0x32, 0x4e, 0x08, 0x03, 0xb4, 0x39, 0x9c, 0x86, 0x59, 0x4f, 0xf0, 0x1a, 0xd9,
-	0x22, 0xd1, 0x05, 0x2c, 0xa8, 0x03, 0x95, 0xec, 0x6a, 0xf2, 0x15, 0xba, 0xca, 0x94, 0xa8, 0x6f,
-	0xc2, 0x74, 0xb2, 0xeb, 0x49, 0x18, 0x3d, 0x3a, 0x3e, 0xda, 0xad, 0xbc, 0xc1, 0x7f, 0xed, 0x3d,
-	0x3d, 0x38, 0xa8, 0x14, 0xd0, 0x2c, 0x94, 0x77, 0x0d, 0xe3, 0xd8, 0xa8, 0xcb, 0x18, 0x73, 0x44,
-	0xff, 0xbb, 0x02, 0xdc, 0x19, 0x4e, 0xef, 0x5d, 0xf1, 0x94, 0x7e, 0x01, 0x73, 0x2e, 0x69, 0x7c,
-	0xe3, 0x78, 0x36, 0x79, 0x11, 0x46, 0x1f, 0xea, 0xbc, 0x0e, 0x08, 0x4f, 0x7a, 0x79, 0xf4, 0x5d,
-	0x65, 0xbb, 0xe3, 0x8e, 0x12, 0x7a, 0x00, 0xf3, 0xb4, 0x75, 0x46, 0xad, 0xc0, 0x39, 0xc3, 0x76,
-	0xb7, 0x74, 0xa0, 0x20, 0x9c, 0x9d, 0x2c, 0x94, 0xfe, 0xdb, 0x02, 0x94, 0x63, 0x99, 0xd3, 0x28,
-	0x87, 0x5d, 0x88, 0xe5, 0xb0, 0x45, 0x1d, 0x70, 0xc0, 0xc4, 0x30, 0xc7, 0x0c, 0xf1, 0x1b, 0x2d,
-	0xc3, 0x24, 0x0f, 0xc2, 0xc4, 0xdb, 0x4d, 0x51, 0xc0, 0xa3, 0x36, 0xba, 0x09, 0x20, 0xab, 0x7c,
-	0x05, 0x76, 0x54, 0x60, 0x63, 0x10, 0xce, 0xeb, 0x2b, 0x6f, 0x55, 0x7d, 0x01, 0x11, 0xb5, 0xf5,
-	0x7f, 0x98, 0x84, 0x72, 0xec, 0xc9, 0x94, 0xcb, 0xe2, 0xe1, 0xb2, 0x7c, 0x37, 0x56, 0xa5, 0xdd,
-	0x31, 0x08, 0x0f, 0x80, 0x55, 0xa6, 0x44, 0x66, 0x40, 0x94, 0xc0, 0x24, 0x10, 0xbd, 0x0b, 0x73,
-	0x16, 0x69, 0xfa, 0xc4, 0xe3, 0xb1, 0x58, 0xf8, 0x65, 0x81, 0x0c, 0xa4, 0x7b, 0x11, 0xdd, 0x87,
-	0xa6, 0x6d, 0x12, 0xe0, 0x9d, 0x56, 0xd3, 0x57, 0x31, 0xf3, 0x10, 0x0f, 0x4d, 0x21, 0x07, 0xdf,
-	0x09, 0xf5, 0x19, 0x85, 0xf2, 0xc2, 0x65, 0x02, 0x51, 0x96, 0x4c, 0x64, 0xa1, 0x78, 0xb4, 0x1d,
-	0x82, 0x6b, 0xea, 0xc1, 0x41, 0x95, 0x50, 0xa4, 0xc0, 0xdd, 0x54, 0xc0, 0x4c, 0x3c, 0x15, 0xb0,
-	0x06, 0xb3, 0x2a, 0x7d, 0x13, 0xf1, 0x57, 0x54, 0x09, 0x46, 0x12, 0x9c, 0xf8, 0xbc, 0x02, 0xa5,
-	0x3e, 0xaf, 0x48, 0x7e, 0x4f, 0x30, 0x7f, 0x99, 0xef, 0x09, 0xd0, 0x16, 0xac, 0x04, 0xd8, 0xb4,
-	0x1d, 0x0f, 0x53, 0xba, 0xef, 0x39, 0xcc, 0x31, 0xdd, 0x1d, 0xec, 0x9a, 0x9d, 0x3a, 0xb6, 0x88,
-	0x67, 0xcb, 0x87, 0x8b, 0x69, 0x63, 0x20, 0x0d, 0x7a, 0x04, 0x4b, 0x11, 0xbe, 0x86, 0x03, 0x87,
-	0xd8, 0x21, 0xf7, 0xa2, 0xe0, 0xee, 0x83, 0x45, 0x9f, 0xc0, 0xf5, 0x08, 0xb3, 0x67, 0x3a, 0x6e,
-	0x2b, 0xc0, 0x27, 0x17, 0x01, 0xa6, 0x17, 0xc4, 0xb5, 0x45, 0x1d, 0xc5, 0xb4, 0xd1, 0x9f, 0x80,
-	0x9f, 0x32, 0xca, 0x4c, 0xd6, 0x12, 0x99, 0x5b, 0x51, 0x82, 0x30, 0x6d, 0xc4, 0x20, 0xc9, 0x04,
-	0x8a, 0x76, 0x89, 0x04, 0x4a, 0xf8, 0x86, 0x7e, 0x5d, 0xe8, 0xb7, 0x4a, 0x97, 0x47, 0xc2, 0x63,
-	0xaf, 0xe7, 0x0b, 0x6a, 0x97, 0x43, 0xbd, 0x2e, 0xcf, 0xcb, 0x8a, 0xd8, 0x9e, 0x4c, 0x1c, 0x1f,
-	0x94, 0xeb, 0x9c, 0x63, 0xab, 0x63, 0xb9, 0x38, 0x37, 0x9b, 0x10, 0x51, 0xa2, 0x0b, 0xb8, 0xc5,
-	0xe7, 0x5c, 0xf5, 0x45, 0x72, 0x89, 0xeb, 0x92, 0xa7, 0x1e, 0x73, 0x5c, 0x71, 0xe9, 0xea, 0xcc,
-	0x0c, 0x58, 0x18, 0xd5, 0xe5, 0x19, 0xb2, 0x3c, 0x31, 0xfc, 0x0e, 0x84, 0x47, 0x2f, 0x7e, 0x07,
-	0xee, 0xc8, 0x3b, 0x90, 0x81, 0xe2, 0xcb, 0xa0, 0xc0, 0xc9, 0x65, 0x90, 0xb5, 0x2c, 0x99, 0x38,
-	0xfd, 0x07, 0x98, 0x4d, 0x95, 0x4c, 0x74, 0x2f, 0x48, 0x21, 0x7e, 0x41, 0x12, 0x9b, 0x38, 0x36,
-	0xec, 0x26, 0xea, 0xdb, 0x70, 0xad, 0x4f, 0xf9, 0x3a, 0x8f, 0x1a, 0x2d, 0xbf, 0x15, 0x26, 0xa7,
-	0x2d, 0xbf, 0x25, 0xcb, 0x82, 0x9a, 0x24, 0xe8, 0x84, 0x09, 0x63, 0xd9, 0xd2, 0x3f, 0x85, 0x52,
-	0x54, 0x89, 0x81, 0x1e, 0xc2, 0x18, 0x23, 0xcf, 0xb1, 0x97, 0x63, 0xa8, 0xc5, 0x40, 0x24, 0xa5,
-	0xfe, 0x6b, 0x98, 0x8a, 0xbf, 0x23, 0xa1, 0x15, 0x28, 0x89, 0xc2, 0x80, 0x9a, 0xc9, 0x2e, 0x54,
-	0xff, 0x5d, 0x40, 0xa4, 0xc4, 0x47, 0x62, 0x4a, 0x9c, 0x1f, 0x71, 0x21, 0x41, 0x24, 0x99, 0x65,
-	0x34, 0x18, 0x83, 0xe8, 0x7f, 0x5d, 0x80, 0x69, 0x15, 0x92, 0xaa, 0x61, 0x5e, 0xfd, 0x03, 0x04,
-	0x1e, 0x7c, 0x86, 0xef, 0x31, 0xb5, 0xd0, 0x72, 0x4c, 0x1b, 0x09, 0x58, 0x34, 0xc8, 0x62, 0xd2,
-	0xd2, 0xa4, 0xcb, 0x85, 0xf5, 0xdf, 0x8f, 0xc1, 0x62, 0x66, 0xf5, 0x10, 0xfa, 0x16, 0xae, 0x4b,
-	0xad, 0xdb, 0x2d, 0x57, 0xda, 0xea, 0xa8, 0xaa, 0xb8, 0x21, 0xbc, 0xf7, 0xfe, 0xcc, 0x68, 0x1f,
-	0xe6, 0x3d, 0xdc, 0xc6, 0xaa, 0xc3, 0x28, 0x35, 0x59, 0x1e, 0xfc, 0xe6, 0x92, 0xc5, 0x23, 0x5e,
-	0x81, 0xdc, 0x17, 0x66, 0x87, 0xa6, 0x64, 0x4d, 0xe5, 0xbd, 0x02, 0x65, 0x30, 0xa1, 0x03, 0x98,
-	0x0f, 0xf0, 0x8b, 0xc0, 0x61, 0xb8, 0xea, 0xfb, 0x5f, 0x9e, 0x9c, 0xd4, 0x6a, 0x01, 0x39, 0xc3,
-	0xea, 0x3b, 0xb3, 0x41, 0x73, 0xcd, 0x62, 0xe3, 0xb3, 0x94, 0x2f, 0x38, 0x38, 0x91, 0x1c, 0xca,
-	0x29, 0x59, 0xcb, 0xe2, 0xe1, 0x4e, 0x28, 0x39, 0x4b, 0xcc, 0x2f, 0x27, 0x7f, 0x98, 0x22, 0x97,
-	0xe9, 0x0a, 0xf5, 0x9a, 0xf4, 0xd4, 0x38, 0x10, 0x2a, 0x5b, 0xa4, 0x2b, 0xba, 0x30, 0x7e, 0x81,
-	0x99, 0x7a, 0x68, 0xa2, 0xaa, 0x4e, 0xac, 0xbf, 0xc2, 0x8b, 0x28, 0xd1, 0xdd, 0xa8, 0x98, 0xf2,
-	0x24, 0xe2, 0xd6, 0x64, 0xc5, 0x61, 0x1a, 0x8e, 0x8e, 0x00, 0xb5, 0x28, 0x3e, 0xc0, 0x0d, 0xd3,
-	0xea, 0x84, 0x63, 0xa3, 0x43, 0x3a, 0xf6, 0x19, 0x9c, 0xfa, 0x9f, 0x8f, 0xc0, 0x54, 0xbc, 0x5c,
-	0x0a, 0x7d, 0x00, 0x13, 0x3c, 0x1a, 0xb6, 0x49, 0xa3, 0xb7, 0xd4, 0x58, 0x12, 0xee, 0x48, 0x74,
-	0x58, 0x70, 0xa8, 0xa8, 0xd1, 0x13, 0xae, 0xed, 0x1b, 0x17, 0x8c, 0x32, 0xec, 0xab, 0xc3, 0x7d,
-	0x2b, 0xcd, 0x7a, 0xc0, 0x09, 0xea, 0x0c, 0xfb, 0x8a, 0xb9, 0xcb, 0x81, 0x36, 0x61, 0xfc, 0x27,
-	0xc7, 0x7f, 0xee, 0x84, 0x85, 0xb9, 0x2b, 0x69, 0xde, 0xef, 0x05, 0x36, 0x2c, 0xa0, 0x92, 0xb4,
-	0x68, 0x3b, 0x99, 0x72, 0x18, 0x4d, 0x7f, 0xd7, 0x23, 0x59, 0xeb, 0x5d, 0x92, 0x8c, 0x6c, 0x83,
-	0x7e, 0x1f, 0xe6, 0x33, 0x66, 0x86, 0x34, 0x98, 0x30, 0x55, 0x1d, 0x93, 0x54, 0x60, 0x61, 0x53,
-	0xaf, 0xc3, 0x62, 0xe6, 0x7c, 0xfa, 0xb3, 0xa0, 0x55, 0x28, 0xcb, 0x34, 0xc4, 0x89, 0x50, 0xac,
-	0xea, 0x0d, 0x2d, 0x06, 0xd2, 0xd7, 0x01, 0xf5, 0x4e, 0x74, 0xc0, 0x20, 0xfe, 0xbb, 0x00, 0xd7,
-	0xfa, 0x4c, 0x0f, 0x3d, 0x80, 0x31, 0x1b, 0x9f, 0xb5, 0x1a, 0x43, 0x38, 0xfe, 0x92, 0x10, 0x6d,
-	0xc2, 0x62, 0xd3, 0x7c, 0x79, 0xd4, 0x6a, 0x9e, 0xe1, 0xe0, 0xf8, 0xbc, 0xca, 0x58, 0xe0, 0x9c,
-	0xb5, 0xf8, 0x41, 0x94, 0x9a, 0x31, 0x1b, 0xc9, 0x9d, 0xa1, 0x38, 0x22, 0x76, 0x47, 0xe5, 0x6b,
-	0x53, 0x1f, 0x2c, 0x7a, 0x0c, 0x5a, 0x0c, 0x73, 0x88, 0x29, 0x35, 0x1b, 0xe1, 0x27, 0x8e, 0xf2,
-	0x0d, 0xaa, 0x2f, 0x5e, 0xff, 0x43, 0x01, 0x60, 0xcb, 0xa4, 0xa1, 0x11, 0xf8, 0x0a, 0x90, 0xf2,
-	0x6c, 0x8d, 0x9d, 0xee, 0xf5, 0xc9, 0x9f, 0x77, 0x06, 0x17, 0xf7, 0xd5, 0xdb, 0x51, 0xb1, 0x37,
-	0xbf, 0xe4, 0x72, 0x9b, 0x92, 0x40, 0x54, 0x83, 0x45, 0xc9, 0x2b, 0x8a, 0xbf, 0xe4, 0x30, 0xb6,
-	0x8d, 0x1d, 0x3a, 0x44, 0x60, 0x9e, 0xcd, 0xa8, 0xff, 0x00, 0x48, 0x16, 0x92, 0x19, 0xa2, 0xa4,
-	0x50, 0xcd, 0x2c, 0xad, 0x71, 0x0a, 0x19, 0x1a, 0xe7, 0x6d, 0x98, 0x8e, 0xda, 0xc2, 0xd4, 0xaa,
-	0x11, 0x27, 0x80, 0xfa, 0x3f, 0x8e, 0xc1, 0xb8, 0x18, 0x00, 0x45, 0xb7, 0xa1, 0x68, 0x79, 0x8e,
-	0xba, 0x9f, 0xf3, 0x89, 0x4f, 0x86, 0xc3, 0x2a, 0x41, 0xcb, 0x73, 0xd0, 0x26, 0x4c, 0xaa, 0x8c,
-	0x4c, 0xe8, 0x89, 0xc4, 0x1e, 0xc8, 0x93, 0x1f, 0x2a, 0x18, 0x11, 0x25, 0x5a, 0x87, 0x71, 0xf9,
-	0xd8, 0xab, 0xd2, 0x04, 0x4b, 0xe9, 0x5a, 0xe5, 0xf0, 0xf6, 0x4a, 0x2a, 0x51, 0x2b, 0xc3, 0x43,
-	0x44, 0x55, 0x96, 0xb5, 0x98, 0x99, 0x62, 0x37, 0x24, 0x0d, 0xfa, 0x80, 0x2b, 0x57, 0x15, 0xf8,
-	0x2a, 0xe5, 0x7a, 0x3d, 0x23, 0x1c, 0x0f, 0x35, 0x4b, 0x44, 0x8b, 0xbe, 0x81, 0x25, 0x9a, 0x34,
-	0xcf, 0xaa, 0x8e, 0x56, 0xbd, 0xba, 0xc5, 0xb4, 0x54, 0xa6, 0x19, 0x37, 0xfa, 0xb0, 0xa3, 0x07,
-	0x50, 0x92, 0x9f, 0x46, 0xf0, 0x15, 0x9d, 0xef, 0xbf, 0xa2, 0x93, 0x82, 0x6a, 0xdb, 0x73, 0x12,
-	0xc5, 0x97, 0x8b, 0xa9, 0xe2, 0xcb, 0x15, 0x28, 0x91, 0x17, 0xe1, 0xa7, 0xb3, 0xd2, 0xba, 0x74,
-	0x01, 0xe8, 0x11, 0x40, 0x13, 0x53, 0xf5, 0x2d, 0x84, 0x72, 0xa6, 0xfb, 0x25, 0xfd, 0x63, 0x94,
-	0x68, 0x0d, 0x46, 0xcf, 0x4c, 0x8a, 0x95, 0xc7, 0x1c, 0xfb, 0xb2, 0xa2, 0x7b, 0x85, 0x0c, 0x41,
-	0x81, 0x3e, 0x87, 0x29, 0x27, 0x76, 0x08, 0x55, 0xdd, 0xf4, 0x4a, 0xba, 0x82, 0x35, 0x7e, 0x44,
-	0x8d, 0x04, 0x07, 0x3f, 0xb0, 0xe1, 0x6c, 0x4e, 0xcc, 0x06, 0x77, 0x8a, 0xb9, 0x0d, 0x4b, 0xc0,
-	0x78, 0x10, 0x18, 0x95, 0xfe, 0xab, 0x85, 0x58, 0x93, 0x41, 0x60, 0x0a, 0xac, 0xff, 0x0a, 0xa6,
-	0x13, 0xdf, 0x5b, 0xbd, 0xe6, 0x0a, 0x89, 0xbf, 0x2c, 0x40, 0x39, 0xf6, 0x5e, 0x17, 0x79, 0x76,
-	0x05, 0xf9, 0x2d, 0xb1, 0x28, 0x50, 0x7a, 0x1f, 0xc6, 0x1d, 0x8f, 0x3d, 0x33, 0x5d, 0x75, 0x5f,
-	0x6e, 0xf4, 0x74, 0xb8, 0xef, 0xb1, 0xf7, 0x37, 0xd4, 0xf3, 0xa4, 0x24, 0xe5, 0x86, 0x8c, 0xb2,
-	0x80, 0x33, 0x85, 0x86, 0x2c, 0xc3, 0x03, 0x70, 0xbc, 0x86, 0xe2, 0x92, 0xb4, 0x77, 0xbf, 0xea,
-	0xf3, 0xc8, 0x82, 0x66, 0xa1, 0xfc, 0xf4, 0xa8, 0x5e, 0xdb, 0xdd, 0xde, 0xdf, 0xdb, 0xdf, 0xdd,
-	0xa9, 0xbc, 0x81, 0xca, 0x30, 0xb1, 0xb3, 0xbb, 0x57, 0x7d, 0x7a, 0x70, 0x52, 0x29, 0x20, 0x80,
-	0xf1, 0xfa, 0x89, 0xb1, 0xbf, 0x7d, 0x52, 0x19, 0x41, 0x13, 0x50, 0x3c, 0xde, 0xdb, 0xab, 0x14,
-	0xef, 0xfe, 0x3a, 0x8c, 0xea, 0x38, 0x5a, 0x1a, 0xca, 0xca, 0x1b, 0x68, 0x3a, 0x66, 0x9f, 0x2b,
-	0x05, 0x2e, 0x46, 0x59, 0xee, 0xca, 0x08, 0xef, 0x24, 0x66, 0x10, 0x2b, 0x45, 0x34, 0x0f, 0xb3,
-	0xc4, 0xc7, 0xde, 0x36, 0xf6, 0x68, 0x8b, 0x56, 0x1b, 0xd8, 0x63, 0x95, 0x51, 0x34, 0x09, 0xa3,
-	0x1e, 0xf1, 0x70, 0x65, 0x6c, 0xeb, 0xc9, 0xbf, 0xfc, 0x7c, 0xb3, 0xf0, 0x87, 0x9f, 0x6f, 0x16,
-	0xfe, 0xfd, 0xe7, 0x9b, 0x85, 0xef, 0xe5, 0xbf, 0xfb, 0x58, 0x77, 0x88, 0xfa, 0xbf, 0x1f, 0x61,
-	0xd1, 0xfa, 0xfd, 0x3e, 0xff, 0x0f, 0xe4, 0x6c, 0x5c, 0x2c, 0xc5, 0xfb, 0xff, 0x1b, 0x00, 0x00,
-	0xff, 0xff, 0xac, 0xc1, 0x69, 0xbb, 0x31, 0x44, 0x00, 0x00,
-}
-
-func (m *ArchConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *ArchConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *ArchConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Arm64 != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.Arm64))
-		i--
-		dAtA[i] = 0x20
-	}
-	if m.S390X != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.S390X))
-		i--
-		dAtA[i] = 0x18
-	}
-	if m.Ppc64Le != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.Ppc64Le))
-		i--
-		dAtA[i] = 0x10
-	}
-	if m.Amd64 != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.Amd64))
-		i--
-		dAtA[i] = 0x8
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *CNIConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *CNIConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *CNIConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Privileged != nil {
-		{
-			size, err := m.Privileged.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x92
-	}
-	if m.Resources != nil {
-		{
-			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x8a
-	}
-	if m.ResourceQuotas != nil {
-		{
-			size, err := m.ResourceQuotas.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x82
-	}
-	if m.Taint != nil {
-		{
-			size, err := m.Taint.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
+func (x *IntOrString) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[47]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
 		}
-		i--
-		dAtA[i] = 0x7a
-	}
-	if m.Chained != nil {
-		{
-			size, err := m.Chained.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x72
-	}
-	if m.Repair != nil {
-		{
-			size, err := m.Repair.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x6a
-	}
-	if len(m.LogLevel) > 0 {
-		i -= len(m.LogLevel)
-		copy(dAtA[i:], m.LogLevel)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.LogLevel)))
-		i--
-		dAtA[i] = 0x62
-	}
-	if len(m.PspClusterRole) > 0 {
-		i -= len(m.PspClusterRole)
-		copy(dAtA[i:], m.PspClusterRole)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.PspClusterRole)))
-		i--
-		dAtA[i] = 0x5a
-	}
-	if m.PodAnnotations != nil {
-		{
-			size, err := m.PodAnnotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x52
-	}
-	if len(m.ExcludeNamespaces) > 0 {
-		for iNdEx := len(m.ExcludeNamespaces) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.ExcludeNamespaces[iNdEx])
-			copy(dAtA[i:], m.ExcludeNamespaces[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ExcludeNamespaces[iNdEx])))
-			i--
-			dAtA[i] = 0x4a
-		}
-	}
-	if len(m.CniConfFileName) > 0 {
-		i -= len(m.CniConfFileName)
-		copy(dAtA[i:], m.CniConfFileName)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.CniConfFileName)))
-		i--
-		dAtA[i] = 0x42
-	}
-	if len(m.CniConfDir) > 0 {
-		i -= len(m.CniConfDir)
-		copy(dAtA[i:], m.CniConfDir)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.CniConfDir)))
-		i--
-		dAtA[i] = 0x3a
-	}
-	if len(m.CniBinDir) > 0 {
-		i -= len(m.CniBinDir)
-		copy(dAtA[i:], m.CniBinDir)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.CniBinDir)))
-		i--
-		dAtA[i] = 0x32
-	}
-	if len(m.PullPolicy) > 0 {
-		i -= len(m.PullPolicy)
-		copy(dAtA[i:], m.PullPolicy)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.PullPolicy)))
-		i--
-		dAtA[i] = 0x2a
-	}
-	if len(m.Image) > 0 {
-		i -= len(m.Image)
-		copy(dAtA[i:], m.Image)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Image)))
-		i--
-		dAtA[i] = 0x22
-	}
-	if m.Tag != nil {
-		{
-			size, err := m.Tag.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if len(m.Hub) > 0 {
-		i -= len(m.Hub)
-		copy(dAtA[i:], m.Hub)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Hub)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
+		return ms
 	}
-	return len(dAtA) - i, nil
+	return mi.MessageOf(x)
 }
 
-func (m *CNITaintConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *CNITaintConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
+// Deprecated: Use IntOrString.ProtoReflect.Descriptor instead.
+func (*IntOrString) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{47}
 }
 
-func (m *CNITaintConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
+func (x *IntOrString) GetType() int64 {
+	if x != nil {
+		return x.Type
 	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *CNIRepairConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *CNIRepairConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *CNIRepairConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.InitContainerName) > 0 {
-		i -= len(m.InitContainerName)
-		copy(dAtA[i:], m.InitContainerName)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.InitContainerName)))
-		i--
-		dAtA[i] = 0x52
-	}
-	if len(m.BrokenPodLabelValue) > 0 {
-		i -= len(m.BrokenPodLabelValue)
-		copy(dAtA[i:], m.BrokenPodLabelValue)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.BrokenPodLabelValue)))
-		i--
-		dAtA[i] = 0x4a
-	}
-	if len(m.BrokenPodLabelKey) > 0 {
-		i -= len(m.BrokenPodLabelKey)
-		copy(dAtA[i:], m.BrokenPodLabelKey)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.BrokenPodLabelKey)))
-		i--
-		dAtA[i] = 0x42
-	}
-	if m.DeletePods {
-		i--
-		if m.DeletePods {
-			dAtA[i] = 1
-		} else {
-			dAtA[i] = 0
-		}
-		i--
-		dAtA[i] = 0x38
-	}
-	if len(m.CreateEvents) > 0 {
-		i -= len(m.CreateEvents)
-		copy(dAtA[i:], m.CreateEvents)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.CreateEvents)))
-		i--
-		dAtA[i] = 0x32
-	}
-	if m.LabelPods {
-		i--
-		if m.LabelPods {
-			dAtA[i] = 1
-		} else {
-			dAtA[i] = 0
-		}
-		i--
-		dAtA[i] = 0x28
-	}
-	if len(m.Image) > 0 {
-		i -= len(m.Image)
-		copy(dAtA[i:], m.Image)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Image)))
-		i--
-		dAtA[i] = 0x22
-	}
-	if m.Tag != nil {
-		{
-			size, err := m.Tag.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if len(m.Hub) > 0 {
-		i -= len(m.Hub)
-		copy(dAtA[i:], m.Hub)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Hub)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
+	return 0
 }
 
-func (m *ResourceQuotas) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
+func (x *IntOrString) GetIntVal() *wrappers.Int32Value {
+	if x != nil {
+		return x.IntVal
 	}
-	return dAtA[:n], nil
-}
-
-func (m *ResourceQuotas) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
+	return nil
 }
 
-func (m *ResourceQuotas) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Pods != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.Pods))
-		i--
-		dAtA[i] = 0x10
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *CPUTargetUtilizationConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *CPUTargetUtilizationConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *CPUTargetUtilizationConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.TargetAverageUtilization != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.TargetAverageUtilization))
-		i--
-		dAtA[i] = 0x8
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *Resources) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *Resources) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *Resources) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Requests) > 0 {
-		for k := range m.Requests {
-			v := m.Requests[k]
-			baseI := i
-			i -= len(v)
-			copy(dAtA[i:], v)
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(v)))
-			i--
-			dAtA[i] = 0x12
-			i -= len(k)
-			copy(dAtA[i:], k)
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(k)))
-			i--
-			dAtA[i] = 0xa
-			i = encodeVarintValuesTypes(dAtA, i, uint64(baseI-i))
-			i--
-			dAtA[i] = 0x12
-		}
-	}
-	if len(m.Limits) > 0 {
-		for k := range m.Limits {
-			v := m.Limits[k]
-			baseI := i
-			i -= len(v)
-			copy(dAtA[i:], v)
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(v)))
-			i--
-			dAtA[i] = 0x12
-			i -= len(k)
-			copy(dAtA[i:], k)
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(k)))
-			i--
-			dAtA[i] = 0xa
-			i = encodeVarintValuesTypes(dAtA, i, uint64(baseI-i))
-			i--
-			dAtA[i] = 0xa
-		}
+func (x *IntOrString) GetStrVal() *wrappers.StringValue {
+	if x != nil {
+		return x.StrVal
 	}
-	return len(dAtA) - i, nil
+	return nil
 }
 
-func (m *ServiceAccount) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
+type TelemetryV2PrometheusConfig_ConfigOverride struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
 
-func (m *ServiceAccount) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
+	// Overrides default gateway telemetry v2 configuration.
+	Gateway *_struct.Struct `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
+	// Overrides default inbound sidecar telemetry v2 configuration.
+	InboundSidecar *_struct.Struct `protobuf:"bytes,2,opt,name=inboundSidecar,proto3" json:"inboundSidecar,omitempty"`
+	// Overrides default outbound sidecar telemetry v2 configuration.
+	OutboundSidecar *_struct.Struct `protobuf:"bytes,3,opt,name=outboundSidecar,proto3" json:"outboundSidecar,omitempty"`
 }
 
-func (m *ServiceAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Annotations != nil {
-		{
-			size, err := m.Annotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
+func (x *TelemetryV2PrometheusConfig_ConfigOverride) Reset() {
+	*x = TelemetryV2PrometheusConfig_ConfigOverride{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[52]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
-	return len(dAtA) - i, nil
 }
 
-func (m *DefaultPodDisruptionBudgetConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
+func (x *TelemetryV2PrometheusConfig_ConfigOverride) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
 
-func (m *DefaultPodDisruptionBudgetConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
+func (*TelemetryV2PrometheusConfig_ConfigOverride) ProtoMessage() {}
 
-func (m *DefaultPodDisruptionBudgetConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
+func (x *TelemetryV2PrometheusConfig_ConfigOverride) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[52]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
 		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *DefaultResourcesConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
+		return ms
 	}
-	return dAtA[:n], nil
-}
-
-func (m *DefaultResourcesConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
+	return mi.MessageOf(x)
 }
 
-func (m *DefaultResourcesConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Requests != nil {
-		{
-			size, err := m.Requests.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
+// Deprecated: Use TelemetryV2PrometheusConfig_ConfigOverride.ProtoReflect.Descriptor instead.
+func (*TelemetryV2PrometheusConfig_ConfigOverride) Descriptor() ([]byte, []int) {
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP(), []int{26, 0}
+}
+
+func (x *TelemetryV2PrometheusConfig_ConfigOverride) GetGateway() *_struct.Struct {
+	if x != nil {
+		return x.Gateway
+	}
+	return nil
+}
+
+func (x *TelemetryV2PrometheusConfig_ConfigOverride) GetInboundSidecar() *_struct.Struct {
+	if x != nil {
+		return x.InboundSidecar
+	}
+	return nil
+}
+
+func (x *TelemetryV2PrometheusConfig_ConfigOverride) GetOutboundSidecar() *_struct.Struct {
+	if x != nil {
+		return x.OutboundSidecar
+	}
+	return nil
+}
+
+var File_pkg_apis_istio_v1alpha1_values_types_proto protoreflect.FileDescriptor
+
+var file_pkg_apis_istio_v1alpha1_values_types_proto_rawDesc = []byte{
+	0x0a, 0x2a, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x73, 0x74, 0x69, 0x6f,
+	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
+	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x76, 0x31,
+	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
+	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
+	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
+	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
+	0x68, 0x0a, 0x0a, 0x41, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a,
+	0x05, 0x61, 0x6d, 0x64, 0x36, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x6d,
+	0x64, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x70, 0x63, 0x36, 0x34, 0x6c, 0x65, 0x18, 0x02,
+	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x70, 0x63, 0x36, 0x34, 0x6c, 0x65, 0x12, 0x14, 0x0a,
+	0x05, 0x73, 0x33, 0x39, 0x30, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x33,
+	0x39, 0x30, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x6d, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01,
+	0x28, 0x0d, 0x52, 0x05, 0x61, 0x72, 0x6d, 0x36, 0x34, 0x22, 0x9f, 0x06, 0x0a, 0x09, 0x43, 0x4e,
+	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
+	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
+	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
+	0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a,
+	0x03, 0x68, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x75, 0x62, 0x12,
+	0x28, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
+	0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
+	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
+	0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20,
+	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
+	0x1c, 0x0a, 0x09, 0x63, 0x6e, 0x69, 0x42, 0x69, 0x6e, 0x44, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01,
+	0x28, 0x09, 0x52, 0x09, 0x63, 0x6e, 0x69, 0x42, 0x69, 0x6e, 0x44, 0x69, 0x72, 0x12, 0x1e, 0x0a,
+	0x0a, 0x63, 0x6e, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x44, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
+	0x09, 0x52, 0x0a, 0x63, 0x6e, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x44, 0x69, 0x72, 0x12, 0x28, 0x0a,
+	0x0f, 0x63, 0x6e, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
+	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6e, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x46,
+	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75,
+	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
+	0x28, 0x09, 0x52, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
+	0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x6f, 0x64, 0x41, 0x6e, 0x6e, 0x6f,
+	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
+	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
+	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x70, 0x6f, 0x64, 0x41,
+	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x73,
+	0x70, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0b,
+	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x73, 0x70, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
+	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
+	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
+	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
+	0x32, 0x19, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x4e, 0x49, 0x52,
+	0x65, 0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x72, 0x65, 0x70,
+	0x61, 0x69, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0e,
+	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
+	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x61, 0x69,
+	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
+	0x68, 0x61, 0x31, 0x2e, 0x43, 0x4e, 0x49, 0x54, 0x61, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
+	0x69, 0x67, 0x52, 0x05, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x72, 0x65, 0x73,
+	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x10, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
+	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x0e, 0x72, 0x65,
+	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x31, 0x0a, 0x09,
+	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
+	0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
+	0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x18, 0x12, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
+	0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x22, 0x46, 0x0a, 0x0e, 0x43,
+	0x4e, 0x49, 0x54, 0x61, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a,
+	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
+	0x6c, 0x65, 0x64, 0x22, 0x8d, 0x03, 0x0a, 0x0f, 0x43, 0x4e, 0x49, 0x52, 0x65, 0x70, 0x61, 0x69,
+	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
+	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
+	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
+	0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a,
+	0x03, 0x68, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x75, 0x62, 0x12,
+	0x28, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
+	0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
+	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
+	0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
+	0x28, 0x08, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x26, 0x0a,
+	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
+	0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
+	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
+	0x6f, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
+	0x65, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x50,
+	0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x11, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
+	0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x64,
+	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e,
+	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e,
+	0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x51,
+	0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
+	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
+	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
+	0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
+	0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x22,
+	0x58, 0x0a, 0x1a, 0x43, 0x50, 0x55, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x74, 0x69, 0x6c,
+	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a,
+	0x18, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x55, 0x74,
+	0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
+	0x18, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x55, 0x74,
+	0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfb, 0x01, 0x0a, 0x09, 0x52, 0x65,
+	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74,
+	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
+	0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x6d,
+	0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73,
+	0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
+	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
+	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
+	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a,
+	0x39, 0x0a, 0x0b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
+	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
+	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
+	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x52, 0x65,
+	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
+	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
+	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
+	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69,
+	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x6e, 0x6e,
+	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
+	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x58, 0x0a, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
+	0x6f, 0x64, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x64, 0x67,
+	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
+	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
+	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x57,
+	0x0a, 0x16, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
+	0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
+	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x31, 0x61,
+	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
+	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x72,
+	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xdb, 0x0c, 0x0a, 0x13, 0x45, 0x67, 0x72, 0x65,
+	0x73, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
+	0x46, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62,
+	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
+	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65,
+	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73,
+	0x63, 0x61, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61,
+	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x61,
+	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
+	0x0d, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x12,
+	0x3a, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76,
+	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x50, 0x55, 0x54, 0x61, 0x72, 0x67, 0x65,
+	0x74, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
+	0x69, 0x67, 0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x34, 0x0a, 0x07, 0x65,
+	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
+	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
+	0x64, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x41, 0x0a, 0x06,
+	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x76,
+	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x61,
+	0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65,
+	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
+	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
+	0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
+	0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
+	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
+	0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65,
+	0x63, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x6f, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
+	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
+	0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x70, 0x6f, 0x64, 0x41, 0x6e,
+	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x1c, 0x70, 0x6f, 0x64,
+	0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x62, 0x65,
+	0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
+	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
+	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x1c, 0x70, 0x6f,
+	0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x62,
+	0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x67, 0x0a, 0x20, 0x70, 0x6f,
+	0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x72,
+	0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0d,
+	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18,
+	0x01, 0x52, 0x20, 0x70, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69,
+	0x74, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
+	0x74, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03,
+	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6f,
+	0x72, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73,
+	0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0f, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52,
+	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x72, 0x65,
+	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65,
+	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
+	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
+	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x6f,
+	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
+	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76,
+	0x69, 0x63, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12,
+	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
+	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x7a, 0x76, 0x70, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
+	0x32, 0x17, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x5a, 0x65, 0x72, 0x6f,
+	0x56, 0x50, 0x4e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x7a, 0x76, 0x70, 0x6e, 0x12,
+	0x3d, 0x0a, 0x0b, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14,
+	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18,
+	0x01, 0x52, 0x0b, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43,
+	0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x72, 0x67,
+	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
+	0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x02,
+	0x18, 0x01, 0x52, 0x0f, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x53, 0x75,
+	0x72, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61,
+	0x78, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e,
+	0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x02, 0x18, 0x01, 0x52, 0x15, 0x72,
+	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c,
+	0x61, 0x62, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x6f,
+	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
+	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
+	0x72, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x6f, 0x6c, 0x75,
+	0x6d, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
+	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28,
+	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x14, 0x61, 0x64, 0x64, 0x69,
+	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
+	0x12, 0x38, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x1a, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
+	0x09, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e,
+	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
+	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
+	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
+	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b,
+	0x32, 0x18, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
+	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
+	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
+	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
+	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
+	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
+	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xeb, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
+	0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4f, 0x0a, 0x13, 0x69, 0x73, 0x74, 0x69,
+	0x6f, 0x5f, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18,
+	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
+	0x2e, 0x45, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f,
+	0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2d, 0x65, 0x67, 0x72, 0x65,
+	0x73, 0x73, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61,
+	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
+	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
+	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
+	0x52, 0x0a, 0x14, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
+	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
+	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
+	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x14, 0x69,
+	0x73, 0x74, 0x69, 0x6f, 0x2d, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x67, 0x61, 0x74, 0x65,
+	0x77, 0x61, 0x79, 0x22, 0xfc, 0x10, 0x0a, 0x0c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f,
+	0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x72,
+	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04, 0x61, 0x72,
+	0x63, 0x68, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x6f, 0x6f, 0x74,
+	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
+	0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
+	0x70, 0x61, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61,
+	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x66,
+	0x69, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x1f,
+	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x69, 0x73,
+	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
+	0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f,
+	0x6e, 0x66, 0x69, 0x67, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65,
+	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4d, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
+	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01,
+	0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c,
+	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x6e, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
+	0x50, 0x6f, 0x64, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x64,
+	0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x31, 0x61, 0x6c,
+	0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x64, 0x44,
+	0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x43,
+	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x02, 0x18, 0x01, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75,
+	0x6c, 0x74, 0x50, 0x6f, 0x64, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
+	0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x50, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
+	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x20, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
+	0x6c, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
+	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75,
+	0x6c, 0x74, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x37, 0x20,
+	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01,
+	0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74,
+	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x75, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28,
+	0x09, 0x52, 0x03, 0x68, 0x75, 0x62, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50,
+	0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
+	0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
+	0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x63,
+	0x72, 0x65, 0x74, 0x73, 0x18, 0x25, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6d, 0x61, 0x67,
+	0x65, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e,
+	0x69, 0x73, 0x74, 0x69, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0e,
+	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x73,
+	0x70, 0x61, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x41, 0x73, 0x4a, 0x73, 0x6f,
+	0x6e, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
+	0x6c, 0x75, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x41, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x37,
+	0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
+	0x6c, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07,
+	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x73, 0x68, 0x49,
+	0x44, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x73, 0x68, 0x49, 0x44, 0x12,
+	0x3b, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x68, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
+	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c,
+	0x6d, 0x65, 0x73, 0x68, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x0c,
+	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x75,
+	0x6c, 0x74, 0x69, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18,
+	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52,
+	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x6f, 0x64, 0x44,
+	0x4e, 0x53, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
+	0x65, 0x73, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x70, 0x6f, 0x64, 0x44, 0x4e, 0x53,
+	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
+	0x12, 0x5e, 0x0a, 0x1c, 0x6f, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x49,
+	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
+	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
+	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
+	0x75, 0x65, 0x52, 0x1c, 0x6f, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x49,
+	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
+	0x12, 0x3e, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
+	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
+	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
+	0x75, 0x65, 0x52, 0x0c, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
+	0x12, 0x52, 0x0a, 0x16, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x6e, 0x61,
+	0x67, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b,
+	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
+	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x6f, 0x70,
+	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x57, 0x65, 0x62, 0x68,
+	0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
+	0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x42,
+	0x02, 0x18, 0x01, 0x52, 0x11, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6c, 0x61,
+	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18,
+	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
+	0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x70, 0x72,
+	0x6f, 0x78, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x6e, 0x69,
+	0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
+	0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66,
+	0x69, 0x67, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x25,
+	0x0a, 0x03, 0x73, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31,
+	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x44, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x52, 0x03, 0x73, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x1f, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
+	0x2e, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x16, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65,
+	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x12,
+	0x32, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x4d, 0x43, 0x50, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
+	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x75, 0x73, 0x65,
+	0x4d, 0x43, 0x50, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x69, 0x6c,
+	0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52,
+	0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72,
+	0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x64, 0x18, 0x36, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49,
+	0x73, 0x74, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x69, 0x73, 0x74,
+	0x69, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x43, 0x65, 0x72, 0x74,
+	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
+	0x70, 0x69, 0x6c, 0x6f, 0x74, 0x43, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
+	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x77, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x39,
+	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x77, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
+	0x25, 0x0a, 0x03, 0x73, 0x74, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76,
+	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x54, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x52, 0x03, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
+	0x6f, 0x6e, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
+	0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x74, 0x6c, 0x73, 0x43,
+	0x65, 0x72, 0x74, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
+	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
+	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x74, 0x6c,
+	0x73, 0x43, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x41, 0x64, 0x64, 0x72,
+	0x65, 0x73, 0x73, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x41, 0x64, 0x64,
+	0x72, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
+	0x49, 0x73, 0x74, 0x69, 0x6f, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
+	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
+	0x61, 0x6c, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
+	0x69, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
+	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61,
+	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x4e, 0x61,
+	0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x09, 0x53, 0x54, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
+	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01,
+	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72,
+	0x74, 0x22, 0x52, 0x0a, 0x0c, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x12, 0x42, 0x0a, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79,
+	0x73, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
+	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x61,
+	0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0x2b, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4c,
+	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05,
+	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76,
+	0x65, 0x6c, 0x22, 0xad, 0x0f, 0x0a, 0x14, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x61,
+	0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x46, 0x0a, 0x10, 0x61,
+	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
+	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
+	0x65, 0x52, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62,
+	0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65,
+	0x4d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73,
+	0x63, 0x61, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73,
+	0x63, 0x61, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61,
+	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x03, 0x63,
+	0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
+	0x68, 0x61, 0x31, 0x2e, 0x43, 0x50, 0x55, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x74, 0x69,
+	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x02,
+	0x18, 0x01, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
+	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74,
+	0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61,
+	0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
+	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
+	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
+	0x29, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
+	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x42, 0x0a, 0x06, 0x6c, 0x61,
+	0x62, 0x65, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x31, 0x61,
+	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x61, 0x74,
+	0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
+	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x26,
+	0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x50,
+	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
+	0x6e, 0x63, 0x65, 0x72, 0x49, 0x50, 0x12, 0x3a, 0x0a, 0x18, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61,
+	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67,
+	0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61,
+	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67,
+	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65,
+	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
+	0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53,
+	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x6f, 0x64, 0x41, 0x6e,
+	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
+	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x70, 0x6f,
+	0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x1c,
+	0x70, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x4c,
+	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x03,
+	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52,
+	0x1c, 0x70, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
+	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x67, 0x0a,
+	0x20, 0x70, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
+	0x54, 0x65, 0x72, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
+	0x72, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
+	0x42, 0x02, 0x18, 0x01, 0x52, 0x20, 0x70, 0x6f, 0x64, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66,
+	0x69, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65,
+	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
+	0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
+	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x70, 0x6f,
+	0x72, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f,
+	0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x72,
+	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x72,
+	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x72, 0x65, 0x73,
+	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
+	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
+	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56,
+	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x6f, 0x6c,
+	0x75, 0x6d, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
+	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b,
+	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
+	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69,
+	0x63, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a,
+	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
+	0x65, 0x12, 0x36, 0x0a, 0x04, 0x7a, 0x76, 0x70, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x22, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65,
+	0x73, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5a, 0x76, 0x70, 0x6e, 0x43, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x52, 0x04, 0x7a, 0x76, 0x70, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x6f, 0x6c,
+	0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x72, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e,
+	0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x72,
+	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x72, 0x67, 0x65, 0x12, 0x4f,
+	0x0a, 0x15, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x61, 0x76,
+	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
+	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x4f, 0x72, 0x53, 0x74,
+	0x72, 0x69, 0x6e, 0x67, 0x42, 0x02, 0x18, 0x01, 0x52, 0x15, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
+	0x67, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12,
+	0x34, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x66, 0x66,
+	0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
+	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
+	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74,
+	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
+	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
+	0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74,
+	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50,
+	0x6f, 0x72, 0x74, 0x73, 0x18, 0x24, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
+	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
+	0x75, 0x63, 0x74, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x72, 0x74,
+	0x73, 0x12, 0x4b, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43,
+	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x25, 0x20, 0x03, 0x28, 0x0b, 0x32,
+	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
+	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
+	0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x3d,
+	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18,
+	0x26, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0d,
+	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a,
+	0x09, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b,
+	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
+	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x72, 0x75,
+	0x6e, 0x41, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x6a, 0x65, 0x63,
+	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x2e, 0x20, 0x01,
+	0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d,
+	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
+	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
+	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
+	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
+	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
+	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
+	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
+	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
+	0x38, 0x01, 0x22, 0x68, 0x0a, 0x18, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x47, 0x61, 0x74,
+	0x65, 0x77, 0x61, 0x79, 0x5a, 0x76, 0x70, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34,
+	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
+	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61,
+	0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02,
+	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0xe8, 0x01, 0x0a,
+	0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
+	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
+	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75,
+	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
+	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x67,
+	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x75, 0x66, 0x66, 0x69,
+	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44,
+	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x4a, 0x0a, 0x12, 0x69,
+	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
+	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
+	0x6c, 0x75, 0x65, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x45, 0x6e, 0x76, 0x6f,
+	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x1b, 0x4f, 0x75, 0x74, 0x62,
+	0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63,
+	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
+	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
+	0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
+	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64,
+	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12,
+	0x0d, 0x0a, 0x09, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x11,
+	0x0a, 0x0d, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10,
+	0x01, 0x22, 0x95, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07,
+	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x73,
+	0x63, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x61,
+	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
+	0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x18,
+	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65,
+	0x4d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65,
+	0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x73,
+	0x63, 0x61, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69,
+	0x63, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18,
+	0x01, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
+	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
+	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x53, 0x61,
+	0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x72,
+	0x61, 0x63, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x72,
+	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
+	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
+	0x63, 0x65, 0x73, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
+	0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65,
+	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x03,
+	0x63, 0x70, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x31, 0x61, 0x6c,
+	0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x50, 0x55, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x74,
+	0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
+	0x02, 0x18, 0x01, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
+	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x6e, 0x6f, 0x64,
+	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x63, 0x0a, 0x1f, 0x6b, 0x65, 0x65,
+	0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
+	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1f, 0x6b,
+	0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78, 0x53, 0x65, 0x72, 0x76, 0x65,
+	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x65, 0x12, 0x43,
+	0x0a, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65,
+	0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
+	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
+	0x74, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62,
+	0x65, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
+	0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
+	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
+	0x09, 0x70, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6f,
+	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
+	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
+	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x4d, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x4d, 0x43, 0x50, 0x18, 0x14,
+	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
+	0x52, 0x06, 0x75, 0x73, 0x65, 0x4d, 0x43, 0x50, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18,
+	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03,
+	0x65, 0x6e, 0x76, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61,
+	0x78, 0x53, 0x75, 0x72, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76,
+	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x4f, 0x72, 0x53, 0x74, 0x72,
+	0x69, 0x6e, 0x67, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
+	0x4d, 0x61, 0x78, 0x53, 0x75, 0x72, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x72, 0x6f, 0x6c, 0x6c,
+	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
+	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
+	0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x02,
+	0x18, 0x01, 0x52, 0x15, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x55, 0x6e,
+	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x6f, 0x6c,
+	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x6c,
+	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x68, 0x0a, 0x21, 0x65, 0x6e, 0x61, 0x62,
+	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x69,
+	0x6e, 0x67, 0x46, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x1c, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
+	0x21, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53,
+	0x6e, 0x69, 0x66, 0x66, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75,
+	0x6e, 0x64, 0x12, 0x66, 0x0a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74,
+	0x6f, 0x63, 0x6f, 0x6c, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x49,
+	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
+	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
+	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53, 0x6e, 0x69, 0x66, 0x66, 0x69, 0x6e, 0x67,
+	0x46, 0x6f, 0x72, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x6f,
+	0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1e, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52,
+	0x0e, 0x70, 0x6f, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
+	0x47, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
+	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
+	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
+	0x72, 0x75, 0x63, 0x74, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x6e,
+	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
+	0x69, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
+	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x43,
+	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x6a, 0x77, 0x6b,
+	0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x6f,
+	0x6f, 0x74, 0x43, 0x41, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6a, 0x77, 0x6b, 0x73,
+	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x6f, 0x6f,
+	0x74, 0x43, 0x41, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x21,
+	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x10, 0x0a,
+	0x03, 0x68, 0x75, 0x62, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x75, 0x62, 0x12,
+	0x28, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
+	0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x50, 0x69,
+	0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
+	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73,
+	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x15, 0x69, 0x6e, 0x67, 0x72,
+	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x6f, 0x64,
+	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
+	0x61, 0x31, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
+	0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x15, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73,
+	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12,
+	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
+	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6c,
+	0x61, 0x73, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x50, 0x6f, 0x6c, 0x69,
+	0x63, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
+	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
+	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x74,
+	0x0a, 0x0f, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07,
+	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x03, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
+	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x52, 0x02, 0x76, 0x32, 0x22, 0x92, 0x03, 0x0a, 0x11, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
+	0x72, 0x79, 0x56, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e,
+	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
+	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
+	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
+	0x12, 0x58, 0x0a, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x78, 0x63,
+	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x31,
+	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
+	0x56, 0x32, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
+	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
+	0x74, 0x61, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x72,
+	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
+	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65,
+	0x74, 0x72, 0x79, 0x56, 0x32, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x43,
+	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
+	0x73, 0x12, 0x48, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
+	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
+	0x31, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32, 0x53, 0x74, 0x61,
+	0x63, 0x6b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b,
+	0x73, 0x74, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x5c, 0x0a, 0x11, 0x61,
+	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
+	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
+	0x31, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32, 0x41, 0x63, 0x63,
+	0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x46, 0x69, 0x6c, 0x74,
+	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
+	0x4c, 0x6f, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x61, 0x0a, 0x21, 0x54, 0x65, 0x6c,
+	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
+	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c,
+	0x0a, 0x0b, 0x77, 0x61, 0x73, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
+	0x0b, 0x77, 0x61, 0x73, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xba, 0x03, 0x0a,
+	0x1b, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32, 0x50, 0x72, 0x6f, 0x6d,
+	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x07,
+	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
+	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
+	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
+	0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x77, 0x61, 0x73, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
+	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
+	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x77, 0x61, 0x73, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
+	0x12, 0x5d, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72,
+	0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x76, 0x31, 0x61, 0x6c,
+	0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32,
+	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52,
+	0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x1a,
+	0xc7, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
+	0x64, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x67, 0x61,
+	0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
+	0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
+	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
+	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
+	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x12, 0x41, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75,
+	0x6e, 0x64, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
+	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75,
+	0x6e, 0x64, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x22, 0x99, 0x05, 0x0a, 0x1c, 0x54, 0x65,
+	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x72,
+	0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e,
+	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
+	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
+	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
+	0x12, 0x38, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x02, 0x18,
+	0x01, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x0a, 0x6d, 0x6f,
+	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
+	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
+	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x69,
+	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
+	0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
+	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
+	0x61, 0x6c, 0x75, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
+	0x67, 0x79, 0x12, 0x44, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75, 0x74,
+	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
+	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
+	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
+	0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
+	0x69, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
+	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
+	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x6f, 0x75, 0x74,
+	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69,
+	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
+	0x68, 0x61, 0x31, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32, 0x53,
+	0x74, 0x61, 0x63, 0x6b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x15,
+	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f,
+	0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x68, 0x0a, 0x14, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
+	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
+	0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
+	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x56, 0x32, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x44,
+	0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x63, 0x63, 0x65,
+	0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x69, 0x6e, 0x62, 0x6f, 0x75,
+	0x6e, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x22,
+	0x34, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
+	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55,
+	0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x5f, 0x4f,
+	0x4e, 0x4c, 0x59, 0x10, 0x02, 0x22, 0xa7, 0x01, 0x0a, 0x26, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65,
+	0x74, 0x72, 0x79, 0x56, 0x32, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x50, 0x6f,
+	0x6c, 0x69, 0x63, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65,
+	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x57, 0x69, 0x6e,
+	0x64, 0x6f, 0x77, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6c, 0x6f,
+	0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
+	0x45, 0x0a, 0x11, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x6f,
+	0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
+	0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
+	0x09, 0x52, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x73,
+	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x72, 0x74, 0x73,
+	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
+	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
+	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a,
+	0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
+	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61,
+	0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
+	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xaf, 0x08, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x78, 0x79,
+	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x6e,
+	0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f,
+	0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
+	0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
+	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x11,
+	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65,
+	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
+	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x42, 0x0a, 0x0e, 0x65, 0x6e,
+	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x75, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e,
+	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x75, 0x6d, 0x70, 0x12, 0x30,
+	0x0a, 0x13, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
+	0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x63,
+	0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x73,
+	0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e,
+	0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75,
+	0x64, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
+	0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
+	0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e,
+	0x67, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
+	0x64, 0x65, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
+	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
+	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c,
+	0x65, 0x67, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
+	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
+	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
+	0x65, 0x64, 0x12, 0x42, 0x0a, 0x1c, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
+	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e,
+	0x64, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e,
+	0x65, 0x73, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53,
+	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e,
+	0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
+	0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73,
+	0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3c,
+	0x0a, 0x19, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75,
+	0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
+	0x0d, 0x52, 0x19, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x46, 0x61, 0x69, 0x6c,
+	0x75, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
+	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d,
+	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x09,
+	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
+	0x72, 0x63, 0x65, 0x73, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
+	0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x18, 0x19, 0x20,
+	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x74,
+	0x72, 0x61, 0x63, 0x65, 0x72, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x12, 0x32, 0x0a,
+	0x14, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
+	0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x78, 0x63,
+	0x6c, 0x75, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74,
+	0x73, 0x12, 0x35, 0x0a, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x24,
+	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x6c,
+	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x68, 0x0a, 0x1f, 0x68, 0x6f, 0x6c, 0x64,
+	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x74, 0x69, 0x6c,
+	0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x02, 0x18,
+	0x01, 0x52, 0x1f, 0x68, 0x6f, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
+	0x6f, 0x6e, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x74, 0x61, 0x72,
+	0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x62,
+	0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52,
+	0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x50,
+	0x6f, 0x72, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4f,
+	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x27, 0x20, 0x01,
+	0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f,
+	0x75, 0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x5e, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x78,
+	0x79, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69,
+	0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
+	0x65, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05,
+	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
+	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x72,
+	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x6f,
+	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x43, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
+	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x3e, 0x0a,
+	0x09, 0x53, 0x44, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x6f,
+	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
+	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
+	0x63, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x60, 0x0a,
+	0x0c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
+	0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e,
+	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
+	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
+	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
+	0x96, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
+	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
+	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
+	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c,
+	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
+	0x28, 0x0d, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74,
+	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
+	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01,
+	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xba, 0x05, 0x0a, 0x15, 0x53, 0x69, 0x64,
+	0x65, 0x63, 0x61, 0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66,
+	0x69, 0x67, 0x12, 0x58, 0x0a, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
+	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
+	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
+	0x65, 0x52, 0x19, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
+	0x63, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x49, 0x0a, 0x13,
+	0x6e, 0x65, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
+	0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
+	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
+	0x63, 0x74, 0x52, 0x13, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x53,
+	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x14, 0x61, 0x6c, 0x77, 0x61, 0x79,
+	0x73, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
+	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x14,
+	0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65,
+	0x63, 0x74, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x13, 0x72, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x41,
+	0x70, 0x70, 0x48, 0x54, 0x54, 0x50, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x72,
+	0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x41, 0x70, 0x70, 0x48, 0x54, 0x54, 0x50, 0x50, 0x72, 0x6f,
+	0x62, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6e,
+	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
+	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
+	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x13, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74,
+	0x65, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a,
+	0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
+	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e,
+	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x22,
+	0x0a, 0x0c, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x16,
+	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
+	0x52, 0x4c, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18,
+	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09,
+	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66,
+	0x61, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x18, 0x20,
+	0x03, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x6d, 0x70,
+	0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x4c, 0x65, 0x67, 0x61,
+	0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x02, 0x18,
+	0x01, 0x52, 0x12, 0x75, 0x73, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65,
+	0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72,
+	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f,
+	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
+	0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67,
+	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x12,
+	0x3d, 0x0a, 0x09, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72,
+	0x61, 0x63, 0x65, 0x72, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x52, 0x09, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x74, 0x65, 0x70, 0x12, 0x34,
+	0x0a, 0x06, 0x7a, 0x69, 0x70, 0x6b, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
+	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72,
+	0x5a, 0x69, 0x70, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x7a, 0x69,
+	0x70, 0x6b, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x69,
+	0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x31, 0x61, 0x6c,
+	0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b,
+	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x73, 0x74,
+	0x61, 0x63, 0x6b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x13, 0x54, 0x72, 0x61,
+	0x63, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
+	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x54, 0x72,
+	0x61, 0x63, 0x65, 0x72, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
+	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a,
+	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
+	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
+	0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5a, 0x69, 0x70, 0x6b, 0x69, 0x6e, 0x43,
+	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
+	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
+	0xf5, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x64,
+	0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x05, 0x64,
+	0x65, 0x62, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
+	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
+	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x34, 0x0a,
+	0x15, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72,
+	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6d, 0x61,
+	0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
+	0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
+	0x4f, 0x66, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
+	0x01, 0x28, 0x0d, 0x52, 0x16, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
+	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x6d,
+	0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
+	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6d,
+	0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
+	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65,
+	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4a, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
+	0x43, 0x52, 0x44, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x12,
+	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x52, 0x44, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
+	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
+	0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64,
+	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x50, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62,
+	0x6c, 0x65, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x52, 0x44,
+	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
+	0x6c, 0x75, 0x65, 0x52, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x73, 0x74, 0x69, 0x6f,
+	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x52, 0x44, 0x73, 0x22, 0x5e, 0x0a, 0x12, 0x49, 0x73,
+	0x74, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c,
+	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
+	0x6e, 0x55, 0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
+	0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x6a,
+	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb2, 0x05, 0x0a, 0x06, 0x56,
+	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x6e, 0x69, 0x18, 0x02, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x4e,
+	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x63, 0x6e, 0x69, 0x12, 0x34, 0x0a, 0x08,
+	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
+	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
+	0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
+	0x79, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x6c,
+	0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62,
+	0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x69, 0x6c,
+	0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x12,
+	0x37, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x17, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x65,
+	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x74,
+	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x57, 0x0a, 0x16, 0x73, 0x69, 0x64, 0x65,
+	0x63, 0x61, 0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f,
+	0x6f, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
+	0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63,
+	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x16, 0x73, 0x69, 0x64, 0x65, 0x63,
+	0x61, 0x72, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
+	0x6b, 0x12, 0x30, 0x0a, 0x09, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x63, 0x6e, 0x69, 0x18, 0x13,
+	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
+	0x43, 0x4e, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x69, 0x73, 0x74, 0x69, 0x6f,
+	0x43, 0x6e, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
+	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
+	0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01,
+	0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a,
+	0x0a, 0x6d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x24, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x68, 0x43,
+	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x25, 0x20,
+	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42,
+	0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
+	0x40, 0x0a, 0x0c, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18,
+	0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
+	0x2e, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x52, 0x0c, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x74,
+	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67,
+	0x73, 0x18, 0x27, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
+	0x6e, 0x54, 0x61, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
+	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
+	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22,
+	0x5d, 0x0a, 0x0d, 0x5a, 0x65, 0x72, 0x6f, 0x56, 0x50, 0x4e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
+	0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
+	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
+	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65,
+	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78,
+	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0x8c,
+	0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12,
+	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79,
+	0x70, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
+	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
+	0x06, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x56, 0x61,
+	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x2a, 0x4a, 0x0a,
+	0x15, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
+	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
+	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55,
+	0x4c, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x10, 0x02,
+	0x12, 0x07, 0x0a, 0x03, 0x4f, 0x46, 0x46, 0x10, 0x03, 0x2a, 0x60, 0x0a, 0x06, 0x74, 0x72, 0x61,
+	0x63, 0x65, 0x72, 0x12, 0x0a, 0x0a, 0x06, 0x7a, 0x69, 0x70, 0x6b, 0x69, 0x6e, 0x10, 0x00, 0x12,
+	0x0d, 0x0a, 0x09, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x74, 0x65, 0x70, 0x10, 0x01, 0x12, 0x0b,
+	0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x73,
+	0x74, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
+	0x6f, 0x70, 0x65, 0x6e, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x10,
+	0x04, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x05, 0x42, 0x31, 0x5a, 0x2f, 0x69,
+	0x73, 0x74, 0x69, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2f, 0x6f, 0x70,
+	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
+	0x69, 0x73, 0x74, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06,
+	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
 }
 
-func (m *EgressGatewayConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
+var (
+	file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescOnce sync.Once
+	file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescData = file_pkg_apis_istio_v1alpha1_values_types_proto_rawDesc
+)
 
-func (m *EgressGatewayConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
+func file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescGZIP() []byte {
+	file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescOnce.Do(func() {
+		file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescData)
+	})
+	return file_pkg_apis_istio_v1alpha1_values_types_proto_rawDescData
+}
+
+var file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
+var file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
+var file_pkg_apis_istio_v1alpha1_values_types_proto_goTypes = []interface{}{
+	(IngressControllerMode)(0),                         // 0: v1alpha1.ingressControllerMode
+	(Tracer)(0),                                        // 1: v1alpha1.tracer
+	(OutboundTrafficPolicyConfig_Mode)(0),              // 2: v1alpha1.OutboundTrafficPolicyConfig.Mode
+	(TelemetryV2StackDriverConfig_AccessLogging)(0),    // 3: v1alpha1.TelemetryV2StackDriverConfig.AccessLogging
+	(*ArchConfig)(nil),                                 // 4: v1alpha1.ArchConfig
+	(*CNIConfig)(nil),                                  // 5: v1alpha1.CNIConfig
+	(*CNITaintConfig)(nil),                             // 6: v1alpha1.CNITaintConfig
+	(*CNIRepairConfig)(nil),                            // 7: v1alpha1.CNIRepairConfig
+	(*ResourceQuotas)(nil),                             // 8: v1alpha1.ResourceQuotas
+	(*CPUTargetUtilizationConfig)(nil),                 // 9: v1alpha1.CPUTargetUtilizationConfig
+	(*Resources)(nil),                                  // 10: v1alpha1.Resources
+	(*ServiceAccount)(nil),                             // 11: v1alpha1.ServiceAccount
+	(*DefaultPodDisruptionBudgetConfig)(nil),           // 12: v1alpha1.DefaultPodDisruptionBudgetConfig
+	(*DefaultResourcesConfig)(nil),                     // 13: v1alpha1.DefaultResourcesConfig
+	(*EgressGatewayConfig)(nil),                        // 14: v1alpha1.EgressGatewayConfig
+	(*GatewaysConfig)(nil),                             // 15: v1alpha1.GatewaysConfig
+	(*GlobalConfig)(nil),                               // 16: v1alpha1.GlobalConfig
+	(*STSConfig)(nil),                                  // 17: v1alpha1.STSConfig
+	(*IstiodConfig)(nil),                               // 18: v1alpha1.IstiodConfig
+	(*GlobalLoggingConfig)(nil),                        // 19: v1alpha1.GlobalLoggingConfig
+	(*IngressGatewayConfig)(nil),                       // 20: v1alpha1.IngressGatewayConfig
+	(*IngressGatewayZvpnConfig)(nil),                   // 21: v1alpha1.IngressGatewayZvpnConfig
+	(*MultiClusterConfig)(nil),                         // 22: v1alpha1.MultiClusterConfig
+	(*OutboundTrafficPolicyConfig)(nil),                // 23: v1alpha1.OutboundTrafficPolicyConfig
+	(*PilotConfig)(nil),                                // 24: v1alpha1.PilotConfig
+	(*PilotIngressConfig)(nil),                         // 25: v1alpha1.PilotIngressConfig
+	(*PilotPolicyConfig)(nil),                          // 26: v1alpha1.PilotPolicyConfig
+	(*TelemetryConfig)(nil),                            // 27: v1alpha1.TelemetryConfig
+	(*TelemetryV2Config)(nil),                          // 28: v1alpha1.TelemetryV2Config
+	(*TelemetryV2MetadataExchangeConfig)(nil),          // 29: v1alpha1.TelemetryV2MetadataExchangeConfig
+	(*TelemetryV2PrometheusConfig)(nil),                // 30: v1alpha1.TelemetryV2PrometheusConfig
+	(*TelemetryV2StackDriverConfig)(nil),               // 31: v1alpha1.TelemetryV2StackDriverConfig
+	(*TelemetryV2AccessLogPolicyFilterConfig)(nil),     // 32: v1alpha1.TelemetryV2AccessLogPolicyFilterConfig
+	(*PilotConfigSource)(nil),                          // 33: v1alpha1.PilotConfigSource
+	(*PortsConfig)(nil),                                // 34: v1alpha1.PortsConfig
+	(*ProxyConfig)(nil),                                // 35: v1alpha1.ProxyConfig
+	(*ProxyInitConfig)(nil),                            // 36: v1alpha1.ProxyInitConfig
+	(*ResourcesRequestsConfig)(nil),                    // 37: v1alpha1.ResourcesRequestsConfig
+	(*SDSConfig)(nil),                                  // 38: v1alpha1.SDSConfig
+	(*SecretVolume)(nil),                               // 39: v1alpha1.SecretVolume
+	(*ServiceConfig)(nil),                              // 40: v1alpha1.ServiceConfig
+	(*SidecarInjectorConfig)(nil),                      // 41: v1alpha1.SidecarInjectorConfig
+	(*TracerConfig)(nil),                               // 42: v1alpha1.TracerConfig
+	(*TracerDatadogConfig)(nil),                        // 43: v1alpha1.TracerDatadogConfig
+	(*TracerLightStepConfig)(nil),                      // 44: v1alpha1.TracerLightStepConfig
+	(*TracerZipkinConfig)(nil),                         // 45: v1alpha1.TracerZipkinConfig
+	(*TracerStackdriverConfig)(nil),                    // 46: v1alpha1.TracerStackdriverConfig
+	(*BaseConfig)(nil),                                 // 47: v1alpha1.BaseConfig
+	(*IstiodRemoteConfig)(nil),                         // 48: v1alpha1.IstiodRemoteConfig
+	(*Values)(nil),                                     // 49: v1alpha1.Values
+	(*ZeroVPNConfig)(nil),                              // 50: v1alpha1.ZeroVPNConfig
+	(*IntOrString)(nil),                                // 51: v1alpha1.IntOrString
+	nil,                                                // 52: v1alpha1.Resources.LimitsEntry
+	nil,                                                // 53: v1alpha1.Resources.RequestsEntry
+	nil,                                                // 54: v1alpha1.EgressGatewayConfig.LabelsEntry
+	nil,                                                // 55: v1alpha1.IngressGatewayConfig.LabelsEntry
+	(*TelemetryV2PrometheusConfig_ConfigOverride)(nil), // 56: v1alpha1.TelemetryV2PrometheusConfig.ConfigOverride
+	(*wrappers.BoolValue)(nil),                         // 57: google.protobuf.BoolValue
+	(*_struct.Value)(nil),                              // 58: google.protobuf.Value
+	(*_struct.Struct)(nil),                             // 59: google.protobuf.Struct
+	(*duration.Duration)(nil),                          // 60: google.protobuf.Duration
+	(*wrappers.Int32Value)(nil),                        // 61: google.protobuf.Int32Value
+	(*wrappers.StringValue)(nil),                       // 62: google.protobuf.StringValue
+}
+var file_pkg_apis_istio_v1alpha1_values_types_proto_depIdxs = []int32{
+	57,  // 0: v1alpha1.CNIConfig.enabled:type_name -> google.protobuf.BoolValue
+	58,  // 1: v1alpha1.CNIConfig.tag:type_name -> google.protobuf.Value
+	59,  // 2: v1alpha1.CNIConfig.podAnnotations:type_name -> google.protobuf.Struct
+	7,   // 3: v1alpha1.CNIConfig.repair:type_name -> v1alpha1.CNIRepairConfig
+	57,  // 4: v1alpha1.CNIConfig.chained:type_name -> google.protobuf.BoolValue
+	6,   // 5: v1alpha1.CNIConfig.taint:type_name -> v1alpha1.CNITaintConfig
+	8,   // 6: v1alpha1.CNIConfig.resource_quotas:type_name -> v1alpha1.ResourceQuotas
+	10,  // 7: v1alpha1.CNIConfig.resources:type_name -> v1alpha1.Resources
+	57,  // 8: v1alpha1.CNIConfig.privileged:type_name -> google.protobuf.BoolValue
+	57,  // 9: v1alpha1.CNITaintConfig.enabled:type_name -> google.protobuf.BoolValue
+	57,  // 10: v1alpha1.CNIRepairConfig.enabled:type_name -> google.protobuf.BoolValue
+	58,  // 11: v1alpha1.CNIRepairConfig.tag:type_name -> google.protobuf.Value
+	57,  // 12: v1alpha1.ResourceQuotas.enabled:type_name -> google.protobuf.BoolValue
+	52,  // 13: v1alpha1.Resources.limits:type_name -> v1alpha1.Resources.LimitsEntry
+	53,  // 14: v1alpha1.Resources.requests:type_name -> v1alpha1.Resources.RequestsEntry
+	59,  // 15: v1alpha1.ServiceAccount.annotations:type_name -> google.protobuf.Struct
+	57,  // 16: v1alpha1.DefaultPodDisruptionBudgetConfig.enabled:type_name -> google.protobuf.BoolValue
+	37,  // 17: v1alpha1.DefaultResourcesConfig.requests:type_name -> v1alpha1.ResourcesRequestsConfig
+	57,  // 18: v1alpha1.EgressGatewayConfig.autoscaleEnabled:type_name -> google.protobuf.BoolValue
+	9,   // 19: v1alpha1.EgressGatewayConfig.cpu:type_name -> v1alpha1.CPUTargetUtilizationConfig
+	57,  // 20: v1alpha1.EgressGatewayConfig.enabled:type_name -> google.protobuf.BoolValue
+	59,  // 21: v1alpha1.EgressGatewayConfig.env:type_name -> google.protobuf.Struct
+	54,  // 22: v1alpha1.EgressGatewayConfig.labels:type_name -> v1alpha1.EgressGatewayConfig.LabelsEntry
+	59,  // 23: v1alpha1.EgressGatewayConfig.nodeSelector:type_name -> google.protobuf.Struct
+	59,  // 24: v1alpha1.EgressGatewayConfig.podAnnotations:type_name -> google.protobuf.Struct
+	59,  // 25: v1alpha1.EgressGatewayConfig.podAntiAffinityLabelSelector:type_name -> google.protobuf.Struct
+	59,  // 26: v1alpha1.EgressGatewayConfig.podAntiAffinityTermLabelSelector:type_name -> google.protobuf.Struct
+	34,  // 27: v1alpha1.EgressGatewayConfig.ports:type_name -> v1alpha1.PortsConfig
+	10,  // 28: v1alpha1.EgressGatewayConfig.resources:type_name -> v1alpha1.Resources
+	39,  // 29: v1alpha1.EgressGatewayConfig.secretVolumes:type_name -> v1alpha1.SecretVolume
+	59,  // 30: v1alpha1.EgressGatewayConfig.serviceAnnotations:type_name -> google.protobuf.Struct
+	50,  // 31: v1alpha1.EgressGatewayConfig.zvpn:type_name -> v1alpha1.ZeroVPNConfig
+	59,  // 32: v1alpha1.EgressGatewayConfig.tolerations:type_name -> google.protobuf.Struct
+	51,  // 33: v1alpha1.EgressGatewayConfig.rollingMaxSurge:type_name -> v1alpha1.IntOrString
+	51,  // 34: v1alpha1.EgressGatewayConfig.rollingMaxUnavailable:type_name -> v1alpha1.IntOrString
+	59,  // 35: v1alpha1.EgressGatewayConfig.configVolumes:type_name -> google.protobuf.Struct
+	59,  // 36: v1alpha1.EgressGatewayConfig.additionalContainers:type_name -> google.protobuf.Struct
+	57,  // 37: v1alpha1.EgressGatewayConfig.runAsRoot:type_name -> google.protobuf.BoolValue
+	11,  // 38: v1alpha1.EgressGatewayConfig.serviceAccount:type_name -> v1alpha1.ServiceAccount
+	14,  // 39: v1alpha1.GatewaysConfig.istio_egressgateway:type_name -> v1alpha1.EgressGatewayConfig
+	57,  // 40: v1alpha1.GatewaysConfig.enabled:type_name -> google.protobuf.BoolValue
+	20,  // 41: v1alpha1.GatewaysConfig.istio_ingressgateway:type_name -> v1alpha1.IngressGatewayConfig
+	4,   // 42: v1alpha1.GlobalConfig.arch:type_name -> v1alpha1.ArchConfig
+	57,  // 43: v1alpha1.GlobalConfig.configValidation:type_name -> google.protobuf.BoolValue
+	59,  // 44: v1alpha1.GlobalConfig.defaultNodeSelector:type_name -> google.protobuf.Struct
+	12,  // 45: v1alpha1.GlobalConfig.defaultPodDisruptionBudget:type_name -> v1alpha1.DefaultPodDisruptionBudgetConfig
+	13,  // 46: v1alpha1.GlobalConfig.defaultResources:type_name -> v1alpha1.DefaultResourcesConfig
+	59,  // 47: v1alpha1.GlobalConfig.defaultTolerations:type_name -> google.protobuf.Struct
+	57,  // 48: v1alpha1.GlobalConfig.logAsJson:type_name -> google.protobuf.BoolValue
+	19,  // 49: v1alpha1.GlobalConfig.logging:type_name -> v1alpha1.GlobalLoggingConfig
+	59,  // 50: v1alpha1.GlobalConfig.meshNetworks:type_name -> google.protobuf.Struct
+	22,  // 51: v1alpha1.GlobalConfig.multiCluster:type_name -> v1alpha1.MultiClusterConfig
+	57,  // 52: v1alpha1.GlobalConfig.omitSidecarInjectorConfigMap:type_name -> google.protobuf.BoolValue
+	57,  // 53: v1alpha1.GlobalConfig.oneNamespace:type_name -> google.protobuf.BoolValue
+	57,  // 54: v1alpha1.GlobalConfig.operatorManageWebhooks:type_name -> google.protobuf.BoolValue
+	35,  // 55: v1alpha1.GlobalConfig.proxy:type_name -> v1alpha1.ProxyConfig
+	36,  // 56: v1alpha1.GlobalConfig.proxy_init:type_name -> v1alpha1.ProxyInitConfig
+	38,  // 57: v1alpha1.GlobalConfig.sds:type_name -> v1alpha1.SDSConfig
+	58,  // 58: v1alpha1.GlobalConfig.tag:type_name -> google.protobuf.Value
+	42,  // 59: v1alpha1.GlobalConfig.tracer:type_name -> v1alpha1.TracerConfig
+	57,  // 60: v1alpha1.GlobalConfig.useMCP:type_name -> google.protobuf.BoolValue
+	18,  // 61: v1alpha1.GlobalConfig.istiod:type_name -> v1alpha1.IstiodConfig
+	17,  // 62: v1alpha1.GlobalConfig.sts:type_name -> v1alpha1.STSConfig
+	57,  // 63: v1alpha1.GlobalConfig.mountMtlsCerts:type_name -> google.protobuf.BoolValue
+	57,  // 64: v1alpha1.GlobalConfig.externalIstiod:type_name -> google.protobuf.BoolValue
+	57,  // 65: v1alpha1.GlobalConfig.configCluster:type_name -> google.protobuf.BoolValue
+	57,  // 66: v1alpha1.IstiodConfig.enableAnalysis:type_name -> google.protobuf.BoolValue
+	57,  // 67: v1alpha1.IngressGatewayConfig.autoscaleEnabled:type_name -> google.protobuf.BoolValue
+	9,   // 68: v1alpha1.IngressGatewayConfig.cpu:type_name -> v1alpha1.CPUTargetUtilizationConfig
+	57,  // 69: v1alpha1.IngressGatewayConfig.customService:type_name -> google.protobuf.BoolValue
+	57,  // 70: v1alpha1.IngressGatewayConfig.enabled:type_name -> google.protobuf.BoolValue
+	59,  // 71: v1alpha1.IngressGatewayConfig.env:type_name -> google.protobuf.Struct
+	55,  // 72: v1alpha1.IngressGatewayConfig.labels:type_name -> v1alpha1.IngressGatewayConfig.LabelsEntry
+	59,  // 73: v1alpha1.IngressGatewayConfig.nodeSelector:type_name -> google.protobuf.Struct
+	59,  // 74: v1alpha1.IngressGatewayConfig.podAnnotations:type_name -> google.protobuf.Struct
+	59,  // 75: v1alpha1.IngressGatewayConfig.podAntiAffinityLabelSelector:type_name -> google.protobuf.Struct
+	59,  // 76: v1alpha1.IngressGatewayConfig.podAntiAffinityTermLabelSelector:type_name -> google.protobuf.Struct
+	34,  // 77: v1alpha1.IngressGatewayConfig.ports:type_name -> v1alpha1.PortsConfig
+	59,  // 78: v1alpha1.IngressGatewayConfig.resources:type_name -> google.protobuf.Struct
+	39,  // 79: v1alpha1.IngressGatewayConfig.secretVolumes:type_name -> v1alpha1.SecretVolume
+	59,  // 80: v1alpha1.IngressGatewayConfig.serviceAnnotations:type_name -> google.protobuf.Struct
+	21,  // 81: v1alpha1.IngressGatewayConfig.zvpn:type_name -> v1alpha1.IngressGatewayZvpnConfig
+	51,  // 82: v1alpha1.IngressGatewayConfig.rollingMaxSurge:type_name -> v1alpha1.IntOrString
+	51,  // 83: v1alpha1.IngressGatewayConfig.rollingMaxUnavailable:type_name -> v1alpha1.IntOrString
+	59,  // 84: v1alpha1.IngressGatewayConfig.tolerations:type_name -> google.protobuf.Struct
+	59,  // 85: v1alpha1.IngressGatewayConfig.ingressPorts:type_name -> google.protobuf.Struct
+	59,  // 86: v1alpha1.IngressGatewayConfig.additionalContainers:type_name -> google.protobuf.Struct
+	59,  // 87: v1alpha1.IngressGatewayConfig.configVolumes:type_name -> google.protobuf.Struct
+	57,  // 88: v1alpha1.IngressGatewayConfig.runAsRoot:type_name -> google.protobuf.BoolValue
+	11,  // 89: v1alpha1.IngressGatewayConfig.serviceAccount:type_name -> v1alpha1.ServiceAccount
+	57,  // 90: v1alpha1.IngressGatewayZvpnConfig.enabled:type_name -> google.protobuf.BoolValue
+	57,  // 91: v1alpha1.MultiClusterConfig.enabled:type_name -> google.protobuf.BoolValue
+	57,  // 92: v1alpha1.MultiClusterConfig.includeEnvoyFilter:type_name -> google.protobuf.BoolValue
+	2,   // 93: v1alpha1.OutboundTrafficPolicyConfig.mode:type_name -> v1alpha1.OutboundTrafficPolicyConfig.Mode
+	57,  // 94: v1alpha1.PilotConfig.enabled:type_name -> google.protobuf.BoolValue
+	57,  // 95: v1alpha1.PilotConfig.autoscaleEnabled:type_name -> google.protobuf.BoolValue
+	10,  // 96: v1alpha1.PilotConfig.resources:type_name -> v1alpha1.Resources
+	9,   // 97: v1alpha1.PilotConfig.cpu:type_name -> v1alpha1.CPUTargetUtilizationConfig
+	59,  // 98: v1alpha1.PilotConfig.nodeSelector:type_name -> google.protobuf.Struct
+	60,  // 99: v1alpha1.PilotConfig.keepaliveMaxServerConnectionAge:type_name -> google.protobuf.Duration
+	59,  // 100: v1alpha1.PilotConfig.deploymentLabels:type_name -> google.protobuf.Struct
+	59,  // 101: v1alpha1.PilotConfig.podLabels:type_name -> google.protobuf.Struct
+	57,  // 102: v1alpha1.PilotConfig.configMap:type_name -> google.protobuf.BoolValue
+	57,  // 103: v1alpha1.PilotConfig.useMCP:type_name -> google.protobuf.BoolValue
+	59,  // 104: v1alpha1.PilotConfig.env:type_name -> google.protobuf.Struct
+	51,  // 105: v1alpha1.PilotConfig.rollingMaxSurge:type_name -> v1alpha1.IntOrString
+	51,  // 106: v1alpha1.PilotConfig.rollingMaxUnavailable:type_name -> v1alpha1.IntOrString
+	59,  // 107: v1alpha1.PilotConfig.tolerations:type_name -> google.protobuf.Struct
+	57,  // 108: v1alpha1.PilotConfig.enableProtocolSniffingForOutbound:type_name -> google.protobuf.BoolValue
+	57,  // 109: v1alpha1.PilotConfig.enableProtocolSniffingForInbound:type_name -> google.protobuf.BoolValue
+	59,  // 110: v1alpha1.PilotConfig.podAnnotations:type_name -> google.protobuf.Struct
+	59,  // 111: v1alpha1.PilotConfig.serviceAnnotations:type_name -> google.protobuf.Struct
+	33,  // 112: v1alpha1.PilotConfig.configSource:type_name -> v1alpha1.PilotConfigSource
+	58,  // 113: v1alpha1.PilotConfig.tag:type_name -> google.protobuf.Value
+	0,   // 114: v1alpha1.PilotIngressConfig.ingressControllerMode:type_name -> v1alpha1.ingressControllerMode
+	57,  // 115: v1alpha1.PilotPolicyConfig.enabled:type_name -> google.protobuf.BoolValue
+	57,  // 116: v1alpha1.TelemetryConfig.enabled:type_name -> google.protobuf.BoolValue
+	28,  // 117: v1alpha1.TelemetryConfig.v2:type_name -> v1alpha1.TelemetryV2Config
+	57,  // 118: v1alpha1.TelemetryV2Config.enabled:type_name -> google.protobuf.BoolValue
+	29,  // 119: v1alpha1.TelemetryV2Config.metadata_exchange:type_name -> v1alpha1.TelemetryV2MetadataExchangeConfig
+	30,  // 120: v1alpha1.TelemetryV2Config.prometheus:type_name -> v1alpha1.TelemetryV2PrometheusConfig
+	31,  // 121: v1alpha1.TelemetryV2Config.stackdriver:type_name -> v1alpha1.TelemetryV2StackDriverConfig
+	32,  // 122: v1alpha1.TelemetryV2Config.access_log_policy:type_name -> v1alpha1.TelemetryV2AccessLogPolicyFilterConfig
+	57,  // 123: v1alpha1.TelemetryV2MetadataExchangeConfig.wasmEnabled:type_name -> google.protobuf.BoolValue
+	57,  // 124: v1alpha1.TelemetryV2PrometheusConfig.enabled:type_name -> google.protobuf.BoolValue
+	57,  // 125: v1alpha1.TelemetryV2PrometheusConfig.wasmEnabled:type_name -> google.protobuf.BoolValue
+	56,  // 126: v1alpha1.TelemetryV2PrometheusConfig.config_override:type_name -> v1alpha1.TelemetryV2PrometheusConfig.ConfigOverride
+	57,  // 127: v1alpha1.TelemetryV2StackDriverConfig.enabled:type_name -> google.protobuf.BoolValue
+	57,  // 128: v1alpha1.TelemetryV2StackDriverConfig.logging:type_name -> google.protobuf.BoolValue
+	57,  // 129: v1alpha1.TelemetryV2StackDriverConfig.monitoring:type_name -> google.protobuf.BoolValue
+	57,  // 130: v1alpha1.TelemetryV2StackDriverConfig.topology:type_name -> google.protobuf.BoolValue
+	57,  // 131: v1alpha1.TelemetryV2StackDriverConfig.disableOutbound:type_name -> google.protobuf.BoolValue
+	59,  // 132: v1alpha1.TelemetryV2StackDriverConfig.configOverride:type_name -> google.protobuf.Struct
+	3,   // 133: v1alpha1.TelemetryV2StackDriverConfig.outboundAccessLogging:type_name -> v1alpha1.TelemetryV2StackDriverConfig.AccessLogging
+	3,   // 134: v1alpha1.TelemetryV2StackDriverConfig.inboundAccessLogging:type_name -> v1alpha1.TelemetryV2StackDriverConfig.AccessLogging
+	57,  // 135: v1alpha1.TelemetryV2AccessLogPolicyFilterConfig.enabled:type_name -> google.protobuf.BoolValue
+	60,  // 136: v1alpha1.TelemetryV2AccessLogPolicyFilterConfig.logWindowDuration:type_name -> google.protobuf.Duration
+	57,  // 137: v1alpha1.ProxyConfig.enableCoreDump:type_name -> google.protobuf.BoolValue
+	57,  // 138: v1alpha1.ProxyConfig.privileged:type_name -> google.protobuf.BoolValue
+	10,  // 139: v1alpha1.ProxyConfig.resources:type_name -> v1alpha1.Resources
+	1,   // 140: v1alpha1.ProxyConfig.tracer:type_name -> v1alpha1.tracer
+	59,  // 141: v1alpha1.ProxyConfig.lifecycle:type_name -> google.protobuf.Struct
+	57,  // 142: v1alpha1.ProxyConfig.holdApplicationUntilProxyStarts:type_name -> google.protobuf.BoolValue
+	10,  // 143: v1alpha1.ProxyInitConfig.resources:type_name -> v1alpha1.Resources
+	59,  // 144: v1alpha1.SDSConfig.token:type_name -> google.protobuf.Struct
+	59,  // 145: v1alpha1.ServiceConfig.annotations:type_name -> google.protobuf.Struct
+	57,  // 146: v1alpha1.SidecarInjectorConfig.enableNamespacesByDefault:type_name -> google.protobuf.BoolValue
+	59,  // 147: v1alpha1.SidecarInjectorConfig.neverInjectSelector:type_name -> google.protobuf.Struct
+	59,  // 148: v1alpha1.SidecarInjectorConfig.alwaysInjectSelector:type_name -> google.protobuf.Struct
+	57,  // 149: v1alpha1.SidecarInjectorConfig.rewriteAppHTTPProbe:type_name -> google.protobuf.BoolValue
+	59,  // 150: v1alpha1.SidecarInjectorConfig.injectedAnnotations:type_name -> google.protobuf.Struct
+	59,  // 151: v1alpha1.SidecarInjectorConfig.objectSelector:type_name -> google.protobuf.Struct
+	59,  // 152: v1alpha1.SidecarInjectorConfig.templates:type_name -> google.protobuf.Struct
+	57,  // 153: v1alpha1.SidecarInjectorConfig.useLegacySelectors:type_name -> google.protobuf.BoolValue
+	43,  // 154: v1alpha1.TracerConfig.datadog:type_name -> v1alpha1.TracerDatadogConfig
+	44,  // 155: v1alpha1.TracerConfig.lightstep:type_name -> v1alpha1.TracerLightStepConfig
+	45,  // 156: v1alpha1.TracerConfig.zipkin:type_name -> v1alpha1.TracerZipkinConfig
+	46,  // 157: v1alpha1.TracerConfig.stackdriver:type_name -> v1alpha1.TracerStackdriverConfig
+	57,  // 158: v1alpha1.TracerStackdriverConfig.debug:type_name -> google.protobuf.BoolValue
+	57,  // 159: v1alpha1.BaseConfig.enableCRDTemplates:type_name -> google.protobuf.BoolValue
+	57,  // 160: v1alpha1.BaseConfig.enableIstioConfigCRDs:type_name -> google.protobuf.BoolValue
+	5,   // 161: v1alpha1.Values.cni:type_name -> v1alpha1.CNIConfig
+	15,  // 162: v1alpha1.Values.gateways:type_name -> v1alpha1.GatewaysConfig
+	16,  // 163: v1alpha1.Values.global:type_name -> v1alpha1.GlobalConfig
+	24,  // 164: v1alpha1.Values.pilot:type_name -> v1alpha1.PilotConfig
+	27,  // 165: v1alpha1.Values.telemetry:type_name -> v1alpha1.TelemetryConfig
+	41,  // 166: v1alpha1.Values.sidecarInjectorWebhook:type_name -> v1alpha1.SidecarInjectorConfig
+	5,   // 167: v1alpha1.Values.istio_cni:type_name -> v1alpha1.CNIConfig
+	58,  // 168: v1alpha1.Values.meshConfig:type_name -> google.protobuf.Value
+	47,  // 169: v1alpha1.Values.base:type_name -> v1alpha1.BaseConfig
+	48,  // 170: v1alpha1.Values.istiodRemote:type_name -> v1alpha1.IstiodRemoteConfig
+	57,  // 171: v1alpha1.ZeroVPNConfig.enabled:type_name -> google.protobuf.BoolValue
+	61,  // 172: v1alpha1.IntOrString.intVal:type_name -> google.protobuf.Int32Value
+	62,  // 173: v1alpha1.IntOrString.strVal:type_name -> google.protobuf.StringValue
+	59,  // 174: v1alpha1.TelemetryV2PrometheusConfig.ConfigOverride.gateway:type_name -> google.protobuf.Struct
+	59,  // 175: v1alpha1.TelemetryV2PrometheusConfig.ConfigOverride.inboundSidecar:type_name -> google.protobuf.Struct
+	59,  // 176: v1alpha1.TelemetryV2PrometheusConfig.ConfigOverride.outboundSidecar:type_name -> google.protobuf.Struct
+	177, // [177:177] is the sub-list for method output_type
+	177, // [177:177] is the sub-list for method input_type
+	177, // [177:177] is the sub-list for extension type_name
+	177, // [177:177] is the sub-list for extension extendee
+	0,   // [0:177] is the sub-list for field type_name
+}
+
+func init() { file_pkg_apis_istio_v1alpha1_values_types_proto_init() }
+func file_pkg_apis_istio_v1alpha1_values_types_proto_init() {
+	if File_pkg_apis_istio_v1alpha1_values_types_proto != nil {
+		return
+	}
+	if !protoimpl.UnsafeEnabled {
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ArchConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*CNIConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*CNITaintConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*CNIRepairConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ResourceQuotas); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*CPUTargetUtilizationConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*Resources); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ServiceAccount); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*DefaultPodDisruptionBudgetConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*DefaultResourcesConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*EgressGatewayConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*GatewaysConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*GlobalConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*STSConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*IstiodConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*GlobalLoggingConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*IngressGatewayConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*IngressGatewayZvpnConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*MultiClusterConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*OutboundTrafficPolicyConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*PilotConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*PilotIngressConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*PilotPolicyConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TelemetryConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TelemetryV2Config); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TelemetryV2MetadataExchangeConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TelemetryV2PrometheusConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TelemetryV2StackDriverConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TelemetryV2AccessLogPolicyFilterConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*PilotConfigSource); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*PortsConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ProxyConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ProxyInitConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ResourcesRequestsConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*SDSConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*SecretVolume); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ServiceConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*SidecarInjectorConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TracerConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TracerDatadogConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TracerLightStepConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TracerZipkinConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TracerStackdriverConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*BaseConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*IstiodRemoteConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*Values); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ZeroVPNConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*IntOrString); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*TelemetryV2PrometheusConfig_ConfigOverride); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+	}
+	type x struct{}
+	out := protoimpl.TypeBuilder{
+		File: protoimpl.DescBuilder{
+			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
+			RawDescriptor: file_pkg_apis_istio_v1alpha1_values_types_proto_rawDesc,
+			NumEnums:      4,
+			NumMessages:   53,
+			NumExtensions: 0,
+			NumServices:   0,
+		},
+		GoTypes:           file_pkg_apis_istio_v1alpha1_values_types_proto_goTypes,
+		DependencyIndexes: file_pkg_apis_istio_v1alpha1_values_types_proto_depIdxs,
+		EnumInfos:         file_pkg_apis_istio_v1alpha1_values_types_proto_enumTypes,
+		MessageInfos:      file_pkg_apis_istio_v1alpha1_values_types_proto_msgTypes,
+	}.Build()
+	File_pkg_apis_istio_v1alpha1_values_types_proto = out.File
+	file_pkg_apis_istio_v1alpha1_values_types_proto_rawDesc = nil
+	file_pkg_apis_istio_v1alpha1_values_types_proto_goTypes = nil
+	file_pkg_apis_istio_v1alpha1_values_types_proto_depIdxs = nil
 }
-
-func (m *EgressGatewayConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.ServiceAccount != nil {
-		{
-			size, err := m.ServiceAccount.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xe2
-	}
-	if len(m.InjectionTemplate) > 0 {
-		i -= len(m.InjectionTemplate)
-		copy(dAtA[i:], m.InjectionTemplate)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.InjectionTemplate)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xda
-	}
-	if m.RunAsRoot != nil {
-		{
-			size, err := m.RunAsRoot.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xd2
-	}
-	if len(m.Name) > 0 {
-		i -= len(m.Name)
-		copy(dAtA[i:], m.Name)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Name)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xca
-	}
-	if len(m.AdditionalContainers) > 0 {
-		for iNdEx := len(m.AdditionalContainers) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.AdditionalContainers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xc2
-		}
-	}
-	if len(m.ConfigVolumes) > 0 {
-		for iNdEx := len(m.ConfigVolumes) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.ConfigVolumes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xba
-		}
-	}
-	if m.RollingMaxUnavailable != nil {
-		{
-			size, err := m.RollingMaxUnavailable.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xb2
-	}
-	if m.RollingMaxSurge != nil {
-		{
-			size, err := m.RollingMaxSurge.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xaa
-	}
-	if len(m.Tolerations) > 0 {
-		for iNdEx := len(m.Tolerations) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.Tolerations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xa2
-		}
-	}
-	if m.Zvpn != nil {
-		{
-			size, err := m.Zvpn.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x9a
-	}
-	if len(m.Type) > 0 {
-		i -= len(m.Type)
-		copy(dAtA[i:], m.Type)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Type)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x92
-	}
-	if m.ServiceAnnotations != nil {
-		{
-			size, err := m.ServiceAnnotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x8a
-	}
-	if len(m.SecretVolumes) > 0 {
-		for iNdEx := len(m.SecretVolumes) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.SecretVolumes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0x82
-		}
-	}
-	if m.Resources != nil {
-		{
-			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x7a
-	}
-	if len(m.Ports) > 0 {
-		for iNdEx := len(m.Ports) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.Ports[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x72
-		}
-	}
-	if len(m.PodAntiAffinityTermLabelSelector) > 0 {
-		for iNdEx := len(m.PodAntiAffinityTermLabelSelector) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.PodAntiAffinityTermLabelSelector[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x6a
-		}
-	}
-	if len(m.PodAntiAffinityLabelSelector) > 0 {
-		for iNdEx := len(m.PodAntiAffinityLabelSelector) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.PodAntiAffinityLabelSelector[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x62
-		}
-	}
-	if m.PodAnnotations != nil {
-		{
-			size, err := m.PodAnnotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x5a
-	}
-	if m.NodeSelector != nil {
-		{
-			size, err := m.NodeSelector.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x52
-	}
-	if len(m.Labels) > 0 {
-		for k := range m.Labels {
-			v := m.Labels[k]
-			baseI := i
-			i -= len(v)
-			copy(dAtA[i:], v)
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(v)))
-			i--
-			dAtA[i] = 0x12
-			i -= len(k)
-			copy(dAtA[i:], k)
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(k)))
-			i--
-			dAtA[i] = 0xa
-			i = encodeVarintValuesTypes(dAtA, i, uint64(baseI-i))
-			i--
-			dAtA[i] = 0x4a
-		}
-	}
-	if m.Env != nil {
-		{
-			size, err := m.Env.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x42
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x3a
-	}
-	if m.Cpu != nil {
-		{
-			size, err := m.Cpu.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2a
-	}
-	if m.AutoscaleMin != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.AutoscaleMin))
-		i--
-		dAtA[i] = 0x18
-	}
-	if m.AutoscaleMax != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.AutoscaleMax))
-		i--
-		dAtA[i] = 0x10
-	}
-	if m.AutoscaleEnabled != nil {
-		{
-			size, err := m.AutoscaleEnabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *GatewaysConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *GatewaysConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *GatewaysConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.IstioIngressgateway != nil {
-		{
-			size, err := m.IstioIngressgateway.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x22
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.IstioEgressgateway != nil {
-		{
-			size, err := m.IstioEgressgateway.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *GlobalConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *GlobalConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *GlobalConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.CaName) > 0 {
-		i -= len(m.CaName)
-		copy(dAtA[i:], m.CaName)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.CaName)))
-		i--
-		dAtA[i] = 0x4
-		i--
-		dAtA[i] = 0x8a
-	}
-	if m.ConfigCluster != nil {
-		{
-			size, err := m.ConfigCluster.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x4
-		i--
-		dAtA[i] = 0x82
-	}
-	if m.ExternalIstiod != nil {
-		{
-			size, err := m.ExternalIstiod.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xf2
-	}
-	if len(m.CaAddress) > 0 {
-		i -= len(m.CaAddress)
-		copy(dAtA[i:], m.CaAddress)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.CaAddress)))
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xea
-	}
-	if m.MountMtlsCerts != nil {
-		{
-			size, err := m.MountMtlsCerts.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xe2
-	}
-	if len(m.Revision) > 0 {
-		i -= len(m.Revision)
-		copy(dAtA[i:], m.Revision)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Revision)))
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xda
-	}
-	if m.Sts != nil {
-		{
-			size, err := m.Sts.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xd2
-	}
-	if len(m.JwtPolicy) > 0 {
-		i -= len(m.JwtPolicy)
-		copy(dAtA[i:], m.JwtPolicy)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.JwtPolicy)))
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xca
-	}
-	if len(m.PilotCertProvider) > 0 {
-		i -= len(m.PilotCertProvider)
-		copy(dAtA[i:], m.PilotCertProvider)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.PilotCertProvider)))
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xc2
-	}
-	if len(m.DefaultTolerations) > 0 {
-		for iNdEx := len(m.DefaultTolerations) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.DefaultTolerations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x3
-			i--
-			dAtA[i] = 0xba
-		}
-	}
-	if m.Istiod != nil {
-		{
-			size, err := m.Istiod.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xb2
-	}
-	if len(m.MeshID) > 0 {
-		i -= len(m.MeshID)
-		copy(dAtA[i:], m.MeshID)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.MeshID)))
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0xaa
-	}
-	if len(m.DefaultConfigVisibilitySettings) > 0 {
-		for iNdEx := len(m.DefaultConfigVisibilitySettings) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.DefaultConfigVisibilitySettings[iNdEx])
-			copy(dAtA[i:], m.DefaultConfigVisibilitySettings[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.DefaultConfigVisibilitySettings[iNdEx])))
-			i--
-			dAtA[i] = 0x3
-			i--
-			dAtA[i] = 0xa2
-		}
-	}
-	if len(m.ConfigRootNamespace) > 0 {
-		i -= len(m.ConfigRootNamespace)
-		copy(dAtA[i:], m.ConfigRootNamespace)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ConfigRootNamespace)))
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0x92
-	}
-	if len(m.RemotePilotAddress) > 0 {
-		i -= len(m.RemotePilotAddress)
-		copy(dAtA[i:], m.RemotePilotAddress)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.RemotePilotAddress)))
-		i--
-		dAtA[i] = 0x3
-		i--
-		dAtA[i] = 0x82
-	}
-	if len(m.PodDNSSearchNamespaces) > 0 {
-		for iNdEx := len(m.PodDNSSearchNamespaces) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.PodDNSSearchNamespaces[iNdEx])
-			copy(dAtA[i:], m.PodDNSSearchNamespaces[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.PodDNSSearchNamespaces[iNdEx])))
-			i--
-			dAtA[i] = 0x2
-			i--
-			dAtA[i] = 0xda
-		}
-	}
-	if m.OperatorManageWebhooks != nil {
-		{
-			size, err := m.OperatorManageWebhooks.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xca
-	}
-	if len(m.Network) > 0 {
-		i -= len(m.Network)
-		copy(dAtA[i:], m.Network)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Network)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xba
-	}
-	if m.OmitSidecarInjectorConfigMap != nil {
-		{
-			size, err := m.OmitSidecarInjectorConfigMap.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xb2
-	}
-	if len(m.ImagePullSecrets) > 0 {
-		for iNdEx := len(m.ImagePullSecrets) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.ImagePullSecrets[iNdEx])
-			copy(dAtA[i:], m.ImagePullSecrets[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ImagePullSecrets[iNdEx])))
-			i--
-			dAtA[i] = 0x2
-			i--
-			dAtA[i] = 0xaa
-		}
-	}
-	if m.LogAsJson != nil {
-		{
-			size, err := m.LogAsJson.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xa2
-	}
-	if m.UseMCP != nil {
-		{
-			size, err := m.UseMCP.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0x9a
-	}
-	if m.Tracer != nil {
-		{
-			size, err := m.Tracer.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0x8a
-	}
-	if m.Tag != nil {
-		{
-			size, err := m.Tag.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xfa
-	}
-	if m.Sds != nil {
-		{
-			size, err := m.Sds.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xf2
-	}
-	if m.ProxyInit != nil {
-		{
-			size, err := m.ProxyInit.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xea
-	}
-	if m.Proxy != nil {
-		{
-			size, err := m.Proxy.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xe2
-	}
-	if len(m.PriorityClassName) > 0 {
-		i -= len(m.PriorityClassName)
-		copy(dAtA[i:], m.PriorityClassName)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.PriorityClassName)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xda
-	}
-	if m.OneNamespace != nil {
-		{
-			size, err := m.OneNamespace.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xba
-	}
-	if m.MultiCluster != nil {
-		{
-			size, err := m.MultiCluster.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xb2
-	}
-	if m.MeshNetworks != nil {
-		{
-			size, err := m.MeshNetworks.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x9a
-	}
-	if m.Logging != nil {
-		{
-			size, err := m.Logging.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x8a
-	}
-	if len(m.IstioNamespace) > 0 {
-		i -= len(m.IstioNamespace)
-		copy(dAtA[i:], m.IstioNamespace)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.IstioNamespace)))
-		i--
-		dAtA[i] = 0x72
-	}
-	if len(m.ImagePullPolicy) > 0 {
-		i -= len(m.ImagePullPolicy)
-		copy(dAtA[i:], m.ImagePullPolicy)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ImagePullPolicy)))
-		i--
-		dAtA[i] = 0x6a
-	}
-	if len(m.Hub) > 0 {
-		i -= len(m.Hub)
-		copy(dAtA[i:], m.Hub)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Hub)))
-		i--
-		dAtA[i] = 0x62
-	}
-	if m.DefaultResources != nil {
-		{
-			size, err := m.DefaultResources.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x4a
-	}
-	if m.DefaultPodDisruptionBudget != nil {
-		{
-			size, err := m.DefaultPodDisruptionBudget.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x3a
-	}
-	if m.DefaultNodeSelector != nil {
-		{
-			size, err := m.DefaultNodeSelector.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x32
-	}
-	if m.ConfigValidation != nil {
-		{
-			size, err := m.ConfigValidation.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.Arch != nil {
-		{
-			size, err := m.Arch.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *STSConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *STSConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *STSConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.ServicePort != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.ServicePort))
-		i--
-		dAtA[i] = 0x8
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *IstiodConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *IstiodConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *IstiodConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.EnableAnalysis != nil {
-		{
-			size, err := m.EnableAnalysis.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *GlobalLoggingConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *GlobalLoggingConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *GlobalLoggingConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Level) > 0 {
-		i -= len(m.Level)
-		copy(dAtA[i:], m.Level)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Level)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *IngressGatewayConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *IngressGatewayConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *IngressGatewayConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.ServiceAccount != nil {
-		{
-			size, err := m.ServiceAccount.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xfa
-	}
-	if len(m.InjectionTemplate) > 0 {
-		i -= len(m.InjectionTemplate)
-		copy(dAtA[i:], m.InjectionTemplate)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.InjectionTemplate)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xf2
-	}
-	if m.RunAsRoot != nil {
-		{
-			size, err := m.RunAsRoot.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xea
-	}
-	if len(m.Name) > 0 {
-		i -= len(m.Name)
-		copy(dAtA[i:], m.Name)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Name)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xe2
-	}
-	if len(m.ConfigVolumes) > 0 {
-		for iNdEx := len(m.ConfigVolumes) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.ConfigVolumes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x2
-			i--
-			dAtA[i] = 0xb2
-		}
-	}
-	if len(m.AdditionalContainers) > 0 {
-		for iNdEx := len(m.AdditionalContainers) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.AdditionalContainers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x2
-			i--
-			dAtA[i] = 0xaa
-		}
-	}
-	if len(m.IngressPorts) > 0 {
-		for iNdEx := len(m.IngressPorts) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.IngressPorts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x2
-			i--
-			dAtA[i] = 0xa2
-		}
-	}
-	if len(m.Tolerations) > 0 {
-		for iNdEx := len(m.Tolerations) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.Tolerations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x2
-			i--
-			dAtA[i] = 0x9a
-		}
-	}
-	if len(m.ExternalTrafficPolicy) > 0 {
-		i -= len(m.ExternalTrafficPolicy)
-		copy(dAtA[i:], m.ExternalTrafficPolicy)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ExternalTrafficPolicy)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0x92
-	}
-	if m.RollingMaxUnavailable != nil {
-		{
-			size, err := m.RollingMaxUnavailable.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0x82
-	}
-	if m.RollingMaxSurge != nil {
-		{
-			size, err := m.RollingMaxSurge.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xfa
-	}
-	if m.Zvpn != nil {
-		{
-			size, err := m.Zvpn.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xf2
-	}
-	if len(m.Type) > 0 {
-		i -= len(m.Type)
-		copy(dAtA[i:], m.Type)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Type)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xea
-	}
-	if m.ServiceAnnotations != nil {
-		{
-			size, err := m.ServiceAnnotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xe2
-	}
-	if len(m.SecretVolumes) > 0 {
-		for iNdEx := len(m.SecretVolumes) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.SecretVolumes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xda
-		}
-	}
-	if m.Resources != nil {
-		{
-			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xca
-	}
-	if m.ReplicaCount != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.ReplicaCount))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xc0
-	}
-	if len(m.Ports) > 0 {
-		for iNdEx := len(m.Ports) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.Ports[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xba
-		}
-	}
-	if len(m.PodAntiAffinityTermLabelSelector) > 0 {
-		for iNdEx := len(m.PodAntiAffinityTermLabelSelector) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.PodAntiAffinityTermLabelSelector[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xb2
-		}
-	}
-	if len(m.PodAntiAffinityLabelSelector) > 0 {
-		for iNdEx := len(m.PodAntiAffinityLabelSelector) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.PodAntiAffinityLabelSelector[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xaa
-		}
-	}
-	if m.PodAnnotations != nil {
-		{
-			size, err := m.PodAnnotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xa2
-	}
-	if m.NodeSelector != nil {
-		{
-			size, err := m.NodeSelector.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x9a
-	}
-	if len(m.LoadBalancerSourceRanges) > 0 {
-		for iNdEx := len(m.LoadBalancerSourceRanges) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.LoadBalancerSourceRanges[iNdEx])
-			copy(dAtA[i:], m.LoadBalancerSourceRanges[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.LoadBalancerSourceRanges[iNdEx])))
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0x8a
-		}
-	}
-	if len(m.LoadBalancerIP) > 0 {
-		i -= len(m.LoadBalancerIP)
-		copy(dAtA[i:], m.LoadBalancerIP)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.LoadBalancerIP)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x82
-	}
-	if len(m.Labels) > 0 {
-		for k := range m.Labels {
-			v := m.Labels[k]
-			baseI := i
-			i -= len(v)
-			copy(dAtA[i:], v)
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(v)))
-			i--
-			dAtA[i] = 0x12
-			i -= len(k)
-			copy(dAtA[i:], k)
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(k)))
-			i--
-			dAtA[i] = 0xa
-			i = encodeVarintValuesTypes(dAtA, i, uint64(baseI-i))
-			i--
-			dAtA[i] = 0x7a
-		}
-	}
-	if m.Env != nil {
-		{
-			size, err := m.Env.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x5a
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x52
-	}
-	if m.CustomService != nil {
-		{
-			size, err := m.CustomService.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x32
-	}
-	if m.Cpu != nil {
-		{
-			size, err := m.Cpu.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2a
-	}
-	if m.AutoscaleMin != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.AutoscaleMin))
-		i--
-		dAtA[i] = 0x18
-	}
-	if m.AutoscaleMax != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.AutoscaleMax))
-		i--
-		dAtA[i] = 0x10
-	}
-	if m.AutoscaleEnabled != nil {
-		{
-			size, err := m.AutoscaleEnabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *IngressGatewayZvpnConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *IngressGatewayZvpnConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *IngressGatewayZvpnConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Suffix) > 0 {
-		i -= len(m.Suffix)
-		copy(dAtA[i:], m.Suffix)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Suffix)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *MultiClusterConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *MultiClusterConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *MultiClusterConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.IncludeEnvoyFilter != nil {
-		{
-			size, err := m.IncludeEnvoyFilter.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x22
-	}
-	if len(m.GlobalDomainSuffix) > 0 {
-		i -= len(m.GlobalDomainSuffix)
-		copy(dAtA[i:], m.GlobalDomainSuffix)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.GlobalDomainSuffix)))
-		i--
-		dAtA[i] = 0x1a
-	}
-	if len(m.ClusterName) > 0 {
-		i -= len(m.ClusterName)
-		copy(dAtA[i:], m.ClusterName)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ClusterName)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *OutboundTrafficPolicyConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *OutboundTrafficPolicyConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *OutboundTrafficPolicyConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Mode != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.Mode))
-		i--
-		dAtA[i] = 0x10
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *PilotConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *PilotConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *PilotConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.ServiceAnnotations != nil {
-		{
-			size, err := m.ServiceAnnotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xaa
-	}
-	if m.PodLabels != nil {
-		{
-			size, err := m.PodLabels.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xa2
-	}
-	if m.Tag != nil {
-		{
-			size, err := m.Tag.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0x9a
-	}
-	if len(m.Hub) > 0 {
-		i -= len(m.Hub)
-		copy(dAtA[i:], m.Hub)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Hub)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0x92
-	}
-	if len(m.Plugins) > 0 {
-		for iNdEx := len(m.Plugins) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.Plugins[iNdEx])
-			copy(dAtA[i:], m.Plugins[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Plugins[iNdEx])))
-			i--
-			dAtA[i] = 0x2
-			i--
-			dAtA[i] = 0x8a
-		}
-	}
-	if len(m.JwksResolverExtraRootCA) > 0 {
-		i -= len(m.JwksResolverExtraRootCA)
-		copy(dAtA[i:], m.JwksResolverExtraRootCA)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.JwksResolverExtraRootCA)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0x82
-	}
-	if m.ConfigSource != nil {
-		{
-			size, err := m.ConfigSource.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xfa
-	}
-	if m.PodAnnotations != nil {
-		{
-			size, err := m.PodAnnotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xf2
-	}
-	if m.EnableProtocolSniffingForInbound != nil {
-		{
-			size, err := m.EnableProtocolSniffingForInbound.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xea
-	}
-	if m.EnableProtocolSniffingForOutbound != nil {
-		{
-			size, err := m.EnableProtocolSniffingForOutbound.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xe2
-	}
-	if len(m.Tolerations) > 0 {
-		for iNdEx := len(m.Tolerations) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.Tolerations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xd2
-		}
-	}
-	if m.RollingMaxUnavailable != nil {
-		{
-			size, err := m.RollingMaxUnavailable.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xca
-	}
-	if m.RollingMaxSurge != nil {
-		{
-			size, err := m.RollingMaxSurge.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xc2
-	}
-	if m.Env != nil {
-		{
-			size, err := m.Env.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xaa
-	}
-	if m.UseMCP != nil {
-		{
-			size, err := m.UseMCP.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xa2
-	}
-	if m.ConfigMap != nil {
-		{
-			size, err := m.ConfigMap.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x92
-	}
-	if m.DeploymentLabels != nil {
-		{
-			size, err := m.DeploymentLabels.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x72
-	}
-	if m.KeepaliveMaxServerConnectionAge != nil {
-		{
-			size, err := m.KeepaliveMaxServerConnectionAge.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x6a
-	}
-	if m.NodeSelector != nil {
-		{
-			size, err := m.NodeSelector.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x62
-	}
-	if m.Cpu != nil {
-		{
-			size, err := m.Cpu.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x5a
-	}
-	if len(m.ConfigNamespace) > 0 {
-		i -= len(m.ConfigNamespace)
-		copy(dAtA[i:], m.ConfigNamespace)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ConfigNamespace)))
-		i--
-		dAtA[i] = 0x52
-	}
-	if m.Resources != nil {
-		{
-			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x4a
-	}
-	if m.TraceSampling != 0 {
-		i -= 8
-		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.TraceSampling))))
-		i--
-		dAtA[i] = 0x41
-	}
-	if len(m.Image) > 0 {
-		i -= len(m.Image)
-		copy(dAtA[i:], m.Image)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Image)))
-		i--
-		dAtA[i] = 0x32
-	}
-	if m.ReplicaCount != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.ReplicaCount))
-		i--
-		dAtA[i] = 0x28
-	}
-	if m.AutoscaleMax != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.AutoscaleMax))
-		i--
-		dAtA[i] = 0x20
-	}
-	if m.AutoscaleMin != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.AutoscaleMin))
-		i--
-		dAtA[i] = 0x18
-	}
-	if m.AutoscaleEnabled != nil {
-		{
-			size, err := m.AutoscaleEnabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *PilotIngressConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *PilotIngressConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *PilotIngressConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.IngressClass) > 0 {
-		i -= len(m.IngressClass)
-		copy(dAtA[i:], m.IngressClass)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.IngressClass)))
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.IngressControllerMode != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.IngressControllerMode))
-		i--
-		dAtA[i] = 0x10
-	}
-	if len(m.IngressService) > 0 {
-		i -= len(m.IngressService)
-		copy(dAtA[i:], m.IngressService)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.IngressService)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *PilotPolicyConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *PilotPolicyConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *PilotPolicyConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TelemetryConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TelemetryConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TelemetryConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.V2 != nil {
-		{
-			size, err := m.V2.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TelemetryV2Config) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TelemetryV2Config) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TelemetryV2Config) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.AccessLogPolicy != nil {
-		{
-			size, err := m.AccessLogPolicy.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2a
-	}
-	if m.MetadataExchange != nil {
-		{
-			size, err := m.MetadataExchange.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x22
-	}
-	if m.Stackdriver != nil {
-		{
-			size, err := m.Stackdriver.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.Prometheus != nil {
-		{
-			size, err := m.Prometheus.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TelemetryV2MetadataExchangeConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TelemetryV2MetadataExchangeConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TelemetryV2MetadataExchangeConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.WasmEnabled != nil {
-		{
-			size, err := m.WasmEnabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TelemetryV2PrometheusConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TelemetryV2PrometheusConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TelemetryV2PrometheusConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.ConfigOverride != nil {
-		{
-			size, err := m.ConfigOverride.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.WasmEnabled != nil {
-		{
-			size, err := m.WasmEnabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.OutboundSidecar != nil {
-		{
-			size, err := m.OutboundSidecar.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.InboundSidecar != nil {
-		{
-			size, err := m.InboundSidecar.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Gateway != nil {
-		{
-			size, err := m.Gateway.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TelemetryV2StackDriverConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TelemetryV2StackDriverConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TelemetryV2StackDriverConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.InboundAccessLogging != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.InboundAccessLogging))
-		i--
-		dAtA[i] = 0x40
-	}
-	if m.OutboundAccessLogging != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.OutboundAccessLogging))
-		i--
-		dAtA[i] = 0x38
-	}
-	if m.DisableOutbound != nil {
-		{
-			size, err := m.DisableOutbound.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x32
-	}
-	if m.ConfigOverride != nil {
-		{
-			size, err := m.ConfigOverride.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2a
-	}
-	if m.Topology != nil {
-		{
-			size, err := m.Topology.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x22
-	}
-	if m.Monitoring != nil {
-		{
-			size, err := m.Monitoring.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.Logging != nil {
-		{
-			size, err := m.Logging.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TelemetryV2AccessLogPolicyFilterConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TelemetryV2AccessLogPolicyFilterConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TelemetryV2AccessLogPolicyFilterConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.LogWindowDuration != nil {
-		{
-			size, err := m.LogWindowDuration.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *PilotConfigSource) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *PilotConfigSource) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *PilotConfigSource) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.SubscribedResources) > 0 {
-		for iNdEx := len(m.SubscribedResources) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.SubscribedResources[iNdEx])
-			copy(dAtA[i:], m.SubscribedResources[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.SubscribedResources[iNdEx])))
-			i--
-			dAtA[i] = 0xa
-		}
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *PortsConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *PortsConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *PortsConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Protocol) > 0 {
-		i -= len(m.Protocol)
-		copy(dAtA[i:], m.Protocol)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Protocol)))
-		i--
-		dAtA[i] = 0x2a
-	}
-	if m.TargetPort != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.TargetPort))
-		i--
-		dAtA[i] = 0x20
-	}
-	if m.NodePort != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.NodePort))
-		i--
-		dAtA[i] = 0x18
-	}
-	if m.Port != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.Port))
-		i--
-		dAtA[i] = 0x10
-	}
-	if len(m.Name) > 0 {
-		i -= len(m.Name)
-		copy(dAtA[i:], m.Name)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Name)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *ProxyConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *ProxyConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *ProxyConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.IncludeOutboundPorts) > 0 {
-		i -= len(m.IncludeOutboundPorts)
-		copy(dAtA[i:], m.IncludeOutboundPorts)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.IncludeOutboundPorts)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xba
-	}
-	if len(m.IncludeInboundPorts) > 0 {
-		i -= len(m.IncludeInboundPorts)
-		copy(dAtA[i:], m.IncludeInboundPorts)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.IncludeInboundPorts)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xb2
-	}
-	if m.HoldApplicationUntilProxyStarts != nil {
-		{
-			size, err := m.HoldApplicationUntilProxyStarts.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xaa
-	}
-	if m.Lifecycle != nil {
-		{
-			size, err := m.Lifecycle.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xa2
-	}
-	if len(m.ExcludeOutboundPorts) > 0 {
-		i -= len(m.ExcludeOutboundPorts)
-		copy(dAtA[i:], m.ExcludeOutboundPorts)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ExcludeOutboundPorts)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xe2
-	}
-	if m.Tracer != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.Tracer))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xc8
-	}
-	if m.Resources != nil {
-		{
-			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xc2
-	}
-	if m.StatusPort != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.StatusPort))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xb8
-	}
-	if m.ReadinessFailureThreshold != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.ReadinessFailureThreshold))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xb0
-	}
-	if m.ReadinessPeriodSeconds != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.ReadinessPeriodSeconds))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xa8
-	}
-	if m.ReadinessInitialDelaySeconds != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.ReadinessInitialDelaySeconds))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xa0
-	}
-	if m.Privileged != nil {
-		{
-			size, err := m.Privileged.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x9a
-	}
-	if len(m.LogLevel) > 0 {
-		i -= len(m.LogLevel)
-		copy(dAtA[i:], m.LogLevel)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.LogLevel)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x92
-	}
-	if len(m.IncludeIPRanges) > 0 {
-		i -= len(m.IncludeIPRanges)
-		copy(dAtA[i:], m.IncludeIPRanges)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.IncludeIPRanges)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x82
-	}
-	if len(m.Image) > 0 {
-		i -= len(m.Image)
-		copy(dAtA[i:], m.Image)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Image)))
-		i--
-		dAtA[i] = 0x72
-	}
-	if len(m.ExcludeIPRanges) > 0 {
-		i -= len(m.ExcludeIPRanges)
-		copy(dAtA[i:], m.ExcludeIPRanges)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ExcludeIPRanges)))
-		i--
-		dAtA[i] = 0x6a
-	}
-	if len(m.ExcludeInboundPorts) > 0 {
-		i -= len(m.ExcludeInboundPorts)
-		copy(dAtA[i:], m.ExcludeInboundPorts)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ExcludeInboundPorts)))
-		i--
-		dAtA[i] = 0x62
-	}
-	if m.EnableCoreDump != nil {
-		{
-			size, err := m.EnableCoreDump.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x4a
-	}
-	if len(m.ComponentLogLevel) > 0 {
-		i -= len(m.ComponentLogLevel)
-		copy(dAtA[i:], m.ComponentLogLevel)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ComponentLogLevel)))
-		i--
-		dAtA[i] = 0x32
-	}
-	if len(m.ClusterDomain) > 0 {
-		i -= len(m.ClusterDomain)
-		copy(dAtA[i:], m.ClusterDomain)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ClusterDomain)))
-		i--
-		dAtA[i] = 0x2a
-	}
-	if len(m.AutoInject) > 0 {
-		i -= len(m.AutoInject)
-		copy(dAtA[i:], m.AutoInject)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.AutoInject)))
-		i--
-		dAtA[i] = 0x22
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *ProxyInitConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *ProxyInitConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *ProxyInitConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Resources != nil {
-		{
-			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2a
-	}
-	if len(m.Image) > 0 {
-		i -= len(m.Image)
-		copy(dAtA[i:], m.Image)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Image)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *ResourcesRequestsConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *ResourcesRequestsConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *ResourcesRequestsConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Memory) > 0 {
-		i -= len(m.Memory)
-		copy(dAtA[i:], m.Memory)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Memory)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if len(m.Cpu) > 0 {
-		i -= len(m.Cpu)
-		copy(dAtA[i:], m.Cpu)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Cpu)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *SDSConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *SDSConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *SDSConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Token != nil {
-		{
-			size, err := m.Token.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2a
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *SecretVolume) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *SecretVolume) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *SecretVolume) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.SecretName) > 0 {
-		i -= len(m.SecretName)
-		copy(dAtA[i:], m.SecretName)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.SecretName)))
-		i--
-		dAtA[i] = 0x1a
-	}
-	if len(m.Name) > 0 {
-		i -= len(m.Name)
-		copy(dAtA[i:], m.Name)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Name)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if len(m.MountPath) > 0 {
-		i -= len(m.MountPath)
-		copy(dAtA[i:], m.MountPath)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.MountPath)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *ServiceConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *ServiceConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *ServiceConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Type) > 0 {
-		i -= len(m.Type)
-		copy(dAtA[i:], m.Type)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Type)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x92
-	}
-	if len(m.Name) > 0 {
-		i -= len(m.Name)
-		copy(dAtA[i:], m.Name)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Name)))
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.ExternalPort != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.ExternalPort))
-		i--
-		dAtA[i] = 0x10
-	}
-	if m.Annotations != nil {
-		{
-			size, err := m.Annotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *SidecarInjectorConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *SidecarInjectorConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *SidecarInjectorConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.DefaultTemplates) > 0 {
-		for iNdEx := len(m.DefaultTemplates) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.DefaultTemplates[iNdEx])
-			copy(dAtA[i:], m.DefaultTemplates[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.DefaultTemplates[iNdEx])))
-			i--
-			dAtA[i] = 0x1
-			i--
-			dAtA[i] = 0xc2
-		}
-	}
-	if m.Templates != nil {
-		{
-			size, err := m.Templates.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xba
-	}
-	if len(m.InjectionURL) > 0 {
-		i -= len(m.InjectionURL)
-		copy(dAtA[i:], m.InjectionURL)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.InjectionURL)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xb2
-	}
-	if m.ObjectSelector != nil {
-		{
-			size, err := m.ObjectSelector.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xaa
-	}
-	if m.InjectedAnnotations != nil {
-		{
-			size, err := m.InjectedAnnotations.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x9a
-	}
-	if m.RewriteAppHTTPProbe != nil {
-		{
-			size, err := m.RewriteAppHTTPProbe.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x82
-	}
-	if len(m.AlwaysInjectSelector) > 0 {
-		for iNdEx := len(m.AlwaysInjectSelector) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.AlwaysInjectSelector[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x62
-		}
-	}
-	if len(m.NeverInjectSelector) > 0 {
-		for iNdEx := len(m.NeverInjectSelector) - 1; iNdEx >= 0; iNdEx-- {
-			{
-				size, err := m.NeverInjectSelector[iNdEx].MarshalToSizedBuffer(dAtA[:i])
-				if err != nil {
-					return 0, err
-				}
-				i -= size
-				i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-			}
-			i--
-			dAtA[i] = 0x5a
-		}
-	}
-	if m.UseLegacySelectors != nil {
-		{
-			size, err := m.UseLegacySelectors.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x22
-	}
-	if m.EnableNamespacesByDefault != nil {
-		{
-			size, err := m.EnableNamespacesByDefault.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TracerConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TracerConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TracerConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.Stackdriver != nil {
-		{
-			size, err := m.Stackdriver.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x22
-	}
-	if m.Zipkin != nil {
-		{
-			size, err := m.Zipkin.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.Lightstep != nil {
-		{
-			size, err := m.Lightstep.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Datadog != nil {
-		{
-			size, err := m.Datadog.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TracerDatadogConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TracerDatadogConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TracerDatadogConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Address) > 0 {
-		i -= len(m.Address)
-		copy(dAtA[i:], m.Address)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Address)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TracerLightStepConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TracerLightStepConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TracerLightStepConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.AccessToken) > 0 {
-		i -= len(m.AccessToken)
-		copy(dAtA[i:], m.AccessToken)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.AccessToken)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if len(m.Address) > 0 {
-		i -= len(m.Address)
-		copy(dAtA[i:], m.Address)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Address)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TracerZipkinConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TracerZipkinConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TracerZipkinConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Address) > 0 {
-		i -= len(m.Address)
-		copy(dAtA[i:], m.Address)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Address)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *TracerStackdriverConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *TracerStackdriverConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *TracerStackdriverConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.MaxNumberOfMessageEvents != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.MaxNumberOfMessageEvents))
-		i--
-		dAtA[i] = 0x20
-	}
-	if m.MaxNumberOfAnnotations != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.MaxNumberOfAnnotations))
-		i--
-		dAtA[i] = 0x18
-	}
-	if m.MaxNumberOfAttributes != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.MaxNumberOfAttributes))
-		i--
-		dAtA[i] = 0x10
-	}
-	if m.Debug != nil {
-		{
-			size, err := m.Debug.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *BaseConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *BaseConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *BaseConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.EnableIstioConfigCRDs != nil {
-		{
-			size, err := m.EnableIstioConfigCRDs.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if len(m.ValidationURL) > 0 {
-		i -= len(m.ValidationURL)
-		copy(dAtA[i:], m.ValidationURL)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.ValidationURL)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.EnableCRDTemplates != nil {
-		{
-			size, err := m.EnableCRDTemplates.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *IstiodRemoteConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *IstiodRemoteConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *IstiodRemoteConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.InjectionPath) > 0 {
-		i -= len(m.InjectionPath)
-		copy(dAtA[i:], m.InjectionPath)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.InjectionPath)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if len(m.InjectionURL) > 0 {
-		i -= len(m.InjectionURL)
-		copy(dAtA[i:], m.InjectionURL)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.InjectionURL)))
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *Values) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *Values) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *Values) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.DefaultRevision) > 0 {
-		i -= len(m.DefaultRevision)
-		copy(dAtA[i:], m.DefaultRevision)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.DefaultRevision)))
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xc2
-	}
-	if len(m.RevisionTags) > 0 {
-		for iNdEx := len(m.RevisionTags) - 1; iNdEx >= 0; iNdEx-- {
-			i -= len(m.RevisionTags[iNdEx])
-			copy(dAtA[i:], m.RevisionTags[iNdEx])
-			i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.RevisionTags[iNdEx])))
-			i--
-			dAtA[i] = 0x2
-			i--
-			dAtA[i] = 0xba
-		}
-	}
-	if m.IstiodRemote != nil {
-		{
-			size, err := m.IstiodRemote.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xb2
-	}
-	if m.Base != nil {
-		{
-			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xaa
-	}
-	if m.MeshConfig != nil {
-		{
-			size, err := m.MeshConfig.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2
-		i--
-		dAtA[i] = 0xa2
-	}
-	if m.Telemetry != nil {
-		{
-			size, err := m.Telemetry.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xba
-	}
-	if len(m.OwnerName) > 0 {
-		i -= len(m.OwnerName)
-		copy(dAtA[i:], m.OwnerName)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.OwnerName)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xb2
-	}
-	if len(m.Revision) > 0 {
-		i -= len(m.Revision)
-		copy(dAtA[i:], m.Revision)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Revision)))
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0xaa
-	}
-	if m.IstioCni != nil {
-		{
-			size, err := m.IstioCni.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1
-		i--
-		dAtA[i] = 0x9a
-	}
-	if m.SidecarInjectorWebhook != nil {
-		{
-			size, err := m.SidecarInjectorWebhook.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x6a
-	}
-	if m.Pilot != nil {
-		{
-			size, err := m.Pilot.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x52
-	}
-	if m.Global != nil {
-		{
-			size, err := m.Global.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x32
-	}
-	if m.Gateways != nil {
-		{
-			size, err := m.Gateways.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x2a
-	}
-	if m.Cni != nil {
-		{
-			size, err := m.Cni.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *ZeroVPNConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *ZeroVPNConfig) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *ZeroVPNConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if len(m.Suffix) > 0 {
-		i -= len(m.Suffix)
-		copy(dAtA[i:], m.Suffix)
-		i = encodeVarintValuesTypes(dAtA, i, uint64(len(m.Suffix)))
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Enabled != nil {
-		{
-			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0xa
-	}
-	return len(dAtA) - i, nil
-}
-
-func (m *IntOrString) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalToSizedBuffer(dAtA[:size])
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
-
-func (m *IntOrString) MarshalTo(dAtA []byte) (int, error) {
-	size := m.Size()
-	return m.MarshalToSizedBuffer(dAtA[:size])
-}
-
-func (m *IntOrString) MarshalToSizedBuffer(dAtA []byte) (int, error) {
-	i := len(dAtA)
-	_ = i
-	var l int
-	_ = l
-	if m.XXX_unrecognized != nil {
-		i -= len(m.XXX_unrecognized)
-		copy(dAtA[i:], m.XXX_unrecognized)
-	}
-	if m.StrVal != nil {
-		{
-			size, err := m.StrVal.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x1a
-	}
-	if m.IntVal != nil {
-		{
-			size, err := m.IntVal.MarshalToSizedBuffer(dAtA[:i])
-			if err != nil {
-				return 0, err
-			}
-			i -= size
-			i = encodeVarintValuesTypes(dAtA, i, uint64(size))
-		}
-		i--
-		dAtA[i] = 0x12
-	}
-	if m.Type != 0 {
-		i = encodeVarintValuesTypes(dAtA, i, uint64(m.Type))
-		i--
-		dAtA[i] = 0x8
-	}
-	return len(dAtA) - i, nil
-}
-
-func encodeVarintValuesTypes(dAtA []byte, offset int, v uint64) int {
-	offset -= sovValuesTypes(v)
-	base := offset
-	for v >= 1<<7 {
-		dAtA[offset] = uint8(v&0x7f | 0x80)
-		v >>= 7
-		offset++
-	}
-	dAtA[offset] = uint8(v)
-	return base
-}
-func (m *ArchConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Amd64 != 0 {
-		n += 1 + sovValuesTypes(uint64(m.Amd64))
-	}
-	if m.Ppc64Le != 0 {
-		n += 1 + sovValuesTypes(uint64(m.Ppc64Le))
-	}
-	if m.S390X != 0 {
-		n += 1 + sovValuesTypes(uint64(m.S390X))
-	}
-	if m.Arm64 != 0 {
-		n += 1 + sovValuesTypes(uint64(m.Arm64))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *CNIConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Hub)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Tag != nil {
-		l = m.Tag.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Image)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.PullPolicy)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.CniBinDir)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.CniConfDir)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.CniConfFileName)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.ExcludeNamespaces) > 0 {
-		for _, s := range m.ExcludeNamespaces {
-			l = len(s)
-			n += 1 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.PodAnnotations != nil {
-		l = m.PodAnnotations.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.PspClusterRole)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.LogLevel)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Repair != nil {
-		l = m.Repair.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Chained != nil {
-		l = m.Chained.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Taint != nil {
-		l = m.Taint.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ResourceQuotas != nil {
-		l = m.ResourceQuotas.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Resources != nil {
-		l = m.Resources.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Privileged != nil {
-		l = m.Privileged.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *CNITaintConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *CNIRepairConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Hub)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Tag != nil {
-		l = m.Tag.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Image)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.LabelPods {
-		n += 2
-	}
-	l = len(m.CreateEvents)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.DeletePods {
-		n += 2
-	}
-	l = len(m.BrokenPodLabelKey)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.BrokenPodLabelValue)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.InitContainerName)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *ResourceQuotas) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Pods != 0 {
-		n += 1 + sovValuesTypes(uint64(m.Pods))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *CPUTargetUtilizationConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.TargetAverageUtilization != 0 {
-		n += 1 + sovValuesTypes(uint64(m.TargetAverageUtilization))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *Resources) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if len(m.Limits) > 0 {
-		for k, v := range m.Limits {
-			_ = k
-			_ = v
-			mapEntrySize := 1 + len(k) + sovValuesTypes(uint64(len(k))) + 1 + len(v) + sovValuesTypes(uint64(len(v)))
-			n += mapEntrySize + 1 + sovValuesTypes(uint64(mapEntrySize))
-		}
-	}
-	if len(m.Requests) > 0 {
-		for k, v := range m.Requests {
-			_ = k
-			_ = v
-			mapEntrySize := 1 + len(k) + sovValuesTypes(uint64(len(k))) + 1 + len(v) + sovValuesTypes(uint64(len(v)))
-			n += mapEntrySize + 1 + sovValuesTypes(uint64(mapEntrySize))
-		}
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *ServiceAccount) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Annotations != nil {
-		l = m.Annotations.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *DefaultPodDisruptionBudgetConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *DefaultResourcesConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Requests != nil {
-		l = m.Requests.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *EgressGatewayConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.AutoscaleEnabled != nil {
-		l = m.AutoscaleEnabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.AutoscaleMax != 0 {
-		n += 1 + sovValuesTypes(uint64(m.AutoscaleMax))
-	}
-	if m.AutoscaleMin != 0 {
-		n += 1 + sovValuesTypes(uint64(m.AutoscaleMin))
-	}
-	if m.Cpu != nil {
-		l = m.Cpu.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Env != nil {
-		l = m.Env.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.Labels) > 0 {
-		for k, v := range m.Labels {
-			_ = k
-			_ = v
-			mapEntrySize := 1 + len(k) + sovValuesTypes(uint64(len(k))) + 1 + len(v) + sovValuesTypes(uint64(len(v)))
-			n += mapEntrySize + 1 + sovValuesTypes(uint64(mapEntrySize))
-		}
-	}
-	if m.NodeSelector != nil {
-		l = m.NodeSelector.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.PodAnnotations != nil {
-		l = m.PodAnnotations.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.PodAntiAffinityLabelSelector) > 0 {
-		for _, e := range m.PodAntiAffinityLabelSelector {
-			l = e.Size()
-			n += 1 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.PodAntiAffinityTermLabelSelector) > 0 {
-		for _, e := range m.PodAntiAffinityTermLabelSelector {
-			l = e.Size()
-			n += 1 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.Ports) > 0 {
-		for _, e := range m.Ports {
-			l = e.Size()
-			n += 1 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.Resources != nil {
-		l = m.Resources.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.SecretVolumes) > 0 {
-		for _, e := range m.SecretVolumes {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.ServiceAnnotations != nil {
-		l = m.ServiceAnnotations.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Type)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Zvpn != nil {
-		l = m.Zvpn.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.Tolerations) > 0 {
-		for _, e := range m.Tolerations {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.RollingMaxSurge != nil {
-		l = m.RollingMaxSurge.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.RollingMaxUnavailable != nil {
-		l = m.RollingMaxUnavailable.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.ConfigVolumes) > 0 {
-		for _, e := range m.ConfigVolumes {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.AdditionalContainers) > 0 {
-		for _, e := range m.AdditionalContainers {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	l = len(m.Name)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.RunAsRoot != nil {
-		l = m.RunAsRoot.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.InjectionTemplate)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ServiceAccount != nil {
-		l = m.ServiceAccount.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *GatewaysConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.IstioEgressgateway != nil {
-		l = m.IstioEgressgateway.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.IstioIngressgateway != nil {
-		l = m.IstioIngressgateway.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *GlobalConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Arch != nil {
-		l = m.Arch.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ConfigValidation != nil {
-		l = m.ConfigValidation.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.DefaultNodeSelector != nil {
-		l = m.DefaultNodeSelector.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.DefaultPodDisruptionBudget != nil {
-		l = m.DefaultPodDisruptionBudget.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.DefaultResources != nil {
-		l = m.DefaultResources.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Hub)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ImagePullPolicy)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.IstioNamespace)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Logging != nil {
-		l = m.Logging.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.MeshNetworks != nil {
-		l = m.MeshNetworks.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.MultiCluster != nil {
-		l = m.MultiCluster.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.OneNamespace != nil {
-		l = m.OneNamespace.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.PriorityClassName)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Proxy != nil {
-		l = m.Proxy.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ProxyInit != nil {
-		l = m.ProxyInit.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Sds != nil {
-		l = m.Sds.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Tag != nil {
-		l = m.Tag.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Tracer != nil {
-		l = m.Tracer.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.UseMCP != nil {
-		l = m.UseMCP.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.LogAsJson != nil {
-		l = m.LogAsJson.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.ImagePullSecrets) > 0 {
-		for _, s := range m.ImagePullSecrets {
-			l = len(s)
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.OmitSidecarInjectorConfigMap != nil {
-		l = m.OmitSidecarInjectorConfigMap.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Network)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.OperatorManageWebhooks != nil {
-		l = m.OperatorManageWebhooks.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.PodDNSSearchNamespaces) > 0 {
-		for _, s := range m.PodDNSSearchNamespaces {
-			l = len(s)
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	l = len(m.RemotePilotAddress)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ConfigRootNamespace)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.DefaultConfigVisibilitySettings) > 0 {
-		for _, s := range m.DefaultConfigVisibilitySettings {
-			l = len(s)
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	l = len(m.MeshID)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Istiod != nil {
-		l = m.Istiod.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.DefaultTolerations) > 0 {
-		for _, e := range m.DefaultTolerations {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	l = len(m.PilotCertProvider)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.JwtPolicy)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Sts != nil {
-		l = m.Sts.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Revision)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.MountMtlsCerts != nil {
-		l = m.MountMtlsCerts.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.CaAddress)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ExternalIstiod != nil {
-		l = m.ExternalIstiod.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ConfigCluster != nil {
-		l = m.ConfigCluster.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.CaName)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *STSConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.ServicePort != 0 {
-		n += 1 + sovValuesTypes(uint64(m.ServicePort))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *IstiodConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.EnableAnalysis != nil {
-		l = m.EnableAnalysis.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *GlobalLoggingConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.Level)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *IngressGatewayConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.AutoscaleEnabled != nil {
-		l = m.AutoscaleEnabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.AutoscaleMax != 0 {
-		n += 1 + sovValuesTypes(uint64(m.AutoscaleMax))
-	}
-	if m.AutoscaleMin != 0 {
-		n += 1 + sovValuesTypes(uint64(m.AutoscaleMin))
-	}
-	if m.Cpu != nil {
-		l = m.Cpu.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.CustomService != nil {
-		l = m.CustomService.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Env != nil {
-		l = m.Env.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.Labels) > 0 {
-		for k, v := range m.Labels {
-			_ = k
-			_ = v
-			mapEntrySize := 1 + len(k) + sovValuesTypes(uint64(len(k))) + 1 + len(v) + sovValuesTypes(uint64(len(v)))
-			n += mapEntrySize + 1 + sovValuesTypes(uint64(mapEntrySize))
-		}
-	}
-	l = len(m.LoadBalancerIP)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.LoadBalancerSourceRanges) > 0 {
-		for _, s := range m.LoadBalancerSourceRanges {
-			l = len(s)
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.NodeSelector != nil {
-		l = m.NodeSelector.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.PodAnnotations != nil {
-		l = m.PodAnnotations.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.PodAntiAffinityLabelSelector) > 0 {
-		for _, e := range m.PodAntiAffinityLabelSelector {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.PodAntiAffinityTermLabelSelector) > 0 {
-		for _, e := range m.PodAntiAffinityTermLabelSelector {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.Ports) > 0 {
-		for _, e := range m.Ports {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.ReplicaCount != 0 {
-		n += 2 + sovValuesTypes(uint64(m.ReplicaCount))
-	}
-	if m.Resources != nil {
-		l = m.Resources.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.SecretVolumes) > 0 {
-		for _, e := range m.SecretVolumes {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.ServiceAnnotations != nil {
-		l = m.ServiceAnnotations.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Type)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Zvpn != nil {
-		l = m.Zvpn.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.RollingMaxSurge != nil {
-		l = m.RollingMaxSurge.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.RollingMaxUnavailable != nil {
-		l = m.RollingMaxUnavailable.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ExternalTrafficPolicy)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.Tolerations) > 0 {
-		for _, e := range m.Tolerations {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.IngressPorts) > 0 {
-		for _, e := range m.IngressPorts {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.AdditionalContainers) > 0 {
-		for _, e := range m.AdditionalContainers {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.ConfigVolumes) > 0 {
-		for _, e := range m.ConfigVolumes {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	l = len(m.Name)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.RunAsRoot != nil {
-		l = m.RunAsRoot.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.InjectionTemplate)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ServiceAccount != nil {
-		l = m.ServiceAccount.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *IngressGatewayZvpnConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Suffix)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *MultiClusterConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ClusterName)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.GlobalDomainSuffix)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.IncludeEnvoyFilter != nil {
-		l = m.IncludeEnvoyFilter.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *OutboundTrafficPolicyConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Mode != 0 {
-		n += 1 + sovValuesTypes(uint64(m.Mode))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *PilotConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.AutoscaleEnabled != nil {
-		l = m.AutoscaleEnabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.AutoscaleMin != 0 {
-		n += 1 + sovValuesTypes(uint64(m.AutoscaleMin))
-	}
-	if m.AutoscaleMax != 0 {
-		n += 1 + sovValuesTypes(uint64(m.AutoscaleMax))
-	}
-	if m.ReplicaCount != 0 {
-		n += 1 + sovValuesTypes(uint64(m.ReplicaCount))
-	}
-	l = len(m.Image)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.TraceSampling != 0 {
-		n += 9
-	}
-	if m.Resources != nil {
-		l = m.Resources.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ConfigNamespace)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Cpu != nil {
-		l = m.Cpu.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.NodeSelector != nil {
-		l = m.NodeSelector.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.KeepaliveMaxServerConnectionAge != nil {
-		l = m.KeepaliveMaxServerConnectionAge.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.DeploymentLabels != nil {
-		l = m.DeploymentLabels.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ConfigMap != nil {
-		l = m.ConfigMap.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.UseMCP != nil {
-		l = m.UseMCP.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Env != nil {
-		l = m.Env.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.RollingMaxSurge != nil {
-		l = m.RollingMaxSurge.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.RollingMaxUnavailable != nil {
-		l = m.RollingMaxUnavailable.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.Tolerations) > 0 {
-		for _, e := range m.Tolerations {
-			l = e.Size()
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.EnableProtocolSniffingForOutbound != nil {
-		l = m.EnableProtocolSniffingForOutbound.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.EnableProtocolSniffingForInbound != nil {
-		l = m.EnableProtocolSniffingForInbound.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.PodAnnotations != nil {
-		l = m.PodAnnotations.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ConfigSource != nil {
-		l = m.ConfigSource.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.JwksResolverExtraRootCA)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.Plugins) > 0 {
-		for _, s := range m.Plugins {
-			l = len(s)
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	l = len(m.Hub)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Tag != nil {
-		l = m.Tag.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.PodLabels != nil {
-		l = m.PodLabels.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ServiceAnnotations != nil {
-		l = m.ServiceAnnotations.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *PilotIngressConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.IngressService)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.IngressControllerMode != 0 {
-		n += 1 + sovValuesTypes(uint64(m.IngressControllerMode))
-	}
-	l = len(m.IngressClass)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *PilotPolicyConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TelemetryConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.V2 != nil {
-		l = m.V2.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TelemetryV2Config) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Prometheus != nil {
-		l = m.Prometheus.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Stackdriver != nil {
-		l = m.Stackdriver.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.MetadataExchange != nil {
-		l = m.MetadataExchange.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.AccessLogPolicy != nil {
-		l = m.AccessLogPolicy.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TelemetryV2MetadataExchangeConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.WasmEnabled != nil {
-		l = m.WasmEnabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TelemetryV2PrometheusConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.WasmEnabled != nil {
-		l = m.WasmEnabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ConfigOverride != nil {
-		l = m.ConfigOverride.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Gateway != nil {
-		l = m.Gateway.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.InboundSidecar != nil {
-		l = m.InboundSidecar.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.OutboundSidecar != nil {
-		l = m.OutboundSidecar.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TelemetryV2StackDriverConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Logging != nil {
-		l = m.Logging.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Monitoring != nil {
-		l = m.Monitoring.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Topology != nil {
-		l = m.Topology.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ConfigOverride != nil {
-		l = m.ConfigOverride.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.DisableOutbound != nil {
-		l = m.DisableOutbound.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.OutboundAccessLogging != 0 {
-		n += 1 + sovValuesTypes(uint64(m.OutboundAccessLogging))
-	}
-	if m.InboundAccessLogging != 0 {
-		n += 1 + sovValuesTypes(uint64(m.InboundAccessLogging))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TelemetryV2AccessLogPolicyFilterConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.LogWindowDuration != nil {
-		l = m.LogWindowDuration.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *PilotConfigSource) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if len(m.SubscribedResources) > 0 {
-		for _, s := range m.SubscribedResources {
-			l = len(s)
-			n += 1 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *PortsConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.Name)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Port != 0 {
-		n += 1 + sovValuesTypes(uint64(m.Port))
-	}
-	if m.NodePort != 0 {
-		n += 1 + sovValuesTypes(uint64(m.NodePort))
-	}
-	if m.TargetPort != 0 {
-		n += 1 + sovValuesTypes(uint64(m.TargetPort))
-	}
-	l = len(m.Protocol)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *ProxyConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.AutoInject)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ClusterDomain)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ComponentLogLevel)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.EnableCoreDump != nil {
-		l = m.EnableCoreDump.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ExcludeInboundPorts)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ExcludeIPRanges)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Image)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.IncludeIPRanges)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.LogLevel)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Privileged != nil {
-		l = m.Privileged.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ReadinessInitialDelaySeconds != 0 {
-		n += 2 + sovValuesTypes(uint64(m.ReadinessInitialDelaySeconds))
-	}
-	if m.ReadinessPeriodSeconds != 0 {
-		n += 2 + sovValuesTypes(uint64(m.ReadinessPeriodSeconds))
-	}
-	if m.ReadinessFailureThreshold != 0 {
-		n += 2 + sovValuesTypes(uint64(m.ReadinessFailureThreshold))
-	}
-	if m.StatusPort != 0 {
-		n += 2 + sovValuesTypes(uint64(m.StatusPort))
-	}
-	if m.Resources != nil {
-		l = m.Resources.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Tracer != 0 {
-		n += 2 + sovValuesTypes(uint64(m.Tracer))
-	}
-	l = len(m.ExcludeOutboundPorts)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Lifecycle != nil {
-		l = m.Lifecycle.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.HoldApplicationUntilProxyStarts != nil {
-		l = m.HoldApplicationUntilProxyStarts.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.IncludeInboundPorts)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.IncludeOutboundPorts)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *ProxyInitConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.Image)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Resources != nil {
-		l = m.Resources.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *ResourcesRequestsConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.Cpu)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Memory)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *SDSConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Token != nil {
-		l = m.Token.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *SecretVolume) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.MountPath)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Name)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.SecretName)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *ServiceConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Annotations != nil {
-		l = m.Annotations.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ExternalPort != 0 {
-		n += 1 + sovValuesTypes(uint64(m.ExternalPort))
-	}
-	l = len(m.Name)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Type)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *SidecarInjectorConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.EnableNamespacesByDefault != nil {
-		l = m.EnableNamespacesByDefault.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.UseLegacySelectors != nil {
-		l = m.UseLegacySelectors.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.NeverInjectSelector) > 0 {
-		for _, e := range m.NeverInjectSelector {
-			l = e.Size()
-			n += 1 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if len(m.AlwaysInjectSelector) > 0 {
-		for _, e := range m.AlwaysInjectSelector {
-			l = e.Size()
-			n += 1 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.RewriteAppHTTPProbe != nil {
-		l = m.RewriteAppHTTPProbe.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.InjectedAnnotations != nil {
-		l = m.InjectedAnnotations.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.ObjectSelector != nil {
-		l = m.ObjectSelector.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.InjectionURL)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Templates != nil {
-		l = m.Templates.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.DefaultTemplates) > 0 {
-		for _, s := range m.DefaultTemplates {
-			l = len(s)
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TracerConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Datadog != nil {
-		l = m.Datadog.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Lightstep != nil {
-		l = m.Lightstep.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Zipkin != nil {
-		l = m.Zipkin.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Stackdriver != nil {
-		l = m.Stackdriver.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TracerDatadogConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.Address)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TracerLightStepConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.Address)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.AccessToken)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TracerZipkinConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.Address)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *TracerStackdriverConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Debug != nil {
-		l = m.Debug.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.MaxNumberOfAttributes != 0 {
-		n += 1 + sovValuesTypes(uint64(m.MaxNumberOfAttributes))
-	}
-	if m.MaxNumberOfAnnotations != 0 {
-		n += 1 + sovValuesTypes(uint64(m.MaxNumberOfAnnotations))
-	}
-	if m.MaxNumberOfMessageEvents != 0 {
-		n += 1 + sovValuesTypes(uint64(m.MaxNumberOfMessageEvents))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *BaseConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.EnableCRDTemplates != nil {
-		l = m.EnableCRDTemplates.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.ValidationURL)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.EnableIstioConfigCRDs != nil {
-		l = m.EnableIstioConfigCRDs.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *IstiodRemoteConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	l = len(m.InjectionURL)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.InjectionPath)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *Values) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Cni != nil {
-		l = m.Cni.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Gateways != nil {
-		l = m.Gateways.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Global != nil {
-		l = m.Global.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Pilot != nil {
-		l = m.Pilot.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.SidecarInjectorWebhook != nil {
-		l = m.SidecarInjectorWebhook.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.IstioCni != nil {
-		l = m.IstioCni.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Revision)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.OwnerName)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Telemetry != nil {
-		l = m.Telemetry.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.MeshConfig != nil {
-		l = m.MeshConfig.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.Base != nil {
-		l = m.Base.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.IstiodRemote != nil {
-		l = m.IstiodRemote.Size()
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if len(m.RevisionTags) > 0 {
-		for _, s := range m.RevisionTags {
-			l = len(s)
-			n += 2 + l + sovValuesTypes(uint64(l))
-		}
-	}
-	l = len(m.DefaultRevision)
-	if l > 0 {
-		n += 2 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *ZeroVPNConfig) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Enabled != nil {
-		l = m.Enabled.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	l = len(m.Suffix)
-	if l > 0 {
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func (m *IntOrString) Size() (n int) {
-	if m == nil {
-		return 0
-	}
-	var l int
-	_ = l
-	if m.Type != 0 {
-		n += 1 + sovValuesTypes(uint64(m.Type))
-	}
-	if m.IntVal != nil {
-		l = m.IntVal.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.StrVal != nil {
-		l = m.StrVal.Size()
-		n += 1 + l + sovValuesTypes(uint64(l))
-	}
-	if m.XXX_unrecognized != nil {
-		n += len(m.XXX_unrecognized)
-	}
-	return n
-}
-
-func sovValuesTypes(x uint64) (n int) {
-	return (math_bits.Len64(x|1) + 6) / 7
-}
-func sozValuesTypes(x uint64) (n int) {
-	return sovValuesTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
-}
-func (m *ArchConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ArchConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ArchConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Amd64", wireType)
-			}
-			m.Amd64 = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.Amd64 |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Ppc64Le", wireType)
-			}
-			m.Ppc64Le = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.Ppc64Le |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 3:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field S390X", wireType)
-			}
-			m.S390X = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.S390X |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 4:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Arm64", wireType)
-			}
-			m.Arm64 = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.Arm64 |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *CNIConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: CNIConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: CNIConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Hub", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Hub = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Tag == nil {
-				m.Tag = &types.Value{}
-			}
-			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Image = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PullPolicy", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PullPolicy = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 6:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field CniBinDir", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.CniBinDir = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 7:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field CniConfDir", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.CniConfDir = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 8:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field CniConfFileName", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.CniConfFileName = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 9:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeNamespaces", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ExcludeNamespaces = append(m.ExcludeNamespaces, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		case 10:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodAnnotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.PodAnnotations == nil {
-				m.PodAnnotations = &types.Struct{}
-			}
-			if err := m.PodAnnotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 11:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PspClusterRole", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PspClusterRole = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 12:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field LogLevel", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.LogLevel = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 13:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Repair", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Repair == nil {
-				m.Repair = &CNIRepairConfig{}
-			}
-			if err := m.Repair.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 14:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Chained", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Chained == nil {
-				m.Chained = &types.BoolValue{}
-			}
-			if err := m.Chained.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 15:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Taint", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Taint == nil {
-				m.Taint = &CNITaintConfig{}
-			}
-			if err := m.Taint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 16:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ResourceQuotas", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ResourceQuotas == nil {
-				m.ResourceQuotas = &ResourceQuotas{}
-			}
-			if err := m.ResourceQuotas.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 17:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Resources == nil {
-				m.Resources = &Resources{}
-			}
-			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 18:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Privileged", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Privileged == nil {
-				m.Privileged = &types.BoolValue{}
-			}
-			if err := m.Privileged.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *CNITaintConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: CNITaintConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: CNITaintConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *CNIRepairConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: CNIRepairConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: CNIRepairConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Hub", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Hub = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Tag == nil {
-				m.Tag = &types.Value{}
-			}
-			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Image = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 5:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field LabelPods", wireType)
-			}
-			var v int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				v |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			m.LabelPods = bool(v != 0)
-		case 6:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field CreateEvents", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.CreateEvents = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 7:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DeletePods", wireType)
-			}
-			var v int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				v |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			m.DeletePods = bool(v != 0)
-		case 8:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field BrokenPodLabelKey", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.BrokenPodLabelKey = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 9:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field BrokenPodLabelValue", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.BrokenPodLabelValue = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 10:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InitContainerName", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.InitContainerName = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *ResourceQuotas) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ResourceQuotas: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ResourceQuotas: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Pods", wireType)
-			}
-			m.Pods = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.Pods |= int64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *CPUTargetUtilizationConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: CPUTargetUtilizationConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: CPUTargetUtilizationConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field TargetAverageUtilization", wireType)
-			}
-			m.TargetAverageUtilization = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.TargetAverageUtilization |= int32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *Resources) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: Resources: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: Resources: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Limits", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Limits == nil {
-				m.Limits = make(map[string]string)
-			}
-			var mapkey string
-			var mapvalue string
-			for iNdEx < postIndex {
-				entryPreIndex := iNdEx
-				var wire uint64
-				for shift := uint(0); ; shift += 7 {
-					if shift >= 64 {
-						return ErrIntOverflowValuesTypes
-					}
-					if iNdEx >= l {
-						return io.ErrUnexpectedEOF
-					}
-					b := dAtA[iNdEx]
-					iNdEx++
-					wire |= uint64(b&0x7F) << shift
-					if b < 0x80 {
-						break
-					}
-				}
-				fieldNum := int32(wire >> 3)
-				if fieldNum == 1 {
-					var stringLenmapkey uint64
-					for shift := uint(0); ; shift += 7 {
-						if shift >= 64 {
-							return ErrIntOverflowValuesTypes
-						}
-						if iNdEx >= l {
-							return io.ErrUnexpectedEOF
-						}
-						b := dAtA[iNdEx]
-						iNdEx++
-						stringLenmapkey |= uint64(b&0x7F) << shift
-						if b < 0x80 {
-							break
-						}
-					}
-					intStringLenmapkey := int(stringLenmapkey)
-					if intStringLenmapkey < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					postStringIndexmapkey := iNdEx + intStringLenmapkey
-					if postStringIndexmapkey < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if postStringIndexmapkey > l {
-						return io.ErrUnexpectedEOF
-					}
-					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
-					iNdEx = postStringIndexmapkey
-				} else if fieldNum == 2 {
-					var stringLenmapvalue uint64
-					for shift := uint(0); ; shift += 7 {
-						if shift >= 64 {
-							return ErrIntOverflowValuesTypes
-						}
-						if iNdEx >= l {
-							return io.ErrUnexpectedEOF
-						}
-						b := dAtA[iNdEx]
-						iNdEx++
-						stringLenmapvalue |= uint64(b&0x7F) << shift
-						if b < 0x80 {
-							break
-						}
-					}
-					intStringLenmapvalue := int(stringLenmapvalue)
-					if intStringLenmapvalue < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
-					if postStringIndexmapvalue < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if postStringIndexmapvalue > l {
-						return io.ErrUnexpectedEOF
-					}
-					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
-					iNdEx = postStringIndexmapvalue
-				} else {
-					iNdEx = entryPreIndex
-					skippy, err := skipValuesTypes(dAtA[iNdEx:])
-					if err != nil {
-						return err
-					}
-					if (skippy < 0) || (iNdEx+skippy) < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if (iNdEx + skippy) > postIndex {
-						return io.ErrUnexpectedEOF
-					}
-					iNdEx += skippy
-				}
-			}
-			m.Limits[mapkey] = mapvalue
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Requests", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Requests == nil {
-				m.Requests = make(map[string]string)
-			}
-			var mapkey string
-			var mapvalue string
-			for iNdEx < postIndex {
-				entryPreIndex := iNdEx
-				var wire uint64
-				for shift := uint(0); ; shift += 7 {
-					if shift >= 64 {
-						return ErrIntOverflowValuesTypes
-					}
-					if iNdEx >= l {
-						return io.ErrUnexpectedEOF
-					}
-					b := dAtA[iNdEx]
-					iNdEx++
-					wire |= uint64(b&0x7F) << shift
-					if b < 0x80 {
-						break
-					}
-				}
-				fieldNum := int32(wire >> 3)
-				if fieldNum == 1 {
-					var stringLenmapkey uint64
-					for shift := uint(0); ; shift += 7 {
-						if shift >= 64 {
-							return ErrIntOverflowValuesTypes
-						}
-						if iNdEx >= l {
-							return io.ErrUnexpectedEOF
-						}
-						b := dAtA[iNdEx]
-						iNdEx++
-						stringLenmapkey |= uint64(b&0x7F) << shift
-						if b < 0x80 {
-							break
-						}
-					}
-					intStringLenmapkey := int(stringLenmapkey)
-					if intStringLenmapkey < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					postStringIndexmapkey := iNdEx + intStringLenmapkey
-					if postStringIndexmapkey < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if postStringIndexmapkey > l {
-						return io.ErrUnexpectedEOF
-					}
-					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
-					iNdEx = postStringIndexmapkey
-				} else if fieldNum == 2 {
-					var stringLenmapvalue uint64
-					for shift := uint(0); ; shift += 7 {
-						if shift >= 64 {
-							return ErrIntOverflowValuesTypes
-						}
-						if iNdEx >= l {
-							return io.ErrUnexpectedEOF
-						}
-						b := dAtA[iNdEx]
-						iNdEx++
-						stringLenmapvalue |= uint64(b&0x7F) << shift
-						if b < 0x80 {
-							break
-						}
-					}
-					intStringLenmapvalue := int(stringLenmapvalue)
-					if intStringLenmapvalue < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
-					if postStringIndexmapvalue < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if postStringIndexmapvalue > l {
-						return io.ErrUnexpectedEOF
-					}
-					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
-					iNdEx = postStringIndexmapvalue
-				} else {
-					iNdEx = entryPreIndex
-					skippy, err := skipValuesTypes(dAtA[iNdEx:])
-					if err != nil {
-						return err
-					}
-					if (skippy < 0) || (iNdEx+skippy) < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if (iNdEx + skippy) > postIndex {
-						return io.ErrUnexpectedEOF
-					}
-					iNdEx += skippy
-				}
-			}
-			m.Requests[mapkey] = mapvalue
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *ServiceAccount) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ServiceAccount: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ServiceAccount: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Annotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Annotations == nil {
-				m.Annotations = &types.Struct{}
-			}
-			if err := m.Annotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *DefaultPodDisruptionBudgetConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: DefaultPodDisruptionBudgetConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: DefaultPodDisruptionBudgetConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *DefaultResourcesConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: DefaultResourcesConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: DefaultResourcesConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Requests", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Requests == nil {
-				m.Requests = &ResourcesRequestsConfig{}
-			}
-			if err := m.Requests.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *EgressGatewayConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: EgressGatewayConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: EgressGatewayConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleEnabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.AutoscaleEnabled == nil {
-				m.AutoscaleEnabled = &types.BoolValue{}
-			}
-			if err := m.AutoscaleEnabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleMax", wireType)
-			}
-			m.AutoscaleMax = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.AutoscaleMax |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 3:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleMin", wireType)
-			}
-			m.AutoscaleMin = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.AutoscaleMin |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Cpu", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Cpu == nil {
-				m.Cpu = &CPUTargetUtilizationConfig{}
-			}
-			if err := m.Cpu.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 7:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 8:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Env", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Env == nil {
-				m.Env = &types.Struct{}
-			}
-			if err := m.Env.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 9:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Labels", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Labels == nil {
-				m.Labels = make(map[string]string)
-			}
-			var mapkey string
-			var mapvalue string
-			for iNdEx < postIndex {
-				entryPreIndex := iNdEx
-				var wire uint64
-				for shift := uint(0); ; shift += 7 {
-					if shift >= 64 {
-						return ErrIntOverflowValuesTypes
-					}
-					if iNdEx >= l {
-						return io.ErrUnexpectedEOF
-					}
-					b := dAtA[iNdEx]
-					iNdEx++
-					wire |= uint64(b&0x7F) << shift
-					if b < 0x80 {
-						break
-					}
-				}
-				fieldNum := int32(wire >> 3)
-				if fieldNum == 1 {
-					var stringLenmapkey uint64
-					for shift := uint(0); ; shift += 7 {
-						if shift >= 64 {
-							return ErrIntOverflowValuesTypes
-						}
-						if iNdEx >= l {
-							return io.ErrUnexpectedEOF
-						}
-						b := dAtA[iNdEx]
-						iNdEx++
-						stringLenmapkey |= uint64(b&0x7F) << shift
-						if b < 0x80 {
-							break
-						}
-					}
-					intStringLenmapkey := int(stringLenmapkey)
-					if intStringLenmapkey < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					postStringIndexmapkey := iNdEx + intStringLenmapkey
-					if postStringIndexmapkey < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if postStringIndexmapkey > l {
-						return io.ErrUnexpectedEOF
-					}
-					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
-					iNdEx = postStringIndexmapkey
-				} else if fieldNum == 2 {
-					var stringLenmapvalue uint64
-					for shift := uint(0); ; shift += 7 {
-						if shift >= 64 {
-							return ErrIntOverflowValuesTypes
-						}
-						if iNdEx >= l {
-							return io.ErrUnexpectedEOF
-						}
-						b := dAtA[iNdEx]
-						iNdEx++
-						stringLenmapvalue |= uint64(b&0x7F) << shift
-						if b < 0x80 {
-							break
-						}
-					}
-					intStringLenmapvalue := int(stringLenmapvalue)
-					if intStringLenmapvalue < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
-					if postStringIndexmapvalue < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if postStringIndexmapvalue > l {
-						return io.ErrUnexpectedEOF
-					}
-					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
-					iNdEx = postStringIndexmapvalue
-				} else {
-					iNdEx = entryPreIndex
-					skippy, err := skipValuesTypes(dAtA[iNdEx:])
-					if err != nil {
-						return err
-					}
-					if (skippy < 0) || (iNdEx+skippy) < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if (iNdEx + skippy) > postIndex {
-						return io.ErrUnexpectedEOF
-					}
-					iNdEx += skippy
-				}
-			}
-			m.Labels[mapkey] = mapvalue
-			iNdEx = postIndex
-		case 10:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field NodeSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.NodeSelector == nil {
-				m.NodeSelector = &types.Struct{}
-			}
-			if err := m.NodeSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 11:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodAnnotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.PodAnnotations == nil {
-				m.PodAnnotations = &types.Struct{}
-			}
-			if err := m.PodAnnotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 12:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodAntiAffinityLabelSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PodAntiAffinityLabelSelector = append(m.PodAntiAffinityLabelSelector, &types.Struct{})
-			if err := m.PodAntiAffinityLabelSelector[len(m.PodAntiAffinityLabelSelector)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 13:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodAntiAffinityTermLabelSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PodAntiAffinityTermLabelSelector = append(m.PodAntiAffinityTermLabelSelector, &types.Struct{})
-			if err := m.PodAntiAffinityTermLabelSelector[len(m.PodAntiAffinityTermLabelSelector)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 14:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Ports", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Ports = append(m.Ports, &PortsConfig{})
-			if err := m.Ports[len(m.Ports)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 15:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Resources == nil {
-				m.Resources = &Resources{}
-			}
-			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 16:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field SecretVolumes", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.SecretVolumes = append(m.SecretVolumes, &SecretVolume{})
-			if err := m.SecretVolumes[len(m.SecretVolumes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 17:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ServiceAnnotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ServiceAnnotations == nil {
-				m.ServiceAnnotations = &types.Struct{}
-			}
-			if err := m.ServiceAnnotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 18:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Type = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 19:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Zvpn", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Zvpn == nil {
-				m.Zvpn = &ZeroVPNConfig{}
-			}
-			if err := m.Zvpn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 20:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tolerations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Tolerations = append(m.Tolerations, &types.Struct{})
-			if err := m.Tolerations[len(m.Tolerations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 21:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RollingMaxSurge", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RollingMaxSurge == nil {
-				m.RollingMaxSurge = &IntOrString{}
-			}
-			if err := m.RollingMaxSurge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 22:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RollingMaxUnavailable", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RollingMaxUnavailable == nil {
-				m.RollingMaxUnavailable = &IntOrString{}
-			}
-			if err := m.RollingMaxUnavailable.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 23:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigVolumes", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ConfigVolumes = append(m.ConfigVolumes, &types.Struct{})
-			if err := m.ConfigVolumes[len(m.ConfigVolumes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 24:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AdditionalContainers", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.AdditionalContainers = append(m.AdditionalContainers, &types.Struct{})
-			if err := m.AdditionalContainers[len(m.AdditionalContainers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 25:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Name = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 26:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RunAsRoot", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RunAsRoot == nil {
-				m.RunAsRoot = &types.BoolValue{}
-			}
-			if err := m.RunAsRoot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 27:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InjectionTemplate", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.InjectionTemplate = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 28:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ServiceAccount", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ServiceAccount == nil {
-				m.ServiceAccount = &ServiceAccount{}
-			}
-			if err := m.ServiceAccount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *GatewaysConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: GatewaysConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: GatewaysConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IstioEgressgateway", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.IstioEgressgateway == nil {
-				m.IstioEgressgateway = &EgressGatewayConfig{}
-			}
-			if err := m.IstioEgressgateway.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IstioIngressgateway", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.IstioIngressgateway == nil {
-				m.IstioIngressgateway = &IngressGatewayConfig{}
-			}
-			if err := m.IstioIngressgateway.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *GlobalConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: GlobalConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: GlobalConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Arch", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Arch == nil {
-				m.Arch = &ArchConfig{}
-			}
-			if err := m.Arch.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigValidation", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ConfigValidation == nil {
-				m.ConfigValidation = &types.BoolValue{}
-			}
-			if err := m.ConfigValidation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 6:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DefaultNodeSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.DefaultNodeSelector == nil {
-				m.DefaultNodeSelector = &types.Struct{}
-			}
-			if err := m.DefaultNodeSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 7:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DefaultPodDisruptionBudget", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.DefaultPodDisruptionBudget == nil {
-				m.DefaultPodDisruptionBudget = &DefaultPodDisruptionBudgetConfig{}
-			}
-			if err := m.DefaultPodDisruptionBudget.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 9:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DefaultResources", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.DefaultResources == nil {
-				m.DefaultResources = &DefaultResourcesConfig{}
-			}
-			if err := m.DefaultResources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 12:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Hub", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Hub = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 13:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ImagePullPolicy", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ImagePullPolicy = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 14:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IstioNamespace", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.IstioNamespace = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 17:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Logging", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Logging == nil {
-				m.Logging = &GlobalLoggingConfig{}
-			}
-			if err := m.Logging.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 19:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MeshNetworks", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.MeshNetworks == nil {
-				m.MeshNetworks = &types.Struct{}
-			}
-			if err := m.MeshNetworks.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 22:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MultiCluster", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.MultiCluster == nil {
-				m.MultiCluster = &MultiClusterConfig{}
-			}
-			if err := m.MultiCluster.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 23:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field OneNamespace", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.OneNamespace == nil {
-				m.OneNamespace = &types.BoolValue{}
-			}
-			if err := m.OneNamespace.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 27:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PriorityClassName", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PriorityClassName = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 28:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Proxy", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Proxy == nil {
-				m.Proxy = &ProxyConfig{}
-			}
-			if err := m.Proxy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 29:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ProxyInit", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ProxyInit == nil {
-				m.ProxyInit = &ProxyInitConfig{}
-			}
-			if err := m.ProxyInit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 30:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Sds", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Sds == nil {
-				m.Sds = &SDSConfig{}
-			}
-			if err := m.Sds.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 31:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Tag == nil {
-				m.Tag = &types.Value{}
-			}
-			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 33:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tracer", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Tracer == nil {
-				m.Tracer = &TracerConfig{}
-			}
-			if err := m.Tracer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 35:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field UseMCP", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.UseMCP == nil {
-				m.UseMCP = &types.BoolValue{}
-			}
-			if err := m.UseMCP.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 36:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field LogAsJson", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.LogAsJson == nil {
-				m.LogAsJson = &types.BoolValue{}
-			}
-			if err := m.LogAsJson.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 37:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ImagePullSecrets", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ImagePullSecrets = append(m.ImagePullSecrets, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		case 38:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field OmitSidecarInjectorConfigMap", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.OmitSidecarInjectorConfigMap == nil {
-				m.OmitSidecarInjectorConfigMap = &types.BoolValue{}
-			}
-			if err := m.OmitSidecarInjectorConfigMap.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 39:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Network", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Network = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 41:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field OperatorManageWebhooks", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.OperatorManageWebhooks == nil {
-				m.OperatorManageWebhooks = &types.BoolValue{}
-			}
-			if err := m.OperatorManageWebhooks.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 43:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodDNSSearchNamespaces", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PodDNSSearchNamespaces = append(m.PodDNSSearchNamespaces, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		case 48:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RemotePilotAddress", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.RemotePilotAddress = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 50:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigRootNamespace", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ConfigRootNamespace = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 52:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DefaultConfigVisibilitySettings", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.DefaultConfigVisibilitySettings = append(m.DefaultConfigVisibilitySettings, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		case 53:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MeshID", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.MeshID = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 54:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Istiod", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Istiod == nil {
-				m.Istiod = &IstiodConfig{}
-			}
-			if err := m.Istiod.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 55:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DefaultTolerations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.DefaultTolerations = append(m.DefaultTolerations, &types.Struct{})
-			if err := m.DefaultTolerations[len(m.DefaultTolerations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 56:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PilotCertProvider", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PilotCertProvider = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 57:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field JwtPolicy", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.JwtPolicy = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 58:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Sts", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Sts == nil {
-				m.Sts = &STSConfig{}
-			}
-			if err := m.Sts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 59:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Revision = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 60:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MountMtlsCerts", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.MountMtlsCerts == nil {
-				m.MountMtlsCerts = &types.BoolValue{}
-			}
-			if err := m.MountMtlsCerts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 61:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field CaAddress", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.CaAddress = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 62:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ExternalIstiod", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ExternalIstiod == nil {
-				m.ExternalIstiod = &types.BoolValue{}
-			}
-			if err := m.ExternalIstiod.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 64:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigCluster", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ConfigCluster == nil {
-				m.ConfigCluster = &types.BoolValue{}
-			}
-			if err := m.ConfigCluster.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 65:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field CaName", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.CaName = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *STSConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: STSConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: STSConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ServicePort", wireType)
-			}
-			m.ServicePort = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.ServicePort |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *IstiodConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: IstiodConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: IstiodConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field EnableAnalysis", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.EnableAnalysis == nil {
-				m.EnableAnalysis = &types.BoolValue{}
-			}
-			if err := m.EnableAnalysis.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *GlobalLoggingConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: GlobalLoggingConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: GlobalLoggingConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Level = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *IngressGatewayConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: IngressGatewayConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: IngressGatewayConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleEnabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.AutoscaleEnabled == nil {
-				m.AutoscaleEnabled = &types.BoolValue{}
-			}
-			if err := m.AutoscaleEnabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleMax", wireType)
-			}
-			m.AutoscaleMax = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.AutoscaleMax |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 3:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleMin", wireType)
-			}
-			m.AutoscaleMin = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.AutoscaleMin |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Cpu", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Cpu == nil {
-				m.Cpu = &CPUTargetUtilizationConfig{}
-			}
-			if err := m.Cpu.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 6:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field CustomService", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.CustomService == nil {
-				m.CustomService = &types.BoolValue{}
-			}
-			if err := m.CustomService.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 10:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 11:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Env", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Env == nil {
-				m.Env = &types.Struct{}
-			}
-			if err := m.Env.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 15:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Labels", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Labels == nil {
-				m.Labels = make(map[string]string)
-			}
-			var mapkey string
-			var mapvalue string
-			for iNdEx < postIndex {
-				entryPreIndex := iNdEx
-				var wire uint64
-				for shift := uint(0); ; shift += 7 {
-					if shift >= 64 {
-						return ErrIntOverflowValuesTypes
-					}
-					if iNdEx >= l {
-						return io.ErrUnexpectedEOF
-					}
-					b := dAtA[iNdEx]
-					iNdEx++
-					wire |= uint64(b&0x7F) << shift
-					if b < 0x80 {
-						break
-					}
-				}
-				fieldNum := int32(wire >> 3)
-				if fieldNum == 1 {
-					var stringLenmapkey uint64
-					for shift := uint(0); ; shift += 7 {
-						if shift >= 64 {
-							return ErrIntOverflowValuesTypes
-						}
-						if iNdEx >= l {
-							return io.ErrUnexpectedEOF
-						}
-						b := dAtA[iNdEx]
-						iNdEx++
-						stringLenmapkey |= uint64(b&0x7F) << shift
-						if b < 0x80 {
-							break
-						}
-					}
-					intStringLenmapkey := int(stringLenmapkey)
-					if intStringLenmapkey < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					postStringIndexmapkey := iNdEx + intStringLenmapkey
-					if postStringIndexmapkey < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if postStringIndexmapkey > l {
-						return io.ErrUnexpectedEOF
-					}
-					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
-					iNdEx = postStringIndexmapkey
-				} else if fieldNum == 2 {
-					var stringLenmapvalue uint64
-					for shift := uint(0); ; shift += 7 {
-						if shift >= 64 {
-							return ErrIntOverflowValuesTypes
-						}
-						if iNdEx >= l {
-							return io.ErrUnexpectedEOF
-						}
-						b := dAtA[iNdEx]
-						iNdEx++
-						stringLenmapvalue |= uint64(b&0x7F) << shift
-						if b < 0x80 {
-							break
-						}
-					}
-					intStringLenmapvalue := int(stringLenmapvalue)
-					if intStringLenmapvalue < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
-					if postStringIndexmapvalue < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if postStringIndexmapvalue > l {
-						return io.ErrUnexpectedEOF
-					}
-					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
-					iNdEx = postStringIndexmapvalue
-				} else {
-					iNdEx = entryPreIndex
-					skippy, err := skipValuesTypes(dAtA[iNdEx:])
-					if err != nil {
-						return err
-					}
-					if (skippy < 0) || (iNdEx+skippy) < 0 {
-						return ErrInvalidLengthValuesTypes
-					}
-					if (iNdEx + skippy) > postIndex {
-						return io.ErrUnexpectedEOF
-					}
-					iNdEx += skippy
-				}
-			}
-			m.Labels[mapkey] = mapvalue
-			iNdEx = postIndex
-		case 16:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field LoadBalancerIP", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.LoadBalancerIP = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 17:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field LoadBalancerSourceRanges", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.LoadBalancerSourceRanges = append(m.LoadBalancerSourceRanges, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		case 19:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field NodeSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.NodeSelector == nil {
-				m.NodeSelector = &types.Struct{}
-			}
-			if err := m.NodeSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 20:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodAnnotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.PodAnnotations == nil {
-				m.PodAnnotations = &types.Struct{}
-			}
-			if err := m.PodAnnotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 21:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodAntiAffinityLabelSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PodAntiAffinityLabelSelector = append(m.PodAntiAffinityLabelSelector, &types.Struct{})
-			if err := m.PodAntiAffinityLabelSelector[len(m.PodAntiAffinityLabelSelector)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 22:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodAntiAffinityTermLabelSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.PodAntiAffinityTermLabelSelector = append(m.PodAntiAffinityTermLabelSelector, &types.Struct{})
-			if err := m.PodAntiAffinityTermLabelSelector[len(m.PodAntiAffinityTermLabelSelector)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 23:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Ports", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Ports = append(m.Ports, &PortsConfig{})
-			if err := m.Ports[len(m.Ports)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 24:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ReplicaCount", wireType)
-			}
-			m.ReplicaCount = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.ReplicaCount |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 25:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Resources == nil {
-				m.Resources = &types.Struct{}
-			}
-			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 27:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field SecretVolumes", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.SecretVolumes = append(m.SecretVolumes, &SecretVolume{})
-			if err := m.SecretVolumes[len(m.SecretVolumes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 28:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ServiceAnnotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ServiceAnnotations == nil {
-				m.ServiceAnnotations = &types.Struct{}
-			}
-			if err := m.ServiceAnnotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 29:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Type = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 30:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Zvpn", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Zvpn == nil {
-				m.Zvpn = &IngressGatewayZvpnConfig{}
-			}
-			if err := m.Zvpn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 31:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RollingMaxSurge", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RollingMaxSurge == nil {
-				m.RollingMaxSurge = &IntOrString{}
-			}
-			if err := m.RollingMaxSurge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 32:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RollingMaxUnavailable", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RollingMaxUnavailable == nil {
-				m.RollingMaxUnavailable = &IntOrString{}
-			}
-			if err := m.RollingMaxUnavailable.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 34:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ExternalTrafficPolicy", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ExternalTrafficPolicy = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 35:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tolerations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Tolerations = append(m.Tolerations, &types.Struct{})
-			if err := m.Tolerations[len(m.Tolerations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 36:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IngressPorts", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.IngressPorts = append(m.IngressPorts, &types.Struct{})
-			if err := m.IngressPorts[len(m.IngressPorts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 37:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AdditionalContainers", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.AdditionalContainers = append(m.AdditionalContainers, &types.Struct{})
-			if err := m.AdditionalContainers[len(m.AdditionalContainers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 38:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigVolumes", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ConfigVolumes = append(m.ConfigVolumes, &types.Struct{})
-			if err := m.ConfigVolumes[len(m.ConfigVolumes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 44:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Name = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 45:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RunAsRoot", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RunAsRoot == nil {
-				m.RunAsRoot = &types.BoolValue{}
-			}
-			if err := m.RunAsRoot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 46:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InjectionTemplate", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.InjectionTemplate = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 47:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ServiceAccount", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ServiceAccount == nil {
-				m.ServiceAccount = &ServiceAccount{}
-			}
-			if err := m.ServiceAccount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *IngressGatewayZvpnConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: IngressGatewayZvpnConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: IngressGatewayZvpnConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Suffix", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Suffix = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *MultiClusterConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: MultiClusterConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: MultiClusterConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ClusterName", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ClusterName = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field GlobalDomainSuffix", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.GlobalDomainSuffix = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IncludeEnvoyFilter", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.IncludeEnvoyFilter == nil {
-				m.IncludeEnvoyFilter = &types.BoolValue{}
-			}
-			if err := m.IncludeEnvoyFilter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *OutboundTrafficPolicyConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: OutboundTrafficPolicyConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: OutboundTrafficPolicyConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Mode", wireType)
-			}
-			m.Mode = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.Mode |= OutboundTrafficPolicyConfig_Mode(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *PilotConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: PilotConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: PilotConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleEnabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.AutoscaleEnabled == nil {
-				m.AutoscaleEnabled = &types.BoolValue{}
-			}
-			if err := m.AutoscaleEnabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleMin", wireType)
-			}
-			m.AutoscaleMin = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.AutoscaleMin |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 4:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoscaleMax", wireType)
-			}
-			m.AutoscaleMax = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.AutoscaleMax |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 5:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ReplicaCount", wireType)
-			}
-			m.ReplicaCount = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.ReplicaCount |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 6:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Image = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 8:
-			if wireType != 1 {
-				return fmt.Errorf("proto: wrong wireType = %d for field TraceSampling", wireType)
-			}
-			var v uint64
-			if (iNdEx + 8) > l {
-				return io.ErrUnexpectedEOF
-			}
-			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
-			iNdEx += 8
-			m.TraceSampling = float64(math.Float64frombits(v))
-		case 9:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Resources == nil {
-				m.Resources = &Resources{}
-			}
-			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 10:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigNamespace", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ConfigNamespace = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 11:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Cpu", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Cpu == nil {
-				m.Cpu = &CPUTargetUtilizationConfig{}
-			}
-			if err := m.Cpu.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 12:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field NodeSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.NodeSelector == nil {
-				m.NodeSelector = &types.Struct{}
-			}
-			if err := m.NodeSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 13:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field KeepaliveMaxServerConnectionAge", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.KeepaliveMaxServerConnectionAge == nil {
-				m.KeepaliveMaxServerConnectionAge = &types.Duration{}
-			}
-			if err := m.KeepaliveMaxServerConnectionAge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 14:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentLabels", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.DeploymentLabels == nil {
-				m.DeploymentLabels = &types.Struct{}
-			}
-			if err := m.DeploymentLabels.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 18:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigMap", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ConfigMap == nil {
-				m.ConfigMap = &types.BoolValue{}
-			}
-			if err := m.ConfigMap.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 20:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field UseMCP", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.UseMCP == nil {
-				m.UseMCP = &types.BoolValue{}
-			}
-			if err := m.UseMCP.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 21:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Env", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Env == nil {
-				m.Env = &types.Struct{}
-			}
-			if err := m.Env.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 24:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RollingMaxSurge", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RollingMaxSurge == nil {
-				m.RollingMaxSurge = &IntOrString{}
-			}
-			if err := m.RollingMaxSurge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 25:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RollingMaxUnavailable", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RollingMaxUnavailable == nil {
-				m.RollingMaxUnavailable = &IntOrString{}
-			}
-			if err := m.RollingMaxUnavailable.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 26:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tolerations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Tolerations = append(m.Tolerations, &types.Struct{})
-			if err := m.Tolerations[len(m.Tolerations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 28:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field EnableProtocolSniffingForOutbound", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.EnableProtocolSniffingForOutbound == nil {
-				m.EnableProtocolSniffingForOutbound = &types.BoolValue{}
-			}
-			if err := m.EnableProtocolSniffingForOutbound.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 29:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field EnableProtocolSniffingForInbound", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.EnableProtocolSniffingForInbound == nil {
-				m.EnableProtocolSniffingForInbound = &types.BoolValue{}
-			}
-			if err := m.EnableProtocolSniffingForInbound.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 30:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodAnnotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.PodAnnotations == nil {
-				m.PodAnnotations = &types.Struct{}
-			}
-			if err := m.PodAnnotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 31:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigSource", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ConfigSource == nil {
-				m.ConfigSource = &PilotConfigSource{}
-			}
-			if err := m.ConfigSource.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 32:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field JwksResolverExtraRootCA", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.JwksResolverExtraRootCA = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 33:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Plugins", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Plugins = append(m.Plugins, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		case 34:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Hub", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Hub = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 35:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Tag == nil {
-				m.Tag = &types.Value{}
-			}
-			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 36:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field PodLabels", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.PodLabels == nil {
-				m.PodLabels = &types.Struct{}
-			}
-			if err := m.PodLabels.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 37:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ServiceAnnotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ServiceAnnotations == nil {
-				m.ServiceAnnotations = &types.Struct{}
-			}
-			if err := m.ServiceAnnotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *PilotIngressConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: PilotIngressConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: PilotIngressConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IngressService", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.IngressService = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IngressControllerMode", wireType)
-			}
-			m.IngressControllerMode = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.IngressControllerMode |= IngressControllerMode(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IngressClass", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.IngressClass = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *PilotPolicyConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: PilotPolicyConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: PilotPolicyConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TelemetryConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TelemetryConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TelemetryConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field V2", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.V2 == nil {
-				m.V2 = &TelemetryV2Config{}
-			}
-			if err := m.V2.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TelemetryV2Config) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TelemetryV2Config: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TelemetryV2Config: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Prometheus", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Prometheus == nil {
-				m.Prometheus = &TelemetryV2PrometheusConfig{}
-			}
-			if err := m.Prometheus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Stackdriver", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Stackdriver == nil {
-				m.Stackdriver = &TelemetryV2StackDriverConfig{}
-			}
-			if err := m.Stackdriver.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MetadataExchange", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.MetadataExchange == nil {
-				m.MetadataExchange = &TelemetryV2MetadataExchangeConfig{}
-			}
-			if err := m.MetadataExchange.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AccessLogPolicy", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.AccessLogPolicy == nil {
-				m.AccessLogPolicy = &TelemetryV2AccessLogPolicyFilterConfig{}
-			}
-			if err := m.AccessLogPolicy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TelemetryV2MetadataExchangeConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TelemetryV2MetadataExchangeConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TelemetryV2MetadataExchangeConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field WasmEnabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.WasmEnabled == nil {
-				m.WasmEnabled = &types.BoolValue{}
-			}
-			if err := m.WasmEnabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TelemetryV2PrometheusConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TelemetryV2PrometheusConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TelemetryV2PrometheusConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field WasmEnabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.WasmEnabled == nil {
-				m.WasmEnabled = &types.BoolValue{}
-			}
-			if err := m.WasmEnabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigOverride", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ConfigOverride == nil {
-				m.ConfigOverride = &TelemetryV2PrometheusConfig_ConfigOverride{}
-			}
-			if err := m.ConfigOverride.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TelemetryV2PrometheusConfig_ConfigOverride) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ConfigOverride: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ConfigOverride: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Gateway", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Gateway == nil {
-				m.Gateway = &types.Struct{}
-			}
-			if err := m.Gateway.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InboundSidecar", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.InboundSidecar == nil {
-				m.InboundSidecar = &types.Struct{}
-			}
-			if err := m.InboundSidecar.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field OutboundSidecar", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.OutboundSidecar == nil {
-				m.OutboundSidecar = &types.Struct{}
-			}
-			if err := m.OutboundSidecar.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TelemetryV2StackDriverConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TelemetryV2StackDriverConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TelemetryV2StackDriverConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Logging", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Logging == nil {
-				m.Logging = &types.BoolValue{}
-			}
-			if err := m.Logging.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Monitoring", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Monitoring == nil {
-				m.Monitoring = &types.BoolValue{}
-			}
-			if err := m.Monitoring.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Topology", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Topology == nil {
-				m.Topology = &types.BoolValue{}
-			}
-			if err := m.Topology.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ConfigOverride", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ConfigOverride == nil {
-				m.ConfigOverride = &types.Struct{}
-			}
-			if err := m.ConfigOverride.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 6:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DisableOutbound", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.DisableOutbound == nil {
-				m.DisableOutbound = &types.BoolValue{}
-			}
-			if err := m.DisableOutbound.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 7:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field OutboundAccessLogging", wireType)
-			}
-			m.OutboundAccessLogging = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.OutboundAccessLogging |= TelemetryV2StackDriverConfig_AccessLogging(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 8:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InboundAccessLogging", wireType)
-			}
-			m.InboundAccessLogging = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.InboundAccessLogging |= TelemetryV2StackDriverConfig_AccessLogging(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TelemetryV2AccessLogPolicyFilterConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TelemetryV2AccessLogPolicyFilterConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TelemetryV2AccessLogPolicyFilterConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field LogWindowDuration", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.LogWindowDuration == nil {
-				m.LogWindowDuration = &types.Duration{}
-			}
-			if err := m.LogWindowDuration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *PilotConfigSource) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: PilotConfigSource: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: PilotConfigSource: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field SubscribedResources", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.SubscribedResources = append(m.SubscribedResources, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *PortsConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: PortsConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: PortsConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Name = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Port", wireType)
-			}
-			m.Port = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.Port |= int32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 3:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field NodePort", wireType)
-			}
-			m.NodePort = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.NodePort |= int32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 4:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field TargetPort", wireType)
-			}
-			m.TargetPort = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.TargetPort |= int32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Protocol = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *ProxyConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ProxyConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ProxyConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AutoInject", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.AutoInject = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ClusterDomain", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ClusterDomain = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 6:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ComponentLogLevel", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ComponentLogLevel = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 9:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field EnableCoreDump", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.EnableCoreDump == nil {
-				m.EnableCoreDump = &types.BoolValue{}
-			}
-			if err := m.EnableCoreDump.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 12:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeInboundPorts", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ExcludeInboundPorts = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 13:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeIPRanges", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ExcludeIPRanges = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 14:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Image = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 16:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IncludeIPRanges", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.IncludeIPRanges = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 18:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field LogLevel", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.LogLevel = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 19:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Privileged", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Privileged == nil {
-				m.Privileged = &types.BoolValue{}
-			}
-			if err := m.Privileged.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 20:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ReadinessInitialDelaySeconds", wireType)
-			}
-			m.ReadinessInitialDelaySeconds = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.ReadinessInitialDelaySeconds |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 21:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ReadinessPeriodSeconds", wireType)
-			}
-			m.ReadinessPeriodSeconds = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.ReadinessPeriodSeconds |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 22:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ReadinessFailureThreshold", wireType)
-			}
-			m.ReadinessFailureThreshold = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.ReadinessFailureThreshold |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 23:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field StatusPort", wireType)
-			}
-			m.StatusPort = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.StatusPort |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 24:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Resources == nil {
-				m.Resources = &Resources{}
-			}
-			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 25:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Tracer", wireType)
-			}
-			m.Tracer = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.Tracer |= Tracer(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 28:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeOutboundPorts", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ExcludeOutboundPorts = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 36:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Lifecycle", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Lifecycle == nil {
-				m.Lifecycle = &types.Struct{}
-			}
-			if err := m.Lifecycle.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 37:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field HoldApplicationUntilProxyStarts", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.HoldApplicationUntilProxyStarts == nil {
-				m.HoldApplicationUntilProxyStarts = &types.BoolValue{}
-			}
-			if err := m.HoldApplicationUntilProxyStarts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 38:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IncludeInboundPorts", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.IncludeInboundPorts = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 39:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IncludeOutboundPorts", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.IncludeOutboundPorts = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *ProxyInitConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ProxyInitConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ProxyInitConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Image = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Resources == nil {
-				m.Resources = &Resources{}
-			}
-			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *ResourcesRequestsConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ResourcesRequestsConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ResourcesRequestsConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Cpu", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Cpu = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Memory", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Memory = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *SDSConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: SDSConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: SDSConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Token == nil {
-				m.Token = &types.Struct{}
-			}
-			if err := m.Token.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *SecretVolume) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: SecretVolume: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: SecretVolume: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MountPath", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.MountPath = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Name = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field SecretName", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.SecretName = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *ServiceConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ServiceConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ServiceConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Annotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Annotations == nil {
-				m.Annotations = &types.Struct{}
-			}
-			if err := m.Annotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ExternalPort", wireType)
-			}
-			m.ExternalPort = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.ExternalPort |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Name = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 18:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Type = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *SidecarInjectorConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: SidecarInjectorConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: SidecarInjectorConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field EnableNamespacesByDefault", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.EnableNamespacesByDefault == nil {
-				m.EnableNamespacesByDefault = &types.BoolValue{}
-			}
-			if err := m.EnableNamespacesByDefault.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field UseLegacySelectors", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.UseLegacySelectors == nil {
-				m.UseLegacySelectors = &types.BoolValue{}
-			}
-			if err := m.UseLegacySelectors.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 11:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field NeverInjectSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.NeverInjectSelector = append(m.NeverInjectSelector, &types.Struct{})
-			if err := m.NeverInjectSelector[len(m.NeverInjectSelector)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 12:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AlwaysInjectSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.AlwaysInjectSelector = append(m.AlwaysInjectSelector, &types.Struct{})
-			if err := m.AlwaysInjectSelector[len(m.AlwaysInjectSelector)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 16:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RewriteAppHTTPProbe", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.RewriteAppHTTPProbe == nil {
-				m.RewriteAppHTTPProbe = &types.BoolValue{}
-			}
-			if err := m.RewriteAppHTTPProbe.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 19:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InjectedAnnotations", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.InjectedAnnotations == nil {
-				m.InjectedAnnotations = &types.Struct{}
-			}
-			if err := m.InjectedAnnotations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 21:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ObjectSelector", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.ObjectSelector == nil {
-				m.ObjectSelector = &types.Struct{}
-			}
-			if err := m.ObjectSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 22:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InjectionURL", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.InjectionURL = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 23:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Templates", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Templates == nil {
-				m.Templates = &types.Struct{}
-			}
-			if err := m.Templates.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 24:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DefaultTemplates", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.DefaultTemplates = append(m.DefaultTemplates, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TracerConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TracerConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TracerConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Datadog", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Datadog == nil {
-				m.Datadog = &TracerDatadogConfig{}
-			}
-			if err := m.Datadog.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Lightstep", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Lightstep == nil {
-				m.Lightstep = &TracerLightStepConfig{}
-			}
-			if err := m.Lightstep.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Zipkin", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Zipkin == nil {
-				m.Zipkin = &TracerZipkinConfig{}
-			}
-			if err := m.Zipkin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 4:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Stackdriver", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Stackdriver == nil {
-				m.Stackdriver = &TracerStackdriverConfig{}
-			}
-			if err := m.Stackdriver.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TracerDatadogConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TracerDatadogConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TracerDatadogConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Address = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TracerLightStepConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TracerLightStepConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TracerLightStepConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Address = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.AccessToken = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TracerZipkinConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TracerZipkinConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TracerZipkinConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Address = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *TracerStackdriverConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: TracerStackdriverConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: TracerStackdriverConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Debug", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Debug == nil {
-				m.Debug = &types.BoolValue{}
-			}
-			if err := m.Debug.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MaxNumberOfAttributes", wireType)
-			}
-			m.MaxNumberOfAttributes = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.MaxNumberOfAttributes |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 3:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MaxNumberOfAnnotations", wireType)
-			}
-			m.MaxNumberOfAnnotations = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.MaxNumberOfAnnotations |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 4:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MaxNumberOfMessageEvents", wireType)
-			}
-			m.MaxNumberOfMessageEvents = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.MaxNumberOfMessageEvents |= uint32(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *BaseConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: BaseConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: BaseConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field EnableCRDTemplates", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.EnableCRDTemplates == nil {
-				m.EnableCRDTemplates = &types.BoolValue{}
-			}
-			if err := m.EnableCRDTemplates.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field ValidationURL", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.ValidationURL = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field EnableIstioConfigCRDs", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.EnableIstioConfigCRDs == nil {
-				m.EnableIstioConfigCRDs = &types.BoolValue{}
-			}
-			if err := m.EnableIstioConfigCRDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *IstiodRemoteConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: IstiodRemoteConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: IstiodRemoteConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InjectionURL", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.InjectionURL = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field InjectionPath", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.InjectionPath = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *Values) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: Values: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: Values: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Cni", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Cni == nil {
-				m.Cni = &CNIConfig{}
-			}
-			if err := m.Cni.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 5:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Gateways", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Gateways == nil {
-				m.Gateways = &GatewaysConfig{}
-			}
-			if err := m.Gateways.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 6:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Global", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Global == nil {
-				m.Global = &GlobalConfig{}
-			}
-			if err := m.Global.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 10:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Pilot", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Pilot == nil {
-				m.Pilot = &PilotConfig{}
-			}
-			if err := m.Pilot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 13:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field SidecarInjectorWebhook", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.SidecarInjectorWebhook == nil {
-				m.SidecarInjectorWebhook = &SidecarInjectorConfig{}
-			}
-			if err := m.SidecarInjectorWebhook.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 19:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IstioCni", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.IstioCni == nil {
-				m.IstioCni = &CNIConfig{}
-			}
-			if err := m.IstioCni.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 21:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Revision = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 22:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field OwnerName", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.OwnerName = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 23:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Telemetry", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Telemetry == nil {
-				m.Telemetry = &TelemetryConfig{}
-			}
-			if err := m.Telemetry.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 36:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field MeshConfig", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.MeshConfig == nil {
-				m.MeshConfig = &types.Value{}
-			}
-			if err := m.MeshConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 37:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Base == nil {
-				m.Base = &BaseConfig{}
-			}
-			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 38:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IstiodRemote", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.IstiodRemote == nil {
-				m.IstiodRemote = &IstiodRemoteConfig{}
-			}
-			if err := m.IstiodRemote.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 39:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field RevisionTags", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.RevisionTags = append(m.RevisionTags, string(dAtA[iNdEx:postIndex]))
-			iNdEx = postIndex
-		case 40:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field DefaultRevision", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.DefaultRevision = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *ZeroVPNConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ZeroVPNConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ZeroVPNConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.Enabled == nil {
-				m.Enabled = &types.BoolValue{}
-			}
-			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Suffix", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= uint64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Suffix = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *IntOrString) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= uint64(b&0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: IntOrString: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: IntOrString: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 0 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
-			}
-			m.Type = 0
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				m.Type |= int64(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field IntVal", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.IntVal == nil {
-				m.IntVal = &types.Int32Value{}
-			}
-			if err := m.IntVal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		case 3:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field StrVal", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= int(b&0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			postIndex := iNdEx + msglen
-			if postIndex < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			if m.StrVal == nil {
-				m.StrVal = &types.StringValue{}
-			}
-			if err := m.StrVal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipValuesTypes(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if (skippy < 0) || (iNdEx+skippy) < 0 {
-				return ErrInvalidLengthValuesTypes
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
-			iNdEx += skippy
-		}
-	}
-
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func skipValuesTypes(dAtA []byte) (n int, err error) {
-	l := len(dAtA)
-	iNdEx := 0
-	depth := 0
-	for iNdEx < l {
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return 0, ErrIntOverflowValuesTypes
-			}
-			if iNdEx >= l {
-				return 0, io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= (uint64(b) & 0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		wireType := int(wire & 0x7)
-		switch wireType {
-		case 0:
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return 0, ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return 0, io.ErrUnexpectedEOF
-				}
-				iNdEx++
-				if dAtA[iNdEx-1] < 0x80 {
-					break
-				}
-			}
-		case 1:
-			iNdEx += 8
-		case 2:
-			var length int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return 0, ErrIntOverflowValuesTypes
-				}
-				if iNdEx >= l {
-					return 0, io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				length |= (int(b) & 0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if length < 0 {
-				return 0, ErrInvalidLengthValuesTypes
-			}
-			iNdEx += length
-		case 3:
-			depth++
-		case 4:
-			if depth == 0 {
-				return 0, ErrUnexpectedEndOfGroupValuesTypes
-			}
-			depth--
-		case 5:
-			iNdEx += 4
-		default:
-			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
-		}
-		if iNdEx < 0 {
-			return 0, ErrInvalidLengthValuesTypes
-		}
-		if depth == 0 {
-			return iNdEx, nil
-		}
-	}
-	return 0, io.ErrUnexpectedEOF
-}
-
-var (
-	ErrInvalidLengthValuesTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
-	ErrIntOverflowValuesTypes          = fmt.Errorf("proto: integer overflow")
-	ErrUnexpectedEndOfGroupValuesTypes = fmt.Errorf("proto: unexpected end of group")
-)
diff --git a/operator/pkg/apis/istio/v1alpha1/values_types.proto b/operator/pkg/apis/istio/v1alpha1/values_types.proto
index f5a9a0a975..1a151def15 100644
--- a/operator/pkg/apis/istio/v1alpha1/values_types.proto
+++ b/operator/pkg/apis/istio/v1alpha1/values_types.proto
@@ -19,7 +19,6 @@ import "google/protobuf/any.proto";
 import "google/protobuf/struct.proto";
 import "google/protobuf/wrappers.proto";
 import "google/protobuf/duration.proto";
-import "gogoproto/gogo.proto";
 
 package v1alpha1;
 
@@ -385,7 +384,7 @@ message GlobalConfig {
   ProxyConfig proxy = 28;
 
   // Specifies the Configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
-  ProxyInitConfig proxyInit = 29 [json_name="proxy_init", (gogoproto.jsontag) = "proxy_init,omitempty"];
+  ProxyInitConfig proxy_init = 29 [json_name="proxy_init"];
 
   // Specifies the Configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
   SDSConfig sds = 30;
diff --git a/operator/pkg/apis/istio/v1alpha1/deepcopy.go b/operator/pkg/apis/istio/v1alpha1/zz_generated.deepcopy.go
similarity index 58%
rename from operator/pkg/apis/istio/v1alpha1/deepcopy.go
rename to operator/pkg/apis/istio/v1alpha1/zz_generated.deepcopy.go
index f480fd0f1e..477b9aafc6 100644
--- a/operator/pkg/apis/istio/v1alpha1/deepcopy.go
+++ b/operator/pkg/apis/istio/v1alpha1/zz_generated.deepcopy.go
@@ -12,66 +12,54 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-package v1alpha1
+//go:build !ignore_autogenerated
+// +build !ignore_autogenerated
 
-import (
-	"encoding/json"
+// Code generated by deepcopy-gen. DO NOT EDIT.
 
-	proto "github.com/gogo/protobuf/proto"
-	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
-	"k8s.io/apimachinery/pkg/runtime"
-	"k8s.io/apimachinery/pkg/runtime/schema"
+package v1alpha1
 
-	"istio.io/pkg/log"
+import (
+	runtime "k8s.io/apimachinery/pkg/runtime"
 )
 
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
-func (m *IstioOperator) DeepCopyInto(out proto.Message) {
-	bytes, err := json.Marshal(m)
-	if err != nil {
-		log.Error(err.Error())
-		return
+func (in *IstioOperator) DeepCopyInto(out *IstioOperator) {
+	*out = *in
+	out.TypeMeta = in.TypeMeta
+	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
+	if in.Spec != nil {
+		in.Spec.DeepCopyInto(out.Spec)
 	}
-	if err = json.Unmarshal(bytes, out); err != nil {
-		log.Error(err.Error())
+	if in.Status != nil {
+		in.Status.DeepCopyInto(out.Status)
 	}
+	return
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioOperator.
-func (m *IstioOperator) DeepCopy() *IstioOperator {
-	if m == nil {
+func (in *IstioOperator) DeepCopy() *IstioOperator {
+	if in == nil {
 		return nil
 	}
 	out := new(IstioOperator)
-	m.DeepCopyInto(out)
+	in.DeepCopyInto(out)
 	return out
 }
 
 // DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
-func (m *IstioOperator) DeepCopyObject() runtime.Object {
-	if c := m.DeepCopy(); c != nil {
+func (in *IstioOperator) DeepCopyObject() runtime.Object {
+	if c := in.DeepCopy(); c != nil {
 		return c
 	}
 	return nil
 }
 
-// TODO: needs to be implemented or generated.
-func (m *IstioOperator) GetObjectKind() schema.ObjectKind {
-	return EmptyObjectKind
-}
-
-// IstioOperatorList contains a list of IstioOperator
-type IstioOperatorList struct {
-	v1.TypeMeta `json:",inline"`
-	v1.ListMeta `json:"metadata,omitempty"`
-	Items       []IstioOperator `json:"items"`
-}
-
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *IstioOperatorList) DeepCopyInto(out *IstioOperatorList) {
 	*out = *in
 	out.TypeMeta = in.TypeMeta
-	out.ListMeta = in.ListMeta
+	in.ListMeta.DeepCopyInto(&out.ListMeta)
 	if in.Items != nil {
 		in, out := &in.Items, &out.Items
 		*out = make([]IstioOperator, len(*in))
@@ -79,6 +67,7 @@ func (in *IstioOperatorList) DeepCopyInto(out *IstioOperatorList) {
 			(*in)[i].DeepCopyInto(&(*out)[i])
 		}
 	}
+	return
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioOperatorList.
@@ -98,14 +87,3 @@ func (in *IstioOperatorList) DeepCopyObject() runtime.Object {
 	}
 	return nil
 }
-
-// EmptyObjectKind implements the ObjectKind interface as a noop
-var EmptyObjectKind = emptyObjectKind{}
-
-type emptyObjectKind struct{}
-
-// SetGroupVersionKind implements the ObjectKind interface
-func (emptyObjectKind) SetGroupVersionKind(gvk schema.GroupVersionKind) {}
-
-// GroupVersionKind implements the ObjectKind interface
-func (emptyObjectKind) GroupVersionKind() schema.GroupVersionKind { return schema.GroupVersionKind{} }
diff --git a/operator/pkg/controller/istiocontrolplane/istiocontrolplane_controller.go b/operator/pkg/controller/istiocontrolplane/istiocontrolplane_controller.go
index 6ce1294d79..6d2e2c642d 100644
--- a/operator/pkg/controller/istiocontrolplane/istiocontrolplane_controller.go
+++ b/operator/pkg/controller/istiocontrolplane/istiocontrolplane_controller.go
@@ -38,6 +38,7 @@
 	"sigs.k8s.io/controller-runtime/pkg/predicate"
 	"sigs.k8s.io/controller-runtime/pkg/reconcile"
 	"sigs.k8s.io/controller-runtime/pkg/source"
+	"sigs.k8s.io/yaml"
 
 	"istio.io/api/operator/v1alpha1"
 	"istio.io/istio/operator/pkg/apis/istio"
@@ -313,7 +314,7 @@ func (r *ReconcileIstioOperator) Reconcile(_ context.Context, request reconcile.
 	}
 
 	scope.Info("Updating IstioOperator")
-	val := iopv1alpha1.AsMap(iopMerged.Spec.Values)
+	val := iopMerged.Spec.Values.AsMap()
 	if _, ok := val["global"]; !ok {
 		val["global"] = make(map[string]interface{})
 	}
@@ -387,11 +388,12 @@ func mergeIOPSWithProfile(iop *iopv1alpha1.IstioOperator) (*v1alpha1.IstioOperat
 		}
 	}
 
-	overlayYAML, err := util.MarshalWithJSONPB(iop)
+	overlayYAMLB, err := yaml.Marshal(iop)
 	if err != nil {
 		metrics.CountCRMergeFail(metrics.IOPFormatError)
 		return nil, err
 	}
+	overlayYAML := string(overlayYAMLB)
 	t := translate.NewReverseTranslator()
 	overlayYAML, err = t.TranslateK8SfromValueToIOP(overlayYAML)
 	if err != nil {
diff --git a/operator/pkg/helmreconciler/prune_test.go b/operator/pkg/helmreconciler/prune_test.go
index b7a1badd17..691b66bd98 100644
--- a/operator/pkg/helmreconciler/prune_test.go
+++ b/operator/pkg/helmreconciler/prune_test.go
@@ -25,11 +25,11 @@
 	"k8s.io/apimachinery/pkg/runtime/schema"
 	"sigs.k8s.io/controller-runtime/pkg/client"
 	"sigs.k8s.io/controller-runtime/pkg/client/fake"
+	"sigs.k8s.io/yaml"
 
 	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/name"
 	"istio.io/istio/operator/pkg/object"
-	"istio.io/istio/operator/pkg/util"
 	"istio.io/istio/operator/pkg/util/clog"
 	"istio.io/istio/operator/pkg/util/progress"
 	"istio.io/istio/pkg/test/env"
@@ -48,7 +48,7 @@ func TestHelmReconciler_DeleteControlPlaneByManifest(t *testing.T) {
 			t.Fatal(err)
 		}
 		iop := &v1alpha1.IstioOperator{}
-		if err := util.UnmarshalWithJSONPB(string(iopStr), iop, false); err != nil {
+		if err := yaml.UnmarshalStrict(iopStr, iop); err != nil {
 			t.Fatal(err)
 		}
 		iop.Spec.Revision = testRevision
diff --git a/operator/pkg/helmreconciler/reconciler.go b/operator/pkg/helmreconciler/reconciler.go
index 4dfa55ad9f..a71ddf6d17 100644
--- a/operator/pkg/helmreconciler/reconciler.go
+++ b/operator/pkg/helmreconciler/reconciler.go
@@ -610,10 +610,10 @@ func (h *HelmReconciler) createNamespace(namespace string, network string) error
 }
 
 func (h *HelmReconciler) networkName() string {
-	if h.iop == nil || h.iop.Spec == nil || h.iop.Spec.Values == nil {
+	if h.iop.Spec.GetValues() == nil {
 		return ""
 	}
-	globalI := istioV1Alpha1.AsMap(h.iop.Spec.Values)["global"]
+	globalI := h.iop.Spec.Values.AsMap()["global"]
 	global, ok := globalI.(map[string]interface{})
 	if !ok {
 		return ""
diff --git a/operator/pkg/manifest/shared.go b/operator/pkg/manifest/shared.go
index bc2be5634d..ec22be66b6 100644
--- a/operator/pkg/manifest/shared.go
+++ b/operator/pkg/manifest/shared.go
@@ -24,6 +24,7 @@
 	"sigs.k8s.io/yaml"
 
 	"istio.io/api/operator/v1alpha1"
+	"istio.io/istio/operator/pkg/apis/istio"
 	iopv1alpha1 "istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/apis/istio/v1alpha1/validation"
 	"istio.io/istio/operator/pkg/controlplane"
@@ -208,7 +209,7 @@ func GenIOPFromProfile(profileOrPath, fileOverlayYAML string, setFlags []string,
 	if finalIOP.Spec.Profile == "" {
 		finalIOP.Spec.Profile = name.DefaultProfileName
 	}
-	return util.ToYAMLWithJSONPB(finalIOP), finalIOP, nil
+	return util.MustToYAMLGeneric(finalIOP), finalIOP, nil
 }
 
 // ReadYamlProfile gets the overlay yaml file from list of files and return profile value from file overlay and set overlay.
@@ -485,8 +486,8 @@ func getJwtTypeOverlay(client kube.Client, l clog.Logger) (string, error) {
 // representation if successful. If force is set, validation errors are written to logger rather than causing an
 // error.
 func unmarshalAndValidateIOP(iopsYAML string, force, allowUnknownField bool, l clog.Logger) (*iopv1alpha1.IstioOperator, error) {
-	iop := &iopv1alpha1.IstioOperator{}
-	if err := util.UnmarshalWithJSONPB(iopsYAML, iop, allowUnknownField); err != nil {
+	iop, err := istio.UnmarshalIstioOperator(iopsYAML, allowUnknownField)
+	if err != nil {
 		return nil, fmt.Errorf("could not unmarshal merged YAML: %s\n\nYAML:\n%s", err, iopsYAML)
 	}
 	if errs := validate.CheckIstioOperatorSpec(iop.Spec, true); len(errs) != 0 && !force {
diff --git a/operator/pkg/object/objects.go b/operator/pkg/object/objects.go
index 9776ea861b..ca93ec4346 100644
--- a/operator/pkg/object/objects.go
+++ b/operator/pkg/object/objects.go
@@ -511,7 +511,7 @@ func ParseK8SYAMLToIstioOperator(yml string) (*v1alpha1.IstioOperator, *schema.G
 		return nil, nil, err
 	}
 	iop := &v1alpha1.IstioOperator{}
-	if err := util.UnmarshalWithJSONPB(yml, iop, false); err != nil {
+	if err := yaml.UnmarshalStrict([]byte(yml), iop); err != nil {
 		return nil, nil, err
 	}
 	gvk := o.GroupVersionKind()
diff --git a/operator/pkg/patch/patch.go b/operator/pkg/patch/patch.go
index 03bf6ff59f..cbe38f5b4a 100644
--- a/operator/pkg/patch/patch.go
+++ b/operator/pkg/patch/patch.go
@@ -102,7 +102,6 @@
 	yaml2 "gopkg.in/yaml.v2"
 
 	"istio.io/api/operator/v1alpha1"
-	valuev1alpha1 "istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/helm"
 	"istio.io/istio/operator/pkg/metrics"
 	"istio.io/istio/operator/pkg/object"
@@ -180,12 +179,12 @@ func applyPatches(base *object.K8sObject, patches []*v1alpha1.K8SObjectOverlay_P
 		return "", util.NewErrs(err)
 	}
 	// Use yaml2 specifically to allow interface{} as key which WritePathContext treats specially
-	err = yaml2.Unmarshal(by, bo)
+	err = yaml2.Unmarshal(by, &bo)
 	if err != nil {
 		return "", util.NewErrs(err)
 	}
 	for _, p := range patches {
-		v := valuev1alpha1.AsInterface(p.Value)
+		v := p.Value.AsInterface()
 		if strings.TrimSpace(p.Path) == "" {
 			scope.Warnf("value=%s has empty path, skip\n", v)
 			continue
@@ -197,6 +196,7 @@ func applyPatches(base *object.K8sObject, patches []*v1alpha1.K8SObjectOverlay_P
 			metrics.ManifestPatchErrorTotal.Increment()
 			continue
 		}
+
 		err = tpath.WritePathContext(inc, v, false)
 		if err != nil {
 			errs = util.AppendErr(errs, err)
diff --git a/operator/pkg/tpath/struct.go b/operator/pkg/tpath/struct.go
index d6be1e9fd8..a506e3caf1 100644
--- a/operator/pkg/tpath/struct.go
+++ b/operator/pkg/tpath/struct.go
@@ -22,9 +22,8 @@
 	"reflect"
 	"strconv"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/structpb"
 
-	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/util"
 )
 
@@ -43,11 +42,11 @@ func getFromStructPath(node interface{}, path util.Path) (interface{}, bool, err
 	}
 	// For protobuf types, switch them out with standard types; otherwise we will traverse protobuf internals rather
 	// than the standard representation
-	if v, ok := node.(*types.Struct); ok {
-		node = v1alpha1.AsMap(v)
+	if v, ok := node.(*structpb.Struct); ok {
+		node = v.AsMap()
 	}
-	if v, ok := node.(*types.Value); ok {
-		node = v1alpha1.AsInterface(v)
+	if v, ok := node.(*structpb.Value); ok {
+		node = v.AsInterface()
 	}
 	val := reflect.ValueOf(node)
 	kind := reflect.TypeOf(node).Kind()
diff --git a/operator/pkg/tpath/tree.go b/operator/pkg/tpath/tree.go
index fb7ad34c4c..d4d27d306b 100644
--- a/operator/pkg/tpath/tree.go
+++ b/operator/pkg/tpath/tree.go
@@ -30,7 +30,6 @@
 	"strconv"
 	"strings"
 
-	"github.com/kylelemons/godebug/pretty"
 	"gopkg.in/yaml.v2"
 	yaml2 "sigs.k8s.io/yaml"
 
@@ -54,11 +53,11 @@ type PathContext struct {
 func (nc *PathContext) String() string {
 	ret := "\n--------------- NodeContext ------------------\n"
 	if nc.Parent != nil {
-		ret += fmt.Sprintf("Parent.Node=\n%s\n", pretty.Sprint(nc.Parent.Node))
+		ret += fmt.Sprintf("Parent.Node=\n%s\n", nc.Parent.Node)
 		ret += fmt.Sprintf("KeyToChild=%v\n", nc.Parent.KeyToChild)
 	}
 
-	ret += fmt.Sprintf("Node=\n%s\n", pretty.Sprint(nc.Node))
+	ret += fmt.Sprintf("Node=\n%s\n", nc.Node)
 	ret += "----------------------------------------------\n"
 
 	return ret
@@ -145,7 +144,7 @@ func Delete(root map[string]interface{}, path util.Path) (bool, error) {
 // getPathContext is the internal implementation of GetPathContext.
 // If createMissing is true, it creates any missing map (but NOT list) path entries in root.
 func getPathContext(nc *PathContext, fullPath, remainPath util.Path, createMissing bool) (*PathContext, bool, error) {
-	scope.Debugf("getPathContext remainPath=%s, Node=%s", remainPath, pretty.Sprint(nc.Node))
+	scope.Debugf("getPathContext remainPath=%s, Node=%v", remainPath, nc.Node)
 	if len(remainPath) == 0 {
 		return nc, true, nil
 	}
diff --git a/operator/pkg/translate/translate.go b/operator/pkg/translate/translate.go
index c0a4dbf7fc..0b1ff8b7d1 100644
--- a/operator/pkg/translate/translate.go
+++ b/operator/pkg/translate/translate.go
@@ -22,8 +22,8 @@
 	"sort"
 	"strings"
 
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/proto"
+	"google.golang.org/protobuf/types/known/structpb"
 	v1 "k8s.io/api/core/v1"
 	"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
 	"k8s.io/apimachinery/pkg/util/strategicpatch"
@@ -31,6 +31,7 @@
 	"sigs.k8s.io/yaml"
 
 	"istio.io/api/operator/v1alpha1"
+	"istio.io/istio/operator/pkg/apis/istio"
 	iopv1alpha1 "istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/name"
 	"istio.io/istio/operator/pkg/object"
@@ -306,7 +307,7 @@ func (t *Translator) OverlayK8sSettings(yml string, iop *v1alpha1.IstioOperatorS
 }
 
 func skipReplicaCountWithAutoscaleEnabled(iop *v1alpha1.IstioOperatorSpec, componentName name.ComponentName) bool {
-	values := iopv1alpha1.AsMap(iop.GetValues())
+	values := iop.GetValues().AsMap()
 	path, ok := componentToAutoScaleEnabledPath[componentName]
 	if !ok {
 		return false
@@ -498,8 +499,8 @@ func (t *Translator) TranslateHelmValues(iop *v1alpha1.IstioOperatorSpec, compon
 	scope.Debugf("Values translated from IstioOperator API:\n%s", apiValsStr)
 
 	// Add global overlay from IstioOperatorSpec.Values/UnvalidatedValues.
-	globalVals := iopv1alpha1.AsMap(iop.Values)
-	globalUnvalidatedVals := iopv1alpha1.AsMap(iop.UnvalidatedValues)
+	globalVals := iop.GetValues().AsMap()
+	globalUnvalidatedVals := iop.GetUnvalidatedValues().AsMap()
 
 	if scope.DebugEnabled() {
 		scope.Debugf("Values from IstioOperatorSpec.Values:\n%s", util.ToYAML(globalVals))
@@ -715,7 +716,7 @@ func (t *Translator) setComponentProperties(root map[string]interface{}, iop *v1
 		}
 
 		tag, found, _ := tpath.GetFromStructPath(iop, "Components."+string(cn)+".Tag")
-		tagv, ok := tag.(*types.Value)
+		tagv, ok := tag.(*structpb.Value)
 		if found && !(ok && util.ValueString(tagv) == "") {
 			if err := tpath.WriteNode(root, util.PathFromString(c.ToHelmValuesTreeRoot+"."+HelmValuesTagSubpath), util.ValueString(tagv)); err != nil {
 				return err
@@ -978,8 +979,8 @@ func IOPStoIOP(iops proto.Message, name, namespace string) (*iopv1alpha1.IstioOp
 	if err != nil {
 		return nil, err
 	}
-	iop := &iopv1alpha1.IstioOperator{}
-	if err := util.UnmarshalWithJSONPB(iopStr, iop, false); err != nil {
+	iop, err := istio.UnmarshalIstioOperator(iopStr, false)
+	if err != nil {
 		return nil, err
 	}
 	return iop, nil
diff --git a/operator/pkg/translate/translate_common.go b/operator/pkg/translate/translate_common.go
index a2c08f9cb7..1469f3c2a2 100644
--- a/operator/pkg/translate/translate_common.go
+++ b/operator/pkg/translate/translate_common.go
@@ -17,7 +17,7 @@
 import (
 	"fmt"
 
-	"github.com/gogo/protobuf/types"
+	"github.com/golang/protobuf/ptypes/wrappers"
 
 	"istio.io/api/operator/v1alpha1"
 	"istio.io/istio/operator/pkg/name"
@@ -37,7 +37,7 @@ func IsComponentEnabledInSpec(componentName name.ComponentName, controlPlaneSpec
 	if !found || componentNodeI == nil {
 		return false, nil
 	}
-	componentNode, ok := componentNodeI.(*types.BoolValue)
+	componentNode, ok := componentNodeI.(*wrappers.BoolValue)
 	if !ok {
 		return false, fmt.Errorf("component %s enabled has bad type %T, expect *v1alpha1.BoolValueForPB", componentName, componentNodeI)
 	}
diff --git a/operator/pkg/translate/translate_value_test.go b/operator/pkg/translate/translate_value_test.go
index 8c887f40cf..7cf2ffea87 100644
--- a/operator/pkg/translate/translate_value_test.go
+++ b/operator/pkg/translate/translate_value_test.go
@@ -17,10 +17,10 @@
 import (
 	"testing"
 
-	"github.com/gogo/protobuf/jsonpb"
-	"github.com/kr/pretty"
+	"github.com/golang/protobuf/jsonpb"
 	"sigs.k8s.io/yaml"
 
+	"istio.io/istio/operator/pkg/apis/istio"
 	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/util"
 )
@@ -192,7 +192,6 @@ func TestValueToProto(t *testing.T) {
 			if err != nil {
 				t.Fatalf("unmarshal(%s): got error %s", tt.desc, err)
 			}
-			scope.Debugf("value struct: \n%s\n", pretty.Sprint(valueStruct))
 			gotSpec, err := tr.TranslateFromValueToSpec([]byte(tt.valueYAML), false)
 			if gotErr, wantErr := errToString(err), tt.wantErr; gotErr != wantErr {
 				t.Errorf("ValuesToProto(%s)(%v): gotErr:%s, wantErr:%s", tt.desc, tt.valueYAML, gotErr, wantErr)
@@ -939,12 +938,10 @@ func TestValueToK8s(t *testing.T) {
 
 	for _, tt := range tests {
 		t.Run(tt.desc, func(t *testing.T) {
-			iopStruct := v1alpha1.IstioOperator{}
-			err := util.UnmarshalWithJSONPB(tt.inIOPSpec, &iopStruct, false)
+			_, err := istio.UnmarshalIstioOperator(tt.inIOPSpec, false)
 			if err != nil {
 				t.Fatalf("unmarshal(%s): got error %s", tt.desc, err)
 			}
-			scope.Debugf("value struct: \n%s\n", pretty.Sprint(iopStruct))
 			gotSpec, err := tr.TranslateK8SfromValueToIOP(tt.inIOPSpec)
 			if gotErr, wantErr := errToString(err), tt.wantErr; gotErr != wantErr {
 				t.Errorf("ValuesToK8s(%s)(%v): gotErr:%s, wantErr:%s", tt.desc, tt.inIOPSpec, gotErr, wantErr)
diff --git a/operator/pkg/util/k8s.go b/operator/pkg/util/k8s.go
index 993016c7f3..0ce1ae25cf 100644
--- a/operator/pkg/util/k8s.go
+++ b/operator/pkg/util/k8s.go
@@ -64,7 +64,7 @@ func GKString(gvk schema.GroupKind) string {
 
 // ValidateIOPCAConfig validates if the IstioOperator CA configs are applicable to the K8s cluster
 func ValidateIOPCAConfig(client kube.Client, iop *iopv1alpha1.IstioOperator) error {
-	globalI := iopv1alpha1.AsMap(iop.Spec.Values)["global"]
+	globalI := iop.Spec.Values.AsMap()["global"]
 	global, ok := globalI.(map[string]interface{})
 	if !ok {
 		// This means no explicit global configuration. Still okay
diff --git a/operator/pkg/util/k8s_test.go b/operator/pkg/util/k8s_test.go
index 2f78ef1d53..91c1294bed 100644
--- a/operator/pkg/util/k8s_test.go
+++ b/operator/pkg/util/k8s_test.go
@@ -20,10 +20,10 @@
 	"k8s.io/apimachinery/pkg/version"
 	fakediscovery "k8s.io/client-go/discovery/fake"
 	"k8s.io/client-go/kubernetes/fake"
+	"sigs.k8s.io/yaml"
 
 	pkgAPI "istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/pkg/kube"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
 )
 
 var (
@@ -93,7 +93,7 @@ func TestValidateIOPCAConfig(t *testing.T) {
 			Minor: tt.minor,
 		}
 		op := &pkgAPI.IstioOperator{}
-		err = gogoprotomarshal.ApplyYAML(tt.operatorYaml, op)
+		err = yaml.Unmarshal([]byte(tt.operatorYaml), op)
 		if err != nil {
 			t.Fatalf("Failure in test case %v. Error %s", i, err)
 		}
diff --git a/operator/pkg/util/merge_iop.go b/operator/pkg/util/merge_iop.go
index 9bb171e0ac..e1b704d6bd 100644
--- a/operator/pkg/util/merge_iop.go
+++ b/operator/pkg/util/merge_iop.go
@@ -18,7 +18,8 @@
 	"fmt"
 	"strings"
 
-	protobuf "github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/durationpb"
+	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 	v11 "k8s.io/apimachinery/pkg/apis/meta/v1"
 	"k8s.io/apimachinery/pkg/util/strategicpatch"
 	yaml2 "sigs.k8s.io/yaml"
@@ -130,11 +131,11 @@ type egressGatewayConfig struct {
 }
 
 type meshConfig struct {
-	ConnectTimeout                 *protobuf.Duration                                        `json:"connectTimeout" patchStrategy:"replace"`
-	ProtocolDetectionTimeout       *protobuf.Duration                                        `json:"protocolDetectionTimeout" patchStrategy:"replace"`
-	RdsRefreshDelay                *protobuf.Duration                                        `json:"rdsRefreshDelay" patchStrategy:"replace"`
-	EnableAutoMtls                 *protobuf.BoolValue                                       `json:"enableAutoMtls" patchStrategy:"replace"`
-	EnablePrometheusMerge          *protobuf.BoolValue                                       `json:"enablePrometheusMerge" patchStrategy:"replace"`
+	ConnectTimeout                 *durationpb.Duration                                      `json:"connectTimeout" patchStrategy:"replace"`
+	ProtocolDetectionTimeout       *durationpb.Duration                                      `json:"protocolDetectionTimeout" patchStrategy:"replace"`
+	RdsRefreshDelay                *durationpb.Duration                                      `json:"rdsRefreshDelay" patchStrategy:"replace"`
+	EnableAutoMtls                 *wrappers.BoolValue                                       `json:"enableAutoMtls" patchStrategy:"replace"`
+	EnablePrometheusMerge          *wrappers.BoolValue                                       `json:"enablePrometheusMerge" patchStrategy:"replace"`
 	OutboundTrafficPolicy          *v1alpha13.MeshConfig_OutboundTrafficPolicy               `json:"outboundTrafficPolicy" patchStrategy:"merge"`
 	TCPKeepalive                   *v1alpha3.ConnectionPoolSettings_TCPSettings_TcpKeepalive `json:"tcpKeepalive" patchStrategy:"merge"`
 	DefaultConfig                  *proxyConfig                                              `json:"defaultConfig" patchStrategy:"merge"`
@@ -144,7 +145,7 @@ type meshConfig struct {
 	DefaultVirtualServiceExportTo  []string                                                  `json:"defaultVirtualServiceExportTo" patchStrategy:"merge"`
 	DefaultDestinationRuleExportTo []string                                                  `json:"defaultDestinationRuleExportTo" patchStrategy:"merge"`
 	LocalityLbSetting              *v1alpha3.LocalityLoadBalancerSetting                     `json:"localityLbSetting" patchStrategy:"merge"`
-	DNSRefreshRate                 *protobuf.Duration                                        `json:"dnsRefreshRate" patchStrategy:"replace"`
+	DNSRefreshRate                 *durationpb.Duration                                      `json:"dnsRefreshRate" patchStrategy:"replace"`
 	Certificates                   []*v1alpha13.Certificate                                  `json:"certificates" patchStrategy:"merge" patchMergeKey:"secretName"`
 	ThriftConfig                   *meshConfigThriftConfig                                   `json:"thriftConfig" patchStrategy:"merge"`
 	ServiceSettings                []*meshConfigServiceSettings                              `json:"serviceSettings" patchStrategy:"replace"`
@@ -171,15 +172,15 @@ type meshConfig struct {
 )
 
 type meshConfigThriftConfig struct {
-	RateLimitTimeout *protobuf.Duration `json:"rateLimitTimeout" patchStrategy:"replace"`
+	RateLimitTimeout *durationpb.Duration `json:"rateLimitTimeout" patchStrategy:"replace"`
 }
 
 type proxyConfig struct {
-	DrainDuration                  *protobuf.Duration                      `json:"drainDuration" patchStrategy:"replace"`
-	ParentShutdownDuration         *protobuf.Duration                      `json:"parentShutdownDuration" patchStrategy:"replace"`
-	DiscoveryRefreshDelay          *protobuf.Duration                      `json:"discoveryRefreshDelay" patchStrategy:"replace"`
-	TerminationDrainDuration       *protobuf.Duration                      `json:"terminationDrainDuration" patchStrategy:"replace"`
-	Concurrency                    *protobuf.Int32Value                    `json:"concurrency" patchStrategy:"replace"`
+	DrainDuration                  *durationpb.Duration                    `json:"drainDuration" patchStrategy:"replace"`
+	ParentShutdownDuration         *durationpb.Duration                    `json:"parentShutdownDuration" patchStrategy:"replace"`
+	DiscoveryRefreshDelay          *durationpb.Duration                    `json:"discoveryRefreshDelay" patchStrategy:"replace"`
+	TerminationDrainDuration       *durationpb.Duration                    `json:"terminationDrainDuration" patchStrategy:"replace"`
+	Concurrency                    *wrappers.Int32Value                    `json:"concurrency" patchStrategy:"replace"`
 	ConfigSources                  []*v1alpha13.ConfigSource               `json:"configSources" patchStrategy:"replace"`
 	ClusterName                    *clusterName                            `json:"clusterName" patchStrategy:"replace"`
 	TrustDomainAliases             []string                                `json:"trustDomainAliases" patchStrategy:"replace"`
@@ -187,7 +188,7 @@ type proxyConfig struct {
 	DefaultVirtualServiceExportTo  []string                                `json:"defaultVirtualServiceExportTo" patchStrategy:"replace"`
 	DefaultDestinationRuleExportTo []string                                `json:"defaultDestinationRuleExportTo" patchStrategy:"replace"`
 	LocalityLbSetting              *v1alpha3.LocalityLoadBalancerSetting   `json:"localityLbSetting" patchStrategy:"merge"`
-	DNSRefreshRate                 *protobuf.Duration                      `json:"dnsRefreshRate" patchStrategy:"replace"`
+	DNSRefreshRate                 *durationpb.Duration                    `json:"dnsRefreshRate" patchStrategy:"replace"`
 	Certificates                   []*v1alpha13.Certificate                `json:"certificates" patchStrategy:"replace"`
 	ThriftConfig                   *v1alpha13.MeshConfig_ThriftConfig      `json:"thriftConfig" patchStrategy:"merge"`
 	ServiceSettings                []*v1alpha13.MeshConfig_ServiceSettings `json:"serviceSettings" patchStrategy:"replace"`
diff --git a/operator/pkg/util/merge_iop_test.go b/operator/pkg/util/merge_iop_test.go
index dcdb444757..0d82a12a51 100644
--- a/operator/pkg/util/merge_iop_test.go
+++ b/operator/pkg/util/merge_iop_test.go
@@ -19,14 +19,13 @@
 	"path/filepath"
 	"testing"
 
-	"github.com/gogo/protobuf/types"
 	"sigs.k8s.io/yaml"
 
 	v1alpha12 "istio.io/api/operator/v1alpha1"
 	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/test/env"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
 func TestOverlayIOP(t *testing.T) {
@@ -44,17 +43,14 @@ func TestOverlayIOP(t *testing.T) {
 func TestOverlayIOPDefaultMeshConfig(t *testing.T) {
 	// Transform default mesh config into map[string]interface{} for inclusion in IstioOperator.
 	m := mesh.DefaultMeshConfig()
-	my, err := gogoprotomarshal.ToYAML(m)
+	my, err := protomarshal.ToJSONMap(m)
 	if err != nil {
 		t.Fatal(err)
 	}
-	mm := &types.Struct{}
-	if err := gogoprotomarshal.ApplyYAML(my, mm); err != nil {
-		t.Fatal(err)
-	}
+
 	iop := &v1alpha1.IstioOperator{
 		Spec: &v1alpha12.IstioOperatorSpec{
-			MeshConfig: mm,
+			MeshConfig: MustStruct(my),
 		},
 	}
 
diff --git a/operator/pkg/util/reflect.go b/operator/pkg/util/reflect.go
index ecf4837a4b..2c8851ea7a 100644
--- a/operator/pkg/util/reflect.go
+++ b/operator/pkg/util/reflect.go
@@ -17,8 +17,6 @@
 import (
 	"fmt"
 	"reflect"
-
-	"github.com/kr/pretty"
 )
 
 // kindOf returns the reflection Kind that represents the dynamic type of value.
@@ -210,7 +208,7 @@ func IsEmptyString(value interface{}) bool {
 
 // DeleteFromSlicePtr deletes an entry at index from the parent, which must be a slice ptr.
 func DeleteFromSlicePtr(parentSlice interface{}, index int) error {
-	scope.Debugf("DeleteFromSlicePtr index=%d, slice=\n%s", index, pretty.Sprint(parentSlice))
+	scope.Debugf("DeleteFromSlicePtr index=%d, slice=\n%v", index, parentSlice)
 	pv := reflect.ValueOf(parentSlice)
 
 	if !IsSliceInterfacePtr(parentSlice) {
@@ -229,7 +227,7 @@ func DeleteFromSlicePtr(parentSlice interface{}, index int) error {
 
 // UpdateSlicePtr updates an entry at index in the parent, which must be a slice ptr, with the given value.
 func UpdateSlicePtr(parentSlice interface{}, index int, value interface{}) error {
-	scope.Debugf("UpdateSlicePtr parent=\n%s\n, index=%d, value=\n%v", pretty.Sprint(parentSlice), index, value)
+	scope.Debugf("UpdateSlicePtr parent=\n%v\n, index=%d, value=\n%v", parentSlice, index, value)
 	pv := reflect.ValueOf(parentSlice)
 	v := reflect.ValueOf(value)
 
@@ -249,7 +247,7 @@ func UpdateSlicePtr(parentSlice interface{}, index int, value interface{}) error
 
 // InsertIntoMap inserts value with key into parent which must be a map, map ptr, or interface to map.
 func InsertIntoMap(parentMap interface{}, key interface{}, value interface{}) error {
-	scope.Debugf("InsertIntoMap key=%v, value=%s, map=\n%s", key, pretty.Sprint(value), pretty.Sprint(parentMap))
+	scope.Debugf("InsertIntoMap key=%v, value=%v, map=\n%v", key, value, parentMap)
 	v := reflect.ValueOf(parentMap)
 	kv := reflect.ValueOf(key)
 	vv := reflect.ValueOf(value)
@@ -273,7 +271,7 @@ func InsertIntoMap(parentMap interface{}, key interface{}, value interface{}) er
 
 // DeleteFromMap deletes an entry with the given key parent, which must be a map.
 func DeleteFromMap(parentMap interface{}, key interface{}) error {
-	scope.Debugf("DeleteFromMap key=%s, parent:\n%s\n", key, pretty.Sprint(parentMap))
+	scope.Debugf("DeleteFromMap key=%s, parent:\n%v\n", key, parentMap)
 	pv := reflect.ValueOf(parentMap)
 
 	if !IsMap(parentMap) {
diff --git a/operator/pkg/util/util.go b/operator/pkg/util/util.go
index 5546055f05..3fb3203e9e 100644
--- a/operator/pkg/util/util.go
+++ b/operator/pkg/util/util.go
@@ -23,7 +23,7 @@
 	"strconv"
 	"strings"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/structpb"
 )
 
 type FileFilter func(fileName string) bool
@@ -142,13 +142,18 @@ func RenderTemplate(tmpl string, ts interface{}) (string, error) {
 	return buf.String(), nil
 }
 
-func ValueString(v *types.Value) string {
+func ValueString(v *structpb.Value) string {
 	switch x := v.Kind.(type) {
-	case *types.Value_StringValue:
+	case *structpb.Value_StringValue:
 		return x.StringValue
-	case *types.Value_NumberValue:
+	case *structpb.Value_NumberValue:
 		return fmt.Sprint(x.NumberValue)
 	default:
 		return v.String()
 	}
 }
+
+func MustStruct(m map[string]interface{}) *structpb.Struct {
+	s, _ := structpb.NewStruct(m)
+	return s
+}
diff --git a/operator/pkg/util/yaml.go b/operator/pkg/util/yaml.go
index 57e413f322..8ad5a5a5db 100644
--- a/operator/pkg/util/yaml.go
+++ b/operator/pkg/util/yaml.go
@@ -23,13 +23,52 @@
 	"strings"
 
 	jsonpatch "github.com/evanphx/json-patch/v5"
-	"github.com/gogo/protobuf/jsonpb"
-	"github.com/gogo/protobuf/proto"
+	"github.com/golang/protobuf/jsonpb"
+	legacyproto "github.com/golang/protobuf/proto"
 	"github.com/kylelemons/godebug/diff"
+	"google.golang.org/protobuf/proto"
 	yaml3 "k8s.io/apimachinery/pkg/util/yaml"
 	"sigs.k8s.io/yaml"
+
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
+func ToYAMLGeneric(root interface{}) ([]byte, error) {
+	var vs []byte
+	if proto, ok := root.(proto.Message); ok {
+		v, err := protomarshal.ToYAML(proto)
+		if err != nil {
+			return nil, err
+		}
+		vs = []byte(v)
+	} else {
+		v, err := yaml.Marshal(root)
+		if err != nil {
+			return nil, err
+		}
+		vs = v
+	}
+	return vs, nil
+}
+
+func MustToYAMLGeneric(root interface{}) string {
+	var vs []byte
+	if proto, ok := root.(proto.Message); ok {
+		v, err := protomarshal.ToYAML(proto)
+		if err != nil {
+			return err.Error()
+		}
+		vs = []byte(v)
+	} else {
+		v, err := yaml.Marshal(root)
+		if err != nil {
+			return err.Error()
+		}
+		vs = v
+	}
+	return string(vs)
+}
+
 // ToYAML returns a YAML string representation of val, or the error string if an error occurs.
 func ToYAML(val interface{}) string {
 	y, err := yaml.Marshal(val)
@@ -46,7 +85,7 @@ func ToYAMLWithJSONPB(val proto.Message) string {
 		return "null"
 	}
 	m := jsonpb.Marshaler{EnumsAsInts: true}
-	js, err := m.MarshalToString(val)
+	js, err := m.MarshalToString(legacyproto.MessageV1(val))
 	if err != nil {
 		return err.Error()
 	}
@@ -59,16 +98,7 @@ func ToYAMLWithJSONPB(val proto.Message) string {
 
 // MarshalWithJSONPB returns a YAML string representation of val (using jsonpb).
 func MarshalWithJSONPB(val proto.Message) (string, error) {
-	m := jsonpb.Marshaler{EnumsAsInts: true}
-	js, err := m.MarshalToString(val)
-	if err != nil {
-		return "", err
-	}
-	yb, err := yaml.JSONToYAML([]byte(js))
-	if err != nil {
-		return "", err
-	}
-	return string(yb), nil
+	return protomarshal.ToYAML(val)
 }
 
 // UnmarshalWithJSONPB unmarshals y into out using gogo jsonpb (required for many proto defined structs).
@@ -82,7 +112,7 @@ func UnmarshalWithJSONPB(y string, out proto.Message, allowUnknownField bool) er
 		return err
 	}
 	u := jsonpb.Unmarshaler{AllowUnknownFields: allowUnknownField}
-	err = u.Unmarshal(bytes.NewReader(jb), out)
+	err = u.Unmarshal(bytes.NewReader(jb), legacyproto.MessageV1(out))
 	if err != nil {
 		return err
 	}
diff --git a/operator/pkg/util/yaml_test.go b/operator/pkg/util/yaml_test.go
index aceb69323a..62d0f44550 100644
--- a/operator/pkg/util/yaml_test.go
+++ b/operator/pkg/util/yaml_test.go
@@ -18,10 +18,6 @@
 	"errors"
 	"reflect"
 	"testing"
-
-	"github.com/gogo/protobuf/proto"
-
-	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 )
 
 func TestToYAML(t *testing.T) {
@@ -68,34 +64,6 @@ func TestToYAML(t *testing.T) {
 	}
 }
 
-func TestToYAMLWithJSONPB(t *testing.T) {
-	tests := []struct {
-		desc        string
-		in          proto.Message
-		expectedOut string
-	}{
-		{
-			desc: "valid-istio-op-with-missing-fields",
-			in: &v1alpha1.IstioOperator{
-				ApiVersion: "v1",
-				Kind:       "operator",
-			},
-			expectedOut: `apiVersion: v1
-kind: operator
-metadata:
-  creationTimestamp: null
-`,
-		},
-	}
-	for _, tt := range tests {
-		t.Run(tt.desc, func(t *testing.T) {
-			if got := ToYAMLWithJSONPB(tt.in); got != tt.expectedOut {
-				t.Errorf("%s: expected %v got %v", tt.desc, tt.expectedOut, got)
-			}
-		})
-	}
-}
-
 func TestOverlayTrees(t *testing.T) {
 	tests := []struct {
 		desc            string
diff --git a/operator/pkg/validate/common.go b/operator/pkg/validate/common.go
index 18297b9d27..1c1eb02652 100644
--- a/operator/pkg/validate/common.go
+++ b/operator/pkg/validate/common.go
@@ -285,7 +285,8 @@ func UnmarshalIOP(iopYAML string) (*v1alpha1.IstioOperator, error) {
 		iopYAML = util.ToYAML(un)
 	}
 	iop := &v1alpha1.IstioOperator{}
-	if err := util.UnmarshalWithJSONPB(iopYAML, iop, false); err != nil {
+
+	if err := yaml.UnmarshalStrict([]byte(iopYAML), iop); err != nil {
 		return nil, fmt.Errorf("%s:\n\nYAML:\n%s", err, iopYAML)
 	}
 	return iop, nil
diff --git a/operator/pkg/validate/validate.go b/operator/pkg/validate/validate.go
index 35d9868f2f..fda5f09fe3 100644
--- a/operator/pkg/validate/validate.go
+++ b/operator/pkg/validate/validate.go
@@ -18,7 +18,7 @@
 	"fmt"
 	"reflect"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/structpb"
 
 	"istio.io/api/operator/v1alpha1"
 	operator_v1alpha1 "istio.io/istio/operator/pkg/apis/istio/v1alpha1"
@@ -27,7 +27,7 @@
 	"istio.io/istio/operator/pkg/util"
 	"istio.io/istio/pkg/config/labels"
 	"istio.io/istio/pkg/config/mesh"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
 var (
@@ -182,13 +182,12 @@ func validateLeaf(validations map[string]ValidatorFunc, path util.Path, val inte
 }
 
 func validateMeshConfig(path util.Path, root interface{}) util.Errors {
-	vs, err := ToYAMLGeneric(root)
+	vs, err := util.ToYAMLGeneric(root)
 	if err != nil {
 		return util.Errors{err}
 	}
-	defaultMesh := mesh.DefaultMeshConfig()
 	// ApplyMeshConfigDefaults allows unknown fields, so we first check for unknown fields
-	if err := gogoprotomarshal.ApplyYAMLStrict(string(vs), defaultMesh); err != nil {
+	if err := protomarshal.ApplyYAMLStrict(string(vs), mesh.DefaultMeshConfig()); err != nil {
 		return util.Errors{fmt.Errorf("failed to unmarshall mesh config: %v", err)}
 	}
 	// This method will also perform validation automatically
@@ -206,7 +205,7 @@ func validateHub(path util.Path, val interface{}) util.Errors {
 }
 
 func validateTag(path util.Path, val interface{}) util.Errors {
-	return validateWithRegex(path, val.(*types.Value).GetStringValue(), TagRegexp)
+	return validateWithRegex(path, val.(*structpb.Value).GetStringValue(), TagRegexp)
 }
 
 func validateRevision(_ util.Path, val interface{}) util.Errors {
diff --git a/operator/pkg/validate/validate_test.go b/operator/pkg/validate/validate_test.go
index ab1f68ad31..c690aee98e 100644
--- a/operator/pkg/validate/validate_test.go
+++ b/operator/pkg/validate/validate_test.go
@@ -144,7 +144,7 @@ func TestValidate(t *testing.T) {
 meshConfig:
   foo: bar
 `,
-			wantErrs: makeErrors([]string{`failed to unmarshall mesh config: unknown field "foo" in v1alpha1.MeshConfig`}),
+			wantErrs: makeErrors([]string{`failed to unmarshall mesh config: unknown field "foo" in istio.mesh.v1alpha1.MeshConfig`}),
 		},
 		{
 			desc: "Unknown mesh config values",
@@ -153,7 +153,7 @@ func TestValidate(t *testing.T) {
   meshConfig:
     foo: bar
 `,
-			wantErrs: makeErrors([]string{`failed to unmarshall mesh config: unknown field "foo" in v1alpha1.MeshConfig`}),
+			wantErrs: makeErrors([]string{`failed to unmarshall mesh config: unknown field "foo" in istio.mesh.v1alpha1.MeshConfig`}),
 		},
 		{
 			desc: "Good mesh config",
diff --git a/operator/pkg/validate/validate_values.go b/operator/pkg/validate/validate_values.go
index 0c2511ad18..c291c0b414 100644
--- a/operator/pkg/validate/validate_values.go
+++ b/operator/pkg/validate/validate_values.go
@@ -17,13 +17,10 @@
 import (
 	"reflect"
 
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
-	"sigs.k8s.io/yaml"
+	"google.golang.org/protobuf/types/known/structpb"
 
 	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/util"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
 )
 
 // DefaultValuesValidations maps a data path to a validation function.
@@ -35,31 +32,13 @@
 	"meshConfig":                       validateMeshConfig,
 }
 
-func ToYAMLGeneric(root interface{}) ([]byte, error) {
-	var vs []byte
-	if proto, ok := root.(proto.Message); ok {
-		v, err := gogoprotomarshal.ToYAML(proto)
-		if err != nil {
-			return nil, err
-		}
-		vs = []byte(v)
-	} else {
-		v, err := yaml.Marshal(root)
-		if err != nil {
-			return nil, err
-		}
-		vs = v
-	}
-	return vs, nil
-}
-
 // CheckValues validates the values in the given tree, which follows the Istio values.yaml schema.
 func CheckValues(root interface{}) util.Errors {
 	v := reflect.ValueOf(root)
 	if root == nil || (v.Kind() == reflect.Ptr && v.IsNil()) {
 		return nil
 	}
-	vs, err := ToYAMLGeneric(root)
+	vs, err := util.ToYAMLGeneric(root)
 	if err != nil {
 		return util.Errors{err}
 	}
@@ -67,7 +46,7 @@ func CheckValues(root interface{}) util.Errors {
 	if err := util.UnmarshalWithJSONPB(string(vs), val, false); err != nil {
 		return util.Errors{err}
 	}
-	return ValuesValidate(DefaultValuesValidations, v1alpha1.AsMap(root.(*types.Struct)), nil)
+	return ValuesValidate(DefaultValuesValidations, root.(*structpb.Struct).AsMap(), nil)
 }
 
 // ValuesValidate validates the values of the tree using the supplied Func
diff --git a/operator/pkg/validate/validate_values_test.go b/operator/pkg/validate/validate_values_test.go
index e87143631d..d882041a29 100644
--- a/operator/pkg/validate/validate_values_test.go
+++ b/operator/pkg/validate/validate_values_test.go
@@ -22,7 +22,6 @@
 
 	"sigs.k8s.io/yaml"
 
-	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/helm"
 	"istio.io/istio/operator/pkg/object"
 	"istio.io/istio/operator/pkg/util"
@@ -159,7 +158,7 @@ func TestValidateValues(t *testing.T) {
 			if err != nil {
 				t.Fatalf("yaml.Unmarshal(%s): got error %s", tt.desc, err)
 			}
-			errs := CheckValues(v1alpha1.MustNewStruct(root))
+			errs := CheckValues(util.MustStruct(root))
 			if gotErr, wantErr := errs, tt.wantErrs; !util.EqualErrors(gotErr, wantErr) {
 				t.Errorf("CheckValues(%s)(%v): gotErr:%s, wantErr:%s", tt.desc, tt.yamlStr, gotErr, wantErr)
 			}
@@ -225,7 +224,7 @@ func TestValidateValuesFromValuesYAMLs(t *testing.T) {
 		if err := yaml.Unmarshal([]byte(valuesYAML), &valuesTree); err != nil {
 			t.Fatal(err.Error())
 		}
-		if err := CheckValues(v1alpha1.MustNewStruct(valuesTree)); err != nil {
+		if err := CheckValues(util.MustStruct(valuesTree)); err != nil {
 			t.Fatalf("file %s failed validation with: %s", f, err)
 		}
 	}
diff --git a/operator/pkg/version/version_test.go b/operator/pkg/version/version_test.go
index 6f63743e69..bf3183c1ec 100644
--- a/operator/pkg/version/version_test.go
+++ b/operator/pkg/version/version_test.go
@@ -16,11 +16,11 @@
 
 import (
 	"fmt"
-	"reflect"
 	"testing"
 
-	"github.com/kr/pretty"
 	"gopkg.in/yaml.v2"
+
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 func TestVersion(t *testing.T) {
@@ -92,8 +92,8 @@ func TestVersion(t *testing.T) {
 			if gotErr, wantErr := errToString(err), tt.wantErr; gotErr != wantErr {
 				t.Fatalf("yaml.Unmarshal(%s): got error: %s, want error: %s", tt.desc, gotErr, wantErr)
 			}
-			if tt.wantErr == "" && !reflect.DeepEqual(got, tt.want) {
-				t.Errorf("%s: got:\n%s\nwant:\n%s\n", tt.desc, pretty.Sprint(got), pretty.Sprint(tt.want))
+			if tt.wantErr == "" {
+				assert.Equal(t, got, tt.want)
 			}
 		})
 	}
diff --git a/pilot/cmd/pilot-agent/config/config.go b/pilot/cmd/pilot-agent/config/config.go
index 5e7c3e559d..ec59a34658 100644
--- a/pilot/cmd/pilot-agent/config/config.go
+++ b/pilot/cmd/pilot-agent/config/config.go
@@ -20,7 +20,7 @@
 	"strconv"
 	"strings"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/wrapperspb"
 
 	"istio.io/api/annotation"
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -62,7 +62,7 @@ func ConstructProxyConfig(meshConfigFile, serviceCluster, proxyConfigEnv string,
 	if concurrency != 0 {
 		// If --concurrency is explicitly set, we will use that. Otherwise, use source determined by
 		// proxy config.
-		proxyConfig.Concurrency = &types.Int32Value{Value: int32(concurrency)}
+		proxyConfig.Concurrency = &wrapperspb.Int32Value{Value: int32(concurrency)}
 	}
 	if x, ok := proxyConfig.GetClusterName().(*meshconfig.ProxyConfig_ServiceCluster); ok {
 		if x.ServiceCluster == "" {
diff --git a/pilot/cmd/pilot-agent/config/config_test.go b/pilot/cmd/pilot-agent/config/config_test.go
index d40c24d1d5..6c95478e05 100644
--- a/pilot/cmd/pilot-agent/config/config_test.go
+++ b/pilot/cmd/pilot-agent/config/config_test.go
@@ -15,11 +15,12 @@
 package config
 
 import (
-	"reflect"
 	"testing"
 	"time"
 
-	"github.com/gogo/protobuf/types"
+	"github.com/google/go-cmp/cmp"
+	"google.golang.org/protobuf/testing/protocmp"
+	"google.golang.org/protobuf/types/known/durationpb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pkg/config/mesh"
@@ -42,7 +43,7 @@ func TestGetMeshConfig(t *testing.T) {
 		m := mesh.DefaultProxyConfig()
 		m.DiscoveryAddress = "foo:123"
 		m.ProxyMetadata = map[string]string{"SOME": "setting"}
-		m.DrainDuration = types.DurationProto(time.Second)
+		m.DrainDuration = durationpb.New(time.Second)
 		m.ControlPlaneAuthPolicy = meshconfig.AuthenticationPolicy_NONE
 		return m
 	}()
@@ -54,8 +55,11 @@ func TestGetMeshConfig(t *testing.T) {
 		expect      *meshconfig.ProxyConfig
 	}{
 		{
-			name:   "Defaults",
-			expect: mesh.DefaultProxyConfig(),
+			name: "Defaults",
+			expect: func() *meshconfig.ProxyConfig {
+				m := mesh.DefaultProxyConfig()
+				return m
+			}(),
 		},
 		{
 			name:       "Annotation Override",
@@ -108,7 +112,7 @@ func TestGetMeshConfig(t *testing.T) {
 				m := mesh.DefaultProxyConfig()
 				m.DiscoveryAddress = "annotation:123"
 				m.ProxyMetadata = map[string]string{"ANNOTATION": "something", "SOME": "setting"}
-				m.DrainDuration = types.DurationProto(5 * time.Second)
+				m.DrainDuration = durationpb.New(5 * time.Second)
 				m.ExtraStatTags = []string{"b"}
 				m.ProxyStatsMatcher = &meshconfig.ProxyConfig_ProxyStatsMatcher{}
 				m.ProxyStatsMatcher.InclusionPrefixes = []string{"a"}
@@ -126,8 +130,8 @@ func TestGetMeshConfig(t *testing.T) {
 			if err != nil {
 				t.Fatal(err)
 			}
-			if !reflect.DeepEqual(got.DefaultConfig, tt.expect) {
-				t.Fatalf("got \n%v expected \n%v", *got.DefaultConfig, tt.expect)
+			if !cmp.Equal(got.DefaultConfig, tt.expect, protocmp.Transform()) {
+				t.Fatalf("got \n%v expected \n%v", got.DefaultConfig, tt.expect)
 			}
 		})
 	}
diff --git a/pilot/cmd/pilot-agent/main.go b/pilot/cmd/pilot-agent/main.go
index c229e2efb2..fedd2c30c4 100644
--- a/pilot/cmd/pilot-agent/main.go
+++ b/pilot/cmd/pilot-agent/main.go
@@ -34,7 +34,7 @@
 	"istio.io/istio/pkg/envoy"
 	istio_agent "istio.io/istio/pkg/istio-agent"
 	"istio.io/istio/pkg/security"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	stsserver "istio.io/istio/security/pkg/stsservice/server"
 	"istio.io/istio/security/pkg/stsservice/tokenmanager"
 	cleaniptables "istio.io/istio/tools/istio-clean-iptables/pkg/cmd"
@@ -99,7 +99,7 @@
 			if err != nil {
 				return fmt.Errorf("failed to get proxy config: %v", err)
 			}
-			if out, err := gogoprotomarshal.ToYAML(proxyConfig); err != nil {
+			if out, err := protomarshal.ToYAML(proxyConfig); err != nil {
 				log.Infof("Failed to serialize to YAML: %v", err)
 			} else {
 				log.Infof("Effective config: %s", out)
diff --git a/pilot/pkg/bootstrap/server.go b/pilot/pkg/bootstrap/server.go
index 81f9601b23..1771bf10f2 100644
--- a/pilot/pkg/bootstrap/server.go
+++ b/pilot/pkg/bootstrap/server.go
@@ -369,13 +369,13 @@ func initOIDC(args *PilotArgs, trustDomain string) (security.Authenticator, erro
 	// JWTRule is from the JWT_RULE environment variable.
 	// An example of json string for JWTRule is:
 	// `{"issuer": "foo", "jwks_uri": "baz", "audiences": ["aud1", "aud2"]}`.
-	jwtRule := v1beta1.JWTRule{}
-	err := json.Unmarshal([]byte(args.JwtRule), &jwtRule)
+	jwtRule := &v1beta1.JWTRule{}
+	err := json.Unmarshal([]byte(args.JwtRule), jwtRule)
 	if err != nil {
 		return nil, fmt.Errorf("failed to unmarshal JWT rule: %v", err)
 	}
 	log.Infof("Istiod authenticating using JWTRule: %v", jwtRule)
-	jwtAuthn, err := authenticate.NewJwtAuthenticator(&jwtRule, trustDomain)
+	jwtAuthn, err := authenticate.NewJwtAuthenticator(jwtRule, trustDomain)
 	if err != nil {
 		return nil, fmt.Errorf("failed to create the JWT authenticator: %v", err)
 	}
diff --git a/pilot/pkg/config/kube/crd/conversion_test.go b/pilot/pkg/config/kube/crd/conversion_test.go
index ff9191cd01..d92b59542f 100644
--- a/pilot/pkg/config/kube/crd/conversion_test.go
+++ b/pilot/pkg/config/kube/crd/conversion_test.go
@@ -15,13 +15,13 @@
 package crd
 
 import (
-	"reflect"
 	"testing"
 
 	"istio.io/api/meta/v1alpha1"
 	"istio.io/istio/pilot/test/mock"
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/schema/collections"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 func TestConvert(t *testing.T) {
@@ -54,9 +54,7 @@ func TestConvert(t *testing.T) {
 	if err != nil {
 		t.Errorf("ConvertObject() => unexpected error %v", err)
 	}
-	if !reflect.DeepEqual(&cfg, got) {
-		t.Errorf("ConvertObject(ConvertConfig(%#v)) => got %#v", cfg, got)
-	}
+	assert.Equal(t, &cfg, got)
 }
 
 func TestParseInputs(t *testing.T) {
diff --git a/pilot/pkg/config/kube/gateway/conversion_test.go b/pilot/pkg/config/kube/gateway/conversion_test.go
index e2beedcc06..fd8a28db4b 100644
--- a/pilot/pkg/config/kube/gateway/conversion_test.go
+++ b/pilot/pkg/config/kube/gateway/conversion_test.go
@@ -39,6 +39,7 @@
 	crdvalidation "istio.io/istio/pkg/config/crd"
 	"istio.io/istio/pkg/config/schema/gvk"
 	"istio.io/istio/pkg/test"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 func TestConvertResources(t *testing.T) {
@@ -123,9 +124,7 @@ func TestConvertResources(t *testing.T) {
 				}
 			}
 			golden := splitOutput(readConfig(t, goldenFile, validator))
-			if diff := cmp.Diff(golden, output); diff != "" {
-				t.Fatalf("Diff:\n%s", diff)
-			}
+			assert.Equal(t, golden, output)
 
 			outputStatus := getStatus(t, kr.GatewayClass, kr.Gateway, kr.HTTPRoute, kr.TLSRoute, kr.TCPRoute)
 			goldenStatusFile := fmt.Sprintf("testdata/%s.status.yaml.golden", tt.name)
diff --git a/pilot/pkg/controller/workloadentry/workloadentry_controller.go b/pilot/pkg/controller/workloadentry/workloadentry_controller.go
index 35470fed41..b71951be0f 100644
--- a/pilot/pkg/controller/workloadentry/workloadentry_controller.go
+++ b/pilot/pkg/controller/workloadentry/workloadentry_controller.go
@@ -23,10 +23,10 @@
 	"time"
 
 	"github.com/cenkalti/backoff/v4"
-	"github.com/gogo/protobuf/types"
 	"golang.org/x/time/rate"
 	"google.golang.org/grpc/codes"
 	grpcstatus "google.golang.org/grpc/status"
+	"google.golang.org/protobuf/types/known/timestamppb"
 	"k8s.io/apimachinery/pkg/api/errors"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 	kubetypes "k8s.io/apimachinery/pkg/types"
@@ -441,7 +441,7 @@ func (c *Controller) updateWorkloadEntryHealth(obj interface{}) error {
 	if ok {
 		healthCondition := status.GetCondition(wleStatus.Conditions, status.ConditionHealthy)
 		if healthCondition != nil {
-			if healthCondition.LastProbeTime.Compare(condition.condition.LastProbeTime) > 0 {
+			if healthCondition.LastProbeTime.AsTime().After(condition.condition.LastProbeTime.AsTime()) {
 				return nil
 			}
 		}
@@ -573,8 +573,8 @@ func transformHealthEvent(proxy *model.Proxy, entryName string, event HealthEven
 		Type: status.ConditionHealthy,
 		// last probe and transition are the same because
 		// we only send on transition in the agent
-		LastProbeTime:      types.TimestampNow(),
-		LastTransitionTime: types.TimestampNow(),
+		LastProbeTime:      timestamppb.Now(),
+		LastTransitionTime: timestamppb.Now(),
 	}
 	out := HealthCondition{
 		proxy:     proxy,
diff --git a/pilot/pkg/controller/workloadentry/workloadentry_controller_test.go b/pilot/pkg/controller/workloadentry/workloadentry_controller_test.go
index 598ab10e12..179283ff0a 100644
--- a/pilot/pkg/controller/workloadentry/workloadentry_controller_test.go
+++ b/pilot/pkg/controller/workloadentry/workloadentry_controller_test.go
@@ -21,7 +21,6 @@
 	"time"
 
 	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
-	"github.com/google/go-cmp/cmp"
 	"github.com/hashicorp/go-multierror"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 	kubetypes "k8s.io/apimachinery/pkg/types"
@@ -39,6 +38,7 @@
 	"istio.io/istio/pkg/keepalive"
 	"istio.io/istio/pkg/network"
 	"istio.io/istio/pkg/test"
+	"istio.io/istio/pkg/test/util/assert"
 	"istio.io/istio/pkg/test/util/retry"
 )
 
@@ -305,9 +305,7 @@ func TestWorkloadEntryFromGroup(t *testing.T) {
 	}
 
 	got := workloadEntryFromGroup("test-we", proxy, &group)
-	if diff := cmp.Diff(got, &want); diff != "" {
-		t.Errorf(diff)
-	}
+	assert.Equal(t, got, &want)
 }
 
 func setup(t *testing.T) (*Controller, *Controller, model.ConfigStoreCache) {
diff --git a/pilot/pkg/model/authorization_test.go b/pilot/pkg/model/authorization_test.go
index bdacc1e986..38a1035b7f 100644
--- a/pilot/pkg/model/authorization_test.go
+++ b/pilot/pkg/model/authorization_test.go
@@ -19,7 +19,7 @@
 	"reflect"
 	"testing"
 
-	"github.com/gogo/protobuf/proto"
+	"github.com/golang/protobuf/proto"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	authpb "istio.io/api/security/v1beta1"
diff --git a/pilot/pkg/model/context.go b/pilot/pkg/model/context.go
index 32e2aa6a47..5b44505adb 100644
--- a/pilot/pkg/model/context.go
+++ b/pilot/pkg/model/context.go
@@ -28,7 +28,7 @@
 
 	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
-	gogojsonpb "github.com/gogo/protobuf/jsonpb"
+	"github.com/golang/protobuf/jsonpb"
 	any "google.golang.org/protobuf/types/known/anypb"
 	"google.golang.org/protobuf/types/known/structpb"
 
@@ -439,10 +439,10 @@ func (s *StringBool) UnmarshalJSON(data []byte) error {
 // To allow marshaling, we need to define a custom type that calls out to the gogo marshaller
 type NodeMetaProxyConfig meshconfig.ProxyConfig
 
-func (s NodeMetaProxyConfig) MarshalJSON() ([]byte, error) {
+func (s *NodeMetaProxyConfig) MarshalJSON() ([]byte, error) {
 	var buf bytes.Buffer
-	pc := meshconfig.ProxyConfig(s)
-	if err := (&gogojsonpb.Marshaler{}).Marshal(&buf, &pc); err != nil {
+	pc := (*meshconfig.ProxyConfig)(s)
+	if err := (&jsonpb.Marshaler{}).Marshal(&buf, pc); err != nil {
 		return nil, err
 	}
 	return buf.Bytes(), nil
@@ -450,7 +450,7 @@ func (s NodeMetaProxyConfig) MarshalJSON() ([]byte, error) {
 
 func (s *NodeMetaProxyConfig) UnmarshalJSON(data []byte) error {
 	pc := (*meshconfig.ProxyConfig)(s)
-	return gogojsonpb.Unmarshal(bytes.NewReader(data), pc)
+	return jsonpb.Unmarshal(bytes.NewReader(data), pc)
 }
 
 // Node is a typed version of Envoy node with metadata.
diff --git a/pilot/pkg/model/context_test.go b/pilot/pkg/model/context_test.go
index 488c0c3963..6ce8a00039 100644
--- a/pilot/pkg/model/context_test.go
+++ b/pilot/pkg/model/context_test.go
@@ -20,7 +20,7 @@
 	"testing"
 	"time"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/durationpb"
 	structpb "google.golang.org/protobuf/types/known/structpb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -80,7 +80,7 @@ func TestNodeMetadata(t *testing.T) {
 				NodeMetadata: model.NodeMetadata{
 					ProxyConfig: (*model.NodeMetaProxyConfig)(&meshconfig.ProxyConfig{
 						ConfigPath:             "foo",
-						DrainDuration:          types.DurationProto(time.Second * 5),
+						DrainDuration:          durationpb.New(time.Second * 5),
 						ControlPlaneAuthPolicy: meshconfig.AuthenticationPolicy_MUTUAL_TLS,
 						EnvoyAccessLogService: &meshconfig.RemoteService{
 							Address: "address",
@@ -97,7 +97,7 @@ func TestNodeMetadata(t *testing.T) {
 				NodeMetadata: model.NodeMetadata{
 					ProxyConfig: (*model.NodeMetaProxyConfig)(&meshconfig.ProxyConfig{
 						ConfigPath:             "foo",
-						DrainDuration:          types.DurationProto(time.Second * 5),
+						DrainDuration:          durationpb.New(time.Second * 5),
 						ControlPlaneAuthPolicy: meshconfig.AuthenticationPolicy_MUTUAL_TLS,
 						EnvoyAccessLogService: &meshconfig.RemoteService{
 							Address: "address",
@@ -136,9 +136,12 @@ func TestNodeMetadata(t *testing.T) {
 			if err := json.Unmarshal(j, &meta); err != nil {
 				t.Fatalf("failed to unmarshal: %v", err)
 			}
-			if !reflect.DeepEqual(meta, tt.inOut) {
-				t.Fatalf("Got metadata\n%#v, expected\n%#v", meta, tt.inOut)
-			}
+
+			assert.Equal(t, (*meshconfig.ProxyConfig)(meta.NodeMetadata.ProxyConfig), (*meshconfig.ProxyConfig)(tt.inOut.NodeMetadata.ProxyConfig))
+			// cmp cannot handle the type-alias in the metadata, so check them separately.
+			meta.NodeMetadata.ProxyConfig = nil
+			tt.inOut.NodeMetadata.ProxyConfig = nil
+			assert.Equal(t, meta, tt.inOut)
 		})
 	}
 }
diff --git a/pilot/pkg/model/conversion_test.go b/pilot/pkg/model/conversion_test.go
index ebdd06808f..a12dc270ab 100644
--- a/pilot/pkg/model/conversion_test.go
+++ b/pilot/pkg/model/conversion_test.go
@@ -26,7 +26,8 @@
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pilot/pkg/config/kube/crd"
 	"istio.io/istio/pkg/config/schema/collections"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/test/util/assert"
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
 func TestApplyJSON(t *testing.T) {
@@ -47,7 +48,7 @@ func TestApplyJSON(t *testing.T) {
 	for i, c := range cases {
 		t.Run(fmt.Sprintf("[%v]", i), func(tt *testing.T) {
 			var got meshconfig.MeshConfig
-			err := gogoprotomarshal.ApplyJSON(c.in, &got)
+			err := protomarshal.ApplyJSON(c.in, &got)
 			if err != nil {
 				if !c.wantErr {
 					tt.Fatalf("got unexpected error: %v", err)
@@ -56,9 +57,7 @@ func TestApplyJSON(t *testing.T) {
 				if c.wantErr {
 					tt.Fatal("unexpected success, expected error")
 				}
-				if !reflect.DeepEqual(&got, c.want) {
-					tt.Fatalf("ApplyJSON(%v): got %v want %v", c.in, &got, c.want)
-				}
+				assert.Equal(t, &got, c.want)
 			}
 		})
 	}
@@ -127,7 +126,7 @@ func TestProtoSchemaConversions(t *testing.T) {
 		t.Errorf("FromYAML should have failed using Schema with bad MessageName")
 	}
 
-	gotJSON, err := gogoprotomarshal.ToJSON(msg)
+	gotJSON, err := protomarshal.ToJSON(msg)
 	if err != nil {
 		t.Errorf("ToJSON failed: %v", err)
 	}
@@ -135,7 +134,7 @@ func TestProtoSchemaConversions(t *testing.T) {
 		t.Errorf("ToJSON failed: got %s, want %s", gotJSON, wantJSON)
 	}
 
-	if _, err = gogoprotomarshal.ToJSON(nil); err == nil {
+	if _, err = protomarshal.ToJSON(nil); err == nil {
 		t.Error("should produce an error")
 	}
 
@@ -147,7 +146,7 @@ func TestProtoSchemaConversions(t *testing.T) {
 		t.Errorf("FromYAML failed: got %+v want %+v", spew.Sdump(gotFromJSON), spew.Sdump(msg))
 	}
 
-	gotYAML, err := gogoprotomarshal.ToYAML(msg)
+	gotYAML, err := protomarshal.ToYAML(msg)
 	if err != nil {
 		t.Errorf("ToYAML failed: %v", err)
 	}
@@ -155,7 +154,7 @@ func TestProtoSchemaConversions(t *testing.T) {
 		t.Errorf("ToYAML failed: got %+v want %+v", spew.Sdump(gotYAML), spew.Sdump(wantYAML))
 	}
 
-	if _, err = gogoprotomarshal.ToYAML(nil); err == nil {
+	if _, err = protomarshal.ToYAML(nil); err == nil {
 		t.Error("should produce an error")
 	}
 
@@ -171,7 +170,7 @@ func TestProtoSchemaConversions(t *testing.T) {
 		t.Errorf("should produce an error")
 	}
 
-	gotJSONMap, err := gogoprotomarshal.ToJSONMap(msg)
+	gotJSONMap, err := protomarshal.ToJSONMap(msg)
 	if err != nil {
 		t.Errorf("ToJSONMap failed: %v", err)
 	}
@@ -179,7 +178,7 @@ func TestProtoSchemaConversions(t *testing.T) {
 		t.Errorf("ToJSONMap failed: \ngot %vwant %v", spew.Sdump(gotJSONMap), spew.Sdump(wantJSONMap))
 	}
 
-	if _, err = gogoprotomarshal.ToJSONMap(nil); err == nil {
+	if _, err = protomarshal.ToJSONMap(nil); err == nil {
 		t.Error("should produce an error")
 	}
 
diff --git a/pilot/pkg/model/destination_rule.go b/pilot/pkg/model/destination_rule.go
index 299198e6e1..77200df34e 100644
--- a/pilot/pkg/model/destination_rule.go
+++ b/pilot/pkg/model/destination_rule.go
@@ -17,7 +17,7 @@
 import (
 	"fmt"
 
-	"github.com/gogo/protobuf/proto"
+	"google.golang.org/protobuf/proto"
 
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pkg/config"
diff --git a/pilot/pkg/model/extensions.go b/pilot/pkg/model/extensions.go
index 3315aa53bd..02e95e7c43 100644
--- a/pilot/pkg/model/extensions.go
+++ b/pilot/pkg/model/extensions.go
@@ -29,7 +29,7 @@
 	extensions "istio.io/api/extensions/v1alpha1"
 	"istio.io/istio/pilot/pkg/networking"
 	"istio.io/istio/pkg/config"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
 const (
@@ -39,7 +39,7 @@
 )
 
 type WasmPluginWrapper struct {
-	extensions.WasmPlugin
+	*extensions.WasmPlugin
 
 	Name      string
 	Namespace string
@@ -56,7 +56,7 @@ func convertToWasmPluginWrapper(plugin *config.Config) *WasmPluginWrapper {
 
 	cfg := &anypb.Any{}
 	if wasmPlugin.PluginConfig != nil && len(wasmPlugin.PluginConfig.Fields) > 0 {
-		cfgJSON, err := gogoprotomarshal.ToJSON(wasmPlugin.PluginConfig)
+		cfgJSON, err := protomarshal.ToJSON(wasmPlugin.PluginConfig)
 		if err != nil {
 			log.Warnf("wasmplugin %v/%v discarded due to json marshaling error: %s", plugin.Namespace, plugin.Name, err)
 			return nil
@@ -96,7 +96,7 @@ func convertToWasmPluginWrapper(plugin *config.Config) *WasmPluginWrapper {
 	return &WasmPluginWrapper{
 		Name:                   plugin.Name,
 		Namespace:              plugin.Namespace,
-		WasmPlugin:             *wasmPlugin,
+		WasmPlugin:             wasmPlugin,
 		ExtensionConfiguration: ec,
 	}
 }
diff --git a/pilot/pkg/model/proxy_config.go b/pilot/pkg/model/proxy_config.go
index 6c5363f76b..75a0c959e2 100644
--- a/pilot/pkg/model/proxy_config.go
+++ b/pilot/pkg/model/proxy_config.go
@@ -15,7 +15,7 @@
 package model
 
 import (
-	"github.com/gogo/protobuf/proto"
+	"google.golang.org/protobuf/proto"
 
 	"istio.io/api/annotation"
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -23,7 +23,7 @@
 	"istio.io/istio/pkg/config/labels"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/config/schema/collections"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	istiolog "istio.io/pkg/log"
 )
 
@@ -154,7 +154,7 @@ func toMeshConfigProxyConfig(pc *v1beta1.ProxyConfig) *meshconfig.ProxyConfig {
 
 func proxyConfigFromAnnotation(pcAnnotation string) (*meshconfig.ProxyConfig, error) {
 	pc := &meshconfig.ProxyConfig{}
-	if err := gogoprotomarshal.ApplyYAML(pcAnnotation, pc); err != nil {
+	if err := protomarshal.ApplyYAML(pcAnnotation, pc); err != nil {
 		return nil, err
 	}
 	return pc, nil
diff --git a/pilot/pkg/model/proxy_config_test.go b/pilot/pkg/model/proxy_config_test.go
index a565f13c3f..c15208bc5d 100644
--- a/pilot/pkg/model/proxy_config_test.go
+++ b/pilot/pkg/model/proxy_config_test.go
@@ -18,9 +18,8 @@
 	"testing"
 	"time"
 
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
-	"github.com/google/go-cmp/cmp"
+	"github.com/golang/protobuf/proto"
+	"github.com/golang/protobuf/ptypes/wrappers"
 
 	"istio.io/api/annotation"
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -29,6 +28,7 @@
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/config/schema/gvk"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 var now = time.Now()
@@ -44,10 +44,10 @@ func TestConvertToMeshConfigProxyConfig(t *testing.T) {
 		{
 			name: "concurrency",
 			pc: &v1beta1.ProxyConfig{
-				Concurrency: &types.Int32Value{Value: 3},
+				Concurrency: &wrappers.Int32Value{Value: 3},
 			},
 			expected: &meshconfig.ProxyConfig{
-				Concurrency: &types.Int32Value{Value: 3},
+				Concurrency: &wrappers.Int32Value{Value: 3},
 			},
 		},
 		{
@@ -69,9 +69,7 @@ func TestConvertToMeshConfigProxyConfig(t *testing.T) {
 
 	for _, tc := range cases {
 		converted := toMeshConfigProxyConfig(tc.pc)
-		if diff := cmp.Diff(converted, tc.expected); diff != "" {
-			t.Fatalf("expected and received not the same: %s", diff)
-		}
+		assert.Equal(t, converted, tc.expected)
 	}
 }
 
@@ -207,9 +205,7 @@ func TestMergeWithPrecedence(t *testing.T) {
 
 	for _, tc := range cases {
 		merged := mergeWithPrecedence(tc.first, tc.second)
-		if diff := cmp.Diff(merged, tc.expected); diff != "" {
-			t.Fatalf("expected and received not the same: %s", diff)
-		}
+		assert.Equal(t, merged, tc.expected)
 	}
 }
 
@@ -398,9 +394,8 @@ func TestEffectiveProxyConfig(t *testing.T) {
 				})
 			pc := mesh.DefaultProxyConfig()
 			proto.Merge(pc, tc.expected)
-			if diff := cmp.Diff(merged, pc); diff != "" {
-				t.Fatalf("merged did not equal expected: %s", diff)
-			}
+
+			assert.Equal(t, merged, pc)
 		})
 	}
 }
@@ -440,8 +435,8 @@ func newMeta(ns string, labels, annotations map[string]string) *NodeMetadata {
 	}
 }
 
-func v(x int32) *types.Int32Value {
-	return &types.Int32Value{Value: x}
+func v(x int32) *wrappers.Int32Value {
+	return &wrappers.Int32Value{Value: x}
 }
 
 func selector(l map[string]string) *istioTypes.WorkloadSelector {
diff --git a/pilot/pkg/model/push_context_test.go b/pilot/pkg/model/push_context_test.go
index d3a42fcd7e..5997cf67fe 100644
--- a/pilot/pkg/model/push_context_test.go
+++ b/pilot/pkg/model/push_context_test.go
@@ -23,11 +23,14 @@
 	"testing"
 	"time"
 
-	"github.com/gogo/protobuf/types"
+	"github.com/golang/protobuf/ptypes/wrappers"
 	"github.com/google/go-cmp/cmp"
 	"github.com/google/go-cmp/cmp/cmpopts"
 	. "github.com/onsi/gomega"
 	"go.uber.org/atomic"
+	"google.golang.org/protobuf/testing/protocmp"
+	"google.golang.org/protobuf/types/known/durationpb"
+	"google.golang.org/protobuf/types/known/structpb"
 
 	extensions "istio.io/api/extensions/v1alpha1"
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -43,6 +46,7 @@
 	"istio.io/istio/pkg/config/schema/collections"
 	"istio.io/istio/pkg/config/schema/gvk"
 	"istio.io/istio/pkg/config/visibility"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 func TestMergeUpdateRequest(t *testing.T) {
@@ -464,7 +468,7 @@ func TestWasmPlugins(t *testing.T) {
 			Meta: config.Meta{Name: "invalid-url", Namespace: constants.IstioSystemNamespace, GroupVersionKind: gvk.WasmPlugin},
 			Spec: &extensions.WasmPlugin{
 				Phase:    extensions.PluginPhase_AUTHN,
-				Priority: &types.Int64Value{Value: 5},
+				Priority: &wrappers.Int64Value{Value: 5},
 				Url:      "notavalid%%Url;",
 			},
 		},
@@ -472,12 +476,12 @@ func TestWasmPlugins(t *testing.T) {
 			Meta: config.Meta{Name: "authn-low-prio-all", Namespace: "testns-1", GroupVersionKind: gvk.WasmPlugin},
 			Spec: &extensions.WasmPlugin{
 				Phase:    extensions.PluginPhase_AUTHN,
-				Priority: &types.Int64Value{Value: 10},
+				Priority: &wrappers.Int64Value{Value: 10},
 				Url:      "file:///etc/istio/filters/authn.wasm",
-				PluginConfig: &types.Struct{
-					Fields: map[string]*types.Value{
+				PluginConfig: &structpb.Struct{
+					Fields: map[string]*structpb.Value{
 						"test": {
-							Kind: &types.Value_StringValue{StringValue: "test"},
+							Kind: &structpb.Value_StringValue{StringValue: "test"},
 						},
 					},
 				},
@@ -488,7 +492,7 @@ func TestWasmPlugins(t *testing.T) {
 			Meta: config.Meta{Name: "global-authn-low-prio-ingress", Namespace: constants.IstioSystemNamespace, GroupVersionKind: gvk.WasmPlugin},
 			Spec: &extensions.WasmPlugin{
 				Phase:    extensions.PluginPhase_AUTHN,
-				Priority: &types.Int64Value{Value: 5},
+				Priority: &wrappers.Int64Value{Value: 5},
 				Selector: &selectorpb.WorkloadSelector{
 					MatchLabels: map[string]string{
 						"istio": "ingressgateway",
@@ -500,14 +504,14 @@ func TestWasmPlugins(t *testing.T) {
 			Meta: config.Meta{Name: "authn-med-prio-all", Namespace: "testns-1", GroupVersionKind: gvk.WasmPlugin},
 			Spec: &extensions.WasmPlugin{
 				Phase:    extensions.PluginPhase_AUTHN,
-				Priority: &types.Int64Value{Value: 50},
+				Priority: &wrappers.Int64Value{Value: 50},
 			},
 		},
 		"global-authn-high-prio-app": {
 			Meta: config.Meta{Name: "global-authn-high-prio-app", Namespace: constants.IstioSystemNamespace, GroupVersionKind: gvk.WasmPlugin},
 			Spec: &extensions.WasmPlugin{
 				Phase:    extensions.PluginPhase_AUTHN,
-				Priority: &types.Int64Value{Value: 1000},
+				Priority: &wrappers.Int64Value{Value: 1000},
 				Selector: &selectorpb.WorkloadSelector{
 					MatchLabels: map[string]string{
 						"app": "productpage",
@@ -519,7 +523,7 @@ func TestWasmPlugins(t *testing.T) {
 			Meta: config.Meta{Name: "global-authz-med-prio-app", Namespace: constants.IstioSystemNamespace, GroupVersionKind: gvk.WasmPlugin},
 			Spec: &extensions.WasmPlugin{
 				Phase:    extensions.PluginPhase_AUTHZ,
-				Priority: &types.Int64Value{Value: 50},
+				Priority: &wrappers.Int64Value{Value: 50},
 				Selector: &selectorpb.WorkloadSelector{
 					MatchLabels: map[string]string{
 						"app": "productpage",
@@ -531,7 +535,7 @@ func TestWasmPlugins(t *testing.T) {
 			Meta: config.Meta{Name: "authz-high-prio-ingress", Namespace: "testns-2", GroupVersionKind: gvk.WasmPlugin},
 			Spec: &extensions.WasmPlugin{
 				Phase:    extensions.PluginPhase_AUTHZ,
-				Priority: &types.Int64Value{Value: 1000},
+				Priority: &wrappers.Int64Value{Value: 1000},
 			},
 		},
 	}
@@ -942,6 +946,7 @@ func TestInitPushContext(t *testing.T) {
 		// These are not feasible/worth comparing
 		cmpopts.IgnoreTypes(sync.RWMutex{}, localServiceDiscovery{}, FakeStore{}, atomic.Bool{}, sync.Mutex{}),
 		cmpopts.IgnoreInterfaces(struct{ mesh.Holder }{}),
+		protocmp.Transform(),
 	)
 	if diff != "" {
 		t.Fatalf("Push context had a diff after update: %v", diff)
@@ -1172,7 +1177,7 @@ func TestSetDestinationRuleInheritance(t *testing.T) {
 			TrafficPolicy: &networking.TrafficPolicy{
 				ConnectionPool: &networking.ConnectionPoolSettings{
 					Tcp: &networking.ConnectionPoolSettings_TCPSettings{
-						ConnectTimeout: &types.Duration{Seconds: 1},
+						ConnectTimeout: &durationpb.Duration{Seconds: 1},
 						MaxConnections: 111,
 					},
 				},
@@ -1193,8 +1198,8 @@ func TestSetDestinationRuleInheritance(t *testing.T) {
 		Spec: &networking.DestinationRule{
 			TrafficPolicy: &networking.TrafficPolicy{
 				OutlierDetection: &networking.OutlierDetection{
-					ConsecutiveGatewayErrors: &types.UInt32Value{Value: 222},
-					Interval:                 &types.Duration{Seconds: 22},
+					ConsecutiveGatewayErrors: &wrappers.UInt32Value{Value: 222},
+					Interval:                 &durationpb.Duration{Seconds: 22},
 				},
 				ConnectionPool: &networking.ConnectionPoolSettings{
 					Http: &networking.ConnectionPoolSettings_HTTPSettings{
@@ -1217,11 +1222,11 @@ func TestSetDestinationRuleInheritance(t *testing.T) {
 						MaxRetries: 33,
 					},
 					Tcp: &networking.ConnectionPoolSettings_TCPSettings{
-						ConnectTimeout: &types.Duration{Seconds: 33},
+						ConnectTimeout: &durationpb.Duration{Seconds: 33},
 					},
 				},
 				OutlierDetection: &networking.OutlierDetection{
-					Consecutive_5XxErrors: &types.UInt32Value{Value: 3},
+					Consecutive_5XxErrors: &wrappers.UInt32Value{Value: 3},
 				},
 				Tls: &networking.ClientTLSSettings{
 					Mode: networking.ClientTLSSettings_SIMPLE,
@@ -1267,14 +1272,14 @@ func TestSetDestinationRuleInheritance(t *testing.T) {
 						MaxRetries: 33,
 					},
 					Tcp: &networking.ConnectionPoolSettings_TCPSettings{
-						ConnectTimeout: &types.Duration{Seconds: 33},
+						ConnectTimeout: &durationpb.Duration{Seconds: 33},
 						MaxConnections: 111,
 					},
 				},
 				OutlierDetection: &networking.OutlierDetection{
-					Consecutive_5XxErrors:    &types.UInt32Value{Value: 3},
-					ConsecutiveGatewayErrors: &types.UInt32Value{Value: 222},
-					Interval:                 &types.Duration{Seconds: 22},
+					Consecutive_5XxErrors:    &wrappers.UInt32Value{Value: 3},
+					ConsecutiveGatewayErrors: &wrappers.UInt32Value{Value: 222},
+					Interval:                 &durationpb.Duration{Seconds: 22},
 				},
 				Tls: &networking.ClientTLSSettings{
 					Mode: networking.ClientTLSSettings_SIMPLE,
@@ -1290,7 +1295,7 @@ func TestSetDestinationRuleInheritance(t *testing.T) {
 			expectedPolicy: &networking.TrafficPolicy{
 				ConnectionPool: &networking.ConnectionPoolSettings{
 					Tcp: &networking.ConnectionPoolSettings_TCPSettings{
-						ConnectTimeout: &types.Duration{Seconds: 1},
+						ConnectTimeout: &durationpb.Duration{Seconds: 1},
 						MaxConnections: 111,
 					},
 				},
@@ -1314,13 +1319,13 @@ func TestSetDestinationRuleInheritance(t *testing.T) {
 						MaxRetries: 2,
 					},
 					Tcp: &networking.ConnectionPoolSettings_TCPSettings{
-						ConnectTimeout: &types.Duration{Seconds: 1},
+						ConnectTimeout: &durationpb.Duration{Seconds: 1},
 						MaxConnections: 111,
 					},
 				},
 				OutlierDetection: &networking.OutlierDetection{
-					ConsecutiveGatewayErrors: &types.UInt32Value{Value: 222},
-					Interval:                 &types.Duration{Seconds: 22},
+					ConsecutiveGatewayErrors: &wrappers.UInt32Value{Value: 222},
+					Interval:                 &durationpb.Duration{Seconds: 22},
 				},
 				Tls: &networking.ClientTLSSettings{
 					Mode:              networking.ClientTLSSettings_MUTUAL,
@@ -1354,9 +1359,7 @@ func TestSetDestinationRuleInheritance(t *testing.T) {
 			t.Errorf("case %s failed, merged config should contain most specific config name, wanted %v got %v", tt.name, tt.expectedConfig, mergedConfig.Name)
 		}
 		mergedPolicy := mergedConfig.Spec.(*networking.DestinationRule).TrafficPolicy
-		if !reflect.DeepEqual(mergedPolicy, tt.expectedPolicy) {
-			t.Fatalf("case %s failed, want %+v, got %+v", tt.name, tt.expectedPolicy, mergedPolicy)
-		}
+		assert.Equal(t, mergedPolicy, tt.expectedPolicy)
 	}
 }
 
diff --git a/pilot/pkg/model/telemetry.go b/pilot/pkg/model/telemetry.go
index 1bda499fcc..38437d8a9d 100644
--- a/pilot/pkg/model/telemetry.go
+++ b/pilot/pkg/model/telemetry.go
@@ -25,7 +25,6 @@
 	hcm "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/http_connection_manager/v3"
 	wasmfilter "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/wasm/v3"
 	wasm "github.com/envoyproxy/go-control-plane/envoy/extensions/wasm/v3"
-	"github.com/gogo/protobuf/types"
 	"google.golang.org/protobuf/types/known/anypb"
 	"google.golang.org/protobuf/types/known/durationpb"
 	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
@@ -493,7 +492,7 @@ func (t *Telemetries) fetchProvider(m string) *meshconfig.MeshConfig_ExtensionPr
 // mergeMetrics merges many Metrics objects into a normalized configuration
 func mergeMetrics(metrics []*tpb.Metrics, mesh *meshconfig.MeshConfig) map[string]metricsConfig {
 	type metricOverride struct {
-		Disabled     *types.BoolValue
+		Disabled     *wrappers.BoolValue
 		TagOverrides map[string]*tpb.MetricsOverrides_TagOverride
 	}
 	// provider -> mode -> metric -> overrides
diff --git a/pilot/pkg/model/telemetry_test.go b/pilot/pkg/model/telemetry_test.go
index 1863844f6a..b9024d1634 100644
--- a/pilot/pkg/model/telemetry_test.go
+++ b/pilot/pkg/model/telemetry_test.go
@@ -22,9 +22,9 @@
 	httpwasm "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/wasm/v3"
 	httppb "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/http_connection_manager/v3"
 	wasmfilter "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/wasm/v3"
-	"github.com/gogo/protobuf/types"
 	"github.com/google/go-cmp/cmp"
-	"google.golang.org/protobuf/types/known/wrapperspb"
+	"google.golang.org/protobuf/types/known/structpb"
+	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	tpb "istio.io/api/telemetry/v1alpha1"
@@ -33,6 +33,7 @@
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/config/schema/collection"
 	"istio.io/istio/pkg/config/schema/collections"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 func createTestTelemetries(configs []config.Config, t *testing.T) *Telemetries {
@@ -50,7 +51,7 @@ func createTestTelemetries(configs []config.Config, t *testing.T) *Telemetries {
 				Path: "/dev/null",
 				LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat{
 					LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat_Labels{
-						Labels: &types.Struct{},
+						Labels: &structpb.Struct{},
 					},
 				},
 			},
@@ -164,7 +165,7 @@ func TestAccessLogging(t *testing.T) {
 	disabled := &tpb.Telemetry{
 		AccessLogging: []*tpb.AccessLogging{
 			{
-				Disabled: &types.BoolValue{Value: true},
+				Disabled: &wrappers.BoolValue{Value: true},
 			},
 		},
 	}
@@ -391,31 +392,31 @@ func TestTracing(t *testing.T) {
 	disabled := &tpb.Telemetry{
 		Tracing: []*tpb.Tracing{
 			{
-				DisableSpanReporting: &types.BoolValue{Value: true},
+				DisableSpanReporting: &wrappers.BoolValue{Value: true},
 			},
 		},
 	}
 	overidesA := &tpb.Telemetry{
 		Tracing: []*tpb.Tracing{
 			{
-				RandomSamplingPercentage: &types.DoubleValue{Value: 50.0},
+				RandomSamplingPercentage: &wrappers.DoubleValue{Value: 50.0},
 				CustomTags: map[string]*tpb.Tracing_CustomTag{
 					"foo": {},
 					"bar": {},
 				},
-				UseRequestIdForTraceSampling: &types.BoolValue{Value: false},
+				UseRequestIdForTraceSampling: &wrappers.BoolValue{Value: false},
 			},
 		},
 	}
 	overidesB := &tpb.Telemetry{
 		Tracing: []*tpb.Tracing{
 			{
-				RandomSamplingPercentage: &types.DoubleValue{Value: 80.0},
+				RandomSamplingPercentage: &wrappers.DoubleValue{Value: 80.0},
 				CustomTags: map[string]*tpb.Tracing_CustomTag{
 					"foo": {},
 					"baz": {},
 				},
-				UseRequestIdForTraceSampling: &types.BoolValue{Value: true},
+				UseRequestIdForTraceSampling: &wrappers.BoolValue{Value: true},
 			},
 		},
 	}
@@ -568,9 +569,7 @@ func TestTracing(t *testing.T) {
 				// We don't match on this, just the name for test simplicity
 				got.Provider.Provider = nil
 			}
-			if diff := cmp.Diff(got, tt.want); diff != "" {
-				t.Fatalf("got diff %v", diff)
-			}
+			assert.Equal(t, got, tt.want)
 		})
 	}
 }
@@ -845,7 +844,7 @@ func TestTelemetryFilters(t *testing.T) {
 					if err := f.GetTypedConfig().UnmarshalTo(w); err != nil {
 						t.Fatal(err)
 					}
-					cfg := &wrapperspb.StringValue{}
+					cfg := &wrappers.StringValue{}
 					if err := w.GetConfig().GetConfiguration().UnmarshalTo(cfg); err != nil {
 						t.Fatal(err)
 					}
@@ -863,7 +862,7 @@ func TestTelemetryFilters(t *testing.T) {
 					if err := f.GetTypedConfig().UnmarshalTo(w); err != nil {
 						t.Fatal(err)
 					}
-					cfg := &wrapperspb.StringValue{}
+					cfg := &wrappers.StringValue{}
 					if err := w.GetConfig().GetConfiguration().UnmarshalTo(cfg); err != nil {
 						t.Fatal(err)
 					}
diff --git a/pilot/pkg/model/virtualservice.go b/pilot/pkg/model/virtualservice.go
index feb883bda1..a57e099070 100644
--- a/pilot/pkg/model/virtualservice.go
+++ b/pilot/pkg/model/virtualservice.go
@@ -18,6 +18,7 @@
 	"strings"
 
 	"github.com/gogo/protobuf/jsonpb"
+	"google.golang.org/protobuf/proto"
 
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pilot/pkg/util/sets"
@@ -276,6 +277,7 @@ func mergeHTTPRoute(root *networking.HTTPRoute, delegate *networking.HTTPRoute)
 	if delegate.Mirror == nil {
 		delegate.Mirror = root.Mirror
 	}
+	// nolint: staticcheck
 	if delegate.MirrorPercent == nil {
 		delegate.MirrorPercent = root.MirrorPercent
 	}
@@ -325,7 +327,7 @@ func mergeHTTPMatchRequests(root, delegate []*networking.HTTPMatchRequest) (out
 }
 
 func mergeHTTPMatchRequest(root, delegate *networking.HTTPMatchRequest) *networking.HTTPMatchRequest {
-	out := *delegate
+	out := proto.Clone(delegate).(*networking.HTTPMatchRequest)
 	if out.Name == "" {
 		out.Name = root.Name
 	} else if root.Name != "" {
@@ -397,7 +399,7 @@ func mergeHTTPMatchRequest(root, delegate *networking.HTTPMatchRequest) *network
 		out.Gateways = root.Gateways
 	}
 
-	return &out
+	return out
 }
 
 func hasConflict(root, leaf *networking.HTTPMatchRequest) bool {
diff --git a/pilot/pkg/model/virtualservice_test.go b/pilot/pkg/model/virtualservice_test.go
index 97a935c1f7..5e2b15306e 100644
--- a/pilot/pkg/model/virtualservice_test.go
+++ b/pilot/pkg/model/virtualservice_test.go
@@ -16,13 +16,12 @@
 
 import (
 	"fmt"
-	"reflect"
 	"testing"
 	"time"
 
-	"github.com/gogo/protobuf/types"
-	"github.com/google/go-cmp/cmp"
+	"github.com/golang/protobuf/ptypes/wrappers"
 	fuzz "github.com/google/gofuzz"
+	"google.golang.org/protobuf/types/known/durationpb"
 
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pilot/pkg/serviceregistry/provider"
@@ -31,6 +30,7 @@
 	"istio.io/istio/pkg/config/protocol"
 	"istio.io/istio/pkg/config/schema/collections"
 	"istio.io/istio/pkg/config/visibility"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 const wildcardIP = "0.0.0.0"
@@ -678,9 +678,7 @@ func TestMergeVirtualServices(t *testing.T) {
 	for _, tc := range cases {
 		t.Run(tc.name, func(t *testing.T) {
 			got, _ := mergeVirtualServicesIfNeeded(tc.virtualServices, map[visibility.Instance]bool{visibility.Public: true})
-			if !reflect.DeepEqual(got, tc.expectedVirtualServices) {
-				t.Errorf("expected vs %v, but got %v,\n diff: %s ", len(tc.expectedVirtualServices), len(got), cmp.Diff(tc.expectedVirtualServices, got))
-			}
+			assert.Equal(t, got, tc.expectedVirtualServices)
 		})
 	}
 }
@@ -696,7 +694,7 @@ func TestMergeHttpRoutes(t *testing.T) {
 			name: "root catch all",
 			root: &networking.HTTPRoute{
 				Match:   nil, // catch all
-				Timeout: &types.Duration{Seconds: 10},
+				Timeout: &durationpb.Duration{Seconds: 10},
 				Headers: &networking.Headers{
 					Request: &networking.Headers_HeaderOperations{
 						Add: map[string]string{
@@ -799,7 +797,7 @@ func TestMergeHttpRoutes(t *testing.T) {
 							},
 						},
 					},
-					Timeout: &types.Duration{Seconds: 10},
+					Timeout: &durationpb.Duration{Seconds: 10},
 					Headers: &networking.Headers{
 						Request: &networking.Headers_HeaderOperations{
 							Add: map[string]string{
@@ -845,7 +843,7 @@ func TestMergeHttpRoutes(t *testing.T) {
 							},
 						},
 					},
-					Timeout: &types.Duration{Seconds: 10},
+					Timeout: &durationpb.Duration{Seconds: 10},
 					Headers: &networking.Headers{
 						Request: &networking.Headers_HeaderOperations{
 							Add: map[string]string{
@@ -1049,9 +1047,7 @@ func TestMergeHttpRoutes(t *testing.T) {
 	for _, tc := range cases {
 		t.Run(tc.name, func(t *testing.T) {
 			got := mergeHTTPRoutes(tc.root, tc.delegate)
-			if !reflect.DeepEqual(got, tc.expected) {
-				t.Errorf("got unexpected result, diff: %s", cmp.Diff(tc.expected, got))
-			}
+			assert.Equal(t, got, tc.expected)
 		})
 	}
 }
@@ -1427,9 +1423,7 @@ func TestMergeHTTPMatchRequests(t *testing.T) {
 	for _, tc := range cases {
 		t.Run(tc.name, func(t *testing.T) {
 			got, _ := mergeHTTPMatchRequests(tc.root, tc.delegate)
-			if !reflect.DeepEqual(got, tc.expected) {
-				t.Errorf("got unexpected result, diff: %s", cmp.Diff(tc.expected, got))
-			}
+			assert.Equal(t, got, tc.expected)
 		})
 	}
 }
@@ -1722,8 +1716,8 @@ func(r *networking.HTTPRewrite, c fuzz.Continue) {
 			*r = networking.HTTPRewrite{}
 		},
 
-		func(r *types.Duration, c fuzz.Continue) {
-			*r = types.Duration{}
+		func(r *durationpb.Duration, c fuzz.Continue) {
+			*r = durationpb.Duration{}
 		},
 		func(r *networking.HTTPRetry, c fuzz.Continue) {
 			*r = networking.HTTPRetry{}
@@ -1734,8 +1728,8 @@ func(r *networking.HTTPFaultInjection, c fuzz.Continue) {
 		func(r *networking.Destination, c fuzz.Continue) {
 			*r = networking.Destination{}
 		},
-		func(r *types.UInt32Value, c fuzz.Continue) {
-			*r = types.UInt32Value{}
+		func(r *wrappers.UInt32Value, c fuzz.Continue) {
+			*r = wrappers.UInt32Value{}
 		},
 		func(r *networking.Percent, c fuzz.Continue) {
 			*r = networking.Percent{}
@@ -1752,11 +1746,7 @@ func(r *networking.Headers, c fuzz.Continue) {
 
 	delegate := &networking.HTTPRoute{}
 	expected := mergeHTTPRoute(root, delegate)
-	root.XXX_unrecognized = nil
-	root.XXX_sizecache = 0
-	if !reflect.DeepEqual(expected, root) {
-		t.Errorf("%s", cmp.Diff(expected, root))
-	}
+	assert.Equal(t, expected, root)
 }
 
 // Note: this is to prevent missing merge new added HTTPMatchRequest fields
@@ -1784,15 +1774,10 @@ func(m *map[string]string, c fuzz.Continue) {
 	root.SourceLabels = nil
 	root.Gateways = nil
 	root.IgnoreUriCase = false
-	root.XXX_sizecache = 0
-	root.XXX_unrecognized = nil
-
 	delegate := &networking.HTTPMatchRequest{}
 	merged := mergeHTTPMatchRequest(root, delegate)
 
-	if !reflect.DeepEqual(merged, root) {
-		t.Errorf("%s", cmp.Diff(merged, root))
-	}
+	assert.Equal(t, merged, root)
 }
 
 var gatewayNameTests = []struct {
diff --git a/pilot/pkg/networking/apigen/apigen.go b/pilot/pkg/networking/apigen/apigen.go
index a0568210e5..a54a20e93a 100644
--- a/pilot/pkg/networking/apigen/apigen.go
+++ b/pilot/pkg/networking/apigen/apigen.go
@@ -18,10 +18,9 @@
 	"strings"
 
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
-	gogotypes "github.com/gogo/protobuf/types"
-	golangany "google.golang.org/protobuf/types/known/anypb"
 
 	"istio.io/istio/pilot/pkg/model"
+	"istio.io/istio/pilot/pkg/networking/util"
 	"istio.io/istio/pilot/pkg/serviceregistry/provider"
 	"istio.io/istio/pilot/pkg/serviceregistry/serviceentry"
 	"istio.io/istio/pkg/config"
@@ -85,16 +84,9 @@ func (g *APIGenerator) Generate(proxy *model.Proxy, w *model.WatchedResource, re
 		Kind:    kind[2],
 	}
 	if w.TypeUrl == collections.IstioMeshV1Alpha1MeshConfig.Resource().GroupVersionKind().String() {
-		meshAny, err := gogotypes.MarshalAny(req.Push.Mesh)
-		if err == nil {
-			a := &golangany.Any{
-				TypeUrl: meshAny.TypeUrl,
-				Value:   meshAny.Value,
-			}
-			resp = append(resp, &discovery.Resource{
-				Resource: a,
-			})
-		}
+		resp = append(resp, &discovery.Resource{
+			Resource: util.MessageToAny(req.Push.Mesh),
+		})
 		return resp, model.DefaultXdsLogDetails, nil
 	}
 
@@ -117,19 +109,10 @@ func (g *APIGenerator) Generate(proxy *model.Proxy, w *model.WatchedResource, re
 			log.Warn("Resource error ", err, " ", c.Namespace, "/", c.Name)
 			continue
 		}
-		bany, err := gogotypes.MarshalAny(b)
-		if err == nil {
-			a := &golangany.Any{
-				TypeUrl: bany.TypeUrl,
-				Value:   bany.Value,
-			}
-			resp = append(resp, &discovery.Resource{
-				Name:     c.Namespace + "/" + c.Name,
-				Resource: a,
-			})
-		} else {
-			log.Warn("Any ", err)
-		}
+		resp = append(resp, &discovery.Resource{
+			Name:     c.Namespace + "/" + c.Name,
+			Resource: util.MessageToAny(b),
+		})
 	}
 
 	// TODO: MeshConfig, current dynamic ProxyConfig (for this proxy), Networks
@@ -149,19 +132,10 @@ func (g *APIGenerator) Generate(proxy *model.Proxy, w *model.WatchedResource, re
 				log.Warn("Resource error ", err, " ", c.Namespace, "/", c.Name)
 				continue
 			}
-			bany, err := gogotypes.MarshalAny(b)
-			if err == nil {
-				a := &golangany.Any{
-					TypeUrl: bany.TypeUrl,
-					Value:   bany.Value,
-				}
-				resp = append(resp, &discovery.Resource{
-					Name:     c.Namespace + "/" + c.Name,
-					Resource: a,
-				})
-			} else {
-				log.Warn("Any ", err)
-			}
+			resp = append(resp, &discovery.Resource{
+				Name:     c.Namespace + "/" + c.Name,
+				Resource: util.MessageToAny(b),
+			})
 		}
 	}
 
diff --git a/pilot/pkg/networking/core/v1alpha3/accesslog.go b/pilot/pkg/networking/core/v1alpha3/accesslog.go
index b7859cd5a0..1b476cd25a 100644
--- a/pilot/pkg/networking/core/v1alpha3/accesslog.go
+++ b/pilot/pkg/networking/core/v1alpha3/accesslog.go
@@ -29,14 +29,12 @@
 	tcp "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/tcp_proxy/v3"
 	formatters "github.com/envoyproxy/go-control-plane/envoy/extensions/formatter/req_without_query/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	pbtypes "github.com/gogo/protobuf/types"
 	otlpcommon "go.opentelemetry.io/proto/otlp/common/v1"
 	"google.golang.org/protobuf/types/known/structpb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pilot/pkg/networking/util"
-	"istio.io/istio/pkg/config/xds"
 	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/log"
 )
@@ -360,14 +358,9 @@ func buildFileAccessTextLogFormat(text string) (*fileaccesslog.FileAccessLog_Log
 
 func buildFileAccessJSONLogFormat(
 	logFormat *meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat_Labels) (*fileaccesslog.FileAccessLog_LogFormat, bool) {
-	jsonLogStruct := &structpb.Struct{}
+	jsonLogStruct := EnvoyJSONLogFormatIstio
 	if logFormat.Labels != nil {
-		if err := xds.GogoStructToMessage(logFormat.Labels, jsonLogStruct, false); err != nil {
-			log.Errorf("error parsing provided json log format, default log format will be used: %v", err)
-			jsonLogStruct = EnvoyJSONLogFormatIstio
-		}
-	} else {
-		jsonLogStruct = EnvoyJSONLogFormatIstio
+		jsonLogStruct = logFormat.Labels
 	}
 
 	// allow default behavior when no labels supplied.
@@ -511,7 +504,7 @@ func buildOpenTelemetryLogHelper(pushCtx *model.PushContext,
 		f = provider.LogFormat.Text
 	}
 
-	var labels *pbtypes.Struct
+	var labels *structpb.Struct
 	if provider.LogFormat != nil {
 		labels = provider.LogFormat.Labels
 	}
@@ -524,7 +517,7 @@ func buildOpenTelemetryLogHelper(pushCtx *model.PushContext,
 	}
 }
 
-func buildOpenTelemetryAccessLogConfig(logName, clusterName, format string, labels *pbtypes.Struct) *otelaccesslog.OpenTelemetryAccessLogConfig {
+func buildOpenTelemetryAccessLogConfig(logName, clusterName, format string, labels *structpb.Struct) *otelaccesslog.OpenTelemetryAccessLogConfig {
 	cfg := &otelaccesslog.OpenTelemetryAccessLogConfig{
 		CommonConfig: &grpcaccesslog.CommonGrpcAccessLogConfig{
 			LogName: logName,
@@ -557,7 +550,7 @@ func buildOpenTelemetryAccessLogConfig(logName, clusterName, format string, labe
 	return cfg
 }
 
-func convertStructToAttributeKeyValues(labels map[string]*pbtypes.Value) []*otlpcommon.KeyValue {
+func convertStructToAttributeKeyValues(labels map[string]*structpb.Value) []*otlpcommon.KeyValue {
 	if len(labels) == 0 {
 		return nil
 	}
diff --git a/pilot/pkg/networking/core/v1alpha3/accesslog_test.go b/pilot/pkg/networking/core/v1alpha3/accesslog_test.go
index 44f181114a..8397d3432a 100644
--- a/pilot/pkg/networking/core/v1alpha3/accesslog_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/accesslog_test.go
@@ -27,7 +27,6 @@
 	tcp "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/tcp_proxy/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/conversion"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/types"
 	"github.com/google/go-cmp/cmp"
 	otlpcommon "go.opentelemetry.io/proto/otlp/common/v1"
 	"google.golang.org/protobuf/testing/protocmp"
@@ -237,7 +236,7 @@ func TestBuildAccessLogFromTelemetry(t *testing.T) {
 						Path: devStdout,
 						LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat{
 							LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat_Labels{
-								Labels: &types.Struct{},
+								Labels: &structpb.Struct{},
 							},
 						},
 					},
@@ -255,31 +254,31 @@ func TestBuildAccessLogFromTelemetry(t *testing.T) {
 						Path: devStdout,
 						LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat{
 							LogFormat: &meshconfig.MeshConfig_ExtensionProvider_EnvoyFileAccessLogProvider_LogFormat_Labels{
-								Labels: &types.Struct{
-									Fields: map[string]*types.Value{
-										"start_time":                     {Kind: &types.Value_StringValue{StringValue: "%START_TIME%"}},
-										"route_name":                     {Kind: &types.Value_StringValue{StringValue: "%ROUTE_NAME%"}},
-										"method":                         {Kind: &types.Value_StringValue{StringValue: "%REQ(:METHOD)%"}},
-										"path":                           {Kind: &types.Value_StringValue{StringValue: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"}},
-										"protocol":                       {Kind: &types.Value_StringValue{StringValue: "%PROTOCOL%"}},
-										"response_code":                  {Kind: &types.Value_StringValue{StringValue: "%RESPONSE_CODE%"}},
-										"response_flags":                 {Kind: &types.Value_StringValue{StringValue: "%RESPONSE_FLAGS%"}},
-										"response_code_details":          {Kind: &types.Value_StringValue{StringValue: "%RESPONSE_CODE_DETAILS%"}},
-										"connection_termination_details": {Kind: &types.Value_StringValue{StringValue: "%CONNECTION_TERMINATION_DETAILS%"}},
-										"bytes_received":                 {Kind: &types.Value_StringValue{StringValue: "%BYTES_RECEIVED%"}},
-										"bytes_sent":                     {Kind: &types.Value_StringValue{StringValue: "%BYTES_SENT%"}},
-										"duration":                       {Kind: &types.Value_StringValue{StringValue: "%DURATION%"}},
-										"upstream_service_time":          {Kind: &types.Value_StringValue{StringValue: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"}},
-										"x_forwarded_for":                {Kind: &types.Value_StringValue{StringValue: "%REQ(X-FORWARDED-FOR)%"}},
-										"user_agent":                     {Kind: &types.Value_StringValue{StringValue: "%REQ(USER-AGENT)%"}},
-										"request_id":                     {Kind: &types.Value_StringValue{StringValue: "%REQ(X-REQUEST-ID)%"}},
-										"authority":                      {Kind: &types.Value_StringValue{StringValue: "%REQ(:AUTHORITY)%"}},
-										"upstream_host":                  {Kind: &types.Value_StringValue{StringValue: "%UPSTREAM_HOST%"}},
-										"upstream_cluster":               {Kind: &types.Value_StringValue{StringValue: "%UPSTREAM_CLUSTER%"}},
-										"upstream_local_address":         {Kind: &types.Value_StringValue{StringValue: "%UPSTREAM_LOCAL_ADDRESS%"}},
-										"downstream_local_address":       {Kind: &types.Value_StringValue{StringValue: "%DOWNSTREAM_LOCAL_ADDRESS%"}},
-										"downstream_remote_address":      {Kind: &types.Value_StringValue{StringValue: "%DOWNSTREAM_REMOTE_ADDRESS%"}},
-										"requested_server_name":          {Kind: &types.Value_StringValue{StringValue: "%REQUESTED_SERVER_NAME%"}},
+								Labels: &structpb.Struct{
+									Fields: map[string]*structpb.Value{
+										"start_time":                     {Kind: &structpb.Value_StringValue{StringValue: "%START_TIME%"}},
+										"route_name":                     {Kind: &structpb.Value_StringValue{StringValue: "%ROUTE_NAME%"}},
+										"method":                         {Kind: &structpb.Value_StringValue{StringValue: "%REQ(:METHOD)%"}},
+										"path":                           {Kind: &structpb.Value_StringValue{StringValue: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"}},
+										"protocol":                       {Kind: &structpb.Value_StringValue{StringValue: "%PROTOCOL%"}},
+										"response_code":                  {Kind: &structpb.Value_StringValue{StringValue: "%RESPONSE_CODE%"}},
+										"response_flags":                 {Kind: &structpb.Value_StringValue{StringValue: "%RESPONSE_FLAGS%"}},
+										"response_code_details":          {Kind: &structpb.Value_StringValue{StringValue: "%RESPONSE_CODE_DETAILS%"}},
+										"connection_termination_details": {Kind: &structpb.Value_StringValue{StringValue: "%CONNECTION_TERMINATION_DETAILS%"}},
+										"bytes_received":                 {Kind: &structpb.Value_StringValue{StringValue: "%BYTES_RECEIVED%"}},
+										"bytes_sent":                     {Kind: &structpb.Value_StringValue{StringValue: "%BYTES_SENT%"}},
+										"duration":                       {Kind: &structpb.Value_StringValue{StringValue: "%DURATION%"}},
+										"upstream_service_time":          {Kind: &structpb.Value_StringValue{StringValue: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"}},
+										"x_forwarded_for":                {Kind: &structpb.Value_StringValue{StringValue: "%REQ(X-FORWARDED-FOR)%"}},
+										"user_agent":                     {Kind: &structpb.Value_StringValue{StringValue: "%REQ(USER-AGENT)%"}},
+										"request_id":                     {Kind: &structpb.Value_StringValue{StringValue: "%REQ(X-REQUEST-ID)%"}},
+										"authority":                      {Kind: &structpb.Value_StringValue{StringValue: "%REQ(:AUTHORITY)%"}},
+										"upstream_host":                  {Kind: &structpb.Value_StringValue{StringValue: "%UPSTREAM_HOST%"}},
+										"upstream_cluster":               {Kind: &structpb.Value_StringValue{StringValue: "%UPSTREAM_CLUSTER%"}},
+										"upstream_local_address":         {Kind: &structpb.Value_StringValue{StringValue: "%UPSTREAM_LOCAL_ADDRESS%"}},
+										"downstream_local_address":       {Kind: &structpb.Value_StringValue{StringValue: "%DOWNSTREAM_LOCAL_ADDRESS%"}},
+										"downstream_remote_address":      {Kind: &structpb.Value_StringValue{StringValue: "%DOWNSTREAM_REMOTE_ADDRESS%"}},
+										"requested_server_name":          {Kind: &structpb.Value_StringValue{StringValue: "%REQUESTED_SERVER_NAME%"}},
 									},
 								},
 							},
@@ -363,9 +362,9 @@ func TestBuildAccessLogFromTelemetry(t *testing.T) {
 		},
 	}
 
-	labels := &types.Struct{
-		Fields: map[string]*types.Value{
-			"protocol": {Kind: &types.Value_StringValue{StringValue: "%PROTOCOL%"}},
+	labels := &structpb.Struct{
+		Fields: map[string]*structpb.Value{
+			"protocol": {Kind: &structpb.Value_StringValue{StringValue: "%PROTOCOL%"}},
 		},
 	}
 
@@ -871,7 +870,7 @@ func TestBuildOpenTelemetryAccessLogConfig(t *testing.T) {
 		logName     string
 		clusterName string
 		body        string
-		labels      *types.Struct
+		labels      *structpb.Struct
 		expected    *otelaccesslog.OpenTelemetryAccessLogConfig
 	}{
 		{
@@ -904,9 +903,9 @@ func TestBuildOpenTelemetryAccessLogConfig(t *testing.T) {
 			logName:     otelEnvoyAccessLogFriendlyName,
 			clusterName: fakeCluster,
 			body:        EnvoyTextLogFormat,
-			labels: &types.Struct{
-				Fields: map[string]*types.Value{
-					"protocol": {Kind: &types.Value_StringValue{StringValue: "%PROTOCOL%"}},
+			labels: &structpb.Struct{
+				Fields: map[string]*structpb.Value{
+					"protocol": {Kind: &structpb.Value_StringValue{StringValue: "%PROTOCOL%"}},
 				},
 			},
 			expected: &otelaccesslog.OpenTelemetryAccessLogConfig{
diff --git a/pilot/pkg/networking/core/v1alpha3/cluster.go b/pilot/pkg/networking/core/v1alpha3/cluster.go
index b8e7caad7d..a8ea3bbc14 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster.go
@@ -25,7 +25,6 @@
 	endpoint "github.com/envoyproxy/go-control-plane/envoy/config/endpoint/v3"
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
 	xdstype "github.com/envoyproxy/go-control-plane/envoy/type/v3"
-	"github.com/gogo/protobuf/types"
 	"google.golang.org/protobuf/types/known/durationpb"
 	"google.golang.org/protobuf/types/known/structpb"
 	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
@@ -42,7 +41,6 @@
 	"istio.io/istio/pkg/config/host"
 	"istio.io/istio/pkg/config/protocol"
 	"istio.io/istio/pkg/config/schema/gvk"
-	"istio.io/istio/pkg/util/gogo"
 )
 
 // deltaConfigTypes are used to detect changes and trigger delta calculations. When config updates has ONLY entries
@@ -676,10 +674,10 @@ func applyOutlierDetection(c *cluster.Cluster, outlier *networking.OutlierDetect
 	}
 
 	if outlier.Interval != nil {
-		out.Interval = gogo.DurationToProtoDuration(outlier.Interval)
+		out.Interval = outlier.Interval
 	}
 	if outlier.BaseEjectionTime != nil {
-		out.BaseEjectionTime = gogo.DurationToProtoDuration(outlier.BaseEjectionTime)
+		out.BaseEjectionTime = outlier.BaseEjectionTime
 	}
 	if outlier.MaxEjectionPercent > 0 {
 		out.MaxEjectionPercent = &wrappers.UInt32Value{Value: uint32(outlier.MaxEjectionPercent)}
@@ -749,6 +747,7 @@ func applyLoadBalancer(c *cluster.Cluster, lb *networking.LoadBalancerSettings,
 
 	// DO not do if else here. since lb.GetSimple returns a enum value (not pointer).
 	switch lb.GetSimple() {
+	// nolint: staticcheck
 	case networking.LoadBalancerSettings_LEAST_CONN, networking.LoadBalancerSettings_LEAST_REQUEST:
 		ApplyLeastRequestLoadBalancer(c, lb)
 	case networking.LoadBalancerSettings_RANDOM:
@@ -792,9 +791,9 @@ func ApplyLeastRequestLoadBalancer(c *cluster.Cluster, loadbalancer *networking.
 }
 
 // setSlowStartConfig will set the warmupDurationSecs for LEAST_REQUEST and ROUND_ROBIN if provided in DestinationRule
-func setSlowStartConfig(warmupDurationSecs *types.Duration) *cluster.Cluster_SlowStartConfig {
+func setSlowStartConfig(dur *durationpb.Duration) *cluster.Cluster_SlowStartConfig {
 	return &cluster.Cluster_SlowStartConfig{
-		SlowStartWindow: &durationpb.Duration{Seconds: warmupDurationSecs.GetSeconds()},
+		SlowStartWindow: dur,
 	}
 }
 
diff --git a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
index f0cb27aea0..3fb0157313 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
@@ -29,7 +29,6 @@
 	auth "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3"
 	http "github.com/envoyproxy/go-control-plane/envoy/extensions/upstreams/http/v3"
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
-	"github.com/gogo/protobuf/types"
 	any "google.golang.org/protobuf/types/known/anypb"
 	"google.golang.org/protobuf/types/known/durationpb"
 	"google.golang.org/protobuf/types/known/structpb"
@@ -51,7 +50,6 @@
 	"istio.io/istio/pkg/config/schema/gvk"
 	"istio.io/istio/pkg/network"
 	"istio.io/istio/pkg/security"
-	"istio.io/istio/pkg/util/gogo"
 	"istio.io/pkg/log"
 )
 
@@ -357,7 +355,7 @@ func (cb *ClusterBuilder) buildDefaultCluster(name string, discoveryType cluster
 		} else {
 			c.DnsLookupFamily = cluster.Cluster_V6_ONLY
 		}
-		dnsRate := gogo.DurationToProtoDuration(cb.req.Push.Mesh.DnsRefreshRate)
+		dnsRate := cb.req.Push.Mesh.DnsRefreshRate
 		c.DnsRefreshRate = dnsRate
 		c.RespectDnsTtl = true
 		fallthrough
@@ -683,7 +681,7 @@ func (cb *ClusterBuilder) buildBlackHoleCluster() *cluster.Cluster {
 	c := &cluster.Cluster{
 		Name:                 util.BlackHoleCluster,
 		ClusterDiscoveryType: &cluster.Cluster_Type{Type: cluster.Cluster_STATIC},
-		ConnectTimeout:       gogo.DurationToProtoDuration(cb.req.Push.Mesh.ConnectTimeout),
+		ConnectTimeout:       cb.req.Push.Mesh.ConnectTimeout,
 		LbPolicy:             cluster.Cluster_ROUND_ROBIN,
 	}
 	return c
@@ -695,7 +693,7 @@ func (cb *ClusterBuilder) buildDefaultPassthroughCluster() *cluster.Cluster {
 	cluster := &cluster.Cluster{
 		Name:                 util.PassthroughCluster,
 		ClusterDiscoveryType: &cluster.Cluster_Type{Type: cluster.Cluster_ORIGINAL_DST},
-		ConnectTimeout:       gogo.DurationToProtoDuration(cb.req.Push.Mesh.ConnectTimeout),
+		ConnectTimeout:       cb.req.Push.Mesh.ConnectTimeout,
 		LbPolicy:             cluster.Cluster_CLUSTER_PROVIDED,
 		TypedExtensionProtocolOptions: map[string]*any.Any{
 			v3.HttpProtocolOptionsType: passthroughHttpProtocolOptions,
@@ -881,11 +879,7 @@ func (cb *ClusterBuilder) buildIstioMutualTLS(serviceAccounts []string, sni stri
 }
 
 func (cb *ClusterBuilder) applyDefaultConnectionPool(cluster *cluster.Cluster) {
-	defaultConnectTimeout := &types.Duration{
-		Seconds: cb.req.Push.Mesh.ConnectTimeout.Seconds,
-		Nanos:   cb.req.Push.Mesh.ConnectTimeout.Nanos,
-	}
-	cluster.ConnectTimeout = gogo.DurationToProtoDuration(defaultConnectTimeout)
+	cluster.ConnectTimeout = cb.req.Push.Mesh.ConnectTimeout
 }
 
 // FIXME: there isn't a way to distinguish between unset values and zero values
@@ -895,7 +889,7 @@ func (cb *ClusterBuilder) applyConnectionPool(mesh *meshconfig.MeshConfig, mc *M
 	}
 
 	threshold := getDefaultCircuitBreakerThresholds()
-	var idleTimeout *types.Duration
+	var idleTimeout *durationpb.Duration
 	var maxRequestsPerConnection uint32
 
 	if settings.Http != nil {
@@ -920,7 +914,7 @@ func (cb *ClusterBuilder) applyConnectionPool(mesh *meshconfig.MeshConfig, mc *M
 	cb.applyDefaultConnectionPool(mc.cluster)
 	if settings.Tcp != nil {
 		if settings.Tcp != nil && settings.Tcp.ConnectTimeout != nil {
-			mc.cluster.ConnectTimeout = gogo.DurationToProtoDuration(settings.Tcp.ConnectTimeout)
+			mc.cluster.ConnectTimeout = settings.Tcp.ConnectTimeout
 		}
 
 		if settings.Tcp != nil && settings.Tcp.MaxConnections > 0 {
@@ -942,7 +936,7 @@ func (cb *ClusterBuilder) applyConnectionPool(mesh *meshconfig.MeshConfig, mc *M
 			commonOptions.CommonHttpProtocolOptions = &core.HttpProtocolOptions{}
 		}
 		if idleTimeout != nil {
-			idleTimeoutDuration := gogo.DurationToProtoDuration(idleTimeout)
+			idleTimeoutDuration := idleTimeout
 			commonOptions.CommonHttpProtocolOptions.IdleTimeout = idleTimeoutDuration
 		}
 		if maxRequestsPerConnection > 0 {
diff --git a/pilot/pkg/networking/core/v1alpha3/cluster_builder_test.go b/pilot/pkg/networking/core/v1alpha3/cluster_builder_test.go
index 69b9ef1dbb..6ae91cecdc 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster_builder_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster_builder_test.go
@@ -28,7 +28,6 @@
 	endpoint "github.com/envoyproxy/go-control-plane/envoy/config/endpoint/v3"
 	tls "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3"
 	http "github.com/envoyproxy/go-control-plane/envoy/extensions/upstreams/http/v3"
-	"github.com/gogo/protobuf/types"
 	"github.com/google/go-cmp/cmp"
 	"google.golang.org/protobuf/testing/protocmp"
 	"google.golang.org/protobuf/types/known/durationpb"
@@ -52,7 +51,6 @@
 	"istio.io/istio/pkg/config/schema/gvk"
 	"istio.io/istio/pkg/network"
 	"istio.io/istio/pkg/test/util/assert"
-	"istio.io/istio/pkg/util/gogo"
 	"istio.io/istio/pkg/util/identifier"
 )
 
@@ -685,7 +683,7 @@ func TestMergeTrafficPolicy(t *testing.T) {
 						},
 						LoadBalancer: &networking.LoadBalancerSettings{
 							LbPolicy: &networking.LoadBalancerSettings_Simple{
-								Simple: networking.LoadBalancerSettings_LEAST_CONN,
+								Simple: networking.LoadBalancerSettings_LEAST_REQUEST,
 							},
 						},
 					},
@@ -695,7 +693,7 @@ func TestMergeTrafficPolicy(t *testing.T) {
 			expected: &networking.TrafficPolicy{
 				LoadBalancer: &networking.LoadBalancerSettings{
 					LbPolicy: &networking.LoadBalancerSettings_Simple{
-						Simple: networking.LoadBalancerSettings_LEAST_CONN,
+						Simple: networking.LoadBalancerSettings_LEAST_REQUEST,
 					},
 				},
 			},
@@ -1038,7 +1036,7 @@ func TestBuildDefaultCluster(t *testing.T) {
 	for _, tt := range cases {
 		t.Run(tt.name, func(t *testing.T) {
 			mesh := testMesh()
-			cg := NewConfigGenTest(t, TestOptions{MeshConfig: &mesh})
+			cg := NewConfigGenTest(t, TestOptions{MeshConfig: mesh})
 			cb := NewClusterBuilder(cg.SetupProxy(nil), &model.PushRequest{Push: cg.PushContext()}, nil)
 			service := &model.Service{
 				Ports: model.PortList{
@@ -1082,7 +1080,7 @@ func TestBuildLocalityLbEndpoints(t *testing.T) {
 
 	cases := []struct {
 		name      string
-		mesh      meshconfig.MeshConfig
+		mesh      *meshconfig.MeshConfig
 		labels    labels.Collection
 		instances []*model.ServiceInstance
 		expected  []*endpoint.LocalityLbEndpoints
@@ -1451,7 +1449,7 @@ func TestBuildLocalityLbEndpoints(t *testing.T) {
 			t.Run(fmt.Sprintf("%s_%s", tt.name, resolution), func(t *testing.T) {
 				service.Resolution = resolution
 				cg := NewConfigGenTest(t, TestOptions{
-					MeshConfig: &tt.mesh,
+					MeshConfig: tt.mesh,
 					Services:   []*model.Service{service},
 					Instances:  tt.instances,
 				})
@@ -2585,9 +2583,9 @@ func TestShouldH2Upgrade(t *testing.T) {
 		name           string
 		clusterName    string
 		direction      model.TrafficDirection
-		port           model.Port
-		mesh           meshconfig.MeshConfig
-		connectionPool networking.ConnectionPoolSettings
+		port           *model.Port
+		mesh           *meshconfig.MeshConfig
+		connectionPool *networking.ConnectionPoolSettings
 
 		upgrade bool
 	}{
@@ -2595,9 +2593,9 @@ func TestShouldH2Upgrade(t *testing.T) {
 			name:        "mesh upgrade - dr default",
 			clusterName: "bar",
 			direction:   model.TrafficDirectionOutbound,
-			port:        model.Port{Protocol: protocol.HTTP},
-			mesh:        meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_UPGRADE},
-			connectionPool: networking.ConnectionPoolSettings{
+			port:        &model.Port{Protocol: protocol.HTTP},
+			mesh:        &meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_UPGRADE},
+			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					H2UpgradePolicy: networking.ConnectionPoolSettings_HTTPSettings_DEFAULT,
 				},
@@ -2608,9 +2606,9 @@ func TestShouldH2Upgrade(t *testing.T) {
 			name:        "mesh default - dr upgrade non http port",
 			clusterName: "bar",
 			direction:   model.TrafficDirectionOutbound,
-			port:        model.Port{Protocol: protocol.Unsupported},
-			mesh:        meshconfig.MeshConfig{},
-			connectionPool: networking.ConnectionPoolSettings{
+			port:        &model.Port{Protocol: protocol.Unsupported},
+			mesh:        &meshconfig.MeshConfig{},
+			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					H2UpgradePolicy: networking.ConnectionPoolSettings_HTTPSettings_UPGRADE,
 				},
@@ -2621,9 +2619,9 @@ func TestShouldH2Upgrade(t *testing.T) {
 			name:        "mesh no_upgrade - dr default",
 			clusterName: "bar",
 			direction:   model.TrafficDirectionOutbound,
-			port:        model.Port{Protocol: protocol.HTTP},
-			mesh:        meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_DO_NOT_UPGRADE},
-			connectionPool: networking.ConnectionPoolSettings{
+			port:        &model.Port{Protocol: protocol.HTTP},
+			mesh:        &meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_DO_NOT_UPGRADE},
+			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					H2UpgradePolicy: networking.ConnectionPoolSettings_HTTPSettings_DEFAULT,
 				},
@@ -2634,9 +2632,9 @@ func TestShouldH2Upgrade(t *testing.T) {
 			name:        "mesh no_upgrade - dr upgrade",
 			clusterName: "bar",
 			direction:   model.TrafficDirectionOutbound,
-			port:        model.Port{Protocol: protocol.HTTP},
-			mesh:        meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_DO_NOT_UPGRADE},
-			connectionPool: networking.ConnectionPoolSettings{
+			port:        &model.Port{Protocol: protocol.HTTP},
+			mesh:        &meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_DO_NOT_UPGRADE},
+			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					H2UpgradePolicy: networking.ConnectionPoolSettings_HTTPSettings_UPGRADE,
 				},
@@ -2647,9 +2645,9 @@ func TestShouldH2Upgrade(t *testing.T) {
 			name:        "mesh upgrade - dr no_upgrade",
 			clusterName: "bar",
 			direction:   model.TrafficDirectionOutbound,
-			port:        model.Port{Protocol: protocol.HTTP},
-			mesh:        meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_UPGRADE},
-			connectionPool: networking.ConnectionPoolSettings{
+			port:        &model.Port{Protocol: protocol.HTTP},
+			mesh:        &meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_UPGRADE},
+			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					H2UpgradePolicy: networking.ConnectionPoolSettings_HTTPSettings_DO_NOT_UPGRADE,
 				},
@@ -2660,9 +2658,9 @@ func TestShouldH2Upgrade(t *testing.T) {
 			name:        "inbound ignore",
 			clusterName: "bar",
 			direction:   model.TrafficDirectionInbound,
-			port:        model.Port{Protocol: protocol.HTTP},
-			mesh:        meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_UPGRADE},
-			connectionPool: networking.ConnectionPoolSettings{
+			port:        &model.Port{Protocol: protocol.HTTP},
+			mesh:        &meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_UPGRADE},
+			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					H2UpgradePolicy: networking.ConnectionPoolSettings_HTTPSettings_DEFAULT,
 				},
@@ -2673,9 +2671,9 @@ func TestShouldH2Upgrade(t *testing.T) {
 			name:        "non-http",
 			clusterName: "bar",
 			direction:   model.TrafficDirectionOutbound,
-			port:        model.Port{Protocol: protocol.Unsupported},
-			mesh:        meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_UPGRADE},
-			connectionPool: networking.ConnectionPoolSettings{
+			port:        &model.Port{Protocol: protocol.Unsupported},
+			mesh:        &meshconfig.MeshConfig{H2UpgradePolicy: meshconfig.MeshConfig_UPGRADE},
+			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					H2UpgradePolicy: networking.ConnectionPoolSettings_HTTPSettings_DEFAULT,
 				},
@@ -2688,7 +2686,7 @@ func TestShouldH2Upgrade(t *testing.T) {
 
 	for _, test := range tests {
 		t.Run(test.name, func(t *testing.T) {
-			upgrade := cb.shouldH2Upgrade(test.clusterName, test.direction, &test.port, &test.mesh, &test.connectionPool)
+			upgrade := cb.shouldH2Upgrade(test.clusterName, test.direction, test.port, test.mesh, test.connectionPool)
 
 			if upgrade != test.upgrade {
 				t.Fatalf("got: %t, want: %t (%v, %v)", upgrade, test.upgrade, test.mesh.H2UpgradePolicy, test.connectionPool.Http.H2UpgradePolicy)
@@ -3153,7 +3151,7 @@ func TestApplyTCPKeepalive(t *testing.T) {
 			connectionPool: &networking.ConnectionPoolSettings{
 				Tcp: &networking.ConnectionPoolSettings_TCPSettings{
 					TcpKeepalive: &networking.ConnectionPoolSettings_TCPSettings_TcpKeepalive{
-						Time: &types.Duration{Seconds: 10},
+						Time: &durationpb.Duration{Seconds: 10},
 					},
 				},
 			},
@@ -3167,7 +3165,7 @@ func TestApplyTCPKeepalive(t *testing.T) {
 			name: "mesh tcp alive",
 			mesh: &meshconfig.MeshConfig{
 				TcpKeepalive: &networking.ConnectionPoolSettings_TCPSettings_TcpKeepalive{
-					Time: &types.Duration{Seconds: 10},
+					Time: &durationpb.Duration{Seconds: 10},
 				},
 			},
 			connectionPool: &networking.ConnectionPoolSettings{},
@@ -3212,24 +3210,24 @@ func TestApplyConnectionPool(t *testing.T) {
 			cluster: &cluster.Cluster{Name: "foo", ClusterDiscoveryType: &cluster.Cluster_Type{Type: cluster.Cluster_EDS}},
 			httpProtocolOptions: &http.HttpProtocolOptions{
 				CommonHttpProtocolOptions: &core.HttpProtocolOptions{
-					IdleTimeout: gogo.DurationToProtoDuration(&types.Duration{
+					IdleTimeout: &durationpb.Duration{
 						Seconds: 10,
-					}),
+					},
 					MaxRequestsPerConnection: &wrappers.UInt32Value{Value: 10},
 				},
 			},
 			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
-					IdleTimeout: &types.Duration{
+					IdleTimeout: &durationpb.Duration{
 						Seconds: 22,
 					},
 				},
 			},
 			expectedHTTPPOpt: &http.HttpProtocolOptions{
 				CommonHttpProtocolOptions: &core.HttpProtocolOptions{
-					IdleTimeout: gogo.DurationToProtoDuration(&types.Duration{
+					IdleTimeout: &durationpb.Duration{
 						Seconds: 22,
-					}),
+					},
 					MaxRequestsPerConnection: &wrappers.UInt32Value{Value: 10},
 				},
 			},
@@ -3239,9 +3237,9 @@ func TestApplyConnectionPool(t *testing.T) {
 			cluster: &cluster.Cluster{Name: "foo", ClusterDiscoveryType: &cluster.Cluster_Type{Type: cluster.Cluster_EDS}},
 			httpProtocolOptions: &http.HttpProtocolOptions{
 				CommonHttpProtocolOptions: &core.HttpProtocolOptions{
-					IdleTimeout: gogo.DurationToProtoDuration(&types.Duration{
+					IdleTimeout: &durationpb.Duration{
 						Seconds: 10,
-					}),
+					},
 					MaxRequestsPerConnection: &wrappers.UInt32Value{Value: 10},
 				},
 			},
@@ -3252,9 +3250,9 @@ func TestApplyConnectionPool(t *testing.T) {
 			},
 			expectedHTTPPOpt: &http.HttpProtocolOptions{
 				CommonHttpProtocolOptions: &core.HttpProtocolOptions{
-					IdleTimeout: gogo.DurationToProtoDuration(&types.Duration{
+					IdleTimeout: &durationpb.Duration{
 						Seconds: 10,
-					}),
+					},
 					MaxRequestsPerConnection: &wrappers.UInt32Value{Value: 22},
 				},
 			},
@@ -3264,15 +3262,15 @@ func TestApplyConnectionPool(t *testing.T) {
 			cluster: &cluster.Cluster{Name: "foo", ClusterDiscoveryType: &cluster.Cluster_Type{Type: cluster.Cluster_EDS}},
 			httpProtocolOptions: &http.HttpProtocolOptions{
 				CommonHttpProtocolOptions: &core.HttpProtocolOptions{
-					IdleTimeout: gogo.DurationToProtoDuration(&types.Duration{
+					IdleTimeout: &durationpb.Duration{
 						Seconds: 10,
-					}),
+					},
 					MaxRequestsPerConnection: &wrappers.UInt32Value{Value: 10},
 				},
 			},
 			connectionPool: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
-					IdleTimeout: &types.Duration{
+					IdleTimeout: &durationpb.Duration{
 						Seconds: 22,
 					},
 					MaxRequestsPerConnection: 22,
@@ -3280,9 +3278,9 @@ func TestApplyConnectionPool(t *testing.T) {
 			},
 			expectedHTTPPOpt: &http.HttpProtocolOptions{
 				CommonHttpProtocolOptions: &core.HttpProtocolOptions{
-					IdleTimeout: gogo.DurationToProtoDuration(&types.Duration{
+					IdleTimeout: &durationpb.Duration{
 						Seconds: 22,
-					}),
+					},
 					MaxRequestsPerConnection: &wrappers.UInt32Value{Value: 22},
 				},
 			},
diff --git a/pilot/pkg/networking/core/v1alpha3/cluster_test.go b/pilot/pkg/networking/core/v1alpha3/cluster_test.go
index d05376f506..54e29cbcbe 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster_test.go
@@ -26,10 +26,9 @@
 	cluster "github.com/envoyproxy/go-control-plane/envoy/config/cluster/v3"
 	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
 	http "github.com/envoyproxy/go-control-plane/envoy/extensions/upstreams/http/v3"
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
 	"github.com/google/go-cmp/cmp"
 	. "github.com/onsi/gomega"
+	"google.golang.org/protobuf/proto"
 	"google.golang.org/protobuf/testing/protocmp"
 	"google.golang.org/protobuf/types/known/durationpb"
 	"google.golang.org/protobuf/types/known/structpb"
@@ -65,13 +64,13 @@
 	TestServiceNHostname = "foo.bar"
 )
 
-func testMesh() meshconfig.MeshConfig {
-	return meshconfig.MeshConfig{
-		ConnectTimeout: &types.Duration{
+func testMesh() *meshconfig.MeshConfig {
+	return &meshconfig.MeshConfig{
+		ConnectTimeout: &durationpb.Duration{
 			Seconds: 10,
 			Nanos:   1,
 		},
-		EnableAutoMtls: &types.BoolValue{
+		EnableAutoMtls: &wrappers.BoolValue{
 			Value: false,
 		},
 	}
@@ -189,7 +188,7 @@ func TestCommonHttpProtocolOptions(t *testing.T) {
 	settings := &networking.ConnectionPoolSettings{
 		Http: &networking.ConnectionPoolSettings_HTTPSettings{
 			Http1MaxPendingRequests: 1,
-			IdleTimeout:             &types.Duration{Seconds: 15},
+			IdleTimeout:             &durationpb.Duration{Seconds: 15},
 		},
 	}
 
@@ -252,7 +251,7 @@ type clusterTest struct {
 	serviceResolution model.Resolution
 	nodeType          model.NodeType
 	locality          *core.Locality
-	mesh              meshconfig.MeshConfig
+	mesh              *meshconfig.MeshConfig
 	destRule          proto.Message
 	peerAuthn         *authn_beta.PeerAuthentication
 	externalService   bool
@@ -388,7 +387,7 @@ func buildTestClusters(c clusterTest) []*cluster.Cluster {
 		Services:   []*model.Service{service},
 		Instances:  instances,
 		Configs:    configs,
-		MeshConfig: &c.mesh,
+		MeshConfig: c.mesh,
 	})
 
 	var proxy *model.Proxy
@@ -460,7 +459,7 @@ func TestBuildGatewayClustersWithRingHashLb(t *testing.T) {
 										HashKey: &networking.LoadBalancerSettings_ConsistentHashLB_HttpCookie{
 											HttpCookie: &networking.LoadBalancerSettings_ConsistentHashLB_HTTPCookie{
 												Name: "hash-cookie",
-												Ttl:  &types.Duration{Nanos: 100},
+												Ttl:  &durationpb.Duration{Nanos: 100},
 											},
 										},
 									},
@@ -477,7 +476,7 @@ func TestBuildGatewayClustersWithRingHashLb(t *testing.T) {
 	}
 }
 
-func withClusterLocalHosts(m meshconfig.MeshConfig, hosts ...string) meshconfig.MeshConfig { // nolint:interfacer
+func withClusterLocalHosts(m *meshconfig.MeshConfig, hosts ...string) *meshconfig.MeshConfig { // nolint:interfacer
 	m.ServiceSettings = append(append(make([]*meshconfig.MeshConfig_ServiceSettings, 0), m.ServiceSettings...),
 		&meshconfig.MeshConfig_ServiceSettings{
 			Settings: &meshconfig.MeshConfig_ServiceSettings_Settings{
@@ -664,7 +663,7 @@ func buildTestClustersWithTCPKeepalive(t testing.TB, configType ConfigType) []*c
 	m := testMesh()
 	if configType != None {
 		m.TcpKeepalive = &networking.ConnectionPoolSettings_TCPSettings_TcpKeepalive{
-			Time: &types.Duration{
+			Time: &durationpb.Duration{
 				Seconds: MeshWideTCPKeepaliveSeconds,
 				Nanos:   0,
 			},
@@ -675,7 +674,7 @@ func buildTestClustersWithTCPKeepalive(t testing.TB, configType ConfigType) []*c
 	var destinationRuleTCPKeepalive *networking.ConnectionPoolSettings_TCPSettings_TcpKeepalive
 	if configType == DestinationRule {
 		destinationRuleTCPKeepalive = &networking.ConnectionPoolSettings_TCPSettings_TcpKeepalive{
-			Time: &types.Duration{
+			Time: &durationpb.Duration{
 				Seconds: DestinationRuleTCPKeepaliveSeconds,
 				Nanos:   0,
 			},
@@ -844,8 +843,8 @@ func TestApplyOutlierDetection(t *testing.T) {
 		{
 			"Consecutive gateway and 5xx errors are set",
 			&networking.OutlierDetection{
-				Consecutive_5XxErrors:    &types.UInt32Value{Value: 4},
-				ConsecutiveGatewayErrors: &types.UInt32Value{Value: 3},
+				Consecutive_5XxErrors:    &wrappers.UInt32Value{Value: 4},
+				ConsecutiveGatewayErrors: &wrappers.UInt32Value{Value: 3},
 			},
 			&cluster.OutlierDetection{
 				Consecutive_5Xx:                    &wrappers.UInt32Value{Value: 4},
@@ -858,7 +857,7 @@ func TestApplyOutlierDetection(t *testing.T) {
 		{
 			"Only consecutive gateway is set",
 			&networking.OutlierDetection{
-				ConsecutiveGatewayErrors: &types.UInt32Value{Value: 3},
+				ConsecutiveGatewayErrors: &wrappers.UInt32Value{Value: 3},
 			},
 			&cluster.OutlierDetection{
 				ConsecutiveGatewayFailure:          &wrappers.UInt32Value{Value: 3},
@@ -869,7 +868,7 @@ func TestApplyOutlierDetection(t *testing.T) {
 		{
 			"Only consecutive 5xx is set",
 			&networking.OutlierDetection{
-				Consecutive_5XxErrors: &types.UInt32Value{Value: 3},
+				Consecutive_5XxErrors: &wrappers.UInt32Value{Value: 3},
 			},
 			&cluster.OutlierDetection{
 				Consecutive_5Xx:          &wrappers.UInt32Value{Value: 3},
@@ -880,7 +879,7 @@ func TestApplyOutlierDetection(t *testing.T) {
 		{
 			"Consecutive gateway is set to 0",
 			&networking.OutlierDetection{
-				ConsecutiveGatewayErrors: &types.UInt32Value{Value: 0},
+				ConsecutiveGatewayErrors: &wrappers.UInt32Value{Value: 0},
 			},
 			&cluster.OutlierDetection{
 				ConsecutiveGatewayFailure:          &wrappers.UInt32Value{Value: 0},
@@ -891,7 +890,7 @@ func TestApplyOutlierDetection(t *testing.T) {
 		{
 			"Consecutive 5xx is set to 0",
 			&networking.OutlierDetection{
-				Consecutive_5XxErrors: &types.UInt32Value{Value: 0},
+				Consecutive_5XxErrors: &wrappers.UInt32Value{Value: 0},
 			},
 			&cluster.OutlierDetection{
 				Consecutive_5Xx:          &wrappers.UInt32Value{Value: 0},
@@ -903,7 +902,7 @@ func TestApplyOutlierDetection(t *testing.T) {
 			"Local origin errors is enabled",
 			&networking.OutlierDetection{
 				SplitExternalLocalOriginErrors: true,
-				ConsecutiveLocalOriginFailures: &types.UInt32Value{Value: 10},
+				ConsecutiveLocalOriginFailures: &wrappers.UInt32Value{Value: 10},
 			},
 			&cluster.OutlierDetection{
 				EnforcingSuccessRate:                   &wrappers.UInt32Value{Value: 0},
@@ -936,12 +935,12 @@ func TestApplyOutlierDetection(t *testing.T) {
 func TestStatNamePattern(t *testing.T) {
 	g := NewWithT(t)
 
-	statConfigMesh := meshconfig.MeshConfig{
-		ConnectTimeout: &types.Duration{
+	statConfigMesh := &meshconfig.MeshConfig{
+		ConnectTimeout: &durationpb.Duration{
 			Seconds: 10,
 			Nanos:   1,
 		},
-		EnableAutoMtls: &types.BoolValue{
+		EnableAutoMtls: &wrappers.BoolValue{
 			Value: false,
 		},
 		InboundClusterStatName:  "LocalService_%SERVICE%",
@@ -1357,9 +1356,9 @@ func TestSlowStartConfig(t *testing.T) {
 }
 
 func getSlowStartTrafficPolicy(slowStartEnabled bool, lbType networking.LoadBalancerSettings_SimpleLB) *networking.TrafficPolicy {
-	var warmupDurationSecs *types.Duration
+	var warmupDurationSecs *durationpb.Duration
 	if slowStartEnabled {
-		warmupDurationSecs = &types.Duration{Seconds: 15}
+		warmupDurationSecs = &durationpb.Duration{Seconds: 15}
 	}
 	return &networking.TrafficPolicy{
 		LoadBalancer: &networking.LoadBalancerSettings{
@@ -1747,7 +1746,7 @@ func TestApplyLoadBalancer(t *testing.T) {
 			name: "Loadbalancer has distribute",
 			lbSettings: &networking.LoadBalancerSettings{
 				LocalityLbSetting: &networking.LocalityLoadBalancerSetting{
-					Enabled: &types.BoolValue{Value: true},
+					Enabled: &wrappers.BoolValue{Value: true},
 					Distribute: []*networking.LocalityLoadBalancerSetting_Distribute{
 						{
 							From: "region1/zone1/subzone1",
diff --git a/pilot/pkg/networking/core/v1alpha3/envoyfilter/listener_patch_test.go b/pilot/pkg/networking/core/v1alpha3/envoyfilter/listener_patch_test.go
index 9c991c49a2..f1d5ae2477 100644
--- a/pilot/pkg/networking/core/v1alpha3/envoyfilter/listener_patch_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/envoyfilter/listener_patch_test.go
@@ -30,13 +30,13 @@
 	tcp_proxy "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/tcp_proxy/v3"
 	tls "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	gogojsonpb "github.com/gogo/protobuf/jsonpb"
-	"github.com/gogo/protobuf/types"
+	"github.com/golang/protobuf/jsonpb"
 	"github.com/golang/protobuf/ptypes/wrappers"
 	"github.com/google/go-cmp/cmp"
 	"google.golang.org/protobuf/proto"
 	"google.golang.org/protobuf/testing/protocmp"
 	"google.golang.org/protobuf/types/known/anypb"
+	"google.golang.org/protobuf/types/known/durationpb"
 	"google.golang.org/protobuf/types/known/structpb"
 	"google.golang.org/protobuf/types/known/wrapperspb"
 
@@ -56,8 +56,8 @@
 	"istio.io/istio/pkg/util/protomarshal"
 )
 
-var testMesh = meshconfig.MeshConfig{
-	ConnectTimeout: &types.Duration{
+var testMesh = &meshconfig.MeshConfig{
+	ConnectTimeout: &durationpb.Duration{
 		Seconds: 10,
 		Nanos:   1,
 	},
@@ -81,9 +81,9 @@ func buildEnvoyFilterConfigStore(configPatches []*networking.EnvoyFilter_EnvoyCo
 	return store
 }
 
-func buildPatchStruct(config string) *types.Struct {
-	val := &types.Struct{}
-	_ = gogojsonpb.Unmarshal(strings.NewReader(config), val)
+func buildPatchStruct(config string) *structpb.Struct {
+	val := &structpb.Struct{}
+	_ = jsonpb.Unmarshal(strings.NewReader(config), val)
 	return val
 }
 
@@ -94,12 +94,12 @@ func buildGolangPatchStruct(config string) *structpb.Struct {
 	return val
 }
 
-func newTestEnvironment(serviceDiscovery model.ServiceDiscovery, meshConfig meshconfig.MeshConfig,
+func newTestEnvironment(serviceDiscovery model.ServiceDiscovery, meshConfig *meshconfig.MeshConfig,
 	configStore model.IstioConfigStore) *model.Environment {
 	e := &model.Environment{
 		ServiceDiscovery: serviceDiscovery,
 		IstioConfigStore: configStore,
-		Watcher:          mesh.NewFixedWatcher(&meshConfig),
+		Watcher:          mesh.NewFixedWatcher(meshConfig),
 	}
 
 	e.PushContext = model.NewPushContext()
diff --git a/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin_test.go b/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin_test.go
index c2fb2f9a8f..81a51e2243 100644
--- a/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin_test.go
@@ -20,7 +20,7 @@
 	envoy_config_core_v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
 	http_conn "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/http_connection_manager/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/types"
+	"github.com/golang/protobuf/ptypes/wrappers"
 	"github.com/google/go-cmp/cmp"
 	"google.golang.org/protobuf/testing/protocmp"
 
@@ -49,8 +49,8 @@
 	someAuthNFilter = &model.WasmPluginWrapper{
 		Name:      "someAuthNFilter",
 		Namespace: "istio-system",
-		WasmPlugin: extensions.WasmPlugin{
-			Priority: &types.Int64Value{Value: 1},
+		WasmPlugin: &extensions.WasmPlugin{
+			Priority: &wrappers.Int64Value{Value: 1},
 		},
 		ExtensionConfiguration: &envoy_config_core_v3.TypedExtensionConfig{
 			Name: "istio-system.someAuthNFilter",
@@ -59,8 +59,8 @@
 	someImportantAuthNFilter = &model.WasmPluginWrapper{
 		Name:      "someImportantAuthNFilter",
 		Namespace: "istio-system",
-		WasmPlugin: extensions.WasmPlugin{
-			Priority: &types.Int64Value{Value: 1000},
+		WasmPlugin: &extensions.WasmPlugin{
+			Priority: &wrappers.Int64Value{Value: 1000},
 		},
 		ExtensionConfiguration: &envoy_config_core_v3.TypedExtensionConfig{
 			Name: "istio-system.someImportantAuthNFilter",
@@ -69,8 +69,8 @@
 	someAuthZFilter = &model.WasmPluginWrapper{
 		Name:      "someAuthZFilter",
 		Namespace: "istio-system",
-		WasmPlugin: extensions.WasmPlugin{
-			Priority: &types.Int64Value{Value: 1000},
+		WasmPlugin: &extensions.WasmPlugin{
+			Priority: &wrappers.Int64Value{Value: 1000},
 		},
 		ExtensionConfiguration: &envoy_config_core_v3.TypedExtensionConfig{
 			Name: "istio-system.someAuthZFilter",
diff --git a/pilot/pkg/networking/core/v1alpha3/listener.go b/pilot/pkg/networking/core/v1alpha3/listener.go
index abd6b428eb..a4e9a66996 100644
--- a/pilot/pkg/networking/core/v1alpha3/listener.go
+++ b/pilot/pkg/networking/core/v1alpha3/listener.go
@@ -51,7 +51,6 @@
 	"istio.io/istio/pkg/config/protocol"
 	"istio.io/istio/pkg/config/security"
 	"istio.io/istio/pkg/proto"
-	"istio.io/istio/pkg/util/gogo"
 	"istio.io/pkg/log"
 	"istio.io/pkg/monitoring"
 )
@@ -1610,7 +1609,7 @@ func buildListener(opts buildListenerOpts, trafficDirection core.TrafficDirectio
 		}
 
 		if opts.proxy.Type != model.Router {
-			res.ListenerFiltersTimeout = gogo.DurationToProtoDuration(opts.push.Mesh.ProtocolDetectionTimeout)
+			res.ListenerFiltersTimeout = opts.push.Mesh.ProtocolDetectionTimeout
 			if res.ListenerFiltersTimeout != nil {
 				res.ContinueOnListenerFiltersTimeout = true
 			}
diff --git a/pilot/pkg/networking/core/v1alpha3/listener_builder.go b/pilot/pkg/networking/core/v1alpha3/listener_builder.go
index 7d087c98ac..e542a925dc 100644
--- a/pilot/pkg/networking/core/v1alpha3/listener_builder.go
+++ b/pilot/pkg/networking/core/v1alpha3/listener_builder.go
@@ -188,7 +188,7 @@ func (lb *ListenerBuilder) aggregateVirtualInboundListener(passthroughInspectors
 		lb.virtualInboundListener.ListenerFilters = append(lb.virtualInboundListener.ListenerFilters, buildHTTPInspector(inspectors))
 	}
 
-	timeout := util.GogoDurationToDuration(lb.push.Mesh.GetProtocolDetectionTimeout())
+	timeout := lb.push.Mesh.GetProtocolDetectionTimeout()
 	if features.InboundProtocolDetectionTimeoutSet {
 		timeout = durationpb.New(features.InboundProtocolDetectionTimeout)
 	}
diff --git a/pilot/pkg/networking/core/v1alpha3/listener_builder_test.go b/pilot/pkg/networking/core/v1alpha3/listener_builder_test.go
index 94bb715c18..e57d8592a2 100644
--- a/pilot/pkg/networking/core/v1alpha3/listener_builder_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/listener_builder_test.go
@@ -24,8 +24,8 @@
 	listener "github.com/envoyproxy/go-control-plane/envoy/config/listener/v3"
 	tls "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/jsonpb"
-	"github.com/gogo/protobuf/types"
+	"github.com/golang/protobuf/jsonpb"
+	"google.golang.org/protobuf/types/known/structpb"
 
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pilot/pkg/features"
@@ -594,8 +594,8 @@ type fields struct {
 	}
 }
 
-func buildPatchStruct(config string) *types.Struct {
-	val := &types.Struct{}
+func buildPatchStruct(config string) *structpb.Struct {
+	val := &structpb.Struct{}
 	_ = jsonpb.Unmarshal(strings.NewReader(config), val)
 	return val
 }
diff --git a/pilot/pkg/networking/core/v1alpha3/listener_test.go b/pilot/pkg/networking/core/v1alpha3/listener_test.go
index ce1ca508ff..7dda9c9c51 100644
--- a/pilot/pkg/networking/core/v1alpha3/listener_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/listener_test.go
@@ -31,10 +31,10 @@
 	xdstype "github.com/envoyproxy/go-control-plane/envoy/type/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/conversion"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/types"
 	"github.com/google/go-cmp/cmp"
 	"google.golang.org/protobuf/proto"
 	"google.golang.org/protobuf/testing/protocmp"
+	"google.golang.org/protobuf/types/known/structpb"
 	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -2942,7 +2942,7 @@ func buildListenerEnvWithAdditionalConfig(services []*model.Service, virtualServ
 					ApplyTo: networking.EnvoyFilter_HTTP_FILTER,
 					Patch: &networking.EnvoyFilter_Patch{
 						Operation: networking.EnvoyFilter_Patch_INSERT_BEFORE,
-						Value:     &types.Struct{},
+						Value:     &structpb.Struct{},
 					},
 				},
 			},
diff --git a/pilot/pkg/networking/core/v1alpha3/loadbalancer/loadbalancer_test.go b/pilot/pkg/networking/core/v1alpha3/loadbalancer/loadbalancer_test.go
index 31ddfc63d5..69fd711ed9 100644
--- a/pilot/pkg/networking/core/v1alpha3/loadbalancer/loadbalancer_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/loadbalancer/loadbalancer_test.go
@@ -21,8 +21,8 @@
 	cluster "github.com/envoyproxy/go-control-plane/envoy/config/cluster/v3"
 	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
 	endpoint "github.com/envoyproxy/go-control-plane/envoy/config/endpoint/v3"
-	"github.com/gogo/protobuf/types"
 	. "github.com/onsi/gomega"
+	"google.golang.org/protobuf/types/known/durationpb"
 	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -163,7 +163,7 @@ func TestApplyLocalitySetting(t *testing.T) {
 		g := NewWithT(t)
 		cluster := buildSmallClusterWithNilLocalities()
 		lbsetting := &networking.LocalityLoadBalancerSetting{
-			Enabled: &types.BoolValue{Value: false},
+			Enabled: &wrappers.BoolValue{Value: false},
 		}
 		ApplyLocalityLBSetting(cluster.LoadAssignment, nil, locality, nil, lbsetting, true)
 		for _, localityEndpoint := range cluster.LoadAssignment.Endpoints {
@@ -527,8 +527,8 @@ func TestGetLocalityLbSetting(t *testing.T) {
 		{
 			"dr only override",
 			nil,
-			&networking.LocalityLoadBalancerSetting{Enabled: &types.BoolValue{Value: true}},
-			&networking.LocalityLoadBalancerSetting{Enabled: &types.BoolValue{Value: true}},
+			&networking.LocalityLoadBalancerSetting{Enabled: &wrappers.BoolValue{Value: true}},
+			&networking.LocalityLoadBalancerSetting{Enabled: &wrappers.BoolValue{Value: true}},
 		},
 		{
 			"both",
@@ -538,21 +538,21 @@ func TestGetLocalityLbSetting(t *testing.T) {
 		},
 		{
 			"mesh disabled",
-			&networking.LocalityLoadBalancerSetting{Enabled: &types.BoolValue{Value: false}},
+			&networking.LocalityLoadBalancerSetting{Enabled: &wrappers.BoolValue{Value: false}},
 			nil,
 			nil,
 		},
 		{
 			"dr disabled",
-			&networking.LocalityLoadBalancerSetting{Enabled: &types.BoolValue{Value: true}},
-			&networking.LocalityLoadBalancerSetting{Enabled: &types.BoolValue{Value: false}},
+			&networking.LocalityLoadBalancerSetting{Enabled: &wrappers.BoolValue{Value: true}},
+			&networking.LocalityLoadBalancerSetting{Enabled: &wrappers.BoolValue{Value: false}},
 			nil,
 		},
 		{
 			"dr enabled override mesh disabled",
-			&networking.LocalityLoadBalancerSetting{Enabled: &types.BoolValue{Value: false}},
-			&networking.LocalityLoadBalancerSetting{Enabled: &types.BoolValue{Value: true}},
-			&networking.LocalityLoadBalancerSetting{Enabled: &types.BoolValue{Value: true}},
+			&networking.LocalityLoadBalancerSetting{Enabled: &wrappers.BoolValue{Value: false}},
+			&networking.LocalityLoadBalancerSetting{Enabled: &wrappers.BoolValue{Value: true}},
+			&networking.LocalityLoadBalancerSetting{Enabled: &wrappers.BoolValue{Value: true}},
 		},
 	}
 	for _, tt := range cases {
@@ -579,7 +579,7 @@ func buildEnvForClustersWithDistribute(distribute []*networking.LocalityLoadBala
 	})
 
 	meshConfig := &meshconfig.MeshConfig{
-		ConnectTimeout: &types.Duration{
+		ConnectTimeout: &durationpb.Duration{
 			Seconds: 10,
 			Nanos:   1,
 		},
@@ -631,7 +631,7 @@ func buildEnvForClustersWithFailover() *model.Environment {
 	})
 
 	meshConfig := &meshconfig.MeshConfig{
-		ConnectTimeout: &types.Duration{
+		ConnectTimeout: &durationpb.Duration{
 			Seconds: 10,
 			Nanos:   1,
 		},
@@ -688,7 +688,7 @@ func buildEnvForClustersWithFailoverPriority(failoverPriority []string) *model.E
 	})
 
 	meshConfig := &meshconfig.MeshConfig{
-		ConnectTimeout: &types.Duration{
+		ConnectTimeout: &durationpb.Duration{
 			Seconds: 10,
 			Nanos:   1,
 		},
diff --git a/pilot/pkg/networking/core/v1alpha3/route/retry/retry.go b/pilot/pkg/networking/core/v1alpha3/route/retry/retry.go
index 86a58a06c8..d477b6c746 100644
--- a/pilot/pkg/networking/core/v1alpha3/route/retry/retry.go
+++ b/pilot/pkg/networking/core/v1alpha3/route/retry/retry.go
@@ -88,7 +88,7 @@ func ConvertPolicy(in *networking.HTTPRetry) *route.RetryPolicy {
 	}
 
 	if in.PerTryTimeout != nil {
-		out.PerTryTimeout = util.GogoDurationToDuration(in.PerTryTimeout)
+		out.PerTryTimeout = in.PerTryTimeout
 	}
 
 	if in.RetryRemoteLocalities != nil && in.RetryRemoteLocalities.GetValue() {
diff --git a/pilot/pkg/networking/core/v1alpha3/route/retry/retry_test.go b/pilot/pkg/networking/core/v1alpha3/route/retry/retry_test.go
index 6501a260dc..30aa370183 100644
--- a/pilot/pkg/networking/core/v1alpha3/route/retry/retry_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/route/retry/retry_test.go
@@ -21,9 +21,9 @@
 
 	envoyroute "github.com/envoyproxy/go-control-plane/envoy/config/route/v3"
 	previouspriorities "github.com/envoyproxy/go-control-plane/envoy/extensions/retry/priority/previous_priorities/v3"
-	gogoTypes "github.com/gogo/protobuf/types"
 	. "github.com/onsi/gomega"
 	"google.golang.org/protobuf/types/known/durationpb"
+	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pilot/pkg/networking/core/v1alpha3/route/retry"
@@ -33,13 +33,13 @@
 func TestRetry(t *testing.T) {
 	testCases := []struct {
 		name       string
-		route      networking.HTTPRoute
+		route      *networking.HTTPRoute
 		assertFunc func(g *WithT, policy *envoyroute.RetryPolicy)
 	}{
 		{
 			name: "TestNilRetryShouldReturnDefault",
 			// Create a route where no retry policy has been explicitly set.
-			route: networking.HTTPRoute{},
+			route: &networking.HTTPRoute{},
 			assertFunc: func(g *WithT, policy *envoyroute.RetryPolicy) {
 				g.Expect(policy).To(Not(BeNil()))
 				g.Expect(policy).To(Equal(retry.DefaultPolicy()))
@@ -48,7 +48,7 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestZeroAttemptsShouldReturnNilPolicy",
 			// Create a route with a retry policy with zero attempts configured.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					// Explicitly not retrying.
 					Attempts: 0,
@@ -61,11 +61,11 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestRetryWithAllFieldsSet",
 			// Create a route with a retry policy with all fields configured.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					Attempts:      2,
 					RetryOn:       "some,fake,conditions",
-					PerTryTimeout: gogoTypes.DurationProto(time.Second * 3),
+					PerTryTimeout: durationpb.New(time.Second * 3),
 				},
 			},
 			assertFunc: func(g *WithT, policy *envoyroute.RetryPolicy) {
@@ -82,7 +82,7 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestRetryOnWithEmptyParts",
 			// Create a route with a retry policy with empty retry conditions configured.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					// Explicitly not retrying.
 					Attempts: 2,
@@ -98,7 +98,7 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestRetryOnWithRetriableStatusCodes",
 			// Create a route with a retry policy with retriable status code.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					// Explicitly not retrying.
 					Attempts: 2,
@@ -114,7 +114,7 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestRetryOnWithWhitespace",
 			// Create a route with a retry policy with retryOn having white spaces.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					// Explicitly not retrying.
 					Attempts: 2,
@@ -130,7 +130,7 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestRetryOnContainingStatusCodes",
 			// Create a route with a retry policy with status codes.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					Attempts: 2,
 					RetryOn:  "some,fake,5xx,404,conditions,503",
@@ -145,7 +145,7 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestRetryOnWithInvalidStatusCodesShouldAddToRetryOn",
 			// Create a route with a retry policy with invalid status codes.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					Attempts: 2,
 					RetryOn:  "some,fake,conditions,1000",
@@ -160,7 +160,7 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestMissingRetryOnShouldReturnDefaults",
 			// Create a route with a retry policy with two attempts configured.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					Attempts: 2,
 				},
@@ -174,7 +174,7 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestMissingPerTryTimeoutShouldReturnNil",
 			// Create a route with a retry policy without per try timeout.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					Attempts: 2,
 				},
@@ -187,10 +187,10 @@ func TestRetry(t *testing.T) {
 		{
 			name: "TestRetryRemoteLocalities",
 			// Create a route with a retry policy with RetryRemoteLocalities enabled.
-			route: networking.HTTPRoute{
+			route: &networking.HTTPRoute{
 				Retries: &networking.HTTPRetry{
 					Attempts: 2,
-					RetryRemoteLocalities: &gogoTypes.BoolValue{
+					RetryRemoteLocalities: &wrappers.BoolValue{
 						Value: true,
 					},
 				},
diff --git a/pilot/pkg/networking/core/v1alpha3/route/route.go b/pilot/pkg/networking/core/v1alpha3/route/route.go
index 15d4c88253..f91a3a1bdb 100644
--- a/pilot/pkg/networking/core/v1alpha3/route/route.go
+++ b/pilot/pkg/networking/core/v1alpha3/route/route.go
@@ -44,7 +44,6 @@
 	"istio.io/istio/pkg/config/host"
 	"istio.io/istio/pkg/config/labels"
 	"istio.io/istio/pkg/proto"
-	"istio.io/istio/pkg/util/gogo"
 	"istio.io/pkg/log"
 )
 
@@ -475,7 +474,7 @@ func applyHTTPRouteDestination(
 	// Configure timeouts specified by Virtual Service if they are provided, otherwise set it to defaults.
 	action.Timeout = features.DefaultRequestTimeout
 	if in.Timeout != nil {
-		action.Timeout = gogo.DurationToProtoDuration(in.Timeout)
+		action.Timeout = in.Timeout
 	}
 	if node.IsProxylessGrpc() {
 		// TODO(stevenctl) merge these paths; grpc's xDS impl will not read the deprecated value
@@ -656,6 +655,7 @@ func mirrorPercent(in *networking.HTTPRoute) *core.RuntimeFractionalPercent {
 		}
 		// If zero percent is provided explicitly, we should not mirror.
 		return nil
+	// nolint: staticcheck
 	case in.MirrorPercent != nil:
 		if in.MirrorPercent.GetValue() > 0 {
 			return &core.RuntimeFractionalPercent{
@@ -942,6 +942,7 @@ func translateHeaderMatch(name string, in *networking.StringMatch) *route.Header
 		return out
 	}
 
+	// nolint: staticcheck
 	switch m := in.MatchType.(type) {
 	case *networking.StringMatch_Exact:
 		out.HeaderMatchSpecifier = &route.HeaderMatcher_ExactMatch{ExactMatch: m.Exact}
@@ -1003,6 +1004,7 @@ func translateCORSPolicy(in *networking.CorsPolicy) *route.CorsPolicy {
 
 	// CORS filter is enabled by default
 	out := route.CorsPolicy{}
+	// nolint: staticcheck
 	if in.AllowOrigins != nil {
 		out.AllowOriginStringMatch = convertToEnvoyMatch(in.AllowOrigins)
 	} else if in.AllowOrigin != nil {
@@ -1018,7 +1020,7 @@ func translateCORSPolicy(in *networking.CorsPolicy) *route.CorsPolicy {
 		},
 	}
 
-	out.AllowCredentials = gogo.BoolToProtoBool(in.AllowCredentials)
+	out.AllowCredentials = in.AllowCredentials
 	out.AllowHeaders = strings.Join(in.AllowHeaders, ",")
 	out.AllowMethods = strings.Join(in.AllowMethods, ",")
 	out.ExposeHeaders = strings.Join(in.ExposeHeaders, ",")
@@ -1122,12 +1124,12 @@ func translateFault(in *networking.HTTPFaultInjection) *xdshttpfault.HTTPFault {
 		if in.Delay.Percentage != nil {
 			out.Delay.Percentage = translatePercentToFractionalPercent(in.Delay.Percentage)
 		} else {
-			out.Delay.Percentage = translateIntegerToFractionalPercent(in.Delay.Percent)
+			out.Delay.Percentage = translateIntegerToFractionalPercent(in.Delay.Percent) // nolint: staticcheck
 		}
 		switch d := in.Delay.HttpDelayType.(type) {
 		case *networking.HTTPFaultInjection_Delay_FixedDelay:
 			out.Delay.FaultDelaySecifier = &xdsfault.FaultDelay_FixedDelay{
-				FixedDelay: gogo.DurationToProtoDuration(d.FixedDelay),
+				FixedDelay: d.FixedDelay,
 			}
 		default:
 			log.Warnf("Exponential faults are not yet supported")
@@ -1188,7 +1190,7 @@ func consistentHashToHashPolicy(consistentHash *networking.LoadBalancerSettings_
 		cookie := consistentHash.GetHttpCookie()
 		var ttl *durationpb.Duration
 		if cookie.GetTtl() != nil {
-			ttl = gogo.DurationToProtoDuration(cookie.GetTtl())
+			ttl = cookie.GetTtl()
 		}
 		return &route.RouteAction_HashPolicy{
 			PolicySpecifier: &route.RouteAction_HashPolicy_Cookie_{
diff --git a/pilot/pkg/networking/core/v1alpha3/route/route_internal_test.go b/pilot/pkg/networking/core/v1alpha3/route/route_internal_test.go
index 1388144fc7..f97154c12d 100644
--- a/pilot/pkg/networking/core/v1alpha3/route/route_internal_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/route/route_internal_test.go
@@ -22,7 +22,7 @@
 	route "github.com/envoyproxy/go-control-plane/envoy/config/route/v3"
 	matcher "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3"
 	xdstype "github.com/envoyproxy/go-control-plane/envoy/type/v3"
-	"github.com/gogo/protobuf/types"
+	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 
 	networking "istio.io/api/networking/v1alpha3"
 	authzmatcher "istio.io/istio/pilot/pkg/security/authz/matcher"
@@ -325,7 +325,7 @@ func TestMirrorPercent(t *testing.T) {
 			name: "zero mirror percent",
 			route: &networking.HTTPRoute{
 				Mirror:        &networking.Destination{},
-				MirrorPercent: &types.UInt32Value{Value: 0.0},
+				MirrorPercent: &wrappers.UInt32Value{Value: 0.0},
 			},
 			want: nil,
 		},
@@ -345,7 +345,7 @@ func TestMirrorPercent(t *testing.T) {
 			name: "mirror with actual percent",
 			route: &networking.HTTPRoute{
 				Mirror:        &networking.Destination{},
-				MirrorPercent: &types.UInt32Value{Value: 50},
+				MirrorPercent: &wrappers.UInt32Value{Value: 50},
 			},
 			want: &core.RuntimeFractionalPercent{
 				DefaultValue: &xdstype.FractionalPercent{
@@ -379,7 +379,7 @@ func TestMirrorPercent(t *testing.T) {
 			name: "mirrorpercentage takes precedence when both are given",
 			route: &networking.HTTPRoute{
 				Mirror:           &networking.Destination{},
-				MirrorPercent:    &types.UInt32Value{Value: 40},
+				MirrorPercent:    &wrappers.UInt32Value{Value: 40},
 				MirrorPercentage: &networking.Percent{Value: 50.0},
 			},
 			want: &core.RuntimeFractionalPercent{
diff --git a/pilot/pkg/networking/core/v1alpha3/route/route_test.go b/pilot/pkg/networking/core/v1alpha3/route/route_test.go
index 6e5db3f24f..f5128876a1 100644
--- a/pilot/pkg/networking/core/v1alpha3/route/route_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/route/route_test.go
@@ -23,7 +23,6 @@
 	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
 	envoyroute "github.com/envoyproxy/go-control-plane/envoy/config/route/v3"
 	matcher "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3"
-	"github.com/gogo/protobuf/types"
 	"github.com/onsi/gomega"
 	"google.golang.org/protobuf/types/known/durationpb"
 	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
@@ -39,7 +38,6 @@
 	"istio.io/istio/pkg/config/host"
 	"istio.io/istio/pkg/config/protocol"
 	"istio.io/istio/pkg/config/schema/gvk"
-	"istio.io/istio/pkg/util/gogo"
 )
 
 func TestBuildHTTPRoutes(t *testing.T) {
@@ -319,7 +317,7 @@ func TestBuildHTTPRoutes(t *testing.T) {
 
 	t.Run("for virtual service with ring hash", func(t *testing.T) {
 		g := gomega.NewWithT(t)
-		ttl := types.Duration{Nanos: 100}
+		ttl := durationpb.Duration{Nanos: 100}
 		cg := v1alpha3.NewConfigGenTest(t, v1alpha3.TestOptions{
 			Services: exampleService,
 			Configs: []config.Config{
@@ -362,7 +360,7 @@ func TestBuildHTTPRoutes(t *testing.T) {
 			PolicySpecifier: &envoyroute.RouteAction_HashPolicy_Cookie_{
 				Cookie: &envoyroute.RouteAction_HashPolicy_Cookie{
 					Name: "hash-cookie",
-					Ttl:  gogo.DurationToProtoDuration(&ttl),
+					Ttl:  &ttl,
 				},
 			},
 		}
@@ -961,7 +959,7 @@ func loadBalancerPolicy(name string) *networking.LoadBalancerSettings_Consistent
 						Weight: 100,
 					},
 				},
-				Timeout: &types.Duration{
+				Timeout: &durationpb.Duration{
 					Seconds: 10,
 				},
 			},
@@ -990,7 +988,7 @@ func loadBalancerPolicy(name string) *networking.LoadBalancerSettings_Consistent
 						Weight: 100,
 					},
 				},
-				Timeout: &types.Duration{
+				Timeout: &durationpb.Duration{
 					Seconds: 0,
 				},
 			},
diff --git a/pilot/pkg/networking/util/util.go b/pilot/pkg/networking/util/util.go
index 8459b5e5ef..0bf144d4ac 100644
--- a/pilot/pkg/networking/util/util.go
+++ b/pilot/pkg/networking/util/util.go
@@ -28,11 +28,9 @@
 	http_conn "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/http_connection_manager/v3"
 	matcher "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/types"
 	"google.golang.org/protobuf/encoding/prototext"
 	"google.golang.org/protobuf/proto"
 	"google.golang.org/protobuf/types/known/anypb"
-	"google.golang.org/protobuf/types/known/durationpb"
 	"google.golang.org/protobuf/types/known/structpb"
 	"google.golang.org/protobuf/types/known/wrapperspb"
 
@@ -233,18 +231,6 @@ func MessageToAny(msg proto.Message) *anypb.Any {
 	return out
 }
 
-// GogoDurationToDuration converts from gogo proto duration to time.duration
-func GogoDurationToDuration(d *types.Duration) *durationpb.Duration {
-	if d == nil {
-		return nil
-	}
-
-	return &durationpb.Duration{
-		Seconds: d.Seconds,
-		Nanos:   d.Nanos,
-	}
-}
-
 // SortVirtualHosts sorts a slice of virtual hosts by name.
 //
 // Envoy computes a hash of RDS to see if things have changed - hash is affected by order of elements in the filter. Therefore
diff --git a/pilot/pkg/security/authn/v1beta1/policy_applier.go b/pilot/pkg/security/authn/v1beta1/policy_applier.go
index 0f87344705..9262b07fff 100644
--- a/pilot/pkg/security/authn/v1beta1/policy_applier.go
+++ b/pilot/pkg/security/authn/v1beta1/policy_applier.go
@@ -100,13 +100,17 @@ func (a *v1beta1PolicyApplier) setAuthnFilterForRequestAuthn(config *authn_filte
 	config.JwtOutputPayloadLocations = nil
 	p := config.Policy
 	// Reset origins to use with beta API
+	// nolint: staticcheck
 	p.Origins = []*authn_alpha.OriginAuthenticationMethod{}
 	// Always set to true for beta API, as it doesn't doe rejection on missing token.
+	// nolint: staticcheck
 	p.OriginIsOptional = true
 
 	// Always bind request.auth.principal from JWT origin. In v2 policy, authorization config specifies what principal to
 	// choose from instead, rather than in authn config.
+	// nolint: staticcheck
 	p.PrincipalBinding = authn_alpha.PrincipalBinding_USE_ORIGIN
+	// nolint: staticcheck
 	for _, jwt := range a.processedJwtRules {
 		p.Origins = append(p.Origins, &authn_alpha.OriginAuthenticationMethod{
 			Jwt: &authn_alpha.Jwt{
diff --git a/pilot/pkg/security/authn/v1beta1/policy_applier_test.go b/pilot/pkg/security/authn/v1beta1/policy_applier_test.go
index b6c72cd65c..95bd6b91e0 100644
--- a/pilot/pkg/security/authn/v1beta1/policy_applier_test.go
+++ b/pilot/pkg/security/authn/v1beta1/policy_applier_test.go
@@ -2070,33 +2070,33 @@ func TestComposePeerAuthentication(t *testing.T) {
 func TestGetMutualTLSMode(t *testing.T) {
 	tests := []struct {
 		name string
-		in   v1beta1.PeerAuthentication_MutualTLS
+		in   *v1beta1.PeerAuthentication_MutualTLS
 		want model.MutualTLSMode
 	}{
 		{
 			name: "unset",
-			in: v1beta1.PeerAuthentication_MutualTLS{
+			in: &v1beta1.PeerAuthentication_MutualTLS{
 				Mode: v1beta1.PeerAuthentication_MutualTLS_UNSET,
 			},
 			want: model.MTLSUnknown,
 		},
 		{
 			name: "disable",
-			in: v1beta1.PeerAuthentication_MutualTLS{
+			in: &v1beta1.PeerAuthentication_MutualTLS{
 				Mode: v1beta1.PeerAuthentication_MutualTLS_DISABLE,
 			},
 			want: model.MTLSDisable,
 		},
 		{
 			name: "permissive",
-			in: v1beta1.PeerAuthentication_MutualTLS{
+			in: &v1beta1.PeerAuthentication_MutualTLS{
 				Mode: v1beta1.PeerAuthentication_MutualTLS_PERMISSIVE,
 			},
 			want: model.MTLSPermissive,
 		},
 		{
 			name: "strict",
-			in: v1beta1.PeerAuthentication_MutualTLS{
+			in: &v1beta1.PeerAuthentication_MutualTLS{
 				Mode: v1beta1.PeerAuthentication_MutualTLS_STRICT,
 			},
 			want: model.MTLSStrict,
@@ -2104,7 +2104,7 @@ func TestGetMutualTLSMode(t *testing.T) {
 	}
 	for _, tt := range tests {
 		t.Run(tt.name, func(t *testing.T) {
-			if got := getMutualTLSMode(&tt.in); !reflect.DeepEqual(got, tt.want) {
+			if got := getMutualTLSMode(tt.in); !reflect.DeepEqual(got, tt.want) {
 				t.Errorf("getMutualTLSMode() = %v, want %v", got, tt.want)
 			}
 		})
diff --git a/pilot/pkg/security/authz/builder/builder_test.go b/pilot/pkg/security/authz/builder/builder_test.go
index ef9a7a0577..be7b64843e 100644
--- a/pilot/pkg/security/authz/builder/builder_test.go
+++ b/pilot/pkg/security/authz/builder/builder_test.go
@@ -20,8 +20,8 @@
 
 	tcppb "github.com/envoyproxy/go-control-plane/envoy/config/listener/v3"
 	httppb "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/http_connection_manager/v3"
-	"github.com/gogo/protobuf/types"
 	"google.golang.org/protobuf/proto"
+	"google.golang.org/protobuf/types/known/durationpb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pilot/pkg/config/kube/crd"
@@ -68,7 +68,7 @@
 					EnvoyExtAuthzGrpc: &meshconfig.MeshConfig_ExtensionProvider_EnvoyExternalAuthorizationGrpcProvider{
 						Service:       "foo/my-custom-ext-authz.foo.svc.cluster.local",
 						Port:          9000,
-						Timeout:       &types.Duration{Nanos: 2000 * 1000},
+						Timeout:       &durationpb.Duration{Nanos: 2000 * 1000},
 						FailOpen:      true,
 						StatusOnError: "403",
 						IncludeRequestBodyInCheck: &meshconfig.MeshConfig_ExtensionProvider_EnvoyExternalAuthorizationRequestBody{
@@ -88,7 +88,7 @@
 					EnvoyExtAuthzHttp: &meshconfig.MeshConfig_ExtensionProvider_EnvoyExternalAuthorizationHttpProvider{
 						Service:                         "foo/my-custom-ext-authz.foo.svc.cluster.local",
 						Port:                            9000,
-						Timeout:                         &types.Duration{Seconds: 10},
+						Timeout:                         &durationpb.Duration{Seconds: 10},
 						FailOpen:                        true,
 						StatusOnError:                   "403",
 						PathPrefix:                      "/check",
diff --git a/pilot/pkg/security/authz/builder/extauthz.go b/pilot/pkg/security/authz/builder/extauthz.go
index d977736c9f..20d2994375 100644
--- a/pilot/pkg/security/authz/builder/extauthz.go
+++ b/pilot/pkg/security/authz/builder/extauthz.go
@@ -29,7 +29,6 @@
 	envoy_type_matcher_v3 "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3"
 	envoytypev3 "github.com/envoyproxy/go-control-plane/envoy/type/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/types"
 	"github.com/hashicorp/go-multierror"
 	"google.golang.org/protobuf/types/known/durationpb"
 
@@ -38,7 +37,6 @@
 	"istio.io/istio/pilot/pkg/networking/plugin"
 	authzmodel "istio.io/istio/pilot/pkg/security/authz/model"
 	"istio.io/istio/pkg/config/validation"
-	"istio.io/istio/pkg/util/gogo"
 )
 
 const (
@@ -372,12 +370,12 @@ func generateFilterMatcher(name string) *envoy_type_matcher_v3.MetadataMatcher {
 	}
 }
 
-func timeoutOrDefault(t *types.Duration) *durationpb.Duration {
+func timeoutOrDefault(t *durationpb.Duration) *durationpb.Duration {
 	if t == nil {
 		// Default timeout is 600s.
 		return &durationpb.Duration{Seconds: 600}
 	}
-	return gogo.DurationToProtoDuration(t)
+	return t
 }
 
 func withBodyRequest(config *meshconfig.MeshConfig_ExtensionProvider_EnvoyExternalAuthorizationRequestBody) *extauthzhttp.BufferSettings {
diff --git a/pilot/pkg/security/authz/model/model_test.go b/pilot/pkg/security/authz/model/model_test.go
index e0e9da7983..9f8dcad096 100644
--- a/pilot/pkg/security/authz/model/model_test.go
+++ b/pilot/pkg/security/authz/model/model_test.go
@@ -23,7 +23,6 @@
 
 	authzpb "istio.io/api/security/v1beta1"
 	"istio.io/istio/pilot/pkg/security/trustdomain"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
 	"istio.io/istio/pkg/util/protomarshal"
 )
 
@@ -287,7 +286,7 @@ func TestModel_Generate(t *testing.T) {
 func yamlRule(t *testing.T, yaml string) *authzpb.Rule {
 	t.Helper()
 	p := &authzpb.Rule{}
-	if err := gogoprotomarshal.ApplyYAML(yaml, p); err != nil {
+	if err := protomarshal.ApplyYAML(yaml, p); err != nil {
 		t.Fatalf("failed to parse yaml: %s", err)
 	}
 	return p
diff --git a/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go b/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
index baf29716b1..f9f845ef72 100644
--- a/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
+++ b/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
@@ -39,6 +39,7 @@
 	"istio.io/istio/pkg/config/schema/gvk"
 	"istio.io/istio/pkg/network"
 	"istio.io/istio/pkg/queue"
+	"istio.io/istio/pkg/util/protomarshal"
 	istiolog "istio.io/pkg/log"
 )
 
@@ -175,9 +176,10 @@ func convertWorkloadEntry(cfg config.Config) *networking.WorkloadEntry {
 		labels[k] = v
 	}
 	// shallow copy
-	copied := *wle
+	copied := &networking.WorkloadEntry{}
+	protomarshal.ShallowCopy(copied, wle)
 	copied.Labels = labels
-	return &copied
+	return copied
 }
 
 // workloadEntryHandler defines the handler for workload entries
diff --git a/pilot/pkg/status/distribution/state.go b/pilot/pkg/status/distribution/state.go
index 75080da619..eb0c45552d 100644
--- a/pilot/pkg/status/distribution/state.go
+++ b/pilot/pkg/status/distribution/state.go
@@ -19,7 +19,7 @@
 	"sync"
 	"time"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/timestamppb"
 	v1 "k8s.io/api/core/v1"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 	"k8s.io/apimachinery/pkg/labels"
@@ -201,8 +201,8 @@ func ReconcileStatuses(current *v1alpha1.IstioStatus, desired Progress) (bool, *
 	desiredCondition := v1alpha1.IstioCondition{
 		Type:               "Reconciled",
 		Status:             boolToConditionStatus(desired.AckedInstances == desired.TotalInstances),
-		LastProbeTime:      types.TimestampNow(),
-		LastTransitionTime: types.TimestampNow(),
+		LastProbeTime:      timestamppb.Now(),
+		LastTransitionTime: timestamppb.Now(),
 		Message:            fmt.Sprintf("%d/%d proxies up to date.", desired.AckedInstances, desired.TotalInstances),
 	}
 	current = current.DeepCopy()
diff --git a/pilot/pkg/xds/pcds.go b/pilot/pkg/xds/pcds.go
index 5f1a69d3df..1ab2ca472d 100644
--- a/pilot/pkg/xds/pcds.go
+++ b/pilot/pkg/xds/pcds.go
@@ -20,8 +20,8 @@
 	mesh "istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pilot/pkg/features"
 	"istio.io/istio/pilot/pkg/model"
+	"istio.io/istio/pilot/pkg/networking/util"
 	tb "istio.io/istio/pilot/pkg/trustbundle"
-	"istio.io/istio/pkg/util/gogo"
 )
 
 // PcdsGenerator generates proxy configuration for proxies to consume
@@ -65,5 +65,5 @@ func (e *PcdsGenerator) Generate(proxy *model.Proxy, w *model.WatchedResource, r
 	pc := &mesh.ProxyConfig{
 		CaCertificatesPem: e.TrustBundle.GetTrustBundle(),
 	}
-	return model.Resources{&discovery.Resource{Resource: gogo.MessageToAny(pc)}}, model.DefaultXdsLogDetails, nil
+	return model.Resources{&discovery.Resource{Resource: util.MessageToAny(pc)}}, model.DefaultXdsLogDetails, nil
 }
diff --git a/pilot/tools/debug/pilot_cli.go b/pilot/tools/debug/pilot_cli.go
index d73865b49c..0ad862591a 100644
--- a/pilot/tools/debug/pilot_cli.go
+++ b/pilot/tools/debug/pilot_cli.go
@@ -72,7 +72,7 @@
 	"k8s.io/client-go/tools/clientcmd"
 
 	v3 "istio.io/istio/pilot/pkg/xds/v3"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/env"
 	"istio.io/pkg/log"
 )
@@ -308,7 +308,7 @@ func main() {
 		log.Errorf("Failed to get Xds response for %v. Error: %v", *resources, err)
 		return
 	}
-	strResponse, _ := gogoprotomarshal.ToJSONWithIndent(resp, " ")
+	strResponse, _ := protomarshal.ToJSONWithIndent(resp, " ")
 	if outputFile == nil || *outputFile == "" {
 		fmt.Printf("%v\n", strResponse)
 	} else if err := os.WriteFile(*outputFile, []byte(strResponse), 0o644); err != nil {
diff --git a/pkg/adsc/adsc.go b/pkg/adsc/adsc.go
index 675037cec1..77fa6a7d0b 100644
--- a/pkg/adsc/adsc.go
+++ b/pkg/adsc/adsc.go
@@ -37,8 +37,6 @@
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/conversion"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	gogoproto "github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
 	"google.golang.org/grpc"
 	"google.golang.org/grpc/credentials"
 	"google.golang.org/grpc/credentials/insecure"
@@ -57,7 +55,6 @@
 	"istio.io/istio/pkg/config/constants"
 	"istio.io/istio/pkg/config/schema/collections"
 	"istio.io/istio/pkg/security"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
 	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/log"
 )
@@ -515,13 +512,13 @@ func (a *ADSC) handleRecv() {
 			len(msg.Resources) > 0 {
 			rsc := msg.Resources[0]
 			m := &v1alpha1.MeshConfig{}
-			err = gogoproto.Unmarshal(rsc.Value, m)
+			err = proto.Unmarshal(rsc.Value, m)
 			if err != nil {
 				adscLog.Warn("Failed to unmarshal mesh config", err)
 			}
 			a.Mesh = m
 			if a.LocalCacheDir != "" {
-				strResponse, err := gogoprotomarshal.ToJSONWithIndent(m, "  ")
+				strResponse, err := protomarshal.ToJSONWithIndent(m, "  ")
 				if err != nil {
 					continue
 				}
@@ -625,16 +622,9 @@ func (a *ADSC) mcpToPilot(m *mcp.Resource) (*config.Config, error) {
 	c.Namespace = nsn[0]
 	c.Name = nsn[1]
 	var err error
-	c.CreationTimestamp, err = types.TimestampFromProto(m.Metadata.CreateTime)
-	if err != nil {
-		return nil, err
-	}
+	c.CreationTimestamp = m.Metadata.CreateTime.AsTime()
 
-	pb, err := types.EmptyAny(m.Body)
-	if err != nil {
-		return nil, err
-	}
-	err = types.UnmarshalAny(m.Body, pb)
+	pb, err := m.Body.UnmarshalNew()
 	if err != nil {
 		return nil, err
 	}
@@ -1099,14 +1089,6 @@ func (a *ADSC) EndpointsJSON() string {
 	return string(out)
 }
 
-func XdsInitialRequests() []*discovery.DiscoveryRequest {
-	return []*discovery.DiscoveryRequest{
-		{
-			TypeUrl: v3.ClusterType,
-		},
-	}
-}
-
 // Watch will start watching resources, starting with CDS. Based on the CDS response
 // it will start watching RDS and LDS.
 func (a *ADSC) Watch() {
@@ -1248,10 +1230,7 @@ func (a *ADSC) handleMCP(gvk []string, resources []*any.Any) {
 	received := make(map[string]*config.Config)
 	for _, rsc := range resources {
 		m := &mcp.Resource{}
-		err := types.UnmarshalAny(&types.Any{
-			TypeUrl: rsc.TypeUrl,
-			Value:   rsc.Value,
-		}, m)
+		err := rsc.UnmarshalTo(m)
 		if err != nil {
 			adscLog.Warnf("Error unmarshalling received MCP config %v", err)
 			continue
diff --git a/pkg/adsc/adsc_test.go b/pkg/adsc/adsc_test.go
index 0ae31f80a8..9d835763a9 100644
--- a/pkg/adsc/adsc_test.go
+++ b/pkg/adsc/adsc_test.go
@@ -29,11 +29,11 @@
 	listener "github.com/envoyproxy/go-control-plane/envoy/config/listener/v3"
 	route "github.com/envoyproxy/go-control-plane/envoy/config/route/v3"
 	xdsapi "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
-	"github.com/gogo/protobuf/types"
 	"github.com/google/go-cmp/cmp"
 	"google.golang.org/grpc"
 	"google.golang.org/protobuf/testing/protocmp"
 	any "google.golang.org/protobuf/types/known/anypb"
+	"google.golang.org/protobuf/types/known/timestamppb"
 
 	"istio.io/api/label"
 	mcp "istio.io/api/mcp/v1alpha1"
@@ -539,11 +539,11 @@ func constructResourceWithOptions(name string, host string, address, version str
 		Hosts:     []string{host},
 		Addresses: []string{address},
 	}
-	seAny, _ := types.MarshalAny(service)
+	seAny, _ := any.New(service)
 	resource := &mcp.Resource{
 		Metadata: &mcp.Metadata{
 			Name:       "default/" + name,
-			CreateTime: types.TimestampNow(),
+			CreateTime: timestamppb.Now(),
 			Version:    version,
 		},
 		Body: seAny,
@@ -553,7 +553,7 @@ func constructResourceWithOptions(name string, host string, address, version str
 		o(resource)
 	}
 
-	resAny, _ := types.MarshalAny(resource)
+	resAny, _ := any.New(resource)
 	return &any.Any{
 		TypeUrl: resAny.TypeUrl,
 		Value:   resAny.Value,
diff --git a/pkg/bootstrap/config.go b/pkg/bootstrap/config.go
index db773ac128..31fd92976b 100644
--- a/pkg/bootstrap/config.go
+++ b/pkg/bootstrap/config.go
@@ -24,8 +24,8 @@
 	"strings"
 
 	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
-	"github.com/gogo/protobuf/types"
 	"google.golang.org/protobuf/types/known/structpb"
+	"google.golang.org/protobuf/types/known/wrapperspb"
 
 	"istio.io/api/annotation"
 	meshAPI "istio.io/api/mesh/v1alpha1"
@@ -412,7 +412,7 @@ func getProxyConfigOptions(metadata *model.BootstrapNodeMetadata) ([]option.Inst
 		opts = append(opts, option.EnvoyMetricsServiceAddress(config.EnvoyMetricsService.Address),
 			option.EnvoyMetricsServiceTLS(config.EnvoyMetricsService.TlsSettings, metadata),
 			option.EnvoyMetricsServiceTCPKeepalive(config.EnvoyMetricsService.TcpKeepalive))
-	} else if config.EnvoyMetricsServiceAddress != "" {
+	} else if config.EnvoyMetricsServiceAddress != "" { // nolint: staticcheck
 		opts = append(opts, option.EnvoyMetricsServiceAddress(config.EnvoyMetricsService.Address))
 	}
 
@@ -426,7 +426,7 @@ func getProxyConfigOptions(metadata *model.BootstrapNodeMetadata) ([]option.Inst
 	return opts, nil
 }
 
-func getInt64ValueOrDefault(src *types.Int64Value, defaultVal int64) int64 {
+func getInt64ValueOrDefault(src *wrapperspb.Int64Value, defaultVal int64) int64 {
 	val := defaultVal
 	if src != nil {
 		val = src.Value
diff --git a/pkg/bootstrap/instance_test.go b/pkg/bootstrap/instance_test.go
index 045b36d95e..bda36d5116 100644
--- a/pkg/bootstrap/instance_test.go
+++ b/pkg/bootstrap/instance_test.go
@@ -33,8 +33,8 @@
 	core "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
 	trace "github.com/envoyproxy/go-control-plane/envoy/config/trace/v3"
 	matcher "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3"
-	"github.com/gogo/protobuf/proto"
 	"github.com/google/go-cmp/cmp"
+	"google.golang.org/protobuf/encoding/prototext"
 	"google.golang.org/protobuf/testing/protocmp"
 	"sigs.k8s.io/yaml"
 
@@ -556,7 +556,8 @@ func loadProxyConfig(base, out string, _ *testing.T) (*meshconfig.ProxyConfig, e
 		return nil, err
 	}
 	cfg := &meshconfig.ProxyConfig{}
-	err = proto.UnmarshalText(string(content), cfg)
+
+	err = prototext.Unmarshal(content, cfg)
 	if err != nil {
 		return nil, err
 	}
diff --git a/pkg/bootstrap/option/convert.go b/pkg/bootstrap/option/convert.go
index 41177d1326..306bd577c3 100644
--- a/pkg/bootstrap/option/convert.go
+++ b/pkg/bootstrap/option/convert.go
@@ -26,7 +26,7 @@
 	auth "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3"
 	"github.com/envoyproxy/go-control-plane/pkg/conversion"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/durationpb"
 	pstruct "google.golang.org/protobuf/types/known/structpb"
 	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 
@@ -198,9 +198,9 @@ func jsonConverter(d interface{}) convertFunc {
 	}
 }
 
-func durationConverter(value *types.Duration) convertFunc {
+func durationConverter(value *durationpb.Duration) convertFunc {
 	return func(*instance) (interface{}, error) {
-		return value.String(), nil
+		return value.AsDuration().String(), nil
 	}
 }
 
diff --git a/pkg/bootstrap/option/instance.go b/pkg/bootstrap/option/instance.go
index 3586207b4e..a4e6e64cae 100644
--- a/pkg/bootstrap/option/instance.go
+++ b/pkg/bootstrap/option/instance.go
@@ -17,7 +17,7 @@
 import (
 	"reflect"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/durationpb"
 
 	networkingAPI "istio.io/api/networking/v1alpha3"
 )
@@ -123,7 +123,7 @@ func newOptionOrSkipIfZero(name Name, value interface{}) *instance {
 	return newOption(name, value)
 }
 
-func newDurationOption(name Name, value *types.Duration) *instance {
+func newDurationOption(name Name, value *durationpb.Duration) *instance {
 	return newOptionOrSkipIfZero(name, value).withConvert(durationConverter(value))
 }
 
diff --git a/pkg/bootstrap/option/instances.go b/pkg/bootstrap/option/instances.go
index d6f2850801..fca361cc89 100644
--- a/pkg/bootstrap/option/instances.go
+++ b/pkg/bootstrap/option/instances.go
@@ -17,7 +17,7 @@
 import (
 	"strings"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/durationpb"
 
 	meshAPI "istio.io/api/mesh/v1alpha1"
 	networkingAPI "istio.io/api/networking/v1alpha3"
@@ -47,7 +47,7 @@ func PilotSubjectAltName(value []string) Instance {
 	return newOption("pilot_SAN", value).withConvert(sanConverter(value))
 }
 
-func ConnectTimeout(value *types.Duration) Instance {
+func ConnectTimeout(value *durationpb.Duration) Instance {
 	return newDurationOption("connect_timeout", value)
 }
 
diff --git a/pkg/bootstrap/option/instances_test.go b/pkg/bootstrap/option/instances_test.go
index 88e1251466..b6623769d0 100644
--- a/pkg/bootstrap/option/instances_test.go
+++ b/pkg/bootstrap/option/instances_test.go
@@ -18,8 +18,8 @@
 	"testing"
 	"time"
 
-	"github.com/gogo/protobuf/types"
 	. "github.com/onsi/gomega"
+	"google.golang.org/protobuf/types/known/durationpb"
 
 	meshAPI "istio.io/api/mesh/v1alpha1"
 	networkingAPI "istio.io/api/networking/v1alpha3"
@@ -63,7 +63,7 @@ func TestOptions(t *testing.T) {
 		{
 			testName: "connect timeout",
 			key:      "connect_timeout",
-			option:   option.ConnectTimeout(types.DurationProto(time.Second)),
+			option:   option.ConnectTimeout(durationpb.New(time.Second)),
 			expected: "1s",
 		},
 		{
@@ -505,7 +505,7 @@ func TestOptions(t *testing.T) {
 			testName: "envoy metrics keepalive",
 			key:      "envoy_metrics_service_tcp_keepalive",
 			option: option.EnvoyMetricsServiceTCPKeepalive(&networkingAPI.ConnectionPoolSettings_TCPSettings_TcpKeepalive{
-				Time: types.DurationProto(time.Second),
+				Time: durationpb.New(time.Second),
 			}),
 			expected: "{\"tcp_keepalive\":{\"keepalive_time\":{\"value\":1}}}",
 		},
@@ -575,7 +575,7 @@ func TestOptions(t *testing.T) {
 			testName: "envoy access log keepalive",
 			key:      "envoy_accesslog_service_tcp_keepalive",
 			option: option.EnvoyAccessLogServiceTCPKeepalive(&networkingAPI.ConnectionPoolSettings_TCPSettings_TcpKeepalive{
-				Time: types.DurationProto(time.Second),
+				Time: durationpb.New(time.Second),
 			}),
 			expected: "{\"tcp_keepalive\":{\"keepalive_time\":{\"value\":1}}}",
 		},
diff --git a/pkg/config/analysis/analyzers/deprecation/deprecation.go b/pkg/config/analysis/analyzers/deprecation/deprecation.go
index 5b9d06613e..03ac42a8ec 100644
--- a/pkg/config/analysis/analyzers/deprecation/deprecation.go
+++ b/pkg/config/analysis/analyzers/deprecation/deprecation.go
@@ -128,6 +128,7 @@ func (*FieldAnalyzer) analyzeVirtualService(r *resource.Instance, ctx analysis.C
 	for _, httpRoute := range vs.Http {
 		if httpRoute.Fault != nil {
 			if httpRoute.Fault.Delay != nil {
+				// nolint: staticcheck
 				if httpRoute.Fault.Delay.Percent > 0 {
 					ctx.Report(collections.IstioNetworkingV1Alpha3Virtualservices.Name(),
 						msg.NewDeprecated(r, replacedMessage("HTTPRoute.fault.delay.percent", "HTTPRoute.fault.delay.percentage")))
diff --git a/pkg/config/analysis/local/analyze_test.go b/pkg/config/analysis/local/analyze_test.go
index a058653816..041460f203 100644
--- a/pkg/config/analysis/local/analyze_test.go
+++ b/pkg/config/analysis/local/analyze_test.go
@@ -32,6 +32,7 @@
 	"istio.io/istio/pkg/config/resource"
 	"istio.io/istio/pkg/config/schema/collection"
 	"istio.io/istio/pkg/kube"
+	"istio.io/istio/pkg/test/util/assert"
 )
 
 type testAnalyzer struct {
@@ -144,7 +145,7 @@ func TestAddInMemorySource(t *testing.T) {
 
 	src := model.NewFakeStore()
 	sa.AddSource(dfCache{ConfigStore: src})
-	g.Expect(sa.meshCfg).To(Equal(mesh.DefaultMeshConfig())) // Base default meshcfg
+	assert.Equal(t, sa.meshCfg, mesh.DefaultMeshConfig()) // Base default meshcfg
 	g.Expect(sa.meshNetworks.Networks).To(HaveLen(0))
 	g.Expect(sa.stores).To(HaveLen(1))
 }
@@ -157,7 +158,7 @@ func TestAddRunningKubeSource(t *testing.T) {
 	sa := NewSourceAnalyzer(blankCombinedAnalyzer, "", "", nil, false, timeout)
 
 	sa.AddRunningKubeSource(mk)
-	g.Expect(sa.meshCfg).To(Equal(mesh.DefaultMeshConfig())) // Base default meshcfg
+	assert.Equal(t, sa.meshCfg, mesh.DefaultMeshConfig()) // Base default meshcfg
 	g.Expect(sa.meshNetworks.Networks).To(HaveLen(0))
 	g.Expect(sa.stores).To(HaveLen(1))
 }
@@ -202,7 +203,7 @@ func TestAddReaderKubeSource(t *testing.T) {
 
 	err := sa.AddReaderKubeSource([]ReaderSource{{Reader: tmpfile}})
 	g.Expect(err).To(BeNil())
-	g.Expect(sa.meshCfg).To(Equal(mesh.DefaultMeshConfig())) // Base default meshcfg
+	assert.Equal(t, sa.meshCfg, mesh.DefaultMeshConfig()) // Base default meshcfg
 	g.Expect(sa.stores).To(HaveLen(0))
 
 	// Note that a blank file for mesh cfg is equivalent to specifying all the defaults
diff --git a/pkg/config/conversion.go b/pkg/config/conversion.go
index d1d25f9d0c..664e01643c 100644
--- a/pkg/config/conversion.go
+++ b/pkg/config/conversion.go
@@ -17,7 +17,7 @@
 package config
 
 import (
-	gogotypes "github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/timestamppb"
 
 	mcp "istio.io/api/mcp/v1alpha1"
 )
@@ -29,18 +29,14 @@ func PilotConfigToResource(c *Config) (*mcp.Resource, error) {
 
 	// MCP, K8S and Istio configs use gogo configs
 	// On the wire it's the same as golang proto.
-	a, err := ToProtoGogo(c.Spec)
+	a, err := ToProto(c.Spec)
 	if err != nil {
 		return nil, err
 	}
 	r.Body = a
-	ts, err := gogotypes.TimestampProto(c.CreationTimestamp)
-	if err != nil {
-		return nil, err
-	}
 	r.Metadata = &mcp.Metadata{
 		Name:        c.Namespace + "/" + c.Name,
-		CreateTime:  ts,
+		CreateTime:  timestamppb.New(c.CreationTimestamp),
 		Version:     c.ResourceVersion,
 		Labels:      c.Labels,
 		Annotations: c.Annotations,
diff --git a/pkg/config/mesh/kubemesh/watcher_test.go b/pkg/config/mesh/kubemesh/watcher_test.go
index d01854ba0e..0d14f926bd 100644
--- a/pkg/config/mesh/kubemesh/watcher_test.go
+++ b/pkg/config/mesh/kubemesh/watcher_test.go
@@ -21,7 +21,9 @@
 	"testing"
 	"time"
 
+	"github.com/google/go-cmp/cmp"
 	. "github.com/onsi/gomega"
+	"google.golang.org/protobuf/testing/protocmp"
 	v1 "k8s.io/api/core/v1"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 	corev1 "k8s.io/client-go/kubernetes/typed/core/v1"
@@ -190,12 +192,12 @@ func TestNewConfigMapWatcher(t *testing.T) {
 					Should(Succeed())
 			}
 
-			g.Eventually(w.Mesh).Should(Equal(step.expect))
-			g.Eventually(func() *meshconfig.MeshConfig {
+			retry.UntilOrFail(t, func() bool { return cmp.Equal(w.Mesh(), step.expect, protocmp.Transform()) })
+			retry.UntilOrFail(t, func() bool {
 				mu.Lock()
 				defer mu.Unlock()
-				return newM
-			}, time.Second).Should(Equal(step.expect))
+				return cmp.Equal(newM, step.expect, protocmp.Transform())
+			})
 		})
 	}
 }
diff --git a/pkg/config/mesh/mesh.go b/pkg/config/mesh/mesh.go
index 2e40fc0fc7..36dedffc9d 100644
--- a/pkg/config/mesh/mesh.go
+++ b/pkg/config/mesh/mesh.go
@@ -19,9 +19,10 @@
 	"os"
 	"time"
 
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
 	"github.com/hashicorp/go-multierror"
+	"google.golang.org/protobuf/proto"
+	"google.golang.org/protobuf/types/known/durationpb"
+	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
 	"sigs.k8s.io/yaml"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -29,7 +30,7 @@
 	"istio.io/istio/pilot/pkg/util/sets"
 	"istio.io/istio/pkg/config/constants"
 	"istio.io/istio/pkg/config/validation"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
 // DefaultProxyConfig for individual proxies
@@ -39,11 +40,11 @@ func DefaultProxyConfig() *meshconfig.ProxyConfig {
 	return &meshconfig.ProxyConfig{
 		ConfigPath:               constants.ConfigPathDir,
 		ClusterName:              &meshconfig.ProxyConfig_ServiceCluster{ServiceCluster: constants.ServiceClusterName},
-		DrainDuration:            types.DurationProto(45 * time.Second),
-		ParentShutdownDuration:   types.DurationProto(60 * time.Second),
-		TerminationDrainDuration: types.DurationProto(5 * time.Second),
+		DrainDuration:            durationpb.New(45 * time.Second),
+		ParentShutdownDuration:   durationpb.New(60 * time.Second),
+		TerminationDrainDuration: durationpb.New(5 * time.Second),
 		ProxyAdminPort:           15000,
-		Concurrency:              &types.Int32Value{Value: 2},
+		Concurrency:              &wrappers.Int32Value{Value: 2},
 		ControlPlaneAuthPolicy:   meshconfig.AuthenticationPolicy_MUTUAL_TLS,
 		DiscoveryAddress:         "istiod.istio-system.svc:15012",
 		Tracing: &meshconfig.Tracing{
@@ -81,27 +82,27 @@ func DefaultMeshConfig() *meshconfig.MeshConfig {
 		AccessLogEncoding:           meshconfig.MeshConfig_TEXT,
 		AccessLogFormat:             "",
 		EnableEnvoyAccessLogService: false,
-		ProtocolDetectionTimeout:    types.DurationProto(0),
+		ProtocolDetectionTimeout:    durationpb.New(0),
 		IngressService:              "istio-ingressgateway",
 		IngressControllerMode:       meshconfig.MeshConfig_STRICT,
 		IngressClass:                "istio",
 		TrustDomain:                 constants.DefaultKubernetesDomain,
 		TrustDomainAliases:          []string{},
-		EnableAutoMtls:              &types.BoolValue{Value: true},
+		EnableAutoMtls:              &wrappers.BoolValue{Value: true},
 		OutboundTrafficPolicy:       &meshconfig.MeshConfig_OutboundTrafficPolicy{Mode: meshconfig.MeshConfig_OutboundTrafficPolicy_ALLOW_ANY},
 		LocalityLbSetting: &v1alpha3.LocalityLoadBalancerSetting{
-			Enabled: &types.BoolValue{Value: true},
+			Enabled: &wrappers.BoolValue{Value: true},
 		},
 		Certificates:  []*meshconfig.Certificate{},
 		DefaultConfig: proxyConfig,
 
 		RootNamespace:                  constants.IstioSystemNamespace,
 		ProxyListenPort:                15001,
-		ConnectTimeout:                 types.DurationProto(10 * time.Second),
+		ConnectTimeout:                 durationpb.New(10 * time.Second),
 		DefaultServiceExportTo:         []string{"*"},
 		DefaultVirtualServiceExportTo:  []string{"*"},
 		DefaultDestinationRuleExportTo: []string{"*"},
-		DnsRefreshRate:                 types.DurationProto(5 * time.Second), // 5 seconds is the default refresh rate used in Envoy
+		DnsRefreshRate:                 durationpb.New(5 * time.Second), // 5 seconds is the default refresh rate used in Envoy
 		ThriftConfig:                   &meshconfig.MeshConfig_ThriftConfig{},
 		ServiceSettings:                make([]*meshconfig.MeshConfig_ServiceSettings, 0),
 
@@ -145,7 +146,7 @@ func ApplyProxyConfig(yaml string, meshConfig *meshconfig.MeshConfig) (*meshconf
 
 func applyProxyConfig(yaml string, proxyConfig *meshconfig.ProxyConfig) (*meshconfig.ProxyConfig, error) {
 	origMetadata := proxyConfig.ProxyMetadata
-	if err := gogoprotomarshal.ApplyYAML(yaml, proxyConfig); err != nil {
+	if err := protomarshal.ApplyYAML(yaml, proxyConfig); err != nil {
 		return nil, fmt.Errorf("could not parse proxy config: %v", err)
 	}
 	newMetadata := proxyConfig.ProxyMetadata
@@ -187,7 +188,7 @@ func ApplyMeshConfig(yaml string, defaultConfig *meshconfig.MeshConfig) (*meshco
 	prevTrustDomainAliases := defaultConfig.TrustDomainAliases
 
 	defaultConfig.DefaultConfig = DefaultProxyConfig()
-	if err := gogoprotomarshal.ApplyYAML(yaml, defaultConfig); err != nil {
+	if err := protomarshal.ApplyYAML(yaml, defaultConfig); err != nil {
 		return nil, multierror.Prefix(err, "failed to convert to proto.")
 	}
 	defaultConfig.DefaultConfig = prevProxyConfig
@@ -215,7 +216,7 @@ func ApplyMeshConfig(yaml string, defaultConfig *meshconfig.MeshConfig) (*meshco
 		return nil, multierror.Prefix(err, "failed to extract default providers")
 	}
 	if dp != "" {
-		if err := gogoprotomarshal.ApplyYAML(dp, defaultConfig.DefaultProviders); err != nil {
+		if err := protomarshal.ApplyYAML(dp, defaultConfig.DefaultProviders); err != nil {
 			return nil, fmt.Errorf("could not parse default providers: %v", err)
 		}
 	}
@@ -265,12 +266,12 @@ func ApplyMeshConfigDefaults(yaml string) (*meshconfig.MeshConfig, error) {
 }
 
 func DeepCopyMeshConfig(mc *meshconfig.MeshConfig) (*meshconfig.MeshConfig, error) {
-	j, err := gogoprotomarshal.ToJSON(mc)
+	j, err := protomarshal.ToJSON(mc)
 	if err != nil {
 		return nil, err
 	}
 	nmc := &meshconfig.MeshConfig{}
-	if err := gogoprotomarshal.ApplyJSON(j, nmc); err != nil {
+	if err := protomarshal.ApplyJSON(j, nmc); err != nil {
 		return nil, err
 	}
 	return nmc, nil
@@ -287,7 +288,7 @@ func EmptyMeshNetworks() meshconfig.MeshNetworks {
 // input YAML.
 func ParseMeshNetworks(yaml string) (*meshconfig.MeshNetworks, error) {
 	out := EmptyMeshNetworks()
-	if err := gogoprotomarshal.ApplyYAML(yaml, &out); err != nil {
+	if err := protomarshal.ApplyYAML(yaml, &out); err != nil {
 		return nil, multierror.Prefix(err, "failed to convert to proto.")
 	}
 
diff --git a/pkg/config/mesh/mesh_test.go b/pkg/config/mesh/mesh_test.go
index 54adeec2aa..a4d28e6867 100644
--- a/pkg/config/mesh/mesh_test.go
+++ b/pkg/config/mesh/mesh_test.go
@@ -16,18 +16,17 @@
 
 import (
 	"fmt"
-	"reflect"
 	"testing"
 
-	ptypes "github.com/gogo/protobuf/types"
 	"github.com/google/go-cmp/cmp"
 	"google.golang.org/protobuf/testing/protocmp"
+	"google.golang.org/protobuf/types/known/wrapperspb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/config/validation"
 	"istio.io/istio/pkg/test/util/assert"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
 func TestApplyProxyConfig(t *testing.T) {
@@ -96,7 +95,7 @@ func TestApplyProxyConfig(t *testing.T) {
 		config.DefaultConfig.ProxyMetadata = map[string]string{
 			"foo": "bar",
 		}
-		orig, err := gogoprotomarshal.ToYAML(config)
+		orig, err := protomarshal.ToYAML(config)
 		if err != nil {
 			t.Fatal(err)
 		}
@@ -104,7 +103,7 @@ func TestApplyProxyConfig(t *testing.T) {
 		if _, err := mesh.ApplyProxyConfig(`proxyMetadata: {"merged":"override","override":"bar"}`, config); err != nil {
 			t.Fatal(err)
 		}
-		after, err := gogoprotomarshal.ToYAML(config)
+		after, err := protomarshal.ToYAML(config)
 		if err != nil {
 			t.Fatal(err)
 		}
@@ -174,14 +173,14 @@ func TestApplyMeshConfigDefaults(t *testing.T) {
 	if len(got.DefaultProviders.GetMetrics()) != 0 {
 		t.Errorf("default providers deep merge failed, got %v", got.DefaultProviders.GetMetrics())
 	}
-	if !reflect.DeepEqual(getExtensionProviders(got.ExtensionProviders), []string{"prometheus", "stackdriver", "envoy", "sd"}) {
+	if !cmp.Equal(getExtensionProviders(got.ExtensionProviders), []string{"prometheus", "stackdriver", "envoy", "sd"}, protocmp.Transform()) {
 		t.Errorf("extension providers deep merge failed, got %v", getExtensionProviders(got.ExtensionProviders))
 	}
 	if len(got.TrustDomainAliases) != 2 {
 		t.Errorf("trust domain aliases deep merge failed")
 	}
 
-	gotY, err := gogoprotomarshal.ToYAML(got)
+	gotY, err := protomarshal.ToYAML(got)
 	t.Log("Result: \n", gotY, err)
 }
 
@@ -314,7 +313,7 @@ func TestDeepMerge(t *testing.T) {
 				Name: "stackdriver",
 				Provider: &meshconfig.MeshConfig_ExtensionProvider_Stackdriver{
 					Stackdriver: &meshconfig.MeshConfig_ExtensionProvider_StackdriverProvider{
-						MaxNumberOfAttributes: &ptypes.Int64Value{Value: 3},
+						MaxNumberOfAttributes: &wrapperspb.Int64Value{Value: 3},
 					},
 				},
 			}}
@@ -330,7 +329,7 @@ func TestDeepMerge(t *testing.T) {
 			minimal.TrustDomainAliases = res.TrustDomainAliases
 
 			want := &meshconfig.MeshConfig{}
-			gogoprotomarshal.ApplyYAML(tt.out, want)
+			protomarshal.ApplyYAML(tt.out, want)
 			if d := cmp.Diff(want, minimal, protocmp.Transform()); d != "" {
 				t.Fatalf("got diff %v", d)
 			}
diff --git a/pkg/config/mesh/networks_watcher.go b/pkg/config/mesh/networks_watcher.go
index 57bb27da13..2140a3487a 100644
--- a/pkg/config/mesh/networks_watcher.go
+++ b/pkg/config/mesh/networks_watcher.go
@@ -20,7 +20,7 @@
 	"sync"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/filewatcher"
 	"istio.io/pkg/log"
 )
@@ -61,7 +61,7 @@ func NewNetworksWatcher(fileWatcher filewatcher.FileWatcher, filename string) (N
 		return nil, fmt.Errorf("failed to read mesh networks configuration from %q: %v", filename, err)
 	}
 
-	networksdump, _ := gogoprotomarshal.ToJSONWithIndent(meshNetworks, "   ")
+	networksdump, _ := protomarshal.ToJSONWithIndent(meshNetworks, "   ")
 	log.Infof("mesh networks configuration: %s", networksdump)
 
 	w := &internalNetworkWatcher{
@@ -97,7 +97,7 @@ func (w *internalNetworkWatcher) SetNetworks(meshNetworks *meshconfig.MeshNetwor
 
 	w.mutex.Lock()
 	if !reflect.DeepEqual(meshNetworks, w.networks) {
-		networksdump, _ := gogoprotomarshal.ToJSONWithIndent(meshNetworks, "    ")
+		networksdump, _ := protomarshal.ToJSONWithIndent(meshNetworks, "    ")
 		log.Infof("mesh networks configuration updated to: %s", networksdump)
 
 		// Store the new config.
diff --git a/pkg/config/mesh/watcher.go b/pkg/config/mesh/watcher.go
index 3cb8897a70..203105e538 100644
--- a/pkg/config/mesh/watcher.go
+++ b/pkg/config/mesh/watcher.go
@@ -22,7 +22,7 @@
 	"unsafe"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/filewatcher"
 	"istio.io/pkg/log"
 )
@@ -225,6 +225,6 @@ func addFileWatcher(fileWatcher filewatcher.FileWatcher, file string, callback f
 }
 
 func PrettyFormatOfMeshConfig(meshConfig *meshconfig.MeshConfig) string {
-	meshConfigDump, _ := gogoprotomarshal.ToJSONWithIndent(meshConfig, "    ")
+	meshConfigDump, _ := protomarshal.ToJSONWithIndent(meshConfig, "    ")
 	return meshConfigDump
 }
diff --git a/pkg/config/mesh/watcher_test.go b/pkg/config/mesh/watcher_test.go
index 4ab7adc190..55598fa6a8 100644
--- a/pkg/config/mesh/watcher_test.go
+++ b/pkg/config/mesh/watcher_test.go
@@ -20,12 +20,13 @@
 	"testing"
 	"time"
 
-	gogoproto "github.com/gogo/protobuf/proto"
 	. "github.com/onsi/gomega"
+	"google.golang.org/protobuf/proto"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pkg/config/mesh"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/test/util/assert"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/filewatcher"
 )
 
@@ -44,15 +45,13 @@ func TestMultiWatcherShouldNotifyHandlers(t *testing.T) {
 }
 
 func watcherShouldNotifyHandlers(t *testing.T, multi bool) {
-	g := NewWithT(t)
-
 	path := newTempFile(t)
 
 	m := mesh.DefaultMeshConfig()
 	writeMessage(t, path, m)
 
 	w := newWatcher(t, path, multi)
-	g.Expect(w.Mesh()).To(Equal(m))
+	assert.Equal(t, w.Mesh(), m)
 
 	doneCh := make(chan struct{}, 1)
 
@@ -68,8 +67,8 @@ func watcherShouldNotifyHandlers(t *testing.T, multi bool) {
 
 	select {
 	case <-doneCh:
-		g.Expect(newM).To(Equal(m))
-		g.Expect(w.Mesh()).To(Equal(newM))
+		assert.Equal(t, newM, m)
+		assert.Equal(t, w.Mesh(), newM)
 		break
 	case <-time.After(time.Second * 5):
 		t.Fatal("timed out waiting for update")
@@ -101,9 +100,9 @@ func newTempFile(t testing.TB) string {
 	return path
 }
 
-func writeMessage(t testing.TB, path string, msg gogoproto.Message) {
+func writeMessage(t testing.TB, path string, msg proto.Message) {
 	t.Helper()
-	yml, err := gogoprotomarshal.ToYAML(msg)
+	yml, err := protomarshal.ToYAML(msg)
 	if err != nil {
 		t.Fatal(err)
 	}
diff --git a/pkg/config/model.go b/pkg/config/model.go
index d7d9cca776..f31b6870ad 100644
--- a/pkg/config/model.go
+++ b/pkg/config/model.go
@@ -24,9 +24,11 @@
 	gogojsonpb "github.com/gogo/protobuf/jsonpb"
 	gogoproto "github.com/gogo/protobuf/proto"
 	gogotypes "github.com/gogo/protobuf/types"
+	"github.com/golang/protobuf/jsonpb"
 	"google.golang.org/protobuf/proto"
 	"google.golang.org/protobuf/reflect/protoreflect"
 	"google.golang.org/protobuf/types/known/anypb"
+	"google.golang.org/protobuf/types/known/structpb"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 	"k8s.io/apimachinery/pkg/runtime/schema"
 	kubetypes "k8s.io/apimachinery/pkg/types"
@@ -121,35 +123,35 @@ func ObjectInRevision(o *Config, rev string) bool {
 // * Able to marshal/unmarshal using json
 type Spec interface{}
 
-func ToProtoGogo(s Spec) (*gogotypes.Any, error) {
+func ToProto(s Spec) (*anypb.Any, error) {
 	// golang protobuf. Use protoreflect.ProtoMessage to distinguish from gogo
 	// golang/protobuf 1.4+ will have this interface. Older golang/protobuf are gogo compatible
 	// but also not used by Istio at all.
 	if pb, ok := s.(protoreflect.ProtoMessage); ok {
-		golangany, err := anypb.New(pb)
-		if err != nil {
-			return nil, err
-		}
-		return &gogotypes.Any{
-			TypeUrl: golangany.TypeUrl,
-			Value:   golangany.Value,
-		}, nil
+		return anypb.New(pb)
 	}
 
 	// gogo protobuf
 	if pb, ok := s.(gogoproto.Message); ok {
-		return gogotypes.MarshalAny(pb)
+		gogoany, err := gogotypes.MarshalAny(pb)
+		if err != nil {
+			return nil, err
+		}
+		return &anypb.Any{
+			TypeUrl: gogoany.TypeUrl,
+			Value:   gogoany.Value,
+		}, nil
 	}
 
 	js, err := json.Marshal(s)
 	if err != nil {
 		return nil, err
 	}
-	pbs := &gogotypes.Struct{}
-	if err := gogojsonpb.Unmarshal(bytes.NewReader(js), pbs); err != nil {
+	pbs := &structpb.Struct{}
+	if err := jsonpb.Unmarshal(bytes.NewReader(js), pbs); err != nil {
 		return nil, err
 	}
-	return gogotypes.MarshalAny(pbs)
+	return anypb.New(pbs)
 }
 
 func ToMap(s Spec) (map[string]interface{}, error) {
diff --git a/pkg/config/model_test.go b/pkg/config/model_test.go
index 2643c8993d..2c704810fd 100644
--- a/pkg/config/model_test.go
+++ b/pkg/config/model_test.go
@@ -44,7 +44,7 @@ func TestDeepCopy(t *testing.T) {
 
 	copied := cfg.DeepCopy()
 
-	if diff := cmp.Diff(copied, cfg); diff != "" {
+	if diff := cmp.Diff(copied, cfg, protocmp.Transform()); diff != "" {
 		t.Fatalf("cloned config is not identical: %v", diff)
 	}
 
@@ -82,7 +82,7 @@ func(c Spec) Spec {
 				c.(*networking.VirtualService).Gateways = []string{"bar"}
 				return c
 			},
-			nil,
+			protocmp.Transform(),
 		},
 		// Kubernetes type
 		{
@@ -109,7 +109,7 @@ func(c Spec) Spec {
 				c.(*config.MockConfig).Key = "bar"
 				return c
 			},
-			nil,
+			protocmp.Transform(),
 		},
 		// XDS type, to test golang/proto
 		{
@@ -234,7 +234,7 @@ func TestApplyJSON(t *testing.T) {
 			if err := ApplyJSON(tt.input, tt.json); err != nil {
 				t.Fatal(err)
 			}
-			if diff := cmp.Diff(tt.input, tt.output, tt.option); diff != "" {
+			if diff := cmp.Diff(tt.input, tt.output, protocmp.Transform()); diff != "" {
 				t.Fatalf("Diff: %v", diff)
 			}
 			if err := ApplyJSONStrict(tt.input, tt.json); err == nil {
diff --git a/pkg/config/schema/collections/mock.go b/pkg/config/schema/collections/mock.go
index 22acc7d394..00936e1414 100644
--- a/pkg/config/schema/collections/mock.go
+++ b/pkg/config/schema/collections/mock.go
@@ -35,7 +35,7 @@
 			Plural:        "mockconfigs",
 			Group:         "test.istio.io",
 			Version:       "v1",
-			Proto:         "test.MockConfig",
+			Proto:         "config.MockConfig",
 			ProtoPackage:  "istio.io/istio/pkg/test/config",
 			ValidateProto: func(cfg config.Config) (validation.Warning, error) {
 				if cfg.Spec.(*testconfig.MockConfig).Key == "" {
diff --git a/pkg/config/schema/fuzz/fuzz.go b/pkg/config/schema/fuzz/fuzz.go
deleted file mode 100644
index d7994dec65..0000000000
--- a/pkg/config/schema/fuzz/fuzz.go
+++ /dev/null
@@ -1,255 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fuzz
-
-import (
-	"bytes"
-	"encoding/hex"
-	"reflect"
-	"strings"
-	"testing"
-
-	"github.com/davecgh/go-spew/spew"
-	gogoproto "github.com/gogo/protobuf/proto"
-	"github.com/google/go-cmp/cmp"
-	"github.com/google/go-cmp/cmp/cmpopts"
-	fuzz "github.com/google/gofuzz"
-	flag "github.com/spf13/pflag"
-	"k8s.io/apimachinery/pkg/api/apitesting/fuzzer"
-	apimeta "k8s.io/apimachinery/pkg/api/meta"
-	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
-	"k8s.io/apimachinery/pkg/runtime"
-	"k8s.io/apimachinery/pkg/runtime/schema"
-	"k8s.io/apimachinery/pkg/runtime/serializer/json"
-)
-
-// This is heavily inspired/copied from https://github.com/kubernetes/apimachinery/blob/master/pkg/api/apitesting/roundtrip/roundtrip.go
-// A fork was required to support Istio types. Unlike Kubernetes, which has "normal" go structs, Istio types are protobufs
-// Part of this means that each field has a bunch of internal proto stuff, like XXX_sizecache. This does not get roundtripped properly,
-// and we do not care that it doesn't. As a result, we switch the comparison to use go-cmp/cmp which can handle this.
-
-type InstallFunc func(scheme *runtime.Scheme)
-
-var FuzzIters = flag.Int("fuzz-iters", 100, "How many fuzzing iterations to do.")
-
-func RoundTrip(t *testing.T, gvk schema.GroupVersionKind, scheme *runtime.Scheme, fuzzer *fuzz.Fuzzer) {
-	// Try a few times, since runTest uses random values.
-	for i := 0; i < *FuzzIters; i++ {
-		roundTripOfExternalType(t, scheme, fuzzer, gvk)
-		if t.Failed() {
-			break
-		}
-	}
-}
-
-// nolint: interfacer
-func Fuzz(t *testing.T, gvk schema.GroupVersionKind, scheme *runtime.Scheme, fuzzer *fuzz.Fuzzer) runtime.Object {
-	object, err := scheme.New(gvk)
-	if err != nil {
-		t.Fatalf("Couldn't make a %v? %v", gvk, err)
-	}
-	typeAcc, err := apimeta.TypeAccessor(object)
-	if err != nil {
-		t.Fatalf("%q is not a TypeMeta and cannot be tested - add it to nonRoundTrippableInternalTypes: %v", gvk, err)
-	}
-
-	fuzzInternalObject(t, fuzzer, object)
-
-	typeAcc.SetKind(gvk.Kind)
-	typeAcc.SetAPIVersion(gvk.GroupVersion().String())
-	return object
-}
-
-// fuzzInternalObject fuzzes an arbitrary runtime object using the appropriate
-// fuzzer registered with the apitesting package.
-func fuzzInternalObject(t *testing.T, fuzzer *fuzz.Fuzzer, object runtime.Object) runtime.Object {
-	fuzzer.Fuzz(object)
-
-	j, err := apimeta.TypeAccessor(object)
-	if err != nil {
-		t.Fatalf("Unexpected error %v for %#v", err, object)
-	}
-	j.SetKind("")
-	j.SetAPIVersion("")
-
-	return object
-}
-
-func roundTripOfExternalType(t *testing.T, scheme *runtime.Scheme, fuzzer *fuzz.Fuzzer, externalGVK schema.GroupVersionKind) {
-	object := Fuzz(t, externalGVK, scheme, fuzzer)
-
-	roundTrip(t, scheme, json.NewSerializer(json.DefaultMetaFactory, scheme, scheme, false), object)
-}
-
-var cmpOptions = []cmp.Option{
-	// Kubernetes will fuzz this for us
-	cmp.Comparer(func(a, b metav1.ObjectMeta) bool {
-		return true
-	}),
-	// Allow comparing protobufs
-	cmp.Comparer(gogoproto.Equal),
-	// Allow nil == empty list or map
-	cmpopts.EquateEmpty(),
-}
-
-// roundTrip applies a single round-trip test to the given runtime object
-// using the given codec.  The round-trip test ensures that an object can be
-// deep-copied, converted, marshaled and back without loss of data.
-//
-// For internal types this means
-//
-//   internal -> external -> json/protobuf -> external -> internal.
-//
-// For external types this means
-//
-//   external -> json/protobuf -> external.
-func roundTrip(t *testing.T, scheme *runtime.Scheme, codec runtime.Codec, object runtime.Object) {
-	printer := spew.ConfigState{DisableMethods: true}
-	original := object
-
-	// deep copy the original object
-	object = object.DeepCopyObject()
-	name := reflect.TypeOf(object).Elem().Name()
-	if diff := cmp.Diff(original, object, cmpOptions...); diff != "" {
-		t.Errorf("%v: DeepCopy altered the object, diff: %v", name, diff)
-		t.Errorf("%s", spew.Sdump(original))
-		t.Errorf("%s", spew.Sdump(object))
-		return
-	}
-
-	// encode (serialize) the deep copy using the provided codec
-	data, err := runtime.Encode(codec, object)
-	if err != nil {
-		if runtime.IsNotRegisteredError(err) {
-			t.Logf("%v: not registered: %v (%s)", name, err, printer.Sprintf("%#v", object))
-		} else {
-			t.Errorf("%v: %v (%s)", name, err, printer.Sprintf("%#v", object))
-		}
-		return
-	}
-
-	// ensure that the deep copy is equal to the original; neither the deep
-	// copy or conversion should alter the object
-	// TODO eliminate this global
-	if diff := cmp.Diff(original, object, cmpOptions...); diff != "" {
-		t.Errorf("%v: encode altered the object, diff: %v", name, diff)
-		return
-	}
-
-	// encode (serialize) a second time to verify that it was not varying
-	secondData, err := runtime.Encode(codec, object)
-	if err != nil {
-		if runtime.IsNotRegisteredError(err) {
-			t.Logf("%v: not registered: %v (%s)", name, err, printer.Sprintf("%#v", object))
-		} else {
-			t.Errorf("%v: %v (%s)", name, err, printer.Sprintf("%#v", object))
-		}
-		return
-	}
-
-	// serialization to the wire must be stable to ensure that we don't write twice to the DB
-	// when the object hasn't changed.
-	if !bytes.Equal(data, secondData) {
-		t.Errorf("%v: serialization is not stable: %s", name, printer.Sprintf("%#v", object))
-	}
-
-	// decode (deserialize) the encoded data back into an object
-	obj2, err := runtime.Decode(codec, data)
-	if err != nil {
-		t.Errorf("%v: %v\nCodec: %#v\nData: %s\nSource: %#v", name, err, codec, dataAsString(data), printer.Sprintf("%#v", object))
-		panic("failed")
-	}
-
-	// ensure that the object produced from decoding the encoded data is equal
-	// to the original object
-	if diff := cmp.Diff(original, obj2, cmpOptions...); diff != "" {
-		t.Errorf("%v: diff: %v\nCodec: %#v\nSource:\n\n%#v\n\nEncoded:\n\n%s\n\nFinal:\n\n%#v",
-			name, diff, codec, printer.Sprintf("%#v", original), dataAsString(data), printer.Sprintf("%#v", obj2))
-		return
-	}
-
-	// decode the encoded data into a new object (instead of letting the codec
-	// create a new object)
-	obj3 := reflect.New(reflect.TypeOf(object).Elem()).Interface().(runtime.Object)
-	if err := runtime.DecodeInto(codec, data, obj3); err != nil {
-		t.Errorf("%v: %v", name, err)
-		return
-	}
-
-	// special case for kinds which are internal and external at the same time (many in meta.k8s.io are). For those
-	// runtime.DecodeInto above will return the external variant and set the APIVersion and kind, while the input
-	// object might be internal. Hence, we clear those values for obj3 for that case to correctly compare.
-	intAndExt, err := internalAndExternalKind(scheme, object)
-	if err != nil {
-		t.Errorf("%v: %v", name, err)
-		return
-	}
-	if intAndExt {
-		typeAcc, err := apimeta.TypeAccessor(object)
-		if err != nil {
-			t.Fatalf("%v: error accessing TypeMeta: %v", name, err)
-		}
-		if len(typeAcc.GetAPIVersion()) == 0 {
-			typeAcc, err := apimeta.TypeAccessor(obj3)
-			if err != nil {
-				t.Fatalf("%v: error accessing TypeMeta: %v", name, err)
-			}
-			typeAcc.SetAPIVersion("")
-			typeAcc.SetKind("")
-		}
-	}
-
-	// ensure that the new runtime object is equal to the original after being
-	// decoded into
-	if diff := cmp.Diff(original, obj3, cmpOptions...); diff != "" {
-		t.Errorf("%v: diff: %v\nCodec: %#v", name, diff, codec)
-		return
-	}
-
-	// do structure-preserving fuzzing of the deep-copied object. If it shares anything with the original,
-	// the deep-copy was actually only a shallow copy. Then original and obj3 will be different after fuzzing.
-	// NOTE: we use the encoding+decoding here as an alternative, guaranteed deep-copy to compare against.
-	fuzzer.ValueFuzz(object)
-	if diff := cmp.Diff(original, obj3, cmpOptions...); diff != "" {
-		t.Errorf("%v: fuzzing a copy altered the original, diff: %v", name, diff)
-		return
-	}
-}
-
-func internalAndExternalKind(scheme *runtime.Scheme, object runtime.Object) (bool, error) {
-	kinds, _, err := scheme.ObjectKinds(object)
-	if err != nil {
-		return false, err
-	}
-	internal, external := false, false
-	for _, k := range kinds {
-		if k.Version == runtime.APIVersionInternal {
-			internal = true
-		} else {
-			external = true
-		}
-	}
-	return internal && external, nil
-}
-
-// dataAsString returns the given byte array as a string; handles detecting
-// protocol buffers.
-func dataAsString(data []byte) string {
-	dataString := string(data)
-	if !strings.HasPrefix(dataString, "{") {
-		dataString = "\n" + hex.Dump(data)
-	}
-	return dataString
-}
diff --git a/pkg/config/schema/fuzz_test.go b/pkg/config/schema/fuzz_test.go
deleted file mode 100644
index b80202a751..0000000000
--- a/pkg/config/schema/fuzz_test.go
+++ /dev/null
@@ -1,191 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package schema_test
-
-import (
-	"math/rand"
-	"regexp"
-	goruntime "runtime"
-	"testing"
-	"time"
-
-	"github.com/gogo/protobuf/types"
-	fuzz "github.com/google/gofuzz"
-	"k8s.io/apimachinery/pkg/api/apitesting/fuzzer"
-	metafuzzer "k8s.io/apimachinery/pkg/apis/meta/fuzzer"
-	"k8s.io/apimachinery/pkg/runtime/schema"
-	"k8s.io/apimachinery/pkg/runtime/serializer"
-
-	authentication "istio.io/api/authentication/v1alpha1"
-	networking "istio.io/api/networking/v1alpha3"
-	security "istio.io/api/security/v1beta1"
-	telemetry "istio.io/api/telemetry/v1alpha1"
-	"istio.io/istio/pilot/pkg/config/kube/crdclient"
-	"istio.io/istio/pkg/config"
-	"istio.io/istio/pkg/config/schema/collections"
-	istiofuzz "istio.io/istio/pkg/config/schema/fuzz"
-	"istio.io/istio/pkg/kube"
-)
-
-// This test exercises round tripping of marshaling/unmarshaling of all of our CRDs, based on fuzzing
-// This approach is heavily adopted from Kubernetes own fuzzing of their resources.
-func TestRoundtripFuzzing(t *testing.T) {
-	for _, r := range collections.Pilot.All() {
-		t.Run(r.VariableName(), func(t *testing.T) {
-			fz := createFuzzer()
-			t.Parallel()
-			gvk := r.Resource().GroupVersionKind()
-			kgvk := schema.GroupVersionKind{
-				Group:   gvk.Group,
-				Version: gvk.Version,
-				Kind:    gvk.Kind,
-			}
-			istiofuzz.RoundTrip(t, kgvk, kube.IstioScheme, fz)
-		})
-	}
-}
-
-// This test exercises validation does not panic based on fuzzed inputs
-func TestValidationFuzzing(t *testing.T) {
-	fz := createFuzzer()
-	for _, r := range collections.Pilot.All() {
-		t.Run(r.VariableName(), func(t *testing.T) {
-			var iobj config.Config
-			defer func() {
-				if err := recover(); err != nil {
-					logPanic(t, err)
-					t.Fatalf("panic on process %#v", iobj)
-				}
-			}()
-			for i := 0; i < *istiofuzz.FuzzIters; i++ {
-				gvk := r.Resource().GroupVersionKind()
-				kgvk := schema.GroupVersionKind{
-					Group:   gvk.Group,
-					Version: gvk.Version,
-					Kind:    gvk.Kind,
-				}
-				obj := istiofuzz.Fuzz(t, kgvk, kube.IstioScheme, fz)
-				iobj = crdclient.TranslateObject(obj, gvk, "cluster.local")
-				_, _ = r.Resource().ValidateConfig(iobj)
-			}
-		})
-	}
-}
-
-func createFuzzer() *fuzz.Fuzzer {
-	fuzzerFuncs := fuzzer.MergeFuzzerFuncs(metafuzzer.Funcs, fixProtoFuzzer)
-	codecs := serializer.NewCodecFactory(kube.IstioScheme)
-	seed := time.Now().UTC().UnixNano()
-	fz := fuzzer.
-		FuzzerFor(fuzzerFuncs, rand.NewSource(seed), codecs).
-		SkipFieldsWithPattern(regexp.MustCompile(`^XXX_`))
-	return fz
-}
-
-// logPanic logs the caller tree when a panic occurs.
-func logPanic(t *testing.T, r interface{}) {
-	// Same as stdlib http server code. Manually allocate stack trace buffer size
-	// to prevent excessively large logs
-	const size = 64 << 10
-	stacktrace := make([]byte, size)
-	stacktrace = stacktrace[:goruntime.Stack(stacktrace, false)]
-	t.Errorf("Observed a panic: %#v (%v)\n%s", r, r, stacktrace)
-}
-
-// Some proto types cause issues with the fuzzing. These custom fuzzers basically just skip anything with issues
-func fixProtoFuzzer(codecs serializer.CodecFactory) []interface{} {
-	return []interface{}{
-		// This will generate invalid durations - the ranges on the seconds/nanoseconds is bounded
-		func(pb *types.Duration, c fuzz.Continue) {
-			*pb = types.Duration{}
-		},
-		// Cannot handle enums, or interfaces in general. See https://github.com/google/gofuzz/issues/27
-		// TODO this effectively skips all of these. We should have real fuzzing occur here, just need to add custom logic
-		// for the interface types.
-		func(x *networking.LoadBalancerSettings, c fuzz.Continue) {
-			*x = networking.LoadBalancerSettings{}
-		},
-		func(t *networking.EnvoyFilter_EnvoyConfigObjectMatch, c fuzz.Continue) {
-			*t = networking.EnvoyFilter_EnvoyConfigObjectMatch{}
-		},
-		func(t *networking.HTTPFaultInjection_Abort, c fuzz.Continue) {
-			*t = networking.HTTPFaultInjection_Abort{}
-		},
-		func(t *networking.HTTPFaultInjection_Delay, c fuzz.Continue) {
-			*t = networking.HTTPFaultInjection_Delay{}
-		},
-		func(t *networking.HTTPRedirect, c fuzz.Continue) {
-			*t = networking.HTTPRedirect{}
-		},
-		func(t *networking.HTTPRedirect_DerivePort, c fuzz.Continue) {
-			*t = networking.HTTPRedirect_DerivePort{}
-		},
-		func(t *networking.LoadBalancerSettings, c fuzz.Continue) {
-			*t = networking.LoadBalancerSettings{}
-		},
-		func(t *networking.LoadBalancerSettings_ConsistentHashLB, c fuzz.Continue) {
-			*t = networking.LoadBalancerSettings_ConsistentHashLB{}
-		},
-		func(t *authentication.PeerAuthenticationMethod, c fuzz.Continue) {
-			*t = authentication.PeerAuthenticationMethod{}
-		},
-		func(t *networking.PortSelector, c fuzz.Continue) {
-			*t = networking.PortSelector{}
-		},
-		func(t *networking.StringMatch, c fuzz.Continue) {
-			*t = networking.StringMatch{}
-		},
-		func(t *authentication.StringMatch, c fuzz.Continue) {
-			*t = authentication.StringMatch{}
-		},
-		func(t *types.Timestamp, c fuzz.Continue) {
-			*t = types.Timestamp{}
-		},
-		func(t *types.Value, c fuzz.Continue) {
-			*t = types.Value{Kind: &types.Value_StringValue{StringValue: ""}}
-		},
-		func(t *networking.ReadinessProbe, c fuzz.Continue) {
-			t.FailureThreshold = c.Int31()
-			t.SuccessThreshold = c.Int31()
-			t.InitialDelaySeconds = c.Int31()
-			t.PeriodSeconds = c.Int31()
-			t.TimeoutSeconds = c.Int31()
-			if c.RandBool() {
-				hc := &networking.HTTPHealthCheckConfig{}
-				c.Fuzz(hc)
-				t.HealthCheckMethod = &networking.ReadinessProbe_HttpGet{HttpGet: hc}
-			} else {
-				if c.RandBool() {
-					hc := &networking.TCPHealthCheckConfig{}
-					c.Fuzz(hc)
-					t.HealthCheckMethod = &networking.ReadinessProbe_TcpSocket{TcpSocket: hc}
-				} else {
-					hc := &networking.ExecHealthCheckConfig{}
-					c.Fuzz(hc)
-					t.HealthCheckMethod = &networking.ReadinessProbe_Exec{Exec: hc}
-				}
-			}
-		},
-		func(t *security.AuthorizationPolicy, c fuzz.Continue) {
-			*t = security.AuthorizationPolicy{}
-		},
-		func(t *telemetry.Tracing, c fuzz.Continue) {
-			*t = telemetry.Tracing{}
-		},
-		func(t *telemetry.MetricSelector, c fuzz.Continue) {
-			*t = telemetry.MetricSelector{}
-		},
-	}
-}
diff --git a/pkg/config/schema/resource/schema.go b/pkg/config/schema/resource/schema.go
index 2a8e58c005..fba99642a2 100644
--- a/pkg/config/schema/resource/schema.go
+++ b/pkg/config/schema/resource/schema.go
@@ -19,8 +19,9 @@
 	"fmt"
 	"reflect"
 
-	"github.com/gogo/protobuf/proto"
 	"github.com/hashicorp/go-multierror"
+	"google.golang.org/protobuf/reflect/protoreflect"
+	"google.golang.org/protobuf/reflect/protoregistry"
 	"k8s.io/apimachinery/pkg/runtime/schema"
 
 	"istio.io/istio/pkg/config"
@@ -250,13 +251,17 @@ func (s *schemaImpl) String() string {
 
 func (s *schemaImpl) NewInstance() (config.Spec, error) {
 	rt := s.reflectType
+	var instance interface{}
 	if rt == nil {
-		rt = getProtoMessageType(s.proto)
+		// Use proto
+		t, err := protoMessageType(protoreflect.FullName(s.proto))
+		if err != nil || t == nil {
+			return nil, errors.New("failed to find reflect type")
+		}
+		instance = t.New().Interface()
+	} else {
+		instance = reflect.New(rt).Interface()
 	}
-	if rt == nil {
-		return nil, errors.New("failed to find reflect type")
-	}
-	instance := reflect.New(rt).Interface()
 
 	p, ok := instance.(config.Spec)
 	if !ok {
@@ -320,11 +325,12 @@ func FromKubernetesGVK(in *schema.GroupVersionKind) config.GroupVersionKind {
 
 // getProtoMessageType returns the Go lang type of the proto with the specified name.
 func getProtoMessageType(protoMessageName string) reflect.Type {
-	t := protoMessageType(protoMessageName)
-	if t == nil {
+	t, err := protoMessageType(protoreflect.FullName(protoMessageName))
+	if err != nil || t == nil {
 		return nil
 	}
-	return t.Elem()
+	t.New().Interface()
+	return reflect.TypeOf(t.Zero().Interface())
 }
 
-var protoMessageType = proto.MessageType
+var protoMessageType = protoregistry.GlobalTypes.FindMessageByName
diff --git a/pkg/config/schema/resource/schema_test.go b/pkg/config/schema/resource/schema_test.go
index 1d0a028184..d162aba05a 100644
--- a/pkg/config/schema/resource/schema_test.go
+++ b/pkg/config/schema/resource/schema_test.go
@@ -15,11 +15,11 @@
 package resource
 
 import (
-	"reflect"
 	"testing"
 
-	"github.com/gogo/protobuf/types"
 	. "github.com/onsi/gomega"
+	"google.golang.org/protobuf/reflect/protoreflect"
+	"google.golang.org/protobuf/types/known/emptypb"
 )
 
 func TestValidate(t *testing.T) {
@@ -192,13 +192,13 @@ func TestNewProtoInstance(t *testing.T) {
 	s := Builder{
 		Kind:         "Empty",
 		Plural:       "Empties",
-		ProtoPackage: "github.com/gogo/protobuf/types",
+		ProtoPackage: "google.golang.org/protobuf/types/known/emptypb",
 		Proto:        "google.protobuf.Empty",
 	}.MustBuild()
 
 	p, err := s.NewInstance()
 	g.Expect(err).To(BeNil())
-	g.Expect(p).To(Equal(&types.Empty{}))
+	g.Expect(p).To(Equal(&emptypb.Empty{}))
 }
 
 func TestMustNewProtoInstance_Panic_Nil(t *testing.T) {
@@ -211,8 +211,8 @@ func TestMustNewProtoInstance_Panic_Nil(t *testing.T) {
 	defer func() {
 		protoMessageType = old
 	}()
-	protoMessageType = func(name string) reflect.Type {
-		return nil
+	protoMessageType = func(message protoreflect.FullName) (protoreflect.MessageType, error) {
+		return nil, nil
 	}
 
 	s := Builder{
diff --git a/pkg/config/validation/validation.go b/pkg/config/validation/validation.go
index 0b7de90d1e..f920290ce6 100644
--- a/pkg/config/validation/validation.go
+++ b/pkg/config/validation/validation.go
@@ -29,7 +29,6 @@
 
 	udpaa "github.com/cncf/xds/go/udpa/annotations"
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/types"
 	"github.com/hashicorp/go-multierror"
 	"github.com/lestrrat-go/jwx/jwk"
 	"google.golang.org/protobuf/proto"
@@ -37,6 +36,7 @@
 	"google.golang.org/protobuf/reflect/protoregistry"
 	"google.golang.org/protobuf/types/descriptorpb"
 	any "google.golang.org/protobuf/types/known/anypb"
+	"google.golang.org/protobuf/types/known/durationpb"
 
 	"istio.io/api/annotation"
 	extensions "istio.io/api/extensions/v1alpha1"
@@ -59,6 +59,7 @@
 	"istio.io/istio/pkg/config/visibility"
 	"istio.io/istio/pkg/config/xds"
 	"istio.io/istio/pkg/kube/apimirror"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/log"
 )
 
@@ -1261,6 +1262,7 @@ func validateOutlierDetection(outlier *networking.OutlierDetection) (errs Valida
 	if outlier.BaseEjectionTime != nil {
 		errs = appendValidation(errs, ValidateDuration(outlier.BaseEjectionTime))
 	}
+	// nolint: staticcheck
 	if outlier.ConsecutiveErrors != 0 {
 		warn := "outlier detection consecutive errors is deprecated, use consecutiveGatewayErrors or consecutive5xxErrors instead"
 		scope.Warnf(warn)
@@ -1425,11 +1427,8 @@ func ValidateProxyAddress(hostAddr string) error {
 }
 
 // ValidateDuration checks that a proto duration is well-formed
-func ValidateDuration(pd *types.Duration) error {
-	dur, err := types.DurationFromProto(pd)
-	if err != nil {
-		return err
-	}
+func ValidateDuration(pd *durationpb.Duration) error {
+	dur := pd.AsDuration()
 	if dur < time.Millisecond {
 		return errors.New("duration must be greater than 1ms")
 	}
@@ -1449,7 +1448,7 @@ func ValidateDurationRange(dur, min, max time.Duration) error {
 }
 
 // ValidateParentAndDrain checks that parent and drain durations are valid
-func ValidateParentAndDrain(drainTime, parentShutdown *types.Duration) (errs error) {
+func ValidateParentAndDrain(drainTime, parentShutdown *durationpb.Duration) (errs error) {
 	if err := ValidateDuration(drainTime); err != nil {
 		errs = multierror.Append(errs, multierror.Prefix(err, "invalid drain duration:"))
 	}
@@ -1460,8 +1459,8 @@ func ValidateParentAndDrain(drainTime, parentShutdown *types.Duration) (errs err
 		return
 	}
 
-	drainDuration, _ := types.DurationFromProto(drainTime)
-	parentShutdownDuration, _ := types.DurationFromProto(parentShutdown)
+	drainDuration := drainTime.AsDuration()
+	parentShutdownDuration := parentShutdown.AsDuration()
 
 	if drainDuration%time.Second != 0 {
 		errs = multierror.Append(errs,
@@ -1528,22 +1527,18 @@ func ValidateDatadogCollector(d *meshconfig.Tracing_Datadog) error {
 }
 
 // ValidateConnectTimeout validates the envoy connection timeout
-func ValidateConnectTimeout(timeout *types.Duration) error {
+func ValidateConnectTimeout(timeout *durationpb.Duration) error {
 	if err := ValidateDuration(timeout); err != nil {
 		return err
 	}
 
-	timeoutDuration, _ := types.DurationFromProto(timeout)
-	err := ValidateDurationRange(timeoutDuration, connectTimeoutMin, connectTimeoutMax)
+	err := ValidateDurationRange(timeout.AsDuration(), connectTimeoutMin, connectTimeoutMax)
 	return err
 }
 
 // ValidateProtocolDetectionTimeout validates the envoy protocol detection timeout
-func ValidateProtocolDetectionTimeout(timeout *types.Duration) error {
-	dur, err := types.DurationFromProto(timeout)
-	if err != nil {
-		return err
-	}
+func ValidateProtocolDetectionTimeout(timeout *durationpb.Duration) error {
+	dur := timeout.AsDuration()
 	// 0s is a valid value if trying to disable protocol detection timeout
 	if dur == time.Second*0 {
 		return nil
@@ -1703,6 +1698,7 @@ func ValidateMeshConfigProxyConfig(config *meshconfig.ProxyConfig) (errs error)
 		}
 	}
 
+	// nolint: staticcheck
 	if config.EnvoyMetricsServiceAddress != "" {
 		if err := ValidateProxyAddress(config.EnvoyMetricsServiceAddress); err != nil {
 			errs = multierror.Append(errs, multierror.Prefix(err, fmt.Sprintf("invalid envoy metrics service address %q:", config.EnvoyMetricsServiceAddress)))
@@ -2420,9 +2416,10 @@ func asJSON(data interface{}) string {
 	switch mr := data.(type) {
 	case *networking.HTTPMatchRequest:
 		if mr != nil && mr.Name != "" {
-			unnamed := *mr
-			unnamed.Name = ""
-			data = &unnamed
+			cl := &networking.HTTPMatchRequest{}
+			protomarshal.ShallowCopy(cl, mr)
+			cl.Name = ""
+			data = cl
 		}
 	}
 
diff --git a/pkg/config/validation/validation_test.go b/pkg/config/validation/validation_test.go
index 0c4376f10a..a376030713 100644
--- a/pkg/config/validation/validation_test.go
+++ b/pkg/config/validation/validation_test.go
@@ -20,9 +20,11 @@
 	"time"
 
 	"github.com/envoyproxy/go-control-plane/pkg/wellknown"
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
 	"github.com/hashicorp/go-multierror"
+	"google.golang.org/protobuf/proto"
+	"google.golang.org/protobuf/types/known/durationpb"
+	"google.golang.org/protobuf/types/known/structpb"
+	"google.golang.org/protobuf/types/known/wrapperspb"
 
 	extensions "istio.io/api/extensions/v1alpha1"
 	meshconfig "istio.io/api/mesh/v1alpha1"
@@ -235,29 +237,29 @@ func TestValidateProxyAddress(t *testing.T) {
 
 func TestValidateDuration(t *testing.T) {
 	type durationCheck struct {
-		duration *types.Duration
+		duration *durationpb.Duration
 		isValid  bool
 	}
 
 	checks := []durationCheck{
 		{
-			duration: &types.Duration{Seconds: 1},
+			duration: &durationpb.Duration{Seconds: 1},
 			isValid:  true,
 		},
 		{
-			duration: &types.Duration{Seconds: 1, Nanos: -1},
+			duration: &durationpb.Duration{Seconds: 1, Nanos: -1},
 			isValid:  false,
 		},
 		{
-			duration: &types.Duration{Seconds: -11, Nanos: -1},
+			duration: &durationpb.Duration{Seconds: -11, Nanos: -1},
 			isValid:  false,
 		},
 		{
-			duration: &types.Duration{Nanos: 1},
+			duration: &durationpb.Duration{Nanos: 1},
 			isValid:  false,
 		},
 		{
-			duration: &types.Duration{Seconds: 1, Nanos: 1},
+			duration: &durationpb.Duration{Seconds: 1, Nanos: 1},
 			isValid:  false,
 		},
 	}
@@ -271,60 +273,60 @@ type durationCheck struct {
 
 func TestValidateParentAndDrain(t *testing.T) {
 	type ParentDrainTime struct {
-		Parent types.Duration
-		Drain  types.Duration
+		Parent *durationpb.Duration
+		Drain  *durationpb.Duration
 		Valid  bool
 	}
 
 	combinations := []ParentDrainTime{
 		{
-			Parent: types.Duration{Seconds: 2},
-			Drain:  types.Duration{Seconds: 1},
+			Parent: &durationpb.Duration{Seconds: 2},
+			Drain:  &durationpb.Duration{Seconds: 1},
 			Valid:  true,
 		},
 		{
-			Parent: types.Duration{Seconds: 1},
-			Drain:  types.Duration{Seconds: 1},
+			Parent: &durationpb.Duration{Seconds: 1},
+			Drain:  &durationpb.Duration{Seconds: 1},
 			Valid:  false,
 		},
 		{
-			Parent: types.Duration{Seconds: 1},
-			Drain:  types.Duration{Seconds: 2},
+			Parent: &durationpb.Duration{Seconds: 1},
+			Drain:  &durationpb.Duration{Seconds: 2},
 			Valid:  false,
 		},
 		{
-			Parent: types.Duration{Seconds: 2},
-			Drain:  types.Duration{Seconds: 1, Nanos: 1000000},
+			Parent: &durationpb.Duration{Seconds: 2},
+			Drain:  &durationpb.Duration{Seconds: 1, Nanos: 1000000},
 			Valid:  false,
 		},
 		{
-			Parent: types.Duration{Seconds: 2, Nanos: 1000000},
-			Drain:  types.Duration{Seconds: 1},
+			Parent: &durationpb.Duration{Seconds: 2, Nanos: 1000000},
+			Drain:  &durationpb.Duration{Seconds: 1},
 			Valid:  false,
 		},
 		{
-			Parent: types.Duration{Seconds: -2},
-			Drain:  types.Duration{Seconds: 1},
+			Parent: &durationpb.Duration{Seconds: -2},
+			Drain:  &durationpb.Duration{Seconds: 1},
 			Valid:  false,
 		},
 		{
-			Parent: types.Duration{Seconds: 2},
-			Drain:  types.Duration{Seconds: -1},
+			Parent: &durationpb.Duration{Seconds: 2},
+			Drain:  &durationpb.Duration{Seconds: -1},
 			Valid:  false,
 		},
 		{
-			Parent: types.Duration{Seconds: 1 + int64(time.Hour/time.Second)},
-			Drain:  types.Duration{Seconds: 10},
+			Parent: &durationpb.Duration{Seconds: 1 + int64(time.Hour/time.Second)},
+			Drain:  &durationpb.Duration{Seconds: 10},
 			Valid:  false,
 		},
 		{
-			Parent: types.Duration{Seconds: 10},
-			Drain:  types.Duration{Seconds: 1 + int64(time.Hour/time.Second)},
+			Parent: &durationpb.Duration{Seconds: 10},
+			Drain:  &durationpb.Duration{Seconds: 1 + int64(time.Hour/time.Second)},
 			Valid:  false,
 		},
 	}
 	for _, combo := range combinations {
-		if got := ValidateParentAndDrain(&combo.Drain, &combo.Parent); (got == nil) != combo.Valid {
+		if got := ValidateParentAndDrain(combo.Drain, combo.Parent); (got == nil) != combo.Valid {
 			t.Errorf("Failed: got valid=%t but wanted valid=%t: %v for Parent:%v Drain:%v",
 				got == nil, combo.Valid, got, combo.Parent, combo.Drain)
 		}
@@ -333,21 +335,21 @@ type ParentDrainTime struct {
 
 func TestValidateConnectTimeout(t *testing.T) {
 	type durationCheck struct {
-		duration *types.Duration
+		duration *durationpb.Duration
 		isValid  bool
 	}
 
 	checks := []durationCheck{
 		{
-			duration: &types.Duration{Seconds: 1},
+			duration: &durationpb.Duration{Seconds: 1},
 			isValid:  true,
 		},
 		{
-			duration: &types.Duration{Seconds: 31},
+			duration: &durationpb.Duration{Seconds: 31},
 			isValid:  false,
 		},
 		{
-			duration: &types.Duration{Nanos: 99999},
+			duration: &durationpb.Duration{Nanos: 99999},
 			isValid:  false,
 		},
 	}
@@ -390,21 +392,21 @@ type durationCheck struct {
 
 func TestValidateProtocolDetectionTimeout(t *testing.T) {
 	type durationCheck struct {
-		duration *types.Duration
+		duration *durationpb.Duration
 		isValid  bool
 	}
 
 	checks := []durationCheck{
 		{
-			duration: &types.Duration{Seconds: 1},
+			duration: &durationpb.Duration{Seconds: 1},
 			isValid:  true,
 		},
 		{
-			duration: &types.Duration{Nanos: 99999},
+			duration: &durationpb.Duration{Nanos: 99999},
 			isValid:  false,
 		},
 		{
-			duration: &types.Duration{Nanos: 0},
+			duration: &durationpb.Duration{Nanos: 0},
 			isValid:  true,
 		},
 	}
@@ -421,9 +423,9 @@ func TestValidateMeshConfig(t *testing.T) {
 		t.Error("expected an error on an empty mesh config")
 	}
 
-	invalid := meshconfig.MeshConfig{
+	invalid := &meshconfig.MeshConfig{
 		ProxyListenPort:    0,
-		ConnectTimeout:     types.DurationProto(-1 * time.Second),
+		ConnectTimeout:     durationpb.New(-1 * time.Second),
 		DefaultConfig:      &meshconfig.ProxyConfig{},
 		TrustDomain:        "",
 		TrustDomainAliases: []string{"a.$b", "a/b", ""},
@@ -440,14 +442,13 @@ func TestValidateMeshConfig(t *testing.T) {
 		},
 	}
 
-	err := ValidateMeshConfig(&invalid)
+	err := ValidateMeshConfig(invalid)
 	if err == nil {
 		t.Errorf("expected an error on invalid proxy mesh config: %v", invalid)
 	} else {
 		wantErrors := []string{
 			"invalid proxy listen port",
 			"invalid connect timeout",
-			"invalid protocol detection timeout: duration: nil Duration",
 			"config path must be set",
 			"binary path must be set",
 			"oneof service cluster or tracing service name must be specified",
@@ -485,8 +486,8 @@ func TestValidateMeshConfigProxyConfig(t *testing.T) {
 		BinaryPath:             "/usr/local/bin/envoy",
 		DiscoveryAddress:       "istio-pilot.istio-system:15010",
 		ProxyAdminPort:         15000,
-		DrainDuration:          types.DurationProto(45 * time.Second),
-		ParentShutdownDuration: types.DurationProto(60 * time.Second),
+		DrainDuration:          durationpb.New(45 * time.Second),
+		ParentShutdownDuration: durationpb.New(60 * time.Second),
 		ClusterName:            &meshconfig.ProxyConfig_ServiceCluster{ServiceCluster: "istio-proxy"},
 		StatsdUdpAddress:       "istio-statsd-prom-bridge.istio-system:9125",
 		EnvoyMetricsService:    &meshconfig.RemoteService{Address: "metrics-service.istio-system:15000"},
@@ -554,12 +555,12 @@ func TestValidateMeshConfigProxyConfig(t *testing.T) {
 		},
 		{
 			name:    "drain duration invalid",
-			in:      modify(valid, func(c *meshconfig.ProxyConfig) { c.DrainDuration = types.DurationProto(-1 * time.Second) }),
+			in:      modify(valid, func(c *meshconfig.ProxyConfig) { c.DrainDuration = durationpb.New(-1 * time.Second) }),
 			isValid: false,
 		},
 		{
 			name:    "parent shutdown duration invalid",
-			in:      modify(valid, func(c *meshconfig.ProxyConfig) { c.ParentShutdownDuration = types.DurationProto(-1 * time.Second) }),
+			in:      modify(valid, func(c *meshconfig.ProxyConfig) { c.ParentShutdownDuration = durationpb.New(-1 * time.Second) }),
 			isValid: false,
 		},
 		{
@@ -822,13 +823,13 @@ func(c *meshconfig.ProxyConfig) {
 		})
 	}
 
-	invalid := meshconfig.ProxyConfig{
+	invalid := &meshconfig.ProxyConfig{
 		ConfigPath:             "",
 		BinaryPath:             "",
 		DiscoveryAddress:       "10.0.0.100",
 		ProxyAdminPort:         0,
-		DrainDuration:          types.DurationProto(-1 * time.Second),
-		ParentShutdownDuration: types.DurationProto(-1 * time.Second),
+		DrainDuration:          durationpb.New(-1 * time.Second),
+		ParentShutdownDuration: durationpb.New(-1 * time.Second),
 		ClusterName:            &meshconfig.ProxyConfig_ServiceCluster{ServiceCluster: ""},
 		StatsdUdpAddress:       "10.0.0.100",
 		EnvoyMetricsService:    &meshconfig.RemoteService{Address: "metrics-service"},
@@ -844,7 +845,7 @@ func(c *meshconfig.ProxyConfig) {
 		},
 	}
 
-	err := ValidateMeshConfigProxyConfig(&invalid)
+	err := ValidateMeshConfigProxyConfig(invalid)
 	if err == nil {
 		t.Errorf("expected an error on invalid proxy mesh config: %v", invalid)
 	} else {
@@ -1621,25 +1622,25 @@ func TestValidateCORSPolicy(t *testing.T) {
 			AllowMethods:  []string{"GET", "POST"},
 			AllowHeaders:  []string{"header1", "header2"},
 			ExposeHeaders: []string{"header3"},
-			MaxAge:        &types.Duration{Seconds: 2},
+			MaxAge:        &durationpb.Duration{Seconds: 2},
 		}, valid: true},
 		{name: "bad method", in: &networking.CorsPolicy{
 			AllowMethods:  []string{"GET", "PUTT"},
 			AllowHeaders:  []string{"header1", "header2"},
 			ExposeHeaders: []string{"header3"},
-			MaxAge:        &types.Duration{Seconds: 2},
+			MaxAge:        &durationpb.Duration{Seconds: 2},
 		}, valid: false},
 		{name: "bad header", in: &networking.CorsPolicy{
 			AllowMethods:  []string{"GET", "POST"},
 			AllowHeaders:  []string{"header1", "header2"},
 			ExposeHeaders: []string{""},
-			MaxAge:        &types.Duration{Seconds: 2},
+			MaxAge:        &durationpb.Duration{Seconds: 2},
 		}, valid: false},
 		{name: "bad max age", in: &networking.CorsPolicy{
 			AllowMethods:  []string{"GET", "POST"},
 			AllowHeaders:  []string{"header1", "header2"},
 			ExposeHeaders: []string{"header3"},
-			MaxAge:        &types.Duration{Seconds: 2, Nanos: 42},
+			MaxAge:        &durationpb.Duration{Seconds: 2, Nanos: 42},
 		}, valid: false},
 		{name: "empty matchType AllowOrigins", in: &networking.CorsPolicy{
 			AllowOrigins: []*networking.StringMatch{
@@ -1650,7 +1651,7 @@ func TestValidateCORSPolicy(t *testing.T) {
 			AllowMethods:  []string{"GET", "POST"},
 			AllowHeaders:  []string{"header1", "header2"},
 			ExposeHeaders: []string{"header3"},
-			MaxAge:        &types.Duration{Seconds: 2},
+			MaxAge:        &durationpb.Duration{Seconds: 2},
 		}, valid: false},
 		{name: "non empty matchType AllowOrigins", in: &networking.CorsPolicy{
 			AllowOrigins: []*networking.StringMatch{
@@ -1661,7 +1662,7 @@ func TestValidateCORSPolicy(t *testing.T) {
 			AllowMethods:  []string{"GET", "POST"},
 			AllowHeaders:  []string{"header1", "header2"},
 			ExposeHeaders: []string{"header3"},
-			MaxAge:        &types.Duration{Seconds: 2},
+			MaxAge:        &durationpb.Duration{Seconds: 2},
 		}, valid: true},
 	}
 
@@ -1771,12 +1772,12 @@ func TestValidateHTTPFaultInjectionDelay(t *testing.T) {
 				Value: 20,
 			},
 			HttpDelayType: &networking.HTTPFaultInjection_Delay_FixedDelay{
-				FixedDelay: &types.Duration{Seconds: 3},
+				FixedDelay: &durationpb.Duration{Seconds: 3},
 			},
 		}, valid: true},
 		{name: "valid default", in: &networking.HTTPFaultInjection_Delay{
 			HttpDelayType: &networking.HTTPFaultInjection_Delay_FixedDelay{
-				FixedDelay: &types.Duration{Seconds: 3},
+				FixedDelay: &durationpb.Duration{Seconds: 3},
 			},
 		}, valid: true},
 		{name: "invalid percent", in: &networking.HTTPFaultInjection_Delay{
@@ -1784,7 +1785,7 @@ func TestValidateHTTPFaultInjectionDelay(t *testing.T) {
 				Value: 101,
 			},
 			HttpDelayType: &networking.HTTPFaultInjection_Delay_FixedDelay{
-				FixedDelay: &types.Duration{Seconds: 3},
+				FixedDelay: &durationpb.Duration{Seconds: 3},
 			},
 		}, valid: false},
 		{name: "invalid delay", in: &networking.HTTPFaultInjection_Delay{
@@ -1792,7 +1793,7 @@ func TestValidateHTTPFaultInjectionDelay(t *testing.T) {
 				Value: 20,
 			},
 			HttpDelayType: &networking.HTTPFaultInjection_Delay_FixedDelay{
-				FixedDelay: &types.Duration{Seconds: 3, Nanos: 42},
+				FixedDelay: &durationpb.Duration{Seconds: 3, Nanos: 42},
 			},
 		}, valid: false},
 		{name: "valid fractional percentage", in: &networking.HTTPFaultInjection_Delay{
@@ -1800,7 +1801,7 @@ func TestValidateHTTPFaultInjectionDelay(t *testing.T) {
 				Value: 0.001,
 			},
 			HttpDelayType: &networking.HTTPFaultInjection_Delay_FixedDelay{
-				FixedDelay: &types.Duration{Seconds: 3},
+				FixedDelay: &durationpb.Duration{Seconds: 3},
 			},
 		}, valid: true},
 		{name: "invalid fractional percentage", in: &networking.HTTPFaultInjection_Delay{
@@ -1808,7 +1809,7 @@ func TestValidateHTTPFaultInjectionDelay(t *testing.T) {
 				Value: -10.0,
 			},
 			HttpDelayType: &networking.HTTPFaultInjection_Delay_FixedDelay{
-				FixedDelay: &types.Duration{Seconds: 3},
+				FixedDelay: &durationpb.Duration{Seconds: 3},
 			},
 		}, valid: false},
 	}
@@ -1831,7 +1832,7 @@ func TestValidateHTTPRetry(t *testing.T) {
 	}{
 		{name: "valid", in: &networking.HTTPRetry{
 			Attempts:      10,
-			PerTryTimeout: &types.Duration{Seconds: 2},
+			PerTryTimeout: &durationpb.Duration{Seconds: 2},
 			RetryOn:       "5xx,gateway-error",
 		}, valid: true},
 		{name: "disable retries", in: &networking.HTTPRetry{
@@ -1839,7 +1840,7 @@ func TestValidateHTTPRetry(t *testing.T) {
 		}, valid: true},
 		{name: "invalid, retry policy configured but attempts set to zero", in: &networking.HTTPRetry{
 			Attempts:      0,
-			PerTryTimeout: &types.Duration{Seconds: 2},
+			PerTryTimeout: &durationpb.Duration{Seconds: 2},
 			RetryOn:       "5xx,gateway-error",
 		}, valid: false},
 		{name: "valid default", in: &networking.HTTPRetry{
@@ -1847,34 +1848,34 @@ func TestValidateHTTPRetry(t *testing.T) {
 		}, valid: true},
 		{name: "valid http status retryOn", in: &networking.HTTPRetry{
 			Attempts:      10,
-			PerTryTimeout: &types.Duration{Seconds: 2},
+			PerTryTimeout: &durationpb.Duration{Seconds: 2},
 			RetryOn:       "503,connect-failure",
 		}, valid: true},
 		{name: "invalid attempts", in: &networking.HTTPRetry{
 			Attempts:      -1,
-			PerTryTimeout: &types.Duration{Seconds: 2},
+			PerTryTimeout: &durationpb.Duration{Seconds: 2},
 		}, valid: false},
 		{name: "invalid timeout", in: &networking.HTTPRetry{
 			Attempts:      10,
-			PerTryTimeout: &types.Duration{Seconds: 2, Nanos: 1},
+			PerTryTimeout: &durationpb.Duration{Seconds: 2, Nanos: 1},
 		}, valid: false},
 		{name: "timeout too small", in: &networking.HTTPRetry{
 			Attempts:      10,
-			PerTryTimeout: &types.Duration{Nanos: 999},
+			PerTryTimeout: &durationpb.Duration{Nanos: 999},
 		}, valid: false},
 		{name: "invalid policy retryOn", in: &networking.HTTPRetry{
 			Attempts:      10,
-			PerTryTimeout: &types.Duration{Seconds: 2},
+			PerTryTimeout: &durationpb.Duration{Seconds: 2},
 			RetryOn:       "5xx,invalid policy",
 		}, valid: false},
 		{name: "invalid http status retryOn", in: &networking.HTTPRetry{
 			Attempts:      10,
-			PerTryTimeout: &types.Duration{Seconds: 2},
+			PerTryTimeout: &durationpb.Duration{Seconds: 2},
 			RetryOn:       "600,connect-failure",
 		}, valid: false},
 		{name: "invalid, retryRemoteLocalities configured but attempts set to zero", in: &networking.HTTPRetry{
 			Attempts:              0,
-			RetryRemoteLocalities: &types.BoolValue{Value: false},
+			RetryRemoteLocalities: &wrapperspb.BoolValue{Value: false},
 		}, valid: false},
 	}
 
@@ -2441,7 +2442,7 @@ func TestValidateHTTPRoute(t *testing.T) {
 			Match: []*networking.HTTPMatchRequest{nil},
 		}, valid: true},
 		{name: "invalid mirror percent", route: &networking.HTTPRoute{
-			MirrorPercent: &types.UInt32Value{Value: 101},
+			MirrorPercent: &wrapperspb.UInt32Value{Value: 101},
 			Route: []*networking.HTTPRouteDestination{{
 				Destination: &networking.Destination{Host: "foo.bar"},
 			}},
@@ -2711,7 +2712,7 @@ func TestValidateVirtualService(t *testing.T) {
 			Hosts:    []string{"foo.bar"},
 			Gateways: []string{"ns1/gateway"},
 			Http: []*networking.HTTPRoute{{
-				MirrorPercent: &types.UInt32Value{Value: 5},
+				MirrorPercent: &wrapperspb.UInt32Value{Value: 5},
 				Route: []*networking.HTTPRouteDestination{{
 					Destination: &networking.Destination{Host: "foo.baz"},
 				}},
@@ -3236,11 +3237,11 @@ func TestValidateDestinationRule(t *testing.T) {
 func TestValidateTrafficPolicy(t *testing.T) {
 	cases := []struct {
 		name  string
-		in    networking.TrafficPolicy
+		in    *networking.TrafficPolicy
 		valid bool
 	}{
 		{
-			name: "valid traffic policy", in: networking.TrafficPolicy{
+			name: "valid traffic policy", in: &networking.TrafficPolicy{
 				LoadBalancer: &networking.LoadBalancerSettings{
 					LbPolicy: &networking.LoadBalancerSettings_Simple{
 						Simple: networking.LoadBalancerSettings_ROUND_ROBIN,
@@ -3257,12 +3258,12 @@ func TestValidateTrafficPolicy(t *testing.T) {
 			valid: true,
 		},
 		{
-			name: "invalid traffic policy, nil entries", in: networking.TrafficPolicy{},
+			name: "invalid traffic policy, nil entries", in: &networking.TrafficPolicy{},
 			valid: false,
 		},
 
 		{
-			name: "invalid traffic policy, missing port in port level settings", in: networking.TrafficPolicy{
+			name: "invalid traffic policy, missing port in port level settings", in: &networking.TrafficPolicy{
 				PortLevelSettings: []*networking.TrafficPolicy_PortTrafficPolicy{
 					{
 						LoadBalancer: &networking.LoadBalancerSettings{
@@ -3283,7 +3284,7 @@ func TestValidateTrafficPolicy(t *testing.T) {
 			valid: false,
 		},
 		{
-			name: "invalid traffic policy, bad connection pool", in: networking.TrafficPolicy{
+			name: "invalid traffic policy, bad connection pool", in: &networking.TrafficPolicy{
 				LoadBalancer: &networking.LoadBalancerSettings{
 					LbPolicy: &networking.LoadBalancerSettings_Simple{
 						Simple: networking.LoadBalancerSettings_ROUND_ROBIN,
@@ -3297,7 +3298,7 @@ func TestValidateTrafficPolicy(t *testing.T) {
 			valid: false,
 		},
 		{
-			name: "invalid traffic policy, panic threshold too low", in: networking.TrafficPolicy{
+			name: "invalid traffic policy, panic threshold too low", in: &networking.TrafficPolicy{
 				LoadBalancer: &networking.LoadBalancerSettings{
 					LbPolicy: &networking.LoadBalancerSettings_Simple{
 						Simple: networking.LoadBalancerSettings_ROUND_ROBIN,
@@ -3314,7 +3315,7 @@ func TestValidateTrafficPolicy(t *testing.T) {
 			valid: false,
 		},
 		{
-			name: "invalid traffic policy, both upgrade and use client protocol set", in: networking.TrafficPolicy{
+			name: "invalid traffic policy, both upgrade and use client protocol set", in: &networking.TrafficPolicy{
 				ConnectionPool: &networking.ConnectionPoolSettings{
 					Http: &networking.ConnectionPoolSettings_HTTPSettings{
 						H2UpgradePolicy:   networking.ConnectionPoolSettings_HTTPSettings_UPGRADE,
@@ -3326,7 +3327,7 @@ func TestValidateTrafficPolicy(t *testing.T) {
 		},
 	}
 	for _, c := range cases {
-		if got := validateTrafficPolicy(&c.in).Err; (got == nil) != c.valid {
+		if got := validateTrafficPolicy(c.in).Err; (got == nil) != c.valid {
 			t.Errorf("ValidateTrafficPolicy failed on %v: got valid=%v but wanted valid=%v: %v",
 				c.name, got == nil, c.valid, got)
 		}
@@ -3336,51 +3337,51 @@ func TestValidateTrafficPolicy(t *testing.T) {
 func TestValidateConnectionPool(t *testing.T) {
 	cases := []struct {
 		name  string
-		in    networking.ConnectionPoolSettings
+		in    *networking.ConnectionPoolSettings
 		valid bool
 	}{
 		{
-			name: "valid connection pool, tcp and http", in: networking.ConnectionPoolSettings{
+			name: "valid connection pool, tcp and http", in: &networking.ConnectionPoolSettings{
 				Tcp: &networking.ConnectionPoolSettings_TCPSettings{
 					MaxConnections: 7,
-					ConnectTimeout: &types.Duration{Seconds: 2},
+					ConnectTimeout: &durationpb.Duration{Seconds: 2},
 				},
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					Http1MaxPendingRequests:  2,
 					Http2MaxRequests:         11,
 					MaxRequestsPerConnection: 5,
 					MaxRetries:               4,
-					IdleTimeout:              &types.Duration{Seconds: 30},
+					IdleTimeout:              &durationpb.Duration{Seconds: 30},
 				},
 			},
 			valid: true,
 		},
 
 		{
-			name: "valid connection pool, tcp only", in: networking.ConnectionPoolSettings{
+			name: "valid connection pool, tcp only", in: &networking.ConnectionPoolSettings{
 				Tcp: &networking.ConnectionPoolSettings_TCPSettings{
 					MaxConnections: 7,
-					ConnectTimeout: &types.Duration{Seconds: 2},
+					ConnectTimeout: &durationpb.Duration{Seconds: 2},
 				},
 			},
 			valid: true,
 		},
 
 		{
-			name: "valid connection pool, http only", in: networking.ConnectionPoolSettings{
+			name: "valid connection pool, http only", in: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					Http1MaxPendingRequests:  2,
 					Http2MaxRequests:         11,
 					MaxRequestsPerConnection: 5,
 					MaxRetries:               4,
-					IdleTimeout:              &types.Duration{Seconds: 30},
+					IdleTimeout:              &durationpb.Duration{Seconds: 30},
 				},
 			},
 			valid: true,
 		},
 
 		{
-			name: "valid connection pool, http only with empty idle timeout", in: networking.ConnectionPoolSettings{
+			name: "valid connection pool, http only with empty idle timeout", in: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{
 					Http1MaxPendingRequests:  2,
 					Http2MaxRequests:         11,
@@ -3391,62 +3392,62 @@ func TestValidateConnectionPool(t *testing.T) {
 			valid: true,
 		},
 
-		{name: "invalid connection pool, empty", in: networking.ConnectionPoolSettings{}, valid: false},
+		{name: "invalid connection pool, empty", in: &networking.ConnectionPoolSettings{}, valid: false},
 
 		{
-			name: "invalid connection pool, bad max connections", in: networking.ConnectionPoolSettings{
+			name: "invalid connection pool, bad max connections", in: &networking.ConnectionPoolSettings{
 				Tcp: &networking.ConnectionPoolSettings_TCPSettings{MaxConnections: -1},
 			},
 			valid: false,
 		},
 
 		{
-			name: "invalid connection pool, bad connect timeout", in: networking.ConnectionPoolSettings{
+			name: "invalid connection pool, bad connect timeout", in: &networking.ConnectionPoolSettings{
 				Tcp: &networking.ConnectionPoolSettings_TCPSettings{
-					ConnectTimeout: &types.Duration{Seconds: 2, Nanos: 5},
+					ConnectTimeout: &durationpb.Duration{Seconds: 2, Nanos: 5},
 				},
 			},
 			valid: false,
 		},
 
 		{
-			name: "invalid connection pool, bad max pending requests", in: networking.ConnectionPoolSettings{
+			name: "invalid connection pool, bad max pending requests", in: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{Http1MaxPendingRequests: -1},
 			},
 			valid: false,
 		},
 
 		{
-			name: "invalid connection pool, bad max requests", in: networking.ConnectionPoolSettings{
+			name: "invalid connection pool, bad max requests", in: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{Http2MaxRequests: -1},
 			},
 			valid: false,
 		},
 
 		{
-			name: "invalid connection pool, bad max requests per connection", in: networking.ConnectionPoolSettings{
+			name: "invalid connection pool, bad max requests per connection", in: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{MaxRequestsPerConnection: -1},
 			},
 			valid: false,
 		},
 
 		{
-			name: "invalid connection pool, bad max retries", in: networking.ConnectionPoolSettings{
+			name: "invalid connection pool, bad max retries", in: &networking.ConnectionPoolSettings{
 				Http: &networking.ConnectionPoolSettings_HTTPSettings{MaxRetries: -1},
 			},
 			valid: false,
 		},
 
 		{
-			name: "invalid connection pool, bad idle timeout", in: networking.ConnectionPoolSettings{
-				Http: &networking.ConnectionPoolSettings_HTTPSettings{IdleTimeout: &types.Duration{Seconds: 30, Nanos: 5}},
+			name: "invalid connection pool, bad idle timeout", in: &networking.ConnectionPoolSettings{
+				Http: &networking.ConnectionPoolSettings_HTTPSettings{IdleTimeout: &durationpb.Duration{Seconds: 30, Nanos: 5}},
 			},
 			valid: false,
 		},
 	}
 
 	for _, c := range cases {
-		if got := validateConnectionPool(&c.in); (got == nil) != c.valid {
+		if got := validateConnectionPool(c.in); (got == nil) != c.valid {
 			t.Errorf("ValidateConnectionSettings failed on %v: got valid=%v but wanted valid=%v: %v",
 				c.name, got == nil, c.valid, got)
 		}
@@ -3454,14 +3455,14 @@ func TestValidateConnectionPool(t *testing.T) {
 }
 
 func TestValidateLoadBalancer(t *testing.T) {
-	duration := types.Duration{Seconds: int64(time.Hour / time.Second)}
+	duration := durationpb.Duration{Seconds: int64(time.Hour / time.Second)}
 	cases := []struct {
 		name  string
-		in    networking.LoadBalancerSettings
+		in    *networking.LoadBalancerSettings
 		valid bool
 	}{
 		{
-			name: "valid load balancer with simple load balancing", in: networking.LoadBalancerSettings{
+			name: "valid load balancer with simple load balancing", in: &networking.LoadBalancerSettings{
 				LbPolicy: &networking.LoadBalancerSettings_Simple{
 					Simple: networking.LoadBalancerSettings_ROUND_ROBIN,
 				},
@@ -3470,7 +3471,7 @@ func TestValidateLoadBalancer(t *testing.T) {
 		},
 
 		{
-			name: "valid load balancer with consistentHash load balancing", in: networking.LoadBalancerSettings{
+			name: "valid load balancer with consistentHash load balancing", in: &networking.LoadBalancerSettings{
 				LbPolicy: &networking.LoadBalancerSettings_ConsistentHash{
 					ConsistentHash: &networking.LoadBalancerSettings_ConsistentHashLB{
 						MinimumRingSize: 1024,
@@ -3487,7 +3488,7 @@ func TestValidateLoadBalancer(t *testing.T) {
 		},
 
 		{
-			name: "invalid load balancer with consistentHash load balancing, missing ttl", in: networking.LoadBalancerSettings{
+			name: "invalid load balancer with consistentHash load balancing, missing ttl", in: &networking.LoadBalancerSettings{
 				LbPolicy: &networking.LoadBalancerSettings_ConsistentHash{
 					ConsistentHash: &networking.LoadBalancerSettings_ConsistentHashLB{
 						MinimumRingSize: 1024,
@@ -3503,7 +3504,7 @@ func TestValidateLoadBalancer(t *testing.T) {
 		},
 
 		{
-			name: "invalid load balancer with consistentHash load balancing, missing name", in: networking.LoadBalancerSettings{
+			name: "invalid load balancer with consistentHash load balancing, missing name", in: &networking.LoadBalancerSettings{
 				LbPolicy: &networking.LoadBalancerSettings_ConsistentHash{
 					ConsistentHash: &networking.LoadBalancerSettings_ConsistentHashLB{
 						MinimumRingSize: 1024,
@@ -3520,7 +3521,7 @@ func TestValidateLoadBalancer(t *testing.T) {
 	}
 
 	for _, c := range cases {
-		if got := validateLoadBalancer(&c.in); (got == nil) != c.valid {
+		if got := validateLoadBalancer(c.in); (got == nil) != c.valid {
 			t.Errorf("validateLoadBalancer failed on %v: got valid=%v but wanted valid=%v: %v",
 				c.name, got == nil, c.valid, got)
 		}
@@ -3530,65 +3531,65 @@ func TestValidateLoadBalancer(t *testing.T) {
 func TestValidateOutlierDetection(t *testing.T) {
 	cases := []struct {
 		name  string
-		in    networking.OutlierDetection
+		in    *networking.OutlierDetection
 		valid bool
 		warn  bool
 	}{
-		{name: "valid outlier detection", in: networking.OutlierDetection{
-			Interval:           &types.Duration{Seconds: 2},
-			BaseEjectionTime:   &types.Duration{Seconds: 2},
+		{name: "valid outlier detection", in: &networking.OutlierDetection{
+			Interval:           &durationpb.Duration{Seconds: 2},
+			BaseEjectionTime:   &durationpb.Duration{Seconds: 2},
 			MaxEjectionPercent: 50,
 		}, valid: true},
 
 		{
-			name: "invalid outlier detection, bad interval", in: networking.OutlierDetection{
-				Interval: &types.Duration{Seconds: 2, Nanos: 5},
+			name: "invalid outlier detection, bad interval", in: &networking.OutlierDetection{
+				Interval: &durationpb.Duration{Seconds: 2, Nanos: 5},
 			},
 			valid: false,
 		},
 
 		{
-			name: "invalid outlier detection, bad base ejection time", in: networking.OutlierDetection{
-				BaseEjectionTime: &types.Duration{Seconds: 2, Nanos: 5},
+			name: "invalid outlier detection, bad base ejection time", in: &networking.OutlierDetection{
+				BaseEjectionTime: &durationpb.Duration{Seconds: 2, Nanos: 5},
 			},
 			valid: false,
 		},
 
 		{
-			name: "invalid outlier detection, bad max ejection percent", in: networking.OutlierDetection{
+			name: "invalid outlier detection, bad max ejection percent", in: &networking.OutlierDetection{
 				MaxEjectionPercent: 105,
 			},
 			valid: false,
 		},
 		{
-			name: "invalid outlier detection, panic threshold too low", in: networking.OutlierDetection{
+			name: "invalid outlier detection, panic threshold too low", in: &networking.OutlierDetection{
 				MinHealthPercent: -1,
 			},
 			valid: false,
 		},
 		{
-			name: "invalid outlier detection, panic threshold too high", in: networking.OutlierDetection{
+			name: "invalid outlier detection, panic threshold too high", in: &networking.OutlierDetection{
 				MinHealthPercent: 101,
 			},
 			valid: false,
 		},
 		{
-			name: "deprecated outlier detection, ConsecutiveErrors", in: networking.OutlierDetection{
+			name: "deprecated outlier detection, ConsecutiveErrors", in: &networking.OutlierDetection{
 				ConsecutiveErrors: 101,
 			},
 			valid: true,
 			warn:  true,
 		},
 		{
-			name: "consecutive local origin errors is set but split local origin errors is not set", in: networking.OutlierDetection{
-				ConsecutiveLocalOriginFailures: &types.UInt32Value{Value: 10},
+			name: "consecutive local origin errors is set but split local origin errors is not set", in: &networking.OutlierDetection{
+				ConsecutiveLocalOriginFailures: &wrapperspb.UInt32Value{Value: 10},
 			},
 			valid: false,
 		},
 	}
 
 	for _, c := range cases {
-		got := validateOutlierDetection(&c.in)
+		got := validateOutlierDetection(c.in)
 		if (got.Err == nil) != c.valid {
 			t.Errorf("ValidateOutlierDetection failed on %v: got valid=%v but wanted valid=%v: %v",
 				c.name, got.Err == nil, c.valid, got.Err)
@@ -3814,10 +3815,10 @@ func TestValidateEnvoyFilter(t *testing.T) {
 					},
 					Patch: &networking.EnvoyFilter_Patch{
 						Operation: networking.EnvoyFilter_Patch_ADD,
-						Value: &types.Struct{
-							Fields: map[string]*types.Value{
+						Value: &structpb.Struct{
+							Fields: map[string]*structpb.Value{
 								"name": {
-									Kind: &types.Value_BoolValue{BoolValue: false},
+									Kind: &structpb.Value_BoolValue{BoolValue: false},
 								},
 							},
 						},
@@ -3836,10 +3837,10 @@ func TestValidateEnvoyFilter(t *testing.T) {
 					},
 					Patch: &networking.EnvoyFilter_Patch{
 						Operation: networking.EnvoyFilter_Patch_ADD,
-						Value: &types.Struct{
-							Fields: map[string]*types.Value{
+						Value: &structpb.Struct{
+							Fields: map[string]*structpb.Value{
 								"lb_policy": {
-									Kind: &types.Value_StringValue{StringValue: "RING_HASH"},
+									Kind: &structpb.Value_StringValue{StringValue: "RING_HASH"},
 								},
 							},
 						},
@@ -3858,13 +3859,13 @@ func TestValidateEnvoyFilter(t *testing.T) {
 					},
 					Patch: &networking.EnvoyFilter_Patch{
 						Operation: networking.EnvoyFilter_Patch_INSERT_BEFORE,
-						Value: &types.Struct{
-							Fields: map[string]*types.Value{
+						Value: &structpb.Struct{
+							Fields: map[string]*structpb.Value{
 								"typed_config": {
-									Kind: &types.Value_StructValue{StructValue: &types.Struct{
-										Fields: map[string]*types.Value{
+									Kind: &structpb.Value_StructValue{StructValue: &structpb.Struct{
+										Fields: map[string]*structpb.Value{
 											"@type": {
-												Kind: &types.Value_StringValue{
+												Kind: &structpb.Value_StringValue{
 													StringValue: "type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz",
 												},
 											},
@@ -3888,13 +3889,13 @@ func TestValidateEnvoyFilter(t *testing.T) {
 					},
 					Patch: &networking.EnvoyFilter_Patch{
 						Operation: networking.EnvoyFilter_Patch_INSERT_FIRST,
-						Value: &types.Struct{
-							Fields: map[string]*types.Value{
+						Value: &structpb.Struct{
+							Fields: map[string]*structpb.Value{
 								"typed_config": {
-									Kind: &types.Value_StructValue{StructValue: &types.Struct{
-										Fields: map[string]*types.Value{
+									Kind: &structpb.Value_StructValue{StructValue: &structpb.Struct{
+										Fields: map[string]*structpb.Value{
 											"@type": {
-												Kind: &types.Value_StringValue{
+												Kind: &structpb.Value_StringValue{
 													StringValue: "type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz",
 												},
 											},
@@ -3922,13 +3923,13 @@ func TestValidateEnvoyFilter(t *testing.T) {
 					},
 					Patch: &networking.EnvoyFilter_Patch{
 						Operation: networking.EnvoyFilter_Patch_INSERT_FIRST,
-						Value: &types.Struct{
-							Fields: map[string]*types.Value{
+						Value: &structpb.Struct{
+							Fields: map[string]*structpb.Value{
 								"typed_config": {
-									Kind: &types.Value_StructValue{StructValue: &types.Struct{
-										Fields: map[string]*types.Value{
+									Kind: &structpb.Value_StructValue{StructValue: &structpb.Struct{
+										Fields: map[string]*structpb.Value{
 											"@type": {
-												Kind: &types.Value_StringValue{
+												Kind: &structpb.Value_StringValue{
 													StringValue: "type.googleapis.com/envoy.config.filter.network.ext_authz.v2.ExtAuthz",
 												},
 											},
@@ -3958,7 +3959,7 @@ func TestValidateEnvoyFilter(t *testing.T) {
 					},
 					Patch: &networking.EnvoyFilter_Patch{
 						Operation: networking.EnvoyFilter_Patch_INSERT_FIRST,
-						Value:     &types.Struct{},
+						Value:     &structpb.Struct{},
 					},
 				},
 			},
@@ -3970,10 +3971,10 @@ func TestValidateEnvoyFilter(t *testing.T) {
 					ApplyTo: networking.EnvoyFilter_CLUSTER,
 					Patch: &networking.EnvoyFilter_Patch{
 						Operation: networking.EnvoyFilter_Patch_ADD,
-						Value: &types.Struct{
-							Fields: map[string]*types.Value{
+						Value: &structpb.Struct{
+							Fields: map[string]*structpb.Value{
 								"dns_refresh_rate": {
-									Kind: &types.Value_StringValue{
+									Kind: &structpb.Value_StringValue{
 										StringValue: "500ms",
 									},
 								},
@@ -4001,12 +4002,12 @@ func TestValidateEnvoyFilter(t *testing.T) {
 func TestValidateServiceEntries(t *testing.T) {
 	cases := []struct {
 		name    string
-		in      networking.ServiceEntry
+		in      *networking.ServiceEntry
 		valid   bool
 		warning bool
 	}{
 		{
-			name: "discovery type DNS", in: networking.ServiceEntry{
+			name: "discovery type DNS", in: &networking.ServiceEntry{
 				Hosts: []string{"*.google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4021,7 +4022,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: true,
 		},
 		{
-			name: "discovery type DNS Round Robin", in: networking.ServiceEntry{
+			name: "discovery type DNS Round Robin", in: &networking.ServiceEntry{
 				Hosts: []string{"*.istio.io"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4036,7 +4037,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: true,
 		},
 		{
-			name: "discovery type DNS, label tlsMode: istio", in: networking.ServiceEntry{
+			name: "discovery type DNS, label tlsMode: istio", in: &networking.ServiceEntry{
 				Hosts: []string{"*.google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4053,7 +4054,7 @@ func TestValidateServiceEntries(t *testing.T) {
 
 		{
 			name: "discovery type DNS, one host set with IP address and https port",
-			in: networking.ServiceEntry{
+			in: &networking.ServiceEntry{
 				Hosts:     []string{"httpbin.org"},
 				Addresses: []string{"10.10.10.10"},
 				Ports: []*networking.Port{
@@ -4069,7 +4070,7 @@ func TestValidateServiceEntries(t *testing.T) {
 
 		{
 			name: "discovery type DNS, multi hosts set with IP address and https port",
-			in: networking.ServiceEntry{
+			in: &networking.ServiceEntry{
 				Hosts:     []string{"httpbin.org", "wikipedia.org"},
 				Addresses: []string{"10.10.10.10"},
 				Ports: []*networking.Port{
@@ -4085,7 +4086,7 @@ func TestValidateServiceEntries(t *testing.T) {
 
 		{
 			name: "discovery type DNS, IP address set",
-			in: networking.ServiceEntry{
+			in: &networking.ServiceEntry{
 				Hosts:     []string{"*.google.com"},
 				Addresses: []string{"10.10.10.10"},
 				Ports: []*networking.Port{
@@ -4103,7 +4104,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type DNS, IP in endpoints", in: networking.ServiceEntry{
+			name: "discovery type DNS, IP in endpoints", in: &networking.ServiceEntry{
 				Hosts: []string{"*.google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4119,7 +4120,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "empty hosts", in: networking.ServiceEntry{
+			name: "empty hosts", in: &networking.ServiceEntry{
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
 				},
@@ -4132,7 +4133,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "bad hosts", in: networking.ServiceEntry{
+			name: "bad hosts", in: &networking.ServiceEntry{
 				Hosts: []string{"-"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4145,7 +4146,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: false,
 		},
 		{
-			name: "full wildcard host", in: networking.ServiceEntry{
+			name: "full wildcard host", in: &networking.ServiceEntry{
 				Hosts: []string{"foo.com", "*"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4158,7 +4159,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: false,
 		},
 		{
-			name: "short name host", in: networking.ServiceEntry{
+			name: "short name host", in: &networking.ServiceEntry{
 				Hosts: []string{"foo", "bar.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4171,7 +4172,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: true,
 		},
 		{
-			name: "undefined endpoint port", in: networking.ServiceEntry{
+			name: "undefined endpoint port", in: &networking.ServiceEntry{
 				Hosts: []string{"google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4187,7 +4188,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type DNS, non-FQDN endpoint", in: networking.ServiceEntry{
+			name: "discovery type DNS, non-FQDN endpoint", in: &networking.ServiceEntry{
 				Hosts: []string{"*.google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4203,7 +4204,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type DNS, non-FQDN host", in: networking.ServiceEntry{
+			name: "discovery type DNS, non-FQDN host", in: &networking.ServiceEntry{
 				Hosts: []string{"*.google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4216,7 +4217,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type DNS, no endpoints", in: networking.ServiceEntry{
+			name: "discovery type DNS, no endpoints", in: &networking.ServiceEntry{
 				Hosts: []string{"google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4229,7 +4230,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type DNS, unix endpoint", in: networking.ServiceEntry{
+			name: "discovery type DNS, unix endpoint", in: &networking.ServiceEntry{
 				Hosts: []string{"*.google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4243,7 +4244,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type none", in: networking.ServiceEntry{
+			name: "discovery type none", in: &networking.ServiceEntry{
 				Hosts: []string{"google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4255,7 +4256,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type none, endpoints provided", in: networking.ServiceEntry{
+			name: "discovery type none, endpoints provided", in: &networking.ServiceEntry{
 				Hosts: []string{"google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-valid1"},
@@ -4270,7 +4271,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type none, cidr addresses", in: networking.ServiceEntry{
+			name: "discovery type none, cidr addresses", in: &networking.ServiceEntry{
 				Hosts:     []string{"google.com"},
 				Addresses: []string{"172.1.2.16/16"},
 				Ports: []*networking.Port{
@@ -4283,7 +4284,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type static, cidr addresses with endpoints", in: networking.ServiceEntry{
+			name: "discovery type static, cidr addresses with endpoints", in: &networking.ServiceEntry{
 				Hosts:     []string{"google.com"},
 				Addresses: []string{"172.1.2.16/16"},
 				Ports: []*networking.Port{
@@ -4300,7 +4301,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type static", in: networking.ServiceEntry{
+			name: "discovery type static", in: &networking.ServiceEntry{
 				Hosts:     []string{"google.com"},
 				Addresses: []string{"172.1.2.16"},
 				Ports: []*networking.Port{
@@ -4317,7 +4318,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type static, FQDN in endpoints", in: networking.ServiceEntry{
+			name: "discovery type static, FQDN in endpoints", in: &networking.ServiceEntry{
 				Hosts:     []string{"google.com"},
 				Addresses: []string{"172.1.2.16"},
 				Ports: []*networking.Port{
@@ -4334,7 +4335,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type static, missing endpoints", in: networking.ServiceEntry{
+			name: "discovery type static, missing endpoints", in: &networking.ServiceEntry{
 				Hosts:     []string{"google.com"},
 				Addresses: []string{"172.1.2.16"},
 				Ports: []*networking.Port{
@@ -4347,7 +4348,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type static, bad endpoint port name", in: networking.ServiceEntry{
+			name: "discovery type static, bad endpoint port name", in: &networking.ServiceEntry{
 				Hosts:     []string{"google.com"},
 				Addresses: []string{"172.1.2.16"},
 				Ports: []*networking.Port{
@@ -4364,7 +4365,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type none, conflicting port names", in: networking.ServiceEntry{
+			name: "discovery type none, conflicting port names", in: &networking.ServiceEntry{
 				Hosts: []string{"google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-conflict"},
@@ -4376,7 +4377,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "discovery type none, conflicting port numbers", in: networking.ServiceEntry{
+			name: "discovery type none, conflicting port numbers", in: &networking.ServiceEntry{
 				Hosts: []string{"google.com"},
 				Ports: []*networking.Port{
 					{Number: 80, Protocol: "http", Name: "http-conflict1"},
@@ -4388,7 +4389,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "unix socket", in: networking.ServiceEntry{
+			name: "unix socket", in: &networking.ServiceEntry{
 				Hosts: []string{"uds.cluster.local"},
 				Ports: []*networking.Port{
 					{Number: 6553, Protocol: "grpc", Name: "grpc-service1"},
@@ -4402,7 +4403,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "unix socket, relative path", in: networking.ServiceEntry{
+			name: "unix socket, relative path", in: &networking.ServiceEntry{
 				Hosts: []string{"uds.cluster.local"},
 				Ports: []*networking.Port{
 					{Number: 6553, Protocol: "grpc", Name: "grpc-service1"},
@@ -4416,7 +4417,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "unix socket, endpoint ports", in: networking.ServiceEntry{
+			name: "unix socket, endpoint ports", in: &networking.ServiceEntry{
 				Hosts: []string{"uds.cluster.local"},
 				Ports: []*networking.Port{
 					{Number: 6553, Protocol: "grpc", Name: "grpc-service1"},
@@ -4430,7 +4431,7 @@ func TestValidateServiceEntries(t *testing.T) {
 		},
 
 		{
-			name: "unix socket, multiple service ports", in: networking.ServiceEntry{
+			name: "unix socket, multiple service ports", in: &networking.ServiceEntry{
 				Hosts: []string{"uds.cluster.local"},
 				Ports: []*networking.Port{
 					{Number: 6553, Protocol: "grpc", Name: "grpc-service1"},
@@ -4444,7 +4445,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: false,
 		},
 		{
-			name: "empty protocol", in: networking.ServiceEntry{
+			name: "empty protocol", in: &networking.ServiceEntry{
 				Hosts:     []string{"google.com"},
 				Addresses: []string{"172.1.2.16/16"},
 				Ports: []*networking.Port{
@@ -4456,7 +4457,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: true,
 		},
 		{
-			name: "selector", in: networking.ServiceEntry{
+			name: "selector", in: &networking.ServiceEntry{
 				Hosts:            []string{"google.com"},
 				WorkloadSelector: &networking.WorkloadSelector{Labels: map[string]string{"foo": "bar"}},
 				Ports: []*networking.Port{
@@ -4466,7 +4467,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: true,
 		},
 		{
-			name: "selector and endpoints", in: networking.ServiceEntry{
+			name: "selector and endpoints", in: &networking.ServiceEntry{
 				Hosts:            []string{"google.com"},
 				WorkloadSelector: &networking.WorkloadSelector{Labels: map[string]string{"foo": "bar"}},
 				Ports: []*networking.Port{
@@ -4479,7 +4480,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: false,
 		},
 		{
-			name: "bad selector key", in: networking.ServiceEntry{
+			name: "bad selector key", in: &networking.ServiceEntry{
 				Hosts:            []string{"google.com"},
 				WorkloadSelector: &networking.WorkloadSelector{Labels: map[string]string{"": "bar"}},
 				Ports: []*networking.Port{
@@ -4489,7 +4490,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: false,
 		},
 		{
-			name: "repeat target port", in: networking.ServiceEntry{
+			name: "repeat target port", in: &networking.ServiceEntry{
 				Hosts:            []string{"google.com"},
 				WorkloadSelector: &networking.WorkloadSelector{Labels: map[string]string{"key": "bar"}},
 				Ports: []*networking.Port{
@@ -4500,7 +4501,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: true,
 		},
 		{
-			name: "valid target port", in: networking.ServiceEntry{
+			name: "valid target port", in: &networking.ServiceEntry{
 				Hosts:            []string{"google.com"},
 				WorkloadSelector: &networking.WorkloadSelector{Labels: map[string]string{"key": "bar"}},
 				Ports: []*networking.Port{
@@ -4510,7 +4511,7 @@ func TestValidateServiceEntries(t *testing.T) {
 			valid: true,
 		},
 		{
-			name: "invalid target port", in: networking.ServiceEntry{
+			name: "invalid target port", in: &networking.ServiceEntry{
 				Hosts:            []string{"google.com"},
 				WorkloadSelector: &networking.WorkloadSelector{Labels: map[string]string{"key": "bar"}},
 				Ports: []*networking.Port{
@@ -4528,7 +4529,7 @@ func TestValidateServiceEntries(t *testing.T) {
 					Name:      someName,
 					Namespace: someNamespace,
 				},
-				Spec: &c.in,
+				Spec: c.in,
 			})
 			if (err == nil) != c.valid {
 				t.Errorf("ValidateServiceEntry got valid=%v but wanted valid=%v: %v",
@@ -6792,10 +6793,10 @@ func TestValidateMeshNetworks(t *testing.T) {
 		t.Run(tc.name, func(t *testing.T) {
 			err := ValidateMeshNetworks(tc.mn)
 			if err != nil && tc.valid {
-				t.Errorf("error not expected on valid meshnetworks: %v", *tc.mn)
+				t.Errorf("error not expected on valid meshnetworks: %v", tc.mn)
 			}
 			if err == nil && !tc.valid {
-				t.Errorf("expected an error on invalid meshnetworks: %v", *tc.mn)
+				t.Errorf("expected an error on invalid meshnetworks: %v", tc.mn)
 			}
 		})
 	}
@@ -6931,7 +6932,7 @@ func TestValidateTelemetry(t *testing.T) {
 			"bad randomSamplingPercentage",
 			&telemetry.Telemetry{
 				Tracing: []*telemetry.Tracing{{
-					RandomSamplingPercentage: &types.DoubleValue{Value: 101},
+					RandomSamplingPercentage: &wrapperspb.DoubleValue{Value: 101},
 				}},
 			},
 			"randomSamplingPercentage", "",
@@ -7024,7 +7025,7 @@ func TestValidateProxyConfig(t *testing.T) {
 	}{
 		{"empty", &networkingv1beta1.ProxyConfig{}, "", ""},
 		{name: "invalid concurrency", in: &networkingv1beta1.ProxyConfig{
-			Concurrency: &types.Int32Value{Value: -1},
+			Concurrency: &wrapperspb.Int32Value{Value: -1},
 		}, out: "concurrency must be greater than or equal to 0"},
 	}
 	for _, tt := range tests {
diff --git a/pkg/config/validation/virtualservice.go b/pkg/config/validation/virtualservice.go
index 47bfd5ade8..1cf2dd8f05 100644
--- a/pkg/config/validation/virtualservice.go
+++ b/pkg/config/validation/virtualservice.go
@@ -77,6 +77,7 @@ func validateHTTPRoute(http *networking.HTTPRoute, delegate bool) (errs Validati
 	errs = appendValidation(errs, validateCORSPolicy(http.CorsPolicy))
 	errs = appendValidation(errs, validateHTTPFaultInjection(http.Fault))
 
+	// nolint: staticcheck
 	if http.MirrorPercent != nil {
 		if value := http.MirrorPercent.GetValue(); value > 100 {
 			errs = appendValidation(errs, fmt.Errorf("mirror_percent must have a max value of 100 (it has %d)", value))
diff --git a/pkg/config/validation/virtualservice_test.go b/pkg/config/validation/virtualservice_test.go
index 57c3e20408..31e322b0e1 100644
--- a/pkg/config/validation/virtualservice_test.go
+++ b/pkg/config/validation/virtualservice_test.go
@@ -17,8 +17,8 @@
 import (
 	"testing"
 
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/proto"
+	"google.golang.org/protobuf/types/known/wrapperspb"
 
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pkg/config"
@@ -581,7 +581,7 @@ func TestValidateDelegateHTTPRoute(t *testing.T) {
 			Match: []*networking.HTTPMatchRequest{nil},
 		}, valid: true},
 		{name: "invalid mirror percent", route: &networking.HTTPRoute{
-			MirrorPercent: &types.UInt32Value{Value: 101},
+			MirrorPercent: &wrapperspb.UInt32Value{Value: 101},
 			Route: []*networking.HTTPRouteDestination{{
 				Destination: &networking.Destination{Host: "foo.bar"},
 			}},
diff --git a/pkg/config/xds/xds.go b/pkg/config/xds/xds.go
index 6fc9e8d157..b586e4c95f 100644
--- a/pkg/config/xds/xds.go
+++ b/pkg/config/xds/xds.go
@@ -25,16 +25,16 @@
 	listener "github.com/envoyproxy/go-control-plane/envoy/config/listener/v3"
 	route "github.com/envoyproxy/go-control-plane/envoy/config/route/v3"
 	httpConn "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/http_connection_manager/v3"
-	gogojsonpb "github.com/gogo/protobuf/jsonpb"
-	"github.com/gogo/protobuf/types"
+	"github.com/golang/protobuf/jsonpb"
 	"google.golang.org/protobuf/proto"
+	"google.golang.org/protobuf/types/known/structpb"
 
 	networking "istio.io/api/networking/v1alpha3"
 	"istio.io/istio/pkg/util/protomarshal"
 )
 
 // nolint: interfacer
-func BuildXDSObjectFromStruct(applyTo networking.EnvoyFilter_ApplyTo, value *types.Struct, strict bool) (proto.Message, error) {
+func BuildXDSObjectFromStruct(applyTo networking.EnvoyFilter_ApplyTo, value *structpb.Struct, strict bool) (proto.Message, error) {
 	if value == nil {
 		// for remove ops
 		return nil, nil
@@ -65,19 +65,19 @@ func BuildXDSObjectFromStruct(applyTo networking.EnvoyFilter_ApplyTo, value *typ
 		return nil, fmt.Errorf("Envoy filter: unknown object type for applyTo %s", applyTo.String()) // nolint: golint,stylecheck
 	}
 
-	if err := GogoStructToMessage(value, obj, strict); err != nil {
+	if err := StructToMessage(value, obj, strict); err != nil {
 		return nil, fmt.Errorf("Envoy filter: %v", err) // nolint: golint,stylecheck
 	}
 	return obj, nil
 }
 
-func GogoStructToMessage(pbst *types.Struct, out proto.Message, strict bool) error {
+func StructToMessage(pbst *structpb.Struct, out proto.Message, strict bool) error {
 	if pbst == nil {
 		return errors.New("nil struct")
 	}
 
 	buf := &bytes.Buffer{}
-	if err := (&gogojsonpb.Marshaler{OrigName: true}).Marshal(buf, pbst); err != nil {
+	if err := (&jsonpb.Marshaler{OrigName: true}).Marshal(buf, pbst); err != nil {
 		return err
 	}
 
diff --git a/pkg/envoy/proxy.go b/pkg/envoy/proxy.go
index 6e9383db9d..b7120c37ae 100644
--- a/pkg/envoy/proxy.go
+++ b/pkg/envoy/proxy.go
@@ -20,9 +20,8 @@
 	"os/exec"
 	"strings"
 	"syscall"
-	"time"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/durationpb"
 
 	"istio.io/istio/pilot/pkg/util/network"
 	"istio.io/pkg/env"
@@ -48,8 +47,8 @@ type ProxyConfig struct {
 	ConfigPath             string
 	ConfigCleanup          bool
 	AdminPort              int32
-	DrainDuration          *types.Duration
-	ParentShutdownDuration *types.Duration
+	DrainDuration          *durationpb.Duration
+	ParentShutdownDuration *durationpb.Duration
 	Concurrency            int32
 
 	// For unit testing, in combination with NoEnvoy prevents agent.Run from blocking
@@ -120,9 +119,9 @@ func (e *envoy) args(fname string, epoch int, bootstrapConfig string) []string {
 	startupArgs := []string{
 		"-c", fname,
 		"--restart-epoch", fmt.Sprint(epoch),
-		"--drain-time-s", fmt.Sprint(int(convertDuration(e.DrainDuration) / time.Second)),
+		"--drain-time-s", fmt.Sprint(int(e.DrainDuration.AsDuration().Seconds())),
 		"--drain-strategy", "immediate", // Clients are notified as soon as the drain process starts.
-		"--parent-shutdown-time-s", fmt.Sprint(int(convertDuration(e.ParentShutdownDuration) / time.Second)),
+		"--parent-shutdown-time-s", fmt.Sprint(int(e.ParentShutdownDuration.AsDuration().Seconds())),
 		"--local-address-ip-version", proxyLocalAddressType,
 		// Reduce default flush interval from 10s to 1s. The access log buffer size is 64k and each log is ~256 bytes
 		// This means access logs will be written once we have ~250 requests, or ever 1s, which ever comes first.
@@ -208,15 +207,3 @@ func (e *envoy) Cleanup(epoch int) {
 		}
 	}
 }
-
-// convertDuration converts to golang duration and logs errors
-func convertDuration(d *types.Duration) time.Duration {
-	if d == nil {
-		return 0
-	}
-	dur, err := types.DurationFromProto(d)
-	if err != nil {
-		log.Warnf("error converting duration %#v, using 0: %v", d, err)
-	}
-	return dur
-}
diff --git a/pkg/envoy/proxy_test.go b/pkg/envoy/proxy_test.go
index 4a994727b3..cfc6d9dbcc 100644
--- a/pkg/envoy/proxy_test.go
+++ b/pkg/envoy/proxy_test.go
@@ -18,7 +18,7 @@
 	"reflect"
 	"testing"
 
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/types/known/wrapperspb"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pilot/pkg/model"
@@ -28,7 +28,7 @@
 func TestEnvoyArgs(t *testing.T) {
 	proxyConfig := (*model.NodeMetaProxyConfig)(mesh.DefaultProxyConfig())
 	proxyConfig.ClusterName = &meshconfig.ProxyConfig_ServiceCluster{ServiceCluster: "my-cluster"}
-	proxyConfig.Concurrency = &types.Int32Value{Value: 8}
+	proxyConfig.Concurrency = &wrapperspb.Int32Value{Value: 8}
 
 	cfg := ProxyConfig{
 		LogLevel:               "trace",
diff --git a/pkg/istio-agent/agent.go b/pkg/istio-agent/agent.go
index dc88a27885..1089025242 100644
--- a/pkg/istio-agent/agent.go
+++ b/pkg/istio-agent/agent.go
@@ -29,7 +29,6 @@
 
 	bootstrapv3 "github.com/envoyproxy/go-control-plane/envoy/config/bootstrap/v3"
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
-	"github.com/gogo/protobuf/types"
 	"google.golang.org/api/option"
 	"google.golang.org/grpc"
 
@@ -298,7 +297,7 @@ func (a *Agent) initializeEnvoyAgent(ctx context.Context) error {
 
 	envoyProxy := envoy.NewProxy(a.envoyOpts)
 
-	drainDuration, _ := types.DurationFromProto(a.proxyConfig.TerminationDrainDuration)
+	drainDuration := a.proxyConfig.TerminationDrainDuration.AsDuration()
 	localHostAddr := localHostIPv4
 	if a.cfg.IsIPv6 {
 		localHostAddr = localHostIPv6
diff --git a/pkg/istio-agent/xds_proxy.go b/pkg/istio-agent/xds_proxy.go
index 4f6aecb8e2..f61de092b2 100644
--- a/pkg/istio-agent/xds_proxy.go
+++ b/pkg/istio-agent/xds_proxy.go
@@ -30,7 +30,6 @@
 	"time"
 
 	discovery "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
-	gogotypes "github.com/gogo/protobuf/types"
 	"go.uber.org/atomic"
 	google_rpc "google.golang.org/genproto/googleapis/rpc/status"
 	"google.golang.org/grpc"
@@ -54,7 +53,6 @@
 	"istio.io/istio/pkg/istio-agent/metrics"
 	istiokeepalive "istio.io/istio/pkg/keepalive"
 	"istio.io/istio/pkg/uds"
-	"istio.io/istio/pkg/util/gogo"
 	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/istio/pkg/wasm"
 	"istio.io/istio/security/pkg/nodeagent/caclient"
@@ -170,8 +168,8 @@ func initXdsProxy(ia *Agent) (*XdsProxy, error) {
 	}
 	if ia.cfg.EnableDynamicProxyConfig && ia.secretCache != nil {
 		proxy.handlers[v3.ProxyConfigType] = func(resp *any.Any) error {
-			var pc meshconfig.ProxyConfig
-			if err := gogotypes.UnmarshalAny(gogo.ConvertAny(resp), &pc); err != nil {
+			pc := &meshconfig.ProxyConfig{}
+			if err := resp.UnmarshalTo(pc); err != nil {
 				log.Errorf("failed to unmarshal proxy config: %v", err)
 				return err
 			}
diff --git a/pkg/kube/fakemirror.go b/pkg/kube/fakemirror.go
index 2da40fbebb..056afb689e 100644
--- a/pkg/kube/fakemirror.go
+++ b/pkg/kube/fakemirror.go
@@ -18,7 +18,7 @@
 	"context"
 	"reflect"
 
-	"github.com/gogo/protobuf/proto"
+	gogoproto "github.com/gogo/protobuf/proto"
 	corev1 "k8s.io/api/core/v1"
 	discoveryv1 "k8s.io/api/discovery/v1"
 	discoveryv1beta1 "k8s.io/api/discovery/v1beta1"
@@ -124,12 +124,12 @@ func endpointSliceV1toV1beta1(obj interface{}) metav1.Common {
 	if !ok {
 		return nil
 	}
-	marshaled, err := proto.Marshal(in)
+	marshaled, err := gogoproto.Marshal(in)
 	if err != nil {
 		return nil
 	}
 	out := &discoveryv1beta1.EndpointSlice{}
-	if err := proto.Unmarshal(marshaled, out); err != nil {
+	if err := gogoproto.Unmarshal(marshaled, out); err != nil {
 		return nil
 	}
 	for i, endpoint := range out.Endpoints {
diff --git a/pkg/kube/inject/inject.go b/pkg/kube/inject/inject.go
index 70ddee557e..f83a89ca3d 100644
--- a/pkg/kube/inject/inject.go
+++ b/pkg/kube/inject/inject.go
@@ -306,7 +306,7 @@ func ProxyImage(values *opconfig.Values, image *proxyConfig.ProxyImage, annotati
 
 	tag := ""
 	if global.GetTag() != nil { // Tag is an interface but we need the string form.
-		tag = fmt.Sprintf("%v", opconfig.AsInterface(global.GetTag()))
+		tag = fmt.Sprintf("%v", global.GetTag().AsInterface())
 	}
 
 	imageType := ""
diff --git a/pkg/kube/inject/inject_test.go b/pkg/kube/inject/inject_test.go
index 1a619e8d30..813115c4c3 100644
--- a/pkg/kube/inject/inject_test.go
+++ b/pkg/kube/inject/inject_test.go
@@ -24,8 +24,10 @@
 	"testing"
 	"time"
 
-	"github.com/gogo/protobuf/types"
 	"github.com/google/go-cmp/cmp"
+	"google.golang.org/protobuf/testing/protocmp"
+	"google.golang.org/protobuf/types/known/durationpb"
+	"google.golang.org/protobuf/types/known/structpb"
 	corev1 "k8s.io/api/core/v1"
 	"k8s.io/apimachinery/pkg/runtime"
 
@@ -101,8 +103,8 @@ type testCase struct {
 			in:   "format-duration.yaml",
 			want: "format-duration.yaml.injected",
 			mesh: func(m *meshapi.MeshConfig) {
-				m.DefaultConfig.DrainDuration = types.DurationProto(time.Second * 23)
-				m.DefaultConfig.ParentShutdownDuration = types.DurationProto(time.Second * 42)
+				m.DefaultConfig.DrainDuration = durationpb.New(time.Second * 23)
+				m.DefaultConfig.ParentShutdownDuration = durationpb.New(time.Second * 42)
 			},
 		},
 		{
@@ -267,6 +269,9 @@ type testCase struct {
 			in:   "traffic-annotations.yaml",
 			want: "traffic-annotations.yaml.injected",
 			mesh: func(m *meshapi.MeshConfig) {
+				if m.DefaultConfig.ProxyMetadata == nil {
+					m.DefaultConfig.ProxyMetadata = map[string]string{}
+				}
 				m.DefaultConfig.ProxyMetadata["ISTIO_META_TLS_CLIENT_KEY"] = "/etc/identity/client/keys/client-key.pem"
 			},
 		},
@@ -770,13 +775,13 @@ func TestSkipUDPPorts(t *testing.T) {
 func TestCleanProxyConfig(t *testing.T) {
 	overrides := mesh.DefaultProxyConfig()
 	overrides.ConfigPath = "/foo/bar"
-	overrides.DrainDuration = types.DurationProto(7 * time.Second)
+	overrides.DrainDuration = durationpb.New(7 * time.Second)
 	overrides.ProxyMetadata = map[string]string{
 		"foo": "barr",
 	}
 	explicit := mesh.DefaultProxyConfig()
 	explicit.ConfigPath = constants.ConfigPathDir
-	explicit.DrainDuration = types.DurationProto(45 * time.Second)
+	explicit.DrainDuration = durationpb.New(45 * time.Second)
 	cases := []struct {
 		name   string
 		proxy  *meshapi.ProxyConfig
@@ -808,7 +813,7 @@ func TestCleanProxyConfig(t *testing.T) {
 			if err != nil {
 				t.Fatal(err)
 			}
-			if !cmp.Equal(roundTrip.GetDefaultConfig(), tt.proxy) {
+			if !cmp.Equal(roundTrip.GetDefaultConfig(), tt.proxy, protocmp.Transform()) {
 				t.Fatalf("round trip is not identical: got \n%+v, expected \n%+v", *roundTrip.GetDefaultConfig(), tt.proxy)
 			}
 		})
@@ -975,22 +980,13 @@ func TestQuantityConversion(t *testing.T) {
 
 func TestProxyImage(t *testing.T) {
 	val := func(hub string, tag interface{}) *opconfig.Values {
-		v := &opconfig.Values{
+		t, _ := structpb.NewValue(tag)
+		return &opconfig.Values{
 			Global: &opconfig.GlobalConfig{
 				Hub: hub,
+				Tag: t,
 			},
 		}
-		switch tt := tag.(type) {
-		case string:
-			v.Global.Tag = &types.Value{Kind: &types.Value_StringValue{StringValue: tt}}
-		case int:
-			v.Global.Tag = &types.Value{Kind: &types.Value_NumberValue{NumberValue: float64(tt)}}
-		case float64:
-			v.Global.Tag = &types.Value{Kind: &types.Value_NumberValue{NumberValue: tt}}
-		default:
-			panic(fmt.Sprintf("unhandled type %T", tag))
-		}
-		return v
 	}
 	pc := func(imageType string) *proxyConfig.ProxyImage {
 		return &proxyConfig.ProxyImage{
diff --git a/pkg/kube/inject/template.go b/pkg/kube/inject/template.go
index f69d5be530..1839bd11d3 100644
--- a/pkg/kube/inject/template.go
+++ b/pkg/kube/inject/template.go
@@ -19,20 +19,19 @@
 	"fmt"
 	"os"
 	"path"
-	"reflect"
 	"strconv"
 	"strings"
 	"text/template"
 
-	"github.com/gogo/protobuf/jsonpb"
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
+	"google.golang.org/protobuf/proto"
+	"google.golang.org/protobuf/types/known/durationpb"
 	corev1 "k8s.io/api/core/v1"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 	"sigs.k8s.io/yaml"
 
 	meshconfig "istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pkg/config/mesh"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/log"
 )
 
@@ -74,12 +73,8 @@ func env(key string, def string) string {
 	return val
 }
 
-func formatDuration(in *types.Duration) string {
-	dur, err := types.DurationFromProto(in)
-	if err != nil {
-		return "1s"
-	}
-	return dur.String()
+func formatDuration(in *durationpb.Duration) string {
+	return in.AsDuration().String()
 }
 
 func isset(m map[string]string, key string) bool {
@@ -269,8 +264,7 @@ func protoToJSON(v proto.Message) string {
 		return "{}"
 	}
 
-	m := jsonpb.Marshaler{}
-	ba, err := m.MarshalToString(v)
+	ba, err := protomarshal.ToJSON(v)
 	if err != nil {
 		log.Warnf("Unable to marshal %v: %v", v, err)
 		return "{}"
@@ -287,7 +281,7 @@ func cleanProxyConfig(msg proto.Message) proto.Message {
 	if !ok || originalProxyConfig == nil {
 		return msg
 	}
-	pc := *originalProxyConfig
+	pc := proto.Clone(originalProxyConfig).(*meshconfig.ProxyConfig)
 	defaults := mesh.DefaultProxyConfig()
 	if pc.ConfigPath == defaults.ConfigPath {
 		pc.ConfigPath = ""
@@ -303,25 +297,26 @@ func cleanProxyConfig(msg proto.Message) proto.Message {
 			pc.ClusterName = nil
 		}
 	}
-	if reflect.DeepEqual(pc.DrainDuration, defaults.DrainDuration) {
+
+	if proto.Equal(pc.DrainDuration, defaults.DrainDuration) {
 		pc.DrainDuration = nil
 	}
-	if reflect.DeepEqual(pc.TerminationDrainDuration, defaults.TerminationDrainDuration) {
+	if proto.Equal(pc.TerminationDrainDuration, defaults.TerminationDrainDuration) {
 		pc.TerminationDrainDuration = nil
 	}
-	if reflect.DeepEqual(pc.ParentShutdownDuration, defaults.ParentShutdownDuration) {
+	if proto.Equal(pc.ParentShutdownDuration, defaults.ParentShutdownDuration) {
 		pc.ParentShutdownDuration = nil
 	}
 	if pc.DiscoveryAddress == defaults.DiscoveryAddress {
 		pc.DiscoveryAddress = ""
 	}
-	if reflect.DeepEqual(pc.EnvoyMetricsService, defaults.EnvoyMetricsService) {
+	if proto.Equal(pc.EnvoyMetricsService, defaults.EnvoyMetricsService) {
 		pc.EnvoyMetricsService = nil
 	}
-	if reflect.DeepEqual(pc.EnvoyAccessLogService, defaults.EnvoyAccessLogService) {
+	if proto.Equal(pc.EnvoyAccessLogService, defaults.EnvoyAccessLogService) {
 		pc.EnvoyAccessLogService = nil
 	}
-	if reflect.DeepEqual(pc.Tracing, defaults.Tracing) {
+	if proto.Equal(pc.Tracing, defaults.Tracing) {
 		pc.Tracing = nil
 	}
 	if pc.ProxyAdminPort == defaults.ProxyAdminPort {
@@ -333,11 +328,11 @@ func cleanProxyConfig(msg proto.Message) proto.Message {
 	if pc.StatusPort == defaults.StatusPort {
 		pc.StatusPort = 0
 	}
-	if reflect.DeepEqual(pc.Concurrency, defaults.Concurrency) {
+	if proto.Equal(pc.Concurrency, defaults.Concurrency) {
 		pc.Concurrency = nil
 	}
 	if len(pc.ProxyMetadata) == 0 {
 		pc.ProxyMetadata = nil
 	}
-	return proto.Message(&pc)
+	return proto.Message(pc)
 }
diff --git a/pkg/kube/inject/validate.go b/pkg/kube/inject/validate.go
index 06a5421d8a..d38a3c9524 100644
--- a/pkg/kube/inject/validate.go
+++ b/pkg/kube/inject/validate.go
@@ -27,7 +27,7 @@
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/config/validation"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
 type annotationValidationFunc func(value string) error
@@ -53,7 +53,7 @@
 
 func validateProxyConfig(value string) error {
 	config := mesh.DefaultProxyConfig()
-	if err := gogoprotomarshal.ApplyYAML(value, config); err != nil {
+	if err := protomarshal.ApplyYAML(value, config); err != nil {
 		return fmt.Errorf("failed to convert to apply proxy config: %v", err)
 	}
 	return validation.ValidateMeshConfigProxyConfig(config)
diff --git a/pkg/kube/inject/webhook.go b/pkg/kube/inject/webhook.go
index 02cf51e8a3..df5f8995b4 100644
--- a/pkg/kube/inject/webhook.go
+++ b/pkg/kube/inject/webhook.go
@@ -49,7 +49,7 @@
 	"istio.io/istio/pilot/pkg/util/sets"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/kube"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/log"
 )
 
@@ -275,7 +275,7 @@ type ValuesConfig struct {
 func NewValuesConfig(v string) (ValuesConfig, error) {
 	c := ValuesConfig{raw: v}
 	valuesStruct := &opconfig.Values{}
-	if err := gogoprotomarshal.ApplyYAML(v, valuesStruct); err != nil {
+	if err := protomarshal.ApplyYAML(v, valuesStruct); err != nil {
 		return c, fmt.Errorf("could not parse configuration values: %v", err)
 	}
 	c.asStruct = valuesStruct
diff --git a/pkg/kube/inject/webhook_test.go b/pkg/kube/inject/webhook_test.go
index 263852512c..991147a94d 100644
--- a/pkg/kube/inject/webhook_test.go
+++ b/pkg/kube/inject/webhook_test.go
@@ -28,8 +28,8 @@
 	"testing"
 
 	jsonpatch "github.com/evanphx/json-patch/v5"
-	"github.com/gogo/protobuf/types"
 	openshiftv1 "github.com/openshift/api/apps/v1"
+	"google.golang.org/protobuf/types/known/wrapperspb"
 	"k8s.io/api/admission/v1beta1"
 	appsv1 "k8s.io/api/apps/v1"
 	batchv1 "k8s.io/api/batch/v1"
@@ -892,7 +892,7 @@ func createWebhook(t testing.TB, cfg *Config, pcResources int) *Webhook {
 	store := model.NewFakeStore()
 	for i := 0; i < pcResources; i++ {
 		store.Create(newProxyConfig(fmt.Sprintf("pc-%d", i), "istio-system", &v1beta12.ProxyConfig{
-			Concurrency: &types.Int32Value{Value: int32(i % 5)},
+			Concurrency: &wrapperspb.Int32Value{Value: int32(i % 5)},
 			EnvironmentVariables: map[string]string{
 				fmt.Sprintf("VAR_%d", i): fmt.Sprint(i),
 			},
@@ -1159,25 +1159,25 @@ func TestEnablePrometheusAggregation(t *testing.T) {
 		},
 		{
 			"mesh on",
-			&meshconfig.MeshConfig{EnablePrometheusMerge: &types.BoolValue{Value: true}},
+			&meshconfig.MeshConfig{EnablePrometheusMerge: &wrapperspb.BoolValue{Value: true}},
 			nil,
 			true,
 		},
 		{
 			"mesh off",
-			&meshconfig.MeshConfig{EnablePrometheusMerge: &types.BoolValue{Value: false}},
+			&meshconfig.MeshConfig{EnablePrometheusMerge: &wrapperspb.BoolValue{Value: false}},
 			nil,
 			false,
 		},
 		{
 			"annotation on",
-			&meshconfig.MeshConfig{EnablePrometheusMerge: &types.BoolValue{Value: false}},
+			&meshconfig.MeshConfig{EnablePrometheusMerge: &wrapperspb.BoolValue{Value: false}},
 			map[string]string{annotation.PrometheusMergeMetrics.Name: "true"},
 			true,
 		},
 		{
 			"annotation off",
-			&meshconfig.MeshConfig{EnablePrometheusMerge: &types.BoolValue{Value: true}},
+			&meshconfig.MeshConfig{EnablePrometheusMerge: &wrapperspb.BoolValue{Value: true}},
 			map[string]string{annotation.PrometheusMergeMetrics.Name: "false"},
 			false,
 		},
diff --git a/pkg/test/config/mock_config.pb.go b/pkg/test/config/mock_config.pb.go
index 6438008e05..9825ed25ce 100644
--- a/pkg/test/config/mock_config.pb.go
+++ b/pkg/test/config/mock_config.pb.go
@@ -1,540 +1,242 @@
-// Code generated by protoc-gen-gogo. DO NOT EDIT.
-// source: mock_config.proto
+// Copyright Istio Authors
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+// Code generated by protoc-gen-go. DO NOT EDIT.
+// versions:
+// 	protoc-gen-go v1.27.1
+// 	protoc        v3.18.0
+// source: pkg/test/config/mock_config.proto
+
+// Basic config resource consisting
+// of a set of key-value pairs
 
-/*
-	Package test is a generated protocol buffer package.
+package config
 
-	It is generated from these files:
-		mock_config.proto
+import (
+	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
+	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
+	reflect "reflect"
+	sync "sync"
+)
 
-	It has these top-level messages:
-		MockConfig
-		ConfigPair
-*/
-package config
+const (
+	// Verify that this generated code is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
+	// Verify that runtime/protoimpl is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
+)
 
-import proto "github.com/gogo/protobuf/proto"
-import fmt "fmt"
-import math "math"
+type MockConfig struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
 
-import io "io"
+	Key   string        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
+	Pairs []*ConfigPair `protobuf:"bytes,2,rep,name=pairs,proto3" json:"pairs,omitempty"`
+}
 
-// Reference imports to suppress errors if they are not otherwise used.
-var _ = proto.Marshal
-var _ = fmt.Errorf
-var _ = math.Inf
+func (x *MockConfig) Reset() {
+	*x = MockConfig{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_test_config_mock_config_proto_msgTypes[0]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
+}
+
+func (x *MockConfig) String() string {
+	return protoimpl.X.MessageStringOf(x)
+}
 
-// This is a compile-time assertion to ensure that this generated file
-// is compatible with the proto package it is being compiled against.
-// A compilation error at this line likely means your copy of the
-// proto package needs to be updated.
-const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package
+func (*MockConfig) ProtoMessage() {}
 
-type MockConfig struct {
-	Key   string        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
-	Pairs []*ConfigPair `protobuf:"bytes,2,rep,name=pairs" json:"pairs,omitempty"`
+func (x *MockConfig) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_test_config_mock_config_proto_msgTypes[0]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-func (m *MockConfig) Reset()                    { *m = MockConfig{} }
-func (m *MockConfig) String() string            { return proto.CompactTextString(m) }
-func (*MockConfig) ProtoMessage()               {}
-func (*MockConfig) Descriptor() ([]byte, []int) { return fileDescriptorMockConfig, []int{0} }
+// Deprecated: Use MockConfig.ProtoReflect.Descriptor instead.
+func (*MockConfig) Descriptor() ([]byte, []int) {
+	return file_pkg_test_config_mock_config_proto_rawDescGZIP(), []int{0}
+}
 
-func (m *MockConfig) GetKey() string {
-	if m != nil {
-		return m.Key
+func (x *MockConfig) GetKey() string {
+	if x != nil {
+		return x.Key
 	}
 	return ""
 }
 
-func (m *MockConfig) GetPairs() []*ConfigPair {
-	if m != nil {
-		return m.Pairs
+func (x *MockConfig) GetPairs() []*ConfigPair {
+	if x != nil {
+		return x.Pairs
 	}
 	return nil
 }
 
 type ConfigPair struct {
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
 	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
 	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
 }
 
-func (m *ConfigPair) Reset()                    { *m = ConfigPair{} }
-func (m *ConfigPair) String() string            { return proto.CompactTextString(m) }
-func (*ConfigPair) ProtoMessage()               {}
-func (*ConfigPair) Descriptor() ([]byte, []int) { return fileDescriptorMockConfig, []int{1} }
-
-func (m *ConfigPair) GetKey() string {
-	if m != nil {
-		return m.Key
+func (x *ConfigPair) Reset() {
+	*x = ConfigPair{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_pkg_test_config_mock_config_proto_msgTypes[1]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
 	}
-	return ""
 }
 
-func (m *ConfigPair) GetValue() string {
-	if m != nil {
-		return m.Value
-	}
-	return ""
+func (x *ConfigPair) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
 
-func init() {
-	proto.RegisterType((*MockConfig)(nil), "test.MockConfig")
-	proto.RegisterType((*ConfigPair)(nil), "test.ConfigPair")
-}
-func (m *MockConfig) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalTo(dAtA)
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
-}
+func (*ConfigPair) ProtoMessage() {}
 
-func (m *MockConfig) MarshalTo(dAtA []byte) (int, error) {
-	var i int
-	_ = i
-	var l int
-	_ = l
-	if len(m.Key) > 0 {
-		dAtA[i] = 0xa
-		i++
-		i = encodeVarintMockConfig(dAtA, i, uint64(len(m.Key)))
-		i += copy(dAtA[i:], m.Key)
-	}
-	if len(m.Pairs) > 0 {
-		for _, msg := range m.Pairs {
-			dAtA[i] = 0x12
-			i++
-			i = encodeVarintMockConfig(dAtA, i, uint64(msg.Size()))
-			n, err := msg.MarshalTo(dAtA[i:])
-			if err != nil {
-				return 0, err
-			}
-			i += n
+func (x *ConfigPair) ProtoReflect() protoreflect.Message {
+	mi := &file_pkg_test_config_mock_config_proto_msgTypes[1]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
 		}
+		return ms
 	}
-	return i, nil
+	return mi.MessageOf(x)
 }
 
-func (m *ConfigPair) Marshal() (dAtA []byte, err error) {
-	size := m.Size()
-	dAtA = make([]byte, size)
-	n, err := m.MarshalTo(dAtA)
-	if err != nil {
-		return nil, err
-	}
-	return dAtA[:n], nil
+// Deprecated: Use ConfigPair.ProtoReflect.Descriptor instead.
+func (*ConfigPair) Descriptor() ([]byte, []int) {
+	return file_pkg_test_config_mock_config_proto_rawDescGZIP(), []int{1}
 }
 
-func (m *ConfigPair) MarshalTo(dAtA []byte) (int, error) {
-	var i int
-	_ = i
-	var l int
-	_ = l
-	if len(m.Key) > 0 {
-		dAtA[i] = 0xa
-		i++
-		i = encodeVarintMockConfig(dAtA, i, uint64(len(m.Key)))
-		i += copy(dAtA[i:], m.Key)
-	}
-	if len(m.Value) > 0 {
-		dAtA[i] = 0x12
-		i++
-		i = encodeVarintMockConfig(dAtA, i, uint64(len(m.Value)))
-		i += copy(dAtA[i:], m.Value)
+func (x *ConfigPair) GetKey() string {
+	if x != nil {
+		return x.Key
 	}
-	return i, nil
+	return ""
 }
 
-func encodeVarintMockConfig(dAtA []byte, offset int, v uint64) int {
-	for v >= 1<<7 {
-		dAtA[offset] = uint8(v&0x7f | 0x80)
-		v >>= 7
-		offset++
-	}
-	dAtA[offset] = uint8(v)
-	return offset + 1
-}
-func (m *MockConfig) Size() (n int) {
-	var l int
-	_ = l
-	l = len(m.Key)
-	if l > 0 {
-		n += 1 + l + sovMockConfig(uint64(l))
+func (x *ConfigPair) GetValue() string {
+	if x != nil {
+		return x.Value
 	}
-	if len(m.Pairs) > 0 {
-		for _, e := range m.Pairs {
-			l = e.Size()
-			n += 1 + l + sovMockConfig(uint64(l))
-		}
-	}
-	return n
+	return ""
 }
 
-func (m *ConfigPair) Size() (n int) {
-	var l int
-	_ = l
-	l = len(m.Key)
-	if l > 0 {
-		n += 1 + l + sovMockConfig(uint64(l))
-	}
-	l = len(m.Value)
-	if l > 0 {
-		n += 1 + l + sovMockConfig(uint64(l))
-	}
-	return n
-}
+var File_pkg_test_config_mock_config_proto protoreflect.FileDescriptor
 
-func sovMockConfig(x uint64) (n int) {
-	for {
-		n++
-		x >>= 7
-		if x == 0 {
-			break
-		}
-	}
-	return n
-}
-func sozMockConfig(x uint64) (n int) {
-	return sovMockConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
+var file_pkg_test_config_mock_config_proto_rawDesc = []byte{
+	0x0a, 0x21, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
+	0x67, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x48, 0x0a, 0x0a, 0x4d,
+	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
+	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x70,
+	0x61, 0x69, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e,
+	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05,
+	0x70, 0x61, 0x69, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
+	0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
+	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
+	0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
 }
-func (m *MockConfig) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowMockConfig
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= (uint64(b) & 0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: MockConfig: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: MockConfig: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowMockConfig
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= (uint64(b) & 0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthMockConfig
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Key = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Pairs", wireType)
-			}
-			var msglen int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowMockConfig
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				msglen |= (int(b) & 0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			if msglen < 0 {
-				return ErrInvalidLengthMockConfig
-			}
-			postIndex := iNdEx + msglen
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Pairs = append(m.Pairs, &ConfigPair{})
-			if err := m.Pairs[len(m.Pairs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
-				return err
-			}
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipMockConfig(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if skippy < 0 {
-				return ErrInvalidLengthMockConfig
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			iNdEx += skippy
-		}
-	}
 
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func (m *ConfigPair) Unmarshal(dAtA []byte) error {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		preIndex := iNdEx
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return ErrIntOverflowMockConfig
-			}
-			if iNdEx >= l {
-				return io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= (uint64(b) & 0x7F) << shift
-			if b < 0x80 {
-				break
-			}
-		}
-		fieldNum := int32(wire >> 3)
-		wireType := int(wire & 0x7)
-		if wireType == 4 {
-			return fmt.Errorf("proto: ConfigPair: wiretype end group for non-group")
-		}
-		if fieldNum <= 0 {
-			return fmt.Errorf("proto: ConfigPair: illegal tag %d (wire type %d)", fieldNum, wire)
-		}
-		switch fieldNum {
-		case 1:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowMockConfig
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= (uint64(b) & 0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthMockConfig
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Key = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		case 2:
-			if wireType != 2 {
-				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
-			}
-			var stringLen uint64
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return ErrIntOverflowMockConfig
-				}
-				if iNdEx >= l {
-					return io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				stringLen |= (uint64(b) & 0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			intStringLen := int(stringLen)
-			if intStringLen < 0 {
-				return ErrInvalidLengthMockConfig
-			}
-			postIndex := iNdEx + intStringLen
-			if postIndex > l {
-				return io.ErrUnexpectedEOF
-			}
-			m.Value = string(dAtA[iNdEx:postIndex])
-			iNdEx = postIndex
-		default:
-			iNdEx = preIndex
-			skippy, err := skipMockConfig(dAtA[iNdEx:])
-			if err != nil {
-				return err
-			}
-			if skippy < 0 {
-				return ErrInvalidLengthMockConfig
-			}
-			if (iNdEx + skippy) > l {
-				return io.ErrUnexpectedEOF
-			}
-			iNdEx += skippy
-		}
-	}
+var (
+	file_pkg_test_config_mock_config_proto_rawDescOnce sync.Once
+	file_pkg_test_config_mock_config_proto_rawDescData = file_pkg_test_config_mock_config_proto_rawDesc
+)
 
-	if iNdEx > l {
-		return io.ErrUnexpectedEOF
-	}
-	return nil
-}
-func skipMockConfig(dAtA []byte) (n int, err error) {
-	l := len(dAtA)
-	iNdEx := 0
-	for iNdEx < l {
-		var wire uint64
-		for shift := uint(0); ; shift += 7 {
-			if shift >= 64 {
-				return 0, ErrIntOverflowMockConfig
-			}
-			if iNdEx >= l {
-				return 0, io.ErrUnexpectedEOF
-			}
-			b := dAtA[iNdEx]
-			iNdEx++
-			wire |= (uint64(b) & 0x7F) << shift
-			if b < 0x80 {
-				break
+func file_pkg_test_config_mock_config_proto_rawDescGZIP() []byte {
+	file_pkg_test_config_mock_config_proto_rawDescOnce.Do(func() {
+		file_pkg_test_config_mock_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_test_config_mock_config_proto_rawDescData)
+	})
+	return file_pkg_test_config_mock_config_proto_rawDescData
+}
+
+var file_pkg_test_config_mock_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
+var file_pkg_test_config_mock_config_proto_goTypes = []interface{}{
+	(*MockConfig)(nil), // 0: config.MockConfig
+	(*ConfigPair)(nil), // 1: config.ConfigPair
+}
+var file_pkg_test_config_mock_config_proto_depIdxs = []int32{
+	1, // 0: config.MockConfig.pairs:type_name -> config.ConfigPair
+	1, // [1:1] is the sub-list for method output_type
+	1, // [1:1] is the sub-list for method input_type
+	1, // [1:1] is the sub-list for extension type_name
+	1, // [1:1] is the sub-list for extension extendee
+	0, // [0:1] is the sub-list for field type_name
+}
+
+func init() { file_pkg_test_config_mock_config_proto_init() }
+func file_pkg_test_config_mock_config_proto_init() {
+	if File_pkg_test_config_mock_config_proto != nil {
+		return
+	}
+	if !protoimpl.UnsafeEnabled {
+		file_pkg_test_config_mock_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*MockConfig); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
 			}
 		}
-		wireType := int(wire & 0x7)
-		switch wireType {
-		case 0:
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return 0, ErrIntOverflowMockConfig
-				}
-				if iNdEx >= l {
-					return 0, io.ErrUnexpectedEOF
-				}
-				iNdEx++
-				if dAtA[iNdEx-1] < 0x80 {
-					break
-				}
-			}
-			return iNdEx, nil
-		case 1:
-			iNdEx += 8
-			return iNdEx, nil
-		case 2:
-			var length int
-			for shift := uint(0); ; shift += 7 {
-				if shift >= 64 {
-					return 0, ErrIntOverflowMockConfig
-				}
-				if iNdEx >= l {
-					return 0, io.ErrUnexpectedEOF
-				}
-				b := dAtA[iNdEx]
-				iNdEx++
-				length |= (int(b) & 0x7F) << shift
-				if b < 0x80 {
-					break
-				}
-			}
-			iNdEx += length
-			if length < 0 {
-				return 0, ErrInvalidLengthMockConfig
-			}
-			return iNdEx, nil
-		case 3:
-			for {
-				var innerWire uint64
-				var start int = iNdEx
-				for shift := uint(0); ; shift += 7 {
-					if shift >= 64 {
-						return 0, ErrIntOverflowMockConfig
-					}
-					if iNdEx >= l {
-						return 0, io.ErrUnexpectedEOF
-					}
-					b := dAtA[iNdEx]
-					iNdEx++
-					innerWire |= (uint64(b) & 0x7F) << shift
-					if b < 0x80 {
-						break
-					}
-				}
-				innerWireType := int(innerWire & 0x7)
-				if innerWireType == 4 {
-					break
-				}
-				next, err := skipMockConfig(dAtA[start:])
-				if err != nil {
-					return 0, err
-				}
-				iNdEx = start + next
+		file_pkg_test_config_mock_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ConfigPair); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
 			}
-			return iNdEx, nil
-		case 4:
-			return iNdEx, nil
-		case 5:
-			iNdEx += 4
-			return iNdEx, nil
-		default:
-			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
 		}
 	}
-	panic("unreachable")
-}
-
-var (
-	ErrInvalidLengthMockConfig = fmt.Errorf("proto: negative length found during unmarshaling")
-	ErrIntOverflowMockConfig   = fmt.Errorf("proto: integer overflow")
-)
-
-func init() { proto.RegisterFile("mock_config.proto", fileDescriptorMockConfig) }
-
-var fileDescriptorMockConfig = []byte{
-	// 147 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0xcd, 0x4f, 0xce,
-	0x8e, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29,
-	0x49, 0x2d, 0x2e, 0x51, 0x72, 0xe3, 0xe2, 0xf2, 0xcd, 0x4f, 0xce, 0x76, 0x06, 0xcb, 0x08, 0x09,
-	0x70, 0x31, 0x67, 0xa7, 0x56, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x42, 0x6a,
-	0x5c, 0xac, 0x05, 0x89, 0x99, 0x45, 0xc5, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x02, 0x7a,
-	0x20, 0x5d, 0x7a, 0x10, 0xe5, 0x01, 0x89, 0x99, 0x45, 0x41, 0x10, 0x69, 0x25, 0x13, 0x2e, 0x2e,
-	0x84, 0x20, 0x16, 0x73, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x98, 0xc0, 0x62,
-	0x10, 0x8e, 0x13, 0xcf, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7,
-	0x98, 0xc4, 0x06, 0x76, 0x98, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x66, 0x03, 0xec, 0xad,
-	0x00, 0x00, 0x00,
+	type x struct{}
+	out := protoimpl.TypeBuilder{
+		File: protoimpl.DescBuilder{
+			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
+			RawDescriptor: file_pkg_test_config_mock_config_proto_rawDesc,
+			NumEnums:      0,
+			NumMessages:   2,
+			NumExtensions: 0,
+			NumServices:   0,
+		},
+		GoTypes:           file_pkg_test_config_mock_config_proto_goTypes,
+		DependencyIndexes: file_pkg_test_config_mock_config_proto_depIdxs,
+		MessageInfos:      file_pkg_test_config_mock_config_proto_msgTypes,
+	}.Build()
+	File_pkg_test_config_mock_config_proto = out.File
+	file_pkg_test_config_mock_config_proto_rawDesc = nil
+	file_pkg_test_config_mock_config_proto_goTypes = nil
+	file_pkg_test_config_mock_config_proto_depIdxs = nil
 }
diff --git a/pkg/test/config/mock_config.proto b/pkg/test/config/mock_config.proto
index baf9def050..ce53bd876e 100644
--- a/pkg/test/config/mock_config.proto
+++ b/pkg/test/config/mock_config.proto
@@ -14,11 +14,14 @@
 
 syntax = "proto3";
 
+
 // Basic config resource consisting
 // of a set of key-value pairs
 
 package config;
 
+option go_package = ".;config";
+
 message MockConfig {
   string key = 1;
   repeated ConfigPair pairs = 2;
diff --git a/pkg/test/framework/components/echo/kube/deployment.go b/pkg/test/framework/components/echo/kube/deployment.go
index 4a0045d104..ce87f83c29 100644
--- a/pkg/test/framework/components/echo/kube/deployment.go
+++ b/pkg/test/framework/components/echo/kube/deployment.go
@@ -46,7 +46,7 @@
 	"istio.io/istio/pkg/test/shell"
 	"istio.io/istio/pkg/test/util/retry"
 	"istio.io/istio/pkg/test/util/tmpl"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 	"istio.io/pkg/log"
 )
 
@@ -872,10 +872,10 @@ func patchProxyConfigFile(file string, overrides string) error {
 	}
 	overrideYAML := "defaultConfig:\n"
 	overrideYAML += istio.Indent(overrides, "  ")
-	if err := gogoprotomarshal.ApplyYAML(overrideYAML, config.DefaultConfig); err != nil {
+	if err := protomarshal.ApplyYAML(overrideYAML, config.DefaultConfig); err != nil {
 		return err
 	}
-	outYAML, err := gogoprotomarshal.ToYAML(config)
+	outYAML, err := protomarshal.ToYAML(config)
 	if err != nil {
 		return err
 	}
@@ -888,7 +888,7 @@ func readMeshConfig(file string) (*meshconfig.MeshConfig, error) {
 		return nil, err
 	}
 	config := &meshconfig.MeshConfig{}
-	if err := gogoprotomarshal.ApplyYAML(string(baseYAML), config); err != nil {
+	if err := protomarshal.ApplyYAML(string(baseYAML), config); err != nil {
 		return nil, err
 	}
 	return config, nil
diff --git a/pkg/test/framework/components/istio/operator.go b/pkg/test/framework/components/istio/operator.go
index 358f2d5331..5aab3969db 100644
--- a/pkg/test/framework/components/istio/operator.go
+++ b/pkg/test/framework/components/istio/operator.go
@@ -33,6 +33,7 @@
 	"k8s.io/apimachinery/pkg/api/errors"
 	kubeApiMeta "k8s.io/apimachinery/pkg/apis/meta/v1"
 	"k8s.io/apimachinery/pkg/types"
+	"sigs.k8s.io/yaml"
 
 	"istio.io/api/label"
 	opAPI "istio.io/api/operator/v1alpha1"
@@ -53,7 +54,6 @@
 	"istio.io/istio/pkg/test/util/file"
 	"istio.io/istio/pkg/test/util/retry"
 	"istio.io/istio/pkg/test/util/yml"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
 	"istio.io/pkg/log"
 )
 
@@ -486,37 +486,21 @@ func initIOPFile(s *resource.Settings, cfg Config, iopFile string, valuesYaml st
 	operatorYaml := cfg.IstioOperatorConfigYAML(s, valuesYaml)
 
 	operatorCfg := &pkgAPI.IstioOperator{}
-	if err := gogoprotomarshal.ApplyYAML(operatorYaml, operatorCfg); err != nil {
+	if err := yaml.Unmarshal([]byte(operatorYaml), operatorCfg); err != nil {
 		return nil, fmt.Errorf("failed to unmarshal base iop: %v, %v", err, operatorYaml)
 	}
-	values := &pkgAPI.Values{}
-	if operatorCfg.Spec.Values != nil {
-		valuesJSON, err := gogoprotomarshal.ToJSON(operatorCfg.Spec.Values)
-		if err != nil {
-			return nil, fmt.Errorf("failed to marshal base values: %v", err)
-		}
-		if err := gogoprotomarshal.ApplyJSON(valuesJSON, values); err != nil {
-			return nil, fmt.Errorf("failed to unmarshal base values: %v", err)
-		}
-	}
-
-	valuesMap, err := gogoprotomarshal.ToStruct(values)
-	if err != nil {
-		return nil, fmt.Errorf("failed to convert values to json map: %v", err)
-	}
-	operatorCfg.Spec.Values = valuesMap
 
 	// marshaling entire operatorCfg causes panic because of *time.Time in ObjectMeta
-	out, err := gogoprotomarshal.ToYAML(operatorCfg.Spec)
+	outb, err := yaml.Marshal(operatorCfg.Spec)
 	if err != nil {
 		return nil, fmt.Errorf("failed marshaling iop spec: %v", err)
 	}
 
-	out = fmt.Sprintf(`
+	out := fmt.Sprintf(`
 apiVersion: install.istio.io/v1alpha1
 kind: IstioOperator
 spec:
-%s`, Indent(out, "  "))
+%s`, Indent(string(outb), "  "))
 
 	if err := os.WriteFile(iopFile, []byte(out), os.ModePerm); err != nil {
 		return nil, fmt.Errorf("failed to write iop: %v", err)
diff --git a/pkg/test/framework/components/istio/util.go b/pkg/test/framework/components/istio/util.go
index 3917d85c88..fa832aa5ce 100644
--- a/pkg/test/framework/components/istio/util.go
+++ b/pkg/test/framework/components/istio/util.go
@@ -32,7 +32,7 @@
 	"istio.io/istio/pkg/test/framework/resource"
 	"istio.io/istio/pkg/test/scopes"
 	"istio.io/istio/pkg/test/util/retry"
-	"istio.io/istio/pkg/util/gogoprotomarshal"
+	"istio.io/istio/pkg/util/protomarshal"
 )
 
 const (
@@ -201,13 +201,13 @@ func PatchMeshConfig(t framework.TestContext, ns string, clusters cluster.Cluste
 			origCfg[c.Name()] = cm.Data["mesh"]
 			mu.Unlock()
 			mc := &meshconfig.MeshConfig{}
-			if err := gogoprotomarshal.ApplyYAML(mcYaml, mc); err != nil {
+			if err := protomarshal.ApplyYAML(mcYaml, mc); err != nil {
 				return err
 			}
-			if err := gogoprotomarshal.ApplyYAML(patch, mc); err != nil {
+			if err := protomarshal.ApplyYAML(patch, mc); err != nil {
 				return err
 			}
-			cm.Data["mesh"], err = gogoprotomarshal.ToYAML(mc)
+			cm.Data["mesh"], err = protomarshal.ToYAML(mc)
 			if err != nil {
 				return err
 			}
diff --git a/pkg/util/gogo/conversion.go b/pkg/util/gogo/conversion.go
deleted file mode 100644
index 3a87445e7a..0000000000
--- a/pkg/util/gogo/conversion.go
+++ /dev/null
@@ -1,78 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package gogo
-
-import (
-	"fmt"
-
-	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
-	any "google.golang.org/protobuf/types/known/anypb"
-	"google.golang.org/protobuf/types/known/durationpb"
-	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
-
-	iproto "istio.io/istio/pkg/proto"
-	"istio.io/pkg/log"
-)
-
-// MessageToAnyWithError converts from proto message to proto Any
-func MessageToAnyWithError(msg proto.Message) (*any.Any, error) {
-	b := proto.NewBuffer(nil)
-	err := b.Marshal(msg)
-	if err != nil {
-		return nil, err
-	}
-	return &any.Any{
-		TypeUrl: "type.googleapis.com/" + proto.MessageName(msg),
-		Value:   b.Bytes(),
-	}, nil
-}
-
-// MessageToAny converts from proto message to proto Any
-func MessageToAny(msg proto.Message) *any.Any {
-	out, err := MessageToAnyWithError(msg)
-	if err != nil {
-		log.Error(fmt.Sprintf("error marshaling Any %s: %v", msg.String(), err))
-		return nil
-	}
-	return out
-}
-
-func ConvertAny(golang *any.Any) *types.Any {
-	if golang == nil {
-		return nil
-	}
-	return &types.Any{Value: golang.Value, TypeUrl: golang.TypeUrl}
-}
-
-func BoolToProtoBool(gogo *types.BoolValue) *wrappers.BoolValue {
-	if gogo == nil {
-		return nil
-	}
-	if gogo.Value {
-		return iproto.BoolTrue
-	}
-	return iproto.BoolFalse
-}
-
-func DurationToProtoDuration(gogo *types.Duration) *durationpb.Duration {
-	if gogo == nil {
-		return nil
-	}
-	return &durationpb.Duration{
-		Seconds: gogo.Seconds,
-		Nanos:   gogo.Nanos,
-	}
-}
diff --git a/pkg/util/gogo/conversion_test.go b/pkg/util/gogo/conversion_test.go
deleted file mode 100644
index 957b287f1a..0000000000
--- a/pkg/util/gogo/conversion_test.go
+++ /dev/null
@@ -1,95 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package gogo
-
-import (
-	"reflect"
-	"testing"
-
-	"github.com/gogo/protobuf/types"
-	"google.golang.org/protobuf/types/known/durationpb"
-	wrappers "google.golang.org/protobuf/types/known/wrapperspb"
-
-	"istio.io/istio/pkg/proto"
-)
-
-func TestBoolToProtoBool(t *testing.T) {
-	tests := []struct {
-		desc          string
-		gogo          *types.BoolValue
-		expectedValue *wrappers.BoolValue
-	}{
-		{
-			desc:          "BoolToProtoBool with nil gogo",
-			gogo:          nil,
-			expectedValue: nil,
-		},
-		{
-			desc: "BoolToProtoBool with true gogo.Value",
-			gogo: &types.BoolValue{
-				Value: true,
-			},
-			expectedValue: proto.BoolTrue,
-		},
-		{
-			desc: "BoolToProtoBool with false gogo.Value",
-			gogo: &types.BoolValue{
-				Value: false,
-			},
-			expectedValue: proto.BoolFalse,
-		},
-	}
-
-	for _, tt := range tests {
-		t.Run(tt.desc, func(t *testing.T) {
-			if got := BoolToProtoBool(tt.gogo); got != tt.expectedValue {
-				t.Errorf("%s: got: %v, expected: %v", tt.desc, got, tt.expectedValue)
-			}
-		})
-	}
-}
-
-func TestDurationToProtoDuration(t *testing.T) {
-	tests := []struct {
-		desc          string
-		gogo          *types.Duration
-		expectedValue *durationpb.Duration
-	}{
-		{
-			desc:          "DurationToProtoDuration with nil gogo",
-			gogo:          nil,
-			expectedValue: nil,
-		},
-		{
-			desc: "DurationToProtoDuration with valid Seconds and Nanos",
-			gogo: &types.Duration{
-				Seconds: 1000000,
-				Nanos:   100000,
-			},
-			expectedValue: &durationpb.Duration{
-				Seconds: 1000000,
-				Nanos:   100000,
-			},
-		},
-	}
-
-	for _, tt := range tests {
-		t.Run(tt.desc, func(t *testing.T) {
-			if got := DurationToProtoDuration(tt.gogo); !reflect.DeepEqual(got, tt.expectedValue) {
-				t.Errorf("%s: got: %v, expected: %v", tt.desc, got, tt.expectedValue)
-			}
-		})
-	}
-}
diff --git a/pkg/util/gogoprotomarshal/protomarshal.go b/pkg/util/gogoprotomarshal/protomarshal.go
index 7b27e9da4b..689da662f8 100644
--- a/pkg/util/gogoprotomarshal/protomarshal.go
+++ b/pkg/util/gogoprotomarshal/protomarshal.go
@@ -15,79 +15,14 @@
 package gogoprotomarshal
 
 import (
-	"encoding/json"
-	"errors"
 	"strings"
 
 	"github.com/gogo/protobuf/jsonpb"
 	"github.com/gogo/protobuf/proto"
-	"github.com/gogo/protobuf/types"
-	"sigs.k8s.io/yaml"
 
 	"istio.io/pkg/log"
 )
 
-// ToJSON marshals a proto to canonical JSON
-func ToJSON(msg proto.Message) (string, error) {
-	return ToJSONWithIndent(msg, "")
-}
-
-// ToJSONWithIndent marshals a proto to canonical JSON with pretty printed string
-func ToJSONWithIndent(msg proto.Message, indent string) (string, error) {
-	if msg == nil {
-		return "", errors.New("unexpected nil message")
-	}
-
-	// Marshal from proto to json bytes
-	m := jsonpb.Marshaler{Indent: indent}
-	return m.MarshalToString(msg)
-}
-
-// ToYAML marshals a proto to canonical YAML
-func ToYAML(msg proto.Message) (string, error) {
-	js, err := ToJSON(msg)
-	if err != nil {
-		return "", err
-	}
-	yml, err := yaml.JSONToYAML([]byte(js))
-	return string(yml), err
-}
-
-// ToJSONMap converts a proto message to a generic map using canonical JSON encoding
-// JSON encoding is specified here: https://developers.google.com/protocol-buffers/docs/proto3#json
-func ToJSONMap(msg proto.Message) (map[string]interface{}, error) {
-	js, err := ToJSON(msg)
-	if err != nil {
-		return nil, err
-	}
-
-	// Unmarshal from json bytes to go map
-	var data map[string]interface{}
-	err = json.Unmarshal([]byte(js), &data)
-	if err != nil {
-		return nil, err
-	}
-
-	return data, nil
-}
-
-// ToStruct converts a proto message to a generic struct
-func ToStruct(msg proto.Message) (*types.Struct, error) {
-	js, err := ToJSON(msg)
-	if err != nil {
-		return nil, err
-	}
-
-	// Unmarshal from json bytes to go map
-	data := &types.Struct{}
-	err = ApplyJSONStrict(js, data)
-	if err != nil {
-		return nil, err
-	}
-
-	return data, nil
-}
-
 // ApplyJSON unmarshals a JSON string into a proto message. Unknown fields are allowed
 func ApplyJSON(js string, pb proto.Message) error {
 	reader := strings.NewReader(js)
@@ -107,23 +42,3 @@ func ApplyJSONStrict(js string, pb proto.Message) error {
 	m := jsonpb.Unmarshaler{}
 	return m.Unmarshal(reader, pb)
 }
-
-// ApplyYAML unmarshals a YAML string into a proto message.
-// Unknown fields are allowed.
-func ApplyYAML(yml string, pb proto.Message) error {
-	js, err := yaml.YAMLToJSON([]byte(yml))
-	if err != nil {
-		return err
-	}
-	return ApplyJSON(string(js), pb)
-}
-
-// ApplyYAMLStrict unmarshals a YAML string into a proto message.
-// Unknown fields are not allowed.
-func ApplyYAMLStrict(yml string, pb proto.Message) error {
-	js, err := yaml.YAMLToJSON([]byte(yml))
-	if err != nil {
-		return err
-	}
-	return ApplyJSONStrict(string(js), pb)
-}
diff --git a/pkg/util/protomarshal/protomarshal.go b/pkg/util/protomarshal/protomarshal.go
index 95edfd2986..f4fc95d913 100644
--- a/pkg/util/protomarshal/protomarshal.go
+++ b/pkg/util/protomarshal/protomarshal.go
@@ -28,6 +28,7 @@
 	"github.com/golang/protobuf/jsonpb"
 	legacyproto "github.com/golang/protobuf/proto"
 	"google.golang.org/protobuf/proto"
+	"google.golang.org/protobuf/reflect/protoreflect"
 	"sigs.k8s.io/yaml"
 
 	"istio.io/pkg/log"
@@ -153,3 +154,26 @@ func ApplyYAML(yml string, pb proto.Message) error {
 	}
 	return ApplyJSON(string(js), pb)
 }
+
+// ApplyYAMLStrict unmarshals a YAML string into a proto message.
+// Unknown fields are not allowed.
+func ApplyYAMLStrict(yml string, pb proto.Message) error {
+	js, err := yaml.YAMLToJSON([]byte(yml))
+	if err != nil {
+		return err
+	}
+	return ApplyJSONStrict(string(js), pb)
+}
+
+func ShallowCopy(dst, src proto.Message) {
+	dm := dst.ProtoReflect()
+	sm := src.ProtoReflect()
+	if dm.Type() != sm.Type() {
+		panic("mismatching type")
+	}
+	proto.Reset(dst)
+	sm.Range(func(fd protoreflect.FieldDescriptor, v protoreflect.Value) bool {
+		dm.Set(fd, v)
+		return true
+	})
+}
diff --git a/prow/release-commit.sh b/prow/release-commit.sh
index e7fd8b81f1..137f61f12b 100755
--- a/prow/release-commit.sh
+++ b/prow/release-commit.sh
@@ -32,7 +32,7 @@ DOCKER_HUB=${DOCKER_HUB:-gcr.io/istio-testing}
 GCS_BUCKET=${GCS_BUCKET:-istio-build/dev}
 
 # Use a pinned version in case breaking changes are needed
-BUILDER_SHA=1c9e6f499bb4040efb907a40b4067ce956665653
+BUILDER_SHA=2d930dc6ef98e9ce45a8723e3f5fb2f76dfd9ebc
 
 # Reference to the next minor version of Istio
 # This will create a version like 1.4-alpha.sha
@@ -66,9 +66,6 @@ ${DEPENDENCIES:-$(cat <<EOD
   client-go:
     git: https://github.com/istio/client-go
     branch: master
-  gogo-genproto:
-    git: https://github.com/istio/gogo-genproto
-    branch: master
   test-infra:
     git: https://github.com/istio/test-infra
     branch: master
diff --git a/security/pkg/nodeagent/caclient/providers/citadel/client.go b/security/pkg/nodeagent/caclient/providers/citadel/client.go
index 909a4969c0..3b6cf54300 100644
--- a/security/pkg/nodeagent/caclient/providers/citadel/client.go
+++ b/security/pkg/nodeagent/caclient/providers/citadel/client.go
@@ -25,12 +25,12 @@
 	"strings"
 	"time"
 
-	"github.com/gogo/protobuf/types"
 	"go.uber.org/atomic"
 	"google.golang.org/grpc"
 	"google.golang.org/grpc/credentials"
 	"google.golang.org/grpc/credentials/insecure"
 	"google.golang.org/grpc/metadata"
+	"google.golang.org/protobuf/types/known/structpb"
 
 	pb "istio.io/api/security/v1alpha1"
 	"istio.io/istio/pkg/security"
@@ -87,10 +87,10 @@ func (c *CitadelClient) Close() {
 
 // CSRSign calls Citadel to sign a CSR.
 func (c *CitadelClient) CSRSign(csrPEM []byte, certValidTTLInSec int64) ([]string, error) {
-	crMetaStruct := &types.Struct{
-		Fields: map[string]*types.Value{
+	crMetaStruct := &structpb.Struct{
+		Fields: map[string]*structpb.Value{
 			security.CertSigner: {
-				Kind: &types.Value_StringValue{StringValue: c.opts.CertSigner},
+				Kind: &structpb.Value_StringValue{StringValue: c.opts.CertSigner},
 			},
 		},
 	}
diff --git a/security/pkg/nodeagent/caclient/providers/citadel/client_test.go b/security/pkg/nodeagent/caclient/providers/citadel/client_test.go
index d8c172ebb5..60b5d59851 100644
--- a/security/pkg/nodeagent/caclient/providers/citadel/client_test.go
+++ b/security/pkg/nodeagent/caclient/providers/citadel/client_test.go
@@ -59,6 +59,7 @@
 )
 
 type mockCAServer struct {
+	pb.UnimplementedIstioCertificateServiceServer
 	Certs         []string
 	Authenticator *security.FakeAuthenticator
 	Err           error
@@ -290,6 +291,7 @@ func TestCitadelClient(t *testing.T) {
 }
 
 type mockTokenCAServer struct {
+	pb.UnimplementedIstioCertificateServiceServer
 	Certs []string
 }
 
diff --git a/security/pkg/nodeagent/test/mock/caserver.go b/security/pkg/nodeagent/test/mock/caserver.go
index e98982ebc8..10bf8c9132 100644
--- a/security/pkg/nodeagent/test/mock/caserver.go
+++ b/security/pkg/nodeagent/test/mock/caserver.go
@@ -40,6 +40,7 @@
 
 // CAServer is a mock CA server.
 type CAServer struct {
+	pb.UnimplementedIstioCertificateServiceServer
 	URL            string
 	GRPCServer     *grpc.Server
 	Authenticators []security.Authenticator
diff --git a/security/pkg/server/ca/server.go b/security/pkg/server/ca/server.go
index dd9189b383..f199081ad4 100644
--- a/security/pkg/server/ca/server.go
+++ b/security/pkg/server/ca/server.go
@@ -47,6 +47,7 @@ type CertificateAuthority interface {
 // Server implements IstioCAService and IstioCertificateService and provides the services on the
 // specified port.
 type Server struct {
+	pb.UnimplementedIstioCertificateServiceServer
 	monitoring     monitoringMetrics
 	Authenticators []security.Authenticator
 	ca             CertificateAuthority
diff --git a/tests/integration/operator/switch_cr_test.go b/tests/integration/operator/switch_cr_test.go
index 12a24f64af..22cba1d159 100644
--- a/tests/integration/operator/switch_cr_test.go
+++ b/tests/integration/operator/switch_cr_test.go
@@ -27,7 +27,7 @@
 	"testing"
 	"time"
 
-	gogojsonpb "github.com/gogo/protobuf/jsonpb"
+	"github.com/golang/protobuf/jsonpb"
 	"github.com/hashicorp/go-multierror"
 	kubeApiCore "k8s.io/api/core/v1"
 	kubeApiMeta "k8s.io/apimachinery/pkg/apis/meta/v1"
@@ -207,7 +207,7 @@ func checkInstallStatus(cs istioKube.ExtendedClient, revision string) error {
 			return fmt.Errorf("failed to marshal istioOperator status: %v", err)
 		}
 		status := &api.InstallStatus{}
-		jspb := gogojsonpb.Unmarshaler{AllowUnknownFields: true}
+		jspb := jsonpb.Unmarshaler{AllowUnknownFields: true}
 		if err := jspb.Unmarshal(bytes.NewReader(iopStatusString), status); err != nil {
 			return fmt.Errorf("failed to unmarshal istioOperator status: %v", err)
 		}
diff --git a/tests/integration/pilot/analysis/analysis_test.go b/tests/integration/pilot/analysis/analysis_test.go
index 0d3242ed7a..604abf0167 100644
--- a/tests/integration/pilot/analysis/analysis_test.go
+++ b/tests/integration/pilot/analysis/analysis_test.go
@@ -20,10 +20,11 @@
 import (
 	"context"
 	"fmt"
-	"reflect"
 	"testing"
 	"time"
 
+	"github.com/google/go-cmp/cmp"
+	"google.golang.org/protobuf/testing/protocmp"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 
 	"istio.io/api/meta/v1alpha1"
@@ -232,7 +233,7 @@ func expectVirtualServiceStatus(t framework.TestContext, ns namespace.Instance,
 		t.Fatalf("unexpected test failure: can't get virtualservice: %v", err)
 	}
 
-	status := x.Status
+	status := &x.Status
 
 	if hasError {
 		if len(status.ValidationMessages) < 1 {
@@ -289,7 +290,7 @@ func expectWorkloadEntryStatus(t framework.TestContext, ns namespace.Instance, e
 		}
 	}
 
-	if !reflect.DeepEqual(statusConds, expectedConds) {
+	if !cmp.Equal(statusConds, expectedConds, protocmp.Transform()) {
 		return fmt.Errorf("expected conditions %v got %v", expectedConds, statusConds)
 	}
 	return nil
diff --git a/tests/integration/pilot/vm_test.go b/tests/integration/pilot/vm_test.go
index f95e2f5f54..7bd00deb4e 100644
--- a/tests/integration/pilot/vm_test.go
+++ b/tests/integration/pilot/vm_test.go
@@ -200,7 +200,7 @@ func scaleDeploymentOrFail(t framework.TestContext, name, namespace string, scal
 	}
 }
 
-func getWorkloadEntriesOrFail(t framework.TestContext, vm echo.Instance) []v1alpha3.WorkloadEntry {
+func getWorkloadEntriesOrFail(t framework.TestContext, vm echo.Instance) []*v1alpha3.WorkloadEntry {
 	res, err := t.Clusters().Default().Istio().NetworkingV1alpha3().
 		WorkloadEntries(vm.Config().Namespace.Name()).
 		List(context.TODO(), metav1.ListOptions{LabelSelector: "app=" + vm.Config().Service})
diff --git a/tools/proto/buf.gogo.yaml b/tools/proto/buf.gogo.yaml
deleted file mode 100644
index 5c13c7009c..0000000000
--- a/tools/proto/buf.gogo.yaml
+++ /dev/null
@@ -1,5 +0,0 @@
-version: v1beta1
-plugins:
-- name: gogofast
-  out: .
-  opt: plugins=grpc,paths=source_relative,Mgogoproto/gogo.proto=github.com/gogo/protobuf/gogoproto,Mgoogle/protobuf/any.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/descriptor.proto=github.com/gogo/protobuf/protoc-gen-gogo/descriptor,Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types,Mgoogle/rpc/status.proto=istio.io/gogo-genproto/googleapis/google/rpc,Mgoogle/rpc/code.proto=istio.io/gogo-genproto/googleapis/google/rpc,Mgoogle/rpc/error_details.proto=istio.io/gogo-genproto/googleapis/google/rpc,Mgoogle/api/field_behavior.proto=istio.io/gogo-genproto/googleapis/google/api
diff --git a/tools/proto/proto.mk b/tools/proto/proto.mk
index 7942f0bd54..c1dad73066 100644
--- a/tools/proto/proto.mk
+++ b/tools/proto/proto.mk
@@ -17,7 +17,7 @@
 proto: operator-proto dns-proto echo-proto
 
 operator-proto:
-	buf generate --config tools/proto/buf.yaml --path operator/pkg/ --output operator  --template tools/proto/buf.gogo.yaml
+	buf generate --config tools/proto/buf.yaml --path operator/pkg/ --output operator  --template tools/proto/buf.golang.yaml
 
 dns-proto:
 	buf generate --config tools/proto/buf.yaml --path pkg/dns/ --output pkg  --template tools/proto/buf.golang.yaml
-- 
2.35.3

