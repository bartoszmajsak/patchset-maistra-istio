From 4fc9e70cddaf350151f630354871a8bd90a18e0c Mon Sep 17 00:00:00 2001
From: Nathan Mittler <nmittler@gmail.com>
Date: Tue, 15 Feb 2022 14:55:47 -0800
Subject: [TF] Prevent concurrent istioctl invoke (#37325)

---
 pkg/test/framework/components/istioctl/kube.go | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/pkg/test/framework/components/istioctl/kube.go b/pkg/test/framework/components/istioctl/kube.go
index 4094115ef2..9ca6e373fb 100644
--- a/pkg/test/framework/components/istioctl/kube.go
+++ b/pkg/test/framework/components/istioctl/kube.go
@@ -18,6 +18,8 @@
 	"bytes"
 	"fmt"
 	"strings"
+	"sync"
+	"time"
 
 	"istio.io/istio/istioctl/cmd"
 	"istio.io/istio/pilot/pkg/config/kube/crd"
@@ -26,6 +28,10 @@
 	"istio.io/istio/pkg/test/scopes"
 )
 
+// We cannot invoke the istioctl library concurrently due to the number of global variables
+// https://github.com/istio/istio/issues/37324
+var invokeMutex sync.Mutex
+
 type kubeComponent struct {
 	config     Config
 	kubeconfig string
@@ -79,10 +85,18 @@ func (c *kubeComponent) Invoke(args []string) (string, string, error) {
 
 	var out bytes.Buffer
 	var err bytes.Buffer
+
+	start := time.Now()
+
+	invokeMutex.Lock()
 	rootCmd := cmd.GetRootCmd(cmdArgs)
 	rootCmd.SetOut(&out)
 	rootCmd.SetErr(&err)
 	fErr := rootCmd.Execute()
+	invokeMutex.Unlock()
+
+	scopes.Framework.Infof("istioctl (%v): completed after %.4fs", args, time.Since(start).Seconds())
+
 	if err.String() != "" {
 		scopes.Framework.Infof("istioctl error: %v", strings.TrimSpace(err.String()))
 	}
-- 
2.35.3

