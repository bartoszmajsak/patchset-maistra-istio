From 1f9a5b86d23acbdbe7bbd91773c013dbdfc651c0 Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Fri, 18 Mar 2022 12:53:05 -0700
Subject: operator: handle tpath+protobuf consistently (#38007)

* operator: handle tpath+protobuf consistently

* fmt
---
 .../istio/v1alpha1/validation/validation.go    | 18 ++----------------
 operator/pkg/tpath/struct.go                   | 11 +++++++++++
 2 files changed, 13 insertions(+), 16 deletions(-)

diff --git a/operator/pkg/apis/istio/v1alpha1/validation/validation.go b/operator/pkg/apis/istio/v1alpha1/validation/validation.go
index 1af29930c7..91f9d3ce0d 100644
--- a/operator/pkg/apis/istio/v1alpha1/validation/validation.go
+++ b/operator/pkg/apis/istio/v1alpha1/validation/validation.go
@@ -138,15 +138,7 @@ func checkDeprecatedSettings(iop *v1alpha1.IstioOperatorSpec) (util.Errors, []st
 	}
 
 	for _, d := range warningSettings {
-		// Grafana is a special case where its just an interface{}. A better fix would probably be defining
-		// the types, but since this is deprecated this is easier
-		var v interface{}
-		var f bool
-		if s := strings.SplitN(d.old, ".", 2); s[0] == "Values" {
-			v, f, _ = tpath.GetFromStructPath(valuesv1alpha1.AsMap(iop.GetValues()), s[1])
-		} else {
-			v, f, _ = tpath.GetFromStructPath(iop, d.old)
-		}
+		v, f, _ := tpath.GetFromStructPath(iop, d.old)
 		if f {
 			switch t := v.(type) {
 			// need to do conversion for bool value defined in IstioOperator component spec.
@@ -159,13 +151,7 @@ func checkDeprecatedSettings(iop *v1alpha1.IstioOperatorSpec) (util.Errors, []st
 		}
 	}
 	for _, d := range failHardSettings {
-		var v interface{}
-		var f bool
-		if s := strings.SplitN(d.old, ".", 2); s[0] == "Values" {
-			v, f, _ = tpath.GetFromStructPath(valuesv1alpha1.AsMap(iop.GetValues()), s[1])
-		} else {
-			v, f, _ = tpath.GetFromStructPath(iop, d.old)
-		}
+		v, f, _ := tpath.GetFromStructPath(iop, d.old)
 		if f {
 			switch t := v.(type) {
 			// need to do conversion for bool value defined in IstioOperator component spec.
diff --git a/operator/pkg/tpath/struct.go b/operator/pkg/tpath/struct.go
index 7ad2f2fd17..d6be1e9fd8 100644
--- a/operator/pkg/tpath/struct.go
+++ b/operator/pkg/tpath/struct.go
@@ -22,6 +22,9 @@
 	"reflect"
 	"strconv"
 
+	"github.com/gogo/protobuf/types"
+
+	"istio.io/istio/operator/pkg/apis/istio/v1alpha1"
 	"istio.io/istio/operator/pkg/util"
 )
 
@@ -38,6 +41,14 @@ func getFromStructPath(node interface{}, path util.Path) (interface{}, bool, err
 		scope.Debugf("getFromStructPath returning node(%T)%v", node, node)
 		return node, !util.IsValueNil(node), nil
 	}
+	// For protobuf types, switch them out with standard types; otherwise we will traverse protobuf internals rather
+	// than the standard representation
+	if v, ok := node.(*types.Struct); ok {
+		node = v1alpha1.AsMap(v)
+	}
+	if v, ok := node.(*types.Value); ok {
+		node = v1alpha1.AsInterface(v)
+	}
 	val := reflect.ValueOf(node)
 	kind := reflect.TypeOf(node).Kind()
 	var structElems reflect.Value
-- 
2.35.3

