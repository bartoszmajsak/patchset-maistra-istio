From d4f0c5e4deb67ced914f84b8cfb4f76644d0c406 Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Fri, 5 Nov 2021 04:03:12 -0700
Subject: Use v6 DNS resolution when we are on a ipv6 *only* proxy (#35850)

Otherwise we cannot use DNS resolution at all.

probably we should use `V4_PREFERRED` if it supports both but I was
pretty concerned by past attempts:
* https://github.com/istio/istio/pull/27296
* https://github.com/istio/istio/pull/26409
* https://github.com/istio/istio/pull/27306

(cherry picked from commit cc5b630b2b573f50b4b28d881fd3d9eb0a96471e)
---
 pilot/pkg/networking/core/v1alpha3/cluster.go         | 1 +
 pilot/pkg/networking/core/v1alpha3/cluster_builder.go | 9 +++++++--
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/pilot/pkg/networking/core/v1alpha3/cluster.go b/pilot/pkg/networking/core/v1alpha3/cluster.go
index 2f1aa53f6e..ebeb22743e 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster.go
@@ -212,6 +212,7 @@ func buildClusterKey(service *model.Service, port *model.Port, cb *ClusterBuilde
 		networkView:     cb.networkView,
 		http2:           port.Protocol.IsHTTP2(),
 		downstreamAuto:  cb.sidecarProxy() && util.IsProtocolSniffingEnabledForOutboundPort(port),
+		supportsIPv4:    cb.supportsIPv4,
 		service:         service,
 		destinationRule: cb.req.Push.DestinationRule(proxy, service),
 		envoyFilterKeys: efKeys,
diff --git a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
index a7f32f7cf6..b460ec02fb 100644
--- a/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
+++ b/pilot/pkg/networking/core/v1alpha3/cluster_builder.go
@@ -352,7 +352,11 @@ func (cb *ClusterBuilder) buildDefaultCluster(name string, discoveryType cluster
 	ec := NewMutableCluster(c)
 	switch discoveryType {
 	case cluster.Cluster_STRICT_DNS, cluster.Cluster_LOGICAL_DNS:
-		c.DnsLookupFamily = cluster.Cluster_V4_ONLY
+		if cb.supportsIPv4 {
+			c.DnsLookupFamily = cluster.Cluster_V4_ONLY
+		} else {
+			c.DnsLookupFamily = cluster.Cluster_V6_ONLY
+		}
 		dnsRate := gogo.DurationToProtoDuration(cb.req.Push.Mesh.DnsRefreshRate)
 		c.DnsRefreshRate = dnsRate
 		c.RespectDnsTtl = true
@@ -412,6 +416,7 @@ type clusterCache struct {
 	// service attributes
 	http2          bool // http2 identifies if the cluster is for an http2 service
 	downstreamAuto bool
+	supportsIPv4   bool
 
 	// Dependent configs
 	service         *model.Service
@@ -425,7 +430,7 @@ func (t *clusterCache) Key() string {
 	params := []string{
 		t.clusterName, t.proxyVersion, util.LocalityToString(t.locality),
 		t.proxyClusterID, strconv.FormatBool(t.proxySidecar),
-		strconv.FormatBool(t.http2), strconv.FormatBool(t.downstreamAuto),
+		strconv.FormatBool(t.http2), strconv.FormatBool(t.downstreamAuto), strconv.FormatBool(t.supportsIPv4),
 	}
 	if t.networkView != nil {
 		nv := make([]string, 0, len(t.networkView))
-- 
2.35.3

