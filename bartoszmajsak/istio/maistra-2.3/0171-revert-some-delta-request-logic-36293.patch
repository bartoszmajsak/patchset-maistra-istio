From 719934e4218ffae18399dd974f67b8996f59b52e Mon Sep 17 00:00:00 2001
From: Zhonghu Xu <xuzhonghu@huawei.com>
Date: Tue, 30 Nov 2021 15:07:37 +0800
Subject: revert some delta request logic (#36293)

* revert some delta request logic

* clean messed comment
---
 pilot/pkg/xds/delta.go | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/pilot/pkg/xds/delta.go b/pilot/pkg/xds/delta.go
index 91500d9a83..43a02b2cc3 100644
--- a/pilot/pkg/xds/delta.go
+++ b/pilot/pkg/xds/delta.go
@@ -16,6 +16,7 @@
 
 import (
 	"errors"
+	"fmt"
 	"strings"
 	"time"
 
@@ -350,7 +351,7 @@ func (s *DiscoveryServer) shouldRespondDelta(con *Connection, request *discovery
 	// information about this typeUrl, but Envoy sends response nonce - either
 	// because Istiod is restarted or Envoy disconnects and reconnects.
 	// We should always respond with the current resource names.
-	if request.ResponseNonce == "" || previousInfo == nil {
+	if previousInfo == nil {
 		// TODO: can we distinguish init and reconnect? Do we care?
 		log.Debugf("dADS:%s: INIT/RECONNECT %s %s", stype, con.ConID, request.ResponseNonce)
 		con.proxy.Lock()
@@ -383,9 +384,22 @@ func (s *DiscoveryServer) shouldRespondDelta(con *Connection, request *discovery
 	con.proxy.WatchedResources[request.TypeUrl].NonceAcked = request.ResponseNonce
 	con.proxy.WatchedResources[request.TypeUrl].NonceNacked = ""
 	con.proxy.WatchedResources[request.TypeUrl].ResourceNames = deltaWatchedResources(previousResources, request)
+
+	oldAck := listEqualUnordered(previousResources, con.proxy.WatchedResources[request.TypeUrl].ResourceNames)
+	// Spontaneous DeltaDiscoveryRequests from the client.
+	// This can be done to dynamically add or remove elements from the tracked resource_names set.
+	// In this case response_nonce is empty.
+	newAck := request.ResponseNonce != ""
+	if newAck != oldAck {
+		// Not sure which is better, lets just log if they don't match for now and compare.
+		log.Errorf("dADS:%s: New ACK and old ACK check mismatch: %v vs %v", stype, oldAck, newAck)
+		if features.EnableUnsafeAssertions {
+			panic(fmt.Sprintf("dADS:%s: New ACK and old ACK check mismatch: %v vs %v", stype, oldAck, newAck))
+		}
+	}
 	// Envoy can send two DiscoveryRequests with same version and nonce
 	// when it detects a new resource. We should respond if they change.
-	if listEqualUnordered(previousResources, con.proxy.WatchedResources[request.TypeUrl].ResourceNames) {
+	if oldAck {
 		log.Debugf("dADS:%s: ACK  %s %s", stype, con.ConID, request.ResponseNonce)
 		return false
 	}
@@ -436,7 +450,6 @@ func (s *DiscoveryServer) pushDeltaXds(con *Connection, push *model.PushContext,
 		filteredResponse := make([]*discovery.Resource, 0, len(subscribe))
 		for _, r := range res {
 			if subres.Contains(r.Name) {
-				log.Debugf("----- %s", r.Name)
 				filteredResponse = append(filteredResponse, r)
 			} else {
 				log.Debugf("ADS:%v SKIP %v", v3.GetShortType(w.TypeUrl), r.Name)
-- 
2.35.3

