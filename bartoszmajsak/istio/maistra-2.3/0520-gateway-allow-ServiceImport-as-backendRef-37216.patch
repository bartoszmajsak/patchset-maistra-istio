From fafc6a59c1def42d0537ab3dad57285955a9980f Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Tue, 8 Feb 2022 20:57:05 -0800
Subject: gateway: allow ServiceImport as backendRef (#37216)

This has two behaviors:
* if clusterset.local is enabled, we change it to forward to
  clusterset.local cluster
* else, we treat it the same as Service. This is still useful, so folks
  can have portable routes between implementations
---
 pilot/pkg/config/kube/gateway/conversion.go   | 21 ++++++
 .../config/kube/gateway/conversion_test.go    |  1 +
 .../kube/gateway/testdata/alias.yaml.golden   |  3 +-
 .../gateway/testdata/mcs.status.yaml.golden   | 70 +++++++++++++++++++
 .../pkg/config/kube/gateway/testdata/mcs.yaml | 30 ++++++++
 .../{alias.yaml.golden => mcs.yaml.golden}    | 25 +++----
 6 files changed, 135 insertions(+), 15 deletions(-)
 create mode 100644 pilot/pkg/config/kube/gateway/testdata/mcs.status.yaml.golden
 create mode 100644 pilot/pkg/config/kube/gateway/testdata/mcs.yaml
 copy pilot/pkg/config/kube/gateway/testdata/{alias.yaml.golden => mcs.yaml.golden} (65%)

diff --git a/pilot/pkg/config/kube/gateway/conversion.go b/pilot/pkg/config/kube/gateway/conversion.go
index 6487e600a1..09deb479fd 100644
--- a/pilot/pkg/config/kube/gateway/conversion.go
+++ b/pilot/pkg/config/kube/gateway/conversion.go
@@ -27,6 +27,7 @@
 
 	"istio.io/api/label"
 	istio "istio.io/api/networking/v1alpha3"
+	"istio.io/istio/pilot/pkg/features"
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pilot/pkg/model/credentials"
 	"istio.io/istio/pilot/pkg/model/kstatus"
@@ -658,6 +659,26 @@ func buildDestination(to k8s.BackendRef, ns, domain string) (*istio.Destination,
 			Port: &istio.PortSelector{Number: uint32(*to.Port)},
 		}, nil
 	}
+	if nilOrEqual((*string)(to.Group), features.MCSAPIGroup) && nilOrEqual((*string)(to.Kind), "ServiceImport") {
+		// Service import
+		name := fmt.Sprintf("%s.%s.svc.clusterset.local", to.Name, namespace)
+		if !features.EnableMCSHost {
+			// They asked for ServiceImport, but actually don't have full support enabled...
+			// No problem, we can just treat it as Service, which is already cross-cluster in this mode anyways
+			name = fmt.Sprintf("%s.%s.svc.%s", to.Name, namespace, domain)
+		}
+		if to.Port == nil {
+			// We don't know where to send without port
+			return nil, &ConfigError{Reason: InvalidDestination, Message: "port is required in backendRef"}
+		}
+		if strings.Contains(string(to.Name), ".") {
+			return nil, &ConfigError{Reason: InvalidDestination, Message: "serviceName invalid; the name of the Service must be used, not the hostname."}
+		}
+		return &istio.Destination{
+			Host: name,
+			Port: &istio.PortSelector{Number: uint32(*to.Port)},
+		}, nil
+	}
 	if nilOrEqual((*string)(to.Group), gvk.ServiceEntry.Group) && nilOrEqual((*string)(to.Kind), "Hostname") {
 		// Hostname synthetic type
 		if to.Port == nil {
diff --git a/pilot/pkg/config/kube/gateway/conversion_test.go b/pilot/pkg/config/kube/gateway/conversion_test.go
index fabd3102f0..e2beedcc06 100644
--- a/pilot/pkg/config/kube/gateway/conversion_test.go
+++ b/pilot/pkg/config/kube/gateway/conversion_test.go
@@ -61,6 +61,7 @@ func TestConvertResources(t *testing.T) {
 		{"serviceentry"},
 		{"eastwest"},
 		{"alias"},
+		{"mcs"},
 	}
 	for _, tt := range cases {
 		t.Run(tt.name, func(t *testing.T) {
diff --git a/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden b/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden
index 7641a72393..d6675d9294 100644
--- a/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden
+++ b/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden
@@ -33,9 +33,10 @@ spec:
   http:
   - match:
     - uri:
-        prefix: "/"
+        prefix: /
     route:
     - destination:
         host: httpbin.default.svc.domain.suffix
         port:
           number: 80
+---
diff --git a/pilot/pkg/config/kube/gateway/testdata/mcs.status.yaml.golden b/pilot/pkg/config/kube/gateway/testdata/mcs.status.yaml.golden
new file mode 100644
index 0000000000..6a971c737d
--- /dev/null
+++ b/pilot/pkg/config/kube/gateway/testdata/mcs.status.yaml.golden
@@ -0,0 +1,70 @@
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: Gateway
+metadata:
+  creationTimestamp: null
+  name: gateway
+  namespace: istio-system
+spec: null
+status:
+  addresses:
+  - type: IPAddress
+    value: 1.2.3.4
+  conditions:
+  - lastTransitionTime: fake
+    message: Gateway valid, assigned to service(s) istio-ingressgateway.istio-system.svc.domain.suffix:34000
+    reason: ListenersValid
+    status: "True"
+    type: Ready
+  - lastTransitionTime: fake
+    message: Resources available
+    reason: ResourcesAvailable
+    status: "True"
+    type: Scheduled
+  listeners:
+  - attachedRoutes: 1
+    conditions:
+    - lastTransitionTime: fake
+      message: No errors found
+      reason: ListenerReady
+      status: "False"
+      type: Conflicted
+    - lastTransitionTime: fake
+      message: No errors found
+      reason: ListenerReady
+      status: "False"
+      type: Detached
+    - lastTransitionTime: fake
+      message: No errors found
+      reason: ListenerReady
+      status: "True"
+      type: Ready
+    - lastTransitionTime: fake
+      message: No errors found
+      reason: ListenerReady
+      status: "True"
+      type: ResolvedRefs
+    name: default
+    supportedKinds:
+    - group: gateway.networking.k8s.io
+      kind: TCPRoute
+---
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: TCPRoute
+metadata:
+  creationTimestamp: null
+  name: tcp
+  namespace: istio-system
+spec: null
+status:
+  parents:
+  - conditions:
+    - lastTransitionTime: fake
+      message: Route was valid
+      reason: RouteAdmitted
+      status: "True"
+      type: Accepted
+    controllerName: istio.io/gateway-controller
+    parentRef:
+      name: gateway
+      namespace: istio-system
+---
diff --git a/pilot/pkg/config/kube/gateway/testdata/mcs.yaml b/pilot/pkg/config/kube/gateway/testdata/mcs.yaml
new file mode 100644
index 0000000000..584209662f
--- /dev/null
+++ b/pilot/pkg/config/kube/gateway/testdata/mcs.yaml
@@ -0,0 +1,30 @@
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: Gateway
+metadata:
+  name: gateway
+  namespace: istio-system
+spec:
+  addresses:
+  - value: istio-ingressgateway
+    type: Hostname
+  gatewayClassName: istio
+  listeners:
+  - name: default
+    port: 34000
+    protocol: TCP
+---
+apiVersion: gateway.networking.k8s.io/v1alpha2
+kind: TCPRoute
+metadata:
+  name: tcp
+  namespace: istio-system
+spec:
+  parentRefs:
+  - name: gateway
+    namespace: istio-system
+  rules:
+  - backendRefs:
+    - group: multicluster.x-k8s.io
+      kind: ServiceImport
+      name: echo
+      port: 80
diff --git a/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden b/pilot/pkg/config/kube/gateway/testdata/mcs.yaml.golden
similarity index 65%
copy from pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden
copy to pilot/pkg/config/kube/gateway/testdata/mcs.yaml.golden
index 7641a72393..b9eabc66e3 100644
--- a/pilot/pkg/config/kube/gateway/testdata/alias.yaml.golden
+++ b/pilot/pkg/config/kube/gateway/testdata/mcs.yaml.golden
@@ -10,32 +10,29 @@ metadata:
 spec:
   servers:
   - hosts:
-    - '*/*.domain.example'
+    - istio-system/*
     port:
       name: default
-      number: 80
-      protocol: HTTP
+      number: 34000
+      protocol: TCP
 ---
 apiVersion: networking.istio.io/v1alpha3
 kind: VirtualService
 metadata:
   annotations:
-    internal.istio.io/parent: HTTPRoute/http.default
+    internal.istio.io/parent: TCPRoute/tcp.istio-system
   creationTimestamp: null
-  name: http-istio-autogenerated-k8s-gateway
-  namespace: default
+  name: tcp-tcp-istio-autogenerated-k8s-gateway
+  namespace: istio-system
 spec:
   gateways:
   - istio-system/gateway-istio-autogenerated-k8s-gateway-default
   hosts:
-  - first.domain.example
-  - another.domain.example
-  http:
-  - match:
-    - uri:
-        prefix: "/"
-    route:
+  - '*'
+  tcp:
+  - route:
     - destination:
-        host: httpbin.default.svc.domain.suffix
+        host: echo.istio-system.svc.domain.suffix
         port:
           number: 80
+---
-- 
2.35.3

