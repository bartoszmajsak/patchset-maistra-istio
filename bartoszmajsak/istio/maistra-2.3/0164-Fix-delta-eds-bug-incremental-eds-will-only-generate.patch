From 45580446c48b9a8e376b70e02c1908142995cb41 Mon Sep 17 00:00:00 2001
From: Zhonghu Xu <xuzhonghu@huawei.com>
Date: Tue, 30 Nov 2021 05:39:27 +0800
Subject: =?UTF-8?q?Fix=20delta=20eds=20bug:=20incremental=20eds=20will=20o?=
 =?UTF-8?q?nly=20generate=20eds=20for=20the=20upd=E2=80=A6=20(#36273)?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

* Fix delta eds bug: incremental eds will only generate eds for the updated services so if cal removed resources for incremental eds, it will cause missing endpoints in envoy. We should not cal removed resource when it is incremental eds push

* Fix lint
---
 pilot/pkg/xds/delta.go | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/pilot/pkg/xds/delta.go b/pilot/pkg/xds/delta.go
index 13a916ba1c..f377dda9aa 100644
--- a/pilot/pkg/xds/delta.go
+++ b/pilot/pkg/xds/delta.go
@@ -435,7 +435,6 @@ func (s *DiscoveryServer) pushDeltaXds(con *Connection, push *model.PushContext,
 	}
 	defer func() { recordPushTime(w.TypeUrl, time.Since(t0)) }()
 
-	originalNames := extractNames(res)
 	if subscribe != nil {
 		// If subscribe is set, client is requesting specific resources. We should just give it the
 		// new resources it needs, rather than the entire set of known resources.
@@ -459,21 +458,23 @@ func (s *DiscoveryServer) pushDeltaXds(con *Connection, push *model.PushContext,
 		Nonce:             nonce(push.LedgerVersion),
 		Resources:         res,
 	}
+
+	currentResources := extractNames(res)
 	if usedDelta {
 		resp.RemovedResources = deletedRes
-	} else {
+	} else if req.Full {
 		// similar to sotw
-		cur := sets.NewSet(w.ResourceNames...)
-		cur.Delete(originalNames...)
-		resp.RemovedResources = cur.SortedList()
+		subscribed := sets.NewSet(w.ResourceNames...)
+		subscribed.Delete(currentResources...)
+		resp.RemovedResources = subscribed.SortedList()
 	}
 	if len(resp.RemovedResources) > 0 {
-		log.Debugf("ADS:%v REMOVE %v", v3.GetShortType(w.TypeUrl), resp.RemovedResources)
+		log.Debugf("ADS:%v %s REMOVE %v", v3.GetShortType(w.TypeUrl), con.ConID, resp.RemovedResources)
 	}
 	if isWildcardTypeURL(w.TypeUrl) {
 		// this is probably a bad idea...
 		con.proxy.Lock()
-		w.ResourceNames = originalNames
+		w.ResourceNames = currentResources
 		con.proxy.Unlock()
 	}
 
-- 
2.35.3

