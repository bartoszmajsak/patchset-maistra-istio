From 1ec411938148fb342b16f0bb11cff5b583c32ba9 Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Fri, 8 Apr 2022 18:57:45 -0700
Subject: Revert "[tf] Optimize scope close (#38270)" (#38308)

This reverts commit 0a9a1adb51707161b2d5c8136c598748bbede5c3.
---
 pkg/test/framework/resource/context.go |  2 +-
 pkg/test/framework/scope.go            | 28 ++++++++++----------------
 2 files changed, 12 insertions(+), 18 deletions(-)

diff --git a/pkg/test/framework/resource/context.go b/pkg/test/framework/resource/context.go
index 8d2dfc5697..ca7772e2e1 100644
--- a/pkg/test/framework/resource/context.go
+++ b/pkg/test/framework/resource/context.go
@@ -112,7 +112,7 @@ type Context interface {
 
 	// Cleanup runs the given function when the test context completes.
 	// This function will always run, regardless of -istio.test.nocleanup. To run only when cleanup is enabled,
-	// use ConditionalCleanup.
+	// use WhenDone.
 	// This function may not (safely) access the test context.
 	Cleanup(fn func())
 
diff --git a/pkg/test/framework/scope.go b/pkg/test/framework/scope.go
index 5c7ebe3f8c..0e3a5b5aec 100644
--- a/pkg/test/framework/scope.go
+++ b/pkg/test/framework/scope.go
@@ -137,7 +137,7 @@ func (s *scope) done(nocleanup bool) error {
 		close(s.closeChan)
 	}()
 
-	g := multierror.Group{}
+	var err error
 	// Do reverse walk for cleanup.
 	for i := len(s.closers) - 1; i >= 0; i-- {
 		c := s.closers[i]
@@ -150,25 +150,19 @@ func (s *scope) done(nocleanup bool) error {
 			}
 		}
 
-		g.Go(func() error {
-			name := "lambda"
-			if r, ok := c.(resource.Resource); ok {
-				name = fmt.Sprintf("resource %v", r.ID())
-			}
-
-			scopes.Framework.Debugf("Begin cleaning up %s", name)
-			defer scopes.Framework.Debugf("Cleanup complete for %s", name)
+		name := "lambda"
+		if r, ok := c.(resource.Resource); ok {
+			name = fmt.Sprintf("resource %v", r.ID())
+		}
 
-			if e := c.Close(); e != nil {
-				scopes.Framework.Debugf("Error cleaning up %s: %v", name, e)
-				return e
-			}
-			return nil
-		})
+		scopes.Framework.Debugf("Begin cleaning up %s", name)
+		if e := c.Close(); e != nil {
+			scopes.Framework.Debugf("Error cleaning up %s: %v", name, e)
+			err = multierror.Append(err, e).ErrorOrNil()
+		}
+		scopes.Framework.Debugf("Cleanup complete for %s", name)
 	}
 
-	err := g.Wait().ErrorOrNil()
-
 	s.mu.Lock()
 	s.resources = nil
 	s.closers = nil
-- 
2.35.3

