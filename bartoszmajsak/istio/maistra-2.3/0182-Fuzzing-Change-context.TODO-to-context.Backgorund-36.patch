From 1701c38deb6e2b674a9ce910bd6e9399c3cd4455 Mon Sep 17 00:00:00 2001
From: AdamKorcz <44787359+AdamKorcz@users.noreply.github.com>
Date: Wed, 1 Dec 2021 17:40:01 +0000
Subject: Fuzzing: Change context.TODO to context.Backgorund (#36322)

---
 tests/fuzz/kube_controller_fuzzer.go | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/tests/fuzz/kube_controller_fuzzer.go b/tests/fuzz/kube_controller_fuzzer.go
index 4462c2e909..2822ae9f4d 100644
--- a/tests/fuzz/kube_controller_fuzzer.go
+++ b/tests/fuzz/kube_controller_fuzzer.go
@@ -88,16 +88,16 @@ func generateNodeForFuzzing(f *fuzz.ConsumeFuzzer) (*coreV1.Node, error) {
 
 func addPodsForFuzzing(controller *FakeController, fx *FakeXdsUpdater, pods ...*coreV1.Pod) error {
 	for _, pod := range pods {
-		p, _ := controller.client.CoreV1().Pods(pod.Namespace).Get(context.TODO(), pod.Name, metaV1.GetOptions{})
+		p, _ := controller.client.CoreV1().Pods(pod.Namespace).Get(context.Background(), pod.Name, metaV1.GetOptions{})
 		var newPod *coreV1.Pod
 		var err error
 		if p == nil {
-			newPod, err = controller.client.CoreV1().Pods(pod.Namespace).Create(context.TODO(), pod, metaV1.CreateOptions{})
+			newPod, err = controller.client.CoreV1().Pods(pod.Namespace).Create(context.Background(), pod, metaV1.CreateOptions{})
 			if err != nil {
 				return err
 			}
 		} else {
-			newPod, err = controller.client.CoreV1().Pods(pod.Namespace).Update(context.TODO(), pod, metaV1.UpdateOptions{})
+			newPod, err = controller.client.CoreV1().Pods(pod.Namespace).Update(context.Background(), pod, metaV1.UpdateOptions{})
 			if err != nil {
 				return err
 			}
@@ -106,7 +106,7 @@ func addPodsForFuzzing(controller *FakeController, fx *FakeXdsUpdater, pods ...*
 		setPodReadyForFuzzing(newPod)
 		newPod.Status.PodIP = pod.Status.PodIP
 		newPod.Status.Phase = coreV1.PodRunning
-		_, _ = controller.client.CoreV1().Pods(pod.Namespace).UpdateStatus(context.TODO(), newPod, metaV1.UpdateOptions{})
+		_, _ = controller.client.CoreV1().Pods(pod.Namespace).UpdateStatus(context.Background(), newPod, metaV1.UpdateOptions{})
 		fx.Wait("proxy")
 	}
 	return nil
@@ -125,9 +125,9 @@ func setPodReadyForFuzzing(pod *coreV1.Pod) {
 func addNodesForFuzzing(controller *FakeController, nodes ...*coreV1.Node) error {
 	fakeClient := controller.client
 	for _, node := range nodes {
-		_, err := fakeClient.CoreV1().Nodes().Create(context.TODO(), node, metaV1.CreateOptions{})
+		_, err := fakeClient.CoreV1().Nodes().Create(context.Background(), node, metaV1.CreateOptions{})
 		if errors.IsAlreadyExists(err) {
-			if _, err := fakeClient.CoreV1().Nodes().Update(context.TODO(), node, metaV1.UpdateOptions{}); err != nil {
+			if _, err := fakeClient.CoreV1().Nodes().Update(context.Background(), node, metaV1.UpdateOptions{}); err != nil {
 				return nil
 			}
 		} else if err != nil {
@@ -147,7 +147,7 @@ func createServiceForFuzzing(controller *FakeController, f *fuzz.ConsumeFuzzer)
 	if err != nil {
 		return err
 	}
-	_, err = controller.client.CoreV1().Services(namespace).Create(context.TODO(), service, metaV1.CreateOptions{})
+	_, err = controller.client.CoreV1().Services(namespace).Create(context.Background(), service, metaV1.CreateOptions{})
 	if err != nil {
 		return err
 	}
@@ -200,9 +200,9 @@ func createEndpointsForFuzzing(f *fuzz.ConsumeFuzzer, controller *FakeController
 	if err != nil {
 		return err
 	}
-	if _, err := controller.client.CoreV1().Endpoints(namespace).Create(context.TODO(), endpoint, metaV1.CreateOptions{}); err != nil {
+	if _, err := controller.client.CoreV1().Endpoints(namespace).Create(context.Background(), endpoint, metaV1.CreateOptions{}); err != nil {
 		if errors.IsAlreadyExists(err) {
-			_, err = controller.client.CoreV1().Endpoints(namespace).Update(context.TODO(), endpoint, metaV1.UpdateOptions{})
+			_, err = controller.client.CoreV1().Endpoints(namespace).Update(context.Background(), endpoint, metaV1.UpdateOptions{})
 		}
 		if err != nil {
 			return err
@@ -214,9 +214,9 @@ func createEndpointsForFuzzing(f *fuzz.ConsumeFuzzer, controller *FakeController
 	if err != nil {
 		return err
 	}
-	if _, err := controller.client.DiscoveryV1().EndpointSlices(namespace).Create(context.TODO(), endpointSlice, metaV1.CreateOptions{}); err != nil {
+	if _, err := controller.client.DiscoveryV1().EndpointSlices(namespace).Create(context.Background(), endpointSlice, metaV1.CreateOptions{}); err != nil {
 		if errors.IsAlreadyExists(err) {
-			_, err = controller.client.DiscoveryV1().EndpointSlices(namespace).Update(context.TODO(), endpointSlice, metaV1.UpdateOptions{})
+			_, err = controller.client.DiscoveryV1().EndpointSlices(namespace).Update(context.Background(), endpointSlice, metaV1.UpdateOptions{})
 		}
 		if err != nil {
 			return err
-- 
2.35.3

