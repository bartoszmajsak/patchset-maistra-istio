From 9ee2bd95d469b6c7acfbb5de95600b725b2010b4 Mon Sep 17 00:00:00 2001
From: ramanujadasu <ramanujadasu.mca@gmail.com>
Date: Thu, 28 Apr 2022 10:27:33 +0530
Subject: Fix: renamed DefaultKubernetesDomain to DefaultClusterLocalDomain
 (#38597)

* fix: renamed DefaultKubernetesDomain to DefaultClusterLocalDomain

* Fix the release notes istio test case

* Fix space issue

* fix the space changes.

* FIX: review comments
---
 istioctl/cmd/add-to-mesh.go                     | 2 +-
 istioctl/cmd/describe.go                        | 2 +-
 pilot/cmd/pilot-agent/main.go                   | 2 +-
 pilot/cmd/pilot-discovery/app/cmd.go            | 2 +-
 pilot/pkg/bootstrap/server_test.go              | 6 +++---
 pilot/pkg/model/context.go                      | 2 +-
 pilot/pkg/security/trustdomain/bundle.go        | 2 +-
 pkg/adsc/adsc.go                                | 2 +-
 pkg/config/analysis/analyzers/util/constants.go | 2 +-
 pkg/config/analysis/analyzers/util/hosts.go     | 2 +-
 pkg/config/constants/constants.go               | 6 ++----
 pkg/config/mesh/mesh.go                         | 2 +-
 pkg/spiffe/spiffe.go                            | 2 +-
 pkg/test/framework/components/echo/config.go    | 2 +-
 14 files changed, 17 insertions(+), 19 deletions(-)

diff --git a/istioctl/cmd/add-to-mesh.go b/istioctl/cmd/add-to-mesh.go
index f68cadb628..e361921abe 100644
--- a/istioctl/cmd/add-to-mesh.go
+++ b/istioctl/cmd/add-to-mesh.go
@@ -555,7 +555,7 @@ func generateServiceEntry(u *unstructured.Unstructured, o *vmServiceOpts) error
 			Labels:  o.Labels,
 		})
 	}
-	host := fmt.Sprintf("%v.%v.svc.%s", o.Name, o.Namespace, constants.DefaultKubernetesDomain)
+	host := fmt.Sprintf("%v.%v.svc.%s", o.Name, o.Namespace, constants.DefaultClusterLocalDomain)
 	spec := &v1alpha3.ServiceEntry{
 		Hosts:      []string{host},
 		Ports:      ports,
diff --git a/istioctl/cmd/describe.go b/istioctl/cmd/describe.go
index 10a9678894..b526935b9a 100644
--- a/istioctl/cmd/describe.go
+++ b/istioctl/cmd/describe.go
@@ -69,7 +69,7 @@ type myProtoValue struct {
 }
 
 const (
-	k8sSuffix = ".svc." + constants.DefaultKubernetesDomain
+	k8sSuffix = ".svc." + constants.DefaultClusterLocalDomain
 )
 
 var (
diff --git a/pilot/cmd/pilot-agent/main.go b/pilot/cmd/pilot-agent/main.go
index a796f57214..cee44c5de8 100644
--- a/pilot/cmd/pilot-agent/main.go
+++ b/pilot/cmd/pilot-agent/main.go
@@ -236,7 +236,7 @@ func initStsServer(proxy *model.Proxy, tokenManager security.TokenManager) (*sts
 
 func getDNSDomain(podNamespace, domain string) string {
 	if len(domain) == 0 {
-		domain = podNamespace + ".svc." + constants.DefaultKubernetesDomain
+		domain = podNamespace + ".svc." + constants.DefaultClusterLocalDomain
 	}
 	return domain
 }
diff --git a/pilot/cmd/pilot-discovery/app/cmd.go b/pilot/cmd/pilot-discovery/app/cmd.go
index d1c8fde6ad..b6b57bbb6c 100644
--- a/pilot/cmd/pilot-discovery/app/cmd.go
+++ b/pilot/cmd/pilot-discovery/app/cmd.go
@@ -144,7 +144,7 @@ func addFlags(c *cobra.Command) {
 	// RegistryOptions Controller options
 	c.PersistentFlags().StringVar(&serverArgs.RegistryOptions.FileDir, "configDir", "",
 		"Directory to watch for updates to config yaml files. If specified, the files will be used as the source of config, rather than a CRD client.")
-	c.PersistentFlags().StringVar(&serverArgs.RegistryOptions.KubeOptions.DomainSuffix, "domain", constants.DefaultKubernetesDomain,
+	c.PersistentFlags().StringVar(&serverArgs.RegistryOptions.KubeOptions.DomainSuffix, "domain", constants.DefaultClusterLocalDomain,
 		"DNS domain suffix")
 	c.PersistentFlags().StringVar((*string)(&serverArgs.RegistryOptions.KubeOptions.ClusterID), "clusterID", features.ClusterName,
 		"The ID of the cluster that this Istiod instance resides")
diff --git a/pilot/pkg/bootstrap/server_test.go b/pilot/pkg/bootstrap/server_test.go
index 591131146a..2b6869a3b6 100644
--- a/pilot/pkg/bootstrap/server_test.go
+++ b/pilot/pkg/bootstrap/server_test.go
@@ -247,12 +247,12 @@ func TestNewServer(t *testing.T) {
 		{
 			name:           "default domain",
 			domain:         "",
-			expectedDomain: constants.DefaultKubernetesDomain,
+			expectedDomain: constants.DefaultClusterLocalDomain,
 		},
 		{
 			name:           "default domain with JwtRule",
 			domain:         "",
-			expectedDomain: constants.DefaultKubernetesDomain,
+			expectedDomain: constants.DefaultClusterLocalDomain,
 			jwtRule:        `{"issuer": "foo", "jwks_uri": "baz", "audiences": ["aud1", "aud2"]}`,
 		},
 		{
@@ -263,7 +263,7 @@ func TestNewServer(t *testing.T) {
 		{
 			name:             "override default secured grpc port",
 			domain:           "",
-			expectedDomain:   constants.DefaultKubernetesDomain,
+			expectedDomain:   constants.DefaultClusterLocalDomain,
 			enableSecureGRPC: true,
 		},
 	}
diff --git a/pilot/pkg/model/context.go b/pilot/pkg/model/context.go
index 65f3d9ad22..77dc230917 100644
--- a/pilot/pkg/model/context.go
+++ b/pilot/pkg/model/context.go
@@ -143,7 +143,7 @@ func (e *Environment) Version() string {
 func (e *Environment) Init() {
 	// Use a default DomainSuffix, if none was provided.
 	if len(e.DomainSuffix) == 0 {
-		e.DomainSuffix = constants.DefaultKubernetesDomain
+		e.DomainSuffix = constants.DefaultClusterLocalDomain
 	}
 
 	// Create the cluster-local service registry.
diff --git a/pilot/pkg/security/trustdomain/bundle.go b/pilot/pkg/security/trustdomain/bundle.go
index 6bdc7d7b96..51462da292 100644
--- a/pilot/pkg/security/trustdomain/bundle.go
+++ b/pilot/pkg/security/trustdomain/bundle.go
@@ -67,7 +67,7 @@ func (t Bundle) ReplaceTrustDomainAliases(principals []string) []string {
 		// Only generate configuration if the extracted trust domain from the policy is part of the trust domain list,
 		// or if the extracted/existing trust domain is "cluster.local", which is a pointer to the local trust domain
 		// and its aliases.
-		if stringMatch(trustDomainFromPrincipal, t.TrustDomains) || trustDomainFromPrincipal == constants.DefaultKubernetesDomain {
+		if stringMatch(trustDomainFromPrincipal, t.TrustDomains) || trustDomainFromPrincipal == constants.DefaultClusterLocalDomain {
 			// Generate configuration for trust domain and trust domain aliases.
 			principalsIncludingAliases = append(principalsIncludingAliases, t.replaceTrustDomains(principal, trustDomainFromPrincipal)...)
 		} else {
diff --git a/pkg/adsc/adsc.go b/pkg/adsc/adsc.go
index 364a430d98..e4221682a3 100644
--- a/pkg/adsc/adsc.go
+++ b/pkg/adsc/adsc.go
@@ -293,7 +293,7 @@ func New(discoveryAddr string, opts *Config) (*ADSC, error) {
 	adsc.Locality = opts.Locality
 
 	adsc.nodeID = fmt.Sprintf("%s~%s~%s.%s~%s.svc.%s", opts.NodeType, opts.IP,
-		opts.Workload, opts.Namespace, opts.Namespace, constants.DefaultKubernetesDomain)
+		opts.Workload, opts.Namespace, opts.Namespace, constants.DefaultClusterLocalDomain)
 
 	if err := adsc.Dial(); err != nil {
 		return nil, err
diff --git a/pkg/config/analysis/analyzers/util/constants.go b/pkg/config/analysis/analyzers/util/constants.go
index 459b359631..dc046d6b41 100644
--- a/pkg/config/analysis/analyzers/util/constants.go
+++ b/pkg/config/analysis/analyzers/util/constants.go
@@ -21,7 +21,7 @@
 )
 
 const (
-	DefaultKubernetesDomain    = "svc." + constants.DefaultKubernetesDomain
+	DefaultClusterLocalDomain  = "svc." + constants.DefaultClusterLocalDomain
 	ExportToNamespaceLocal     = "."
 	ExportToAllNamespaces      = "*"
 	IstioProxyName             = "istio-proxy"
diff --git a/pkg/config/analysis/analyzers/util/hosts.go b/pkg/config/analysis/analyzers/util/hosts.go
index d43f1f9bbb..0b187d7d64 100644
--- a/pkg/config/analysis/analyzers/util/hosts.go
+++ b/pkg/config/analysis/analyzers/util/hosts.go
@@ -78,7 +78,7 @@ func ConvertHostToFQDN(namespace resource.Namespace, host string) string {
 	// Convert to FQDN only if host is not a wildcard or a FQDN
 	if !strings.HasPrefix(host, "*") &&
 		!strings.Contains(host, ".") {
-		fqdn = host + "." + string(namespace) + "." + DefaultKubernetesDomain
+		fqdn = host + "." + string(namespace) + "." + DefaultClusterLocalDomain
 	}
 	return fqdn
 }
diff --git a/pkg/config/constants/constants.go b/pkg/config/constants/constants.go
index c218b95226..f5f358439a 100644
--- a/pkg/config/constants/constants.go
+++ b/pkg/config/constants/constants.go
@@ -59,10 +59,8 @@
 	// IstioIngressNamespace is the namespace where Istio ingress controller is deployed
 	IstioIngressNamespace = "istio-system"
 
-	// DefaultKubernetesDomain the default service domain suffix for Kubernetes, if not overridden in config.
-	// TODO(nmittler): Rename this to DefaultClusterLocalDomain.
-	// TODO(nmittler): Search/replace explicit usages of the string with this constant.
-	DefaultKubernetesDomain = "cluster.local"
+	// DefaultClusterLocalDomain the default service domain suffix for Kubernetes, if not overridden in config.
+	DefaultClusterLocalDomain = "cluster.local"
 
 	// DefaultClusterSetLocalDomain is the default domain suffix for Kubernetes Multi-Cluster Services (MCS)
 	// used for load balancing requests against endpoints across the ClusterSet (i.e. mesh).
diff --git a/pkg/config/mesh/mesh.go b/pkg/config/mesh/mesh.go
index 54e788242f..d45f9e9b28 100644
--- a/pkg/config/mesh/mesh.go
+++ b/pkg/config/mesh/mesh.go
@@ -86,7 +86,7 @@ func DefaultMeshConfig() *meshconfig.MeshConfig {
 		IngressService:              "istio-ingressgateway",
 		IngressControllerMode:       meshconfig.MeshConfig_STRICT,
 		IngressClass:                "istio",
-		TrustDomain:                 constants.DefaultKubernetesDomain,
+		TrustDomain:                 constants.DefaultClusterLocalDomain,
 		TrustDomainAliases:          []string{},
 		EnableAutoMtls:              &wrappers.BoolValue{Value: true},
 		OutboundTrafficPolicy:       &meshconfig.MeshConfig_OutboundTrafficPolicy{Mode: meshconfig.MeshConfig_OutboundTrafficPolicy_ALLOW_ANY},
diff --git a/pkg/spiffe/spiffe.go b/pkg/spiffe/spiffe.go
index ab82dae781..13ba0a2a1d 100644
--- a/pkg/spiffe/spiffe.go
+++ b/pkg/spiffe/spiffe.go
@@ -40,7 +40,7 @@
 	URIPrefixLen = len(URIPrefix)
 
 	// The default SPIFFE URL value for trust domain
-	defaultTrustDomain = constants.DefaultKubernetesDomain
+	defaultTrustDomain = constants.DefaultClusterLocalDomain
 
 	ServiceAccountSegment = "sa"
 	NamespaceSegment      = "ns"
diff --git a/pkg/test/framework/components/echo/config.go b/pkg/test/framework/components/echo/config.go
index 63d1417e85..1afda7664c 100644
--- a/pkg/test/framework/components/echo/config.go
+++ b/pkg/test/framework/components/echo/config.go
@@ -303,7 +303,7 @@ func (c Config) IsExternal() bool {
 	defaultService   = "echo"
 	defaultVersion   = "v1"
 	defaultNamespace = "echo"
-	defaultDomain    = constants.DefaultKubernetesDomain
+	defaultDomain    = constants.DefaultClusterLocalDomain
 )
 
 func (c *Config) FillDefaults(ctx resource.Context) (err error) {
-- 
2.35.3

