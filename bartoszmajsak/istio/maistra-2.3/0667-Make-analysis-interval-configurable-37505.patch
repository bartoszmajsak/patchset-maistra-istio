From 243b80871d2ac94be0858042a9a87ad3857eefb3 Mon Sep 17 00:00:00 2001
From: Tong Li <litong01@users.noreply.github.com>
Date: Mon, 28 Feb 2022 14:20:04 -0500
Subject: Make analysis interval configurable (#37505)

* Make analysis interval configurable

Signed-off-by: Tong Li <litong01@us.ibm.com>

* Make analysis interval configurable

Signed-off-by: Tong Li <litong01@us.ibm.com>

* Make analysis interval configurable

Signed-off-by: Tong Li <litong01@us.ibm.com>
---
 pilot/pkg/features/pilot.go                 | 14 ++++++++++++++
 pkg/config/analysis/incluster/controller.go |  3 ++-
 releasenotes/notes/30200.yaml               |  8 ++++++++
 3 files changed, 24 insertions(+), 1 deletion(-)
 create mode 100644 releasenotes/notes/30200.yaml

diff --git a/pilot/pkg/features/pilot.go b/pilot/pkg/features/pilot.go
index 994b8c4976..96843a0f38 100644
--- a/pilot/pkg/features/pilot.go
+++ b/pilot/pkg/features/pilot.go
@@ -298,6 +298,20 @@
 			"Istio Resources",
 	).Get()
 
+	AnalysisInterval = func() time.Duration {
+		val, _ := env.RegisterDurationVar(
+			"PILOT_ANALYSIS_INTERVAL",
+			10*time.Second,
+			"If analysis is enabled, pilot will run istio analyzers using this value as interval in seconds "+
+				"Istio Resources",
+		).Lookup()
+		if val < 1*time.Second {
+			log.Warnf("PILOT_ANALYSIS_INTERVAL %s is too small, it will be set to default 10 seconds", val.String())
+			return 10 * time.Second
+		}
+		return val
+	}()
+
 	EnableStatus = env.RegisterBoolVar(
 		"PILOT_ENABLE_STATUS",
 		false,
diff --git a/pkg/config/analysis/incluster/controller.go b/pkg/config/analysis/incluster/controller.go
index 2d221f2583..196b593f65 100644
--- a/pkg/config/analysis/incluster/controller.go
+++ b/pkg/config/analysis/incluster/controller.go
@@ -24,6 +24,7 @@
 	v1alpha12 "istio.io/api/analysis/v1alpha1"
 	"istio.io/api/meta/v1alpha1"
 	"istio.io/istio/pilot/pkg/config/kube/crdclient"
+	"istio.io/istio/pilot/pkg/features"
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pilot/pkg/status"
 	"istio.io/istio/pkg/config/analysis/analyzers"
@@ -75,7 +76,7 @@ func NewController(stop <-chan struct{}, rwConfigStore model.ConfigStoreCache,
 
 // Run is blocking
 func (c *Controller) Run(stop <-chan struct{}) {
-	t := time.NewTicker(10 * time.Second)
+	t := time.NewTicker(features.AnalysisInterval)
 	oldmsgs := diag.Messages{}
 	for {
 		select {
diff --git a/releasenotes/notes/30200.yaml b/releasenotes/notes/30200.yaml
new file mode 100644
index 0000000000..d6676d0c9b
--- /dev/null
+++ b/releasenotes/notes/30200.yaml
@@ -0,0 +1,8 @@
+apiVersion: release-notes/v2
+kind: feature
+area: istioctl
+issue:
+  - 30200
+releaseNotes:
+  - |
+    **Added** analysis interval to reduce the wasteful re-runs of analyzer
-- 
2.35.3

