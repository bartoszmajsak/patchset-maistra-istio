From a3050945ccb797d6aeafaaad30f6a34b9148b7a5 Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Mon, 6 Dec 2021 16:22:03 -0800
Subject: Cleanup legacy galley code (#36234)

* cleanup analysis to not depend on transfomers

* Remove events and transformers

* Remove unused testdata

* Cleanup snapshots and transformers

* Do not always have all schemas

* Use correct collections

* Remove schema direct usage

* revert mistake

* fiz fuzz tests

* add back skipped analyzers

* Remove 'disabled' context
---
 istioctl/cmd/analyze.go                       |   3 +-
 istioctl/cmd/precheck.go                      |   3 +-
 istioctl/cmd/tag.go                           |   3 +-
 istioctl/pkg/verifier/k8s_util.go             |  19 +-
 istioctl/pkg/verifier/verifier.go             |   2 +-
 istioctl/pkg/verifier/verify_test.go          |  11 +-
 operator/pkg/helmreconciler/reconciler.go     |   3 +-
 pilot/pkg/bootstrap/configcontroller.go       |   2 +-
 pilot/pkg/model/proxy_config_test.go          |   4 +-
 pkg/config/analysis/analyzer.go               |  69 +-
 pkg/config/analysis/analyzer_test.go          |  55 +-
 .../analyzers/analyzers_bench_test.go         |  14 -
 .../analysis/analyzers/analyzers_test.go      |   3 +-
 pkg/config/analysis/equivalence.go            |  74 --
 pkg/config/analysis/incluster/controller.go   |  15 +-
 pkg/config/analysis/local/analyze_test.go     |  20 +-
 pkg/config/analysis/local/helpers_test.go     |  19 -
 pkg/config/analysis/local/istiod_analyze.go   |  68 +-
 pkg/config/event/buffer.go                    | 111 ---
 pkg/config/event/buffer_test.go               | 140 ---
 pkg/config/event/dispatcher.go                |  21 -
 pkg/config/event/event.go                     | 126 ---
 pkg/config/event/event_test.go                | 294 ------
 pkg/config/event/handler.go                   |  54 -
 pkg/config/event/handler_test.go              | 206 ----
 pkg/config/event/handlers.go                  |  75 --
 pkg/config/event/handlers_test.go             | 123 ---
 pkg/config/event/kind.go                      |  65 --
 pkg/config/event/kind_test.go                 |  42 -
 pkg/config/event/processor.go                 |  31 -
 pkg/config/event/queue.go                     | 107 --
 pkg/config/event/queue_test.go                | 112 ---
 pkg/config/event/router.go                    | 147 ---
 pkg/config/event/router_test.go               | 157 ---
 pkg/config/event/source.go                    |  75 --
 pkg/config/event/source_test.go               |  75 --
 pkg/config/event/transformer.go               | 137 ---
 pkg/config/event/transformer_test.go          | 212 ----
 pkg/config/legacy/processing/processor.go     |  25 -
 .../legacy/processing/transformer/provider.go | 113 ---
 .../processing/transformer/provider_test.go   |  48 -
 .../processor/transforms/direct/create.go     |  40 -
 .../transforms/direct/create_test.go          | 245 -----
 .../legacy/processor/transforms/transforms.go |  32 -
 .../legacy/testing/basicmeta/basicmeta.gen.go | 326 ------
 .../legacy/testing/basicmeta/basicmeta.yaml   |  36 -
 .../legacy/testing/basicmeta/basicmeta2.yaml  |  53 -
 .../testing/basicmeta/collections.gen.go      |  80 --
 .../legacy/testing/basicmeta/generate.go      |  23 -
 pkg/config/legacy/testing/basicmeta/get.go    |  69 --
 pkg/config/legacy/testing/data/builtin.gen.go | 943 ------------------
 pkg/config/legacy/testing/data/builtin.go     |  53 -
 .../testing/data/builtin/deployment.yaml      |  22 -
 .../testing/data/builtin/endpoints.yaml       |  39 -
 .../legacy/testing/data/builtin/ingress.yaml  |  24 -
 .../testing/data/builtin/namespace.yaml       |  11 -
 .../legacy/testing/data/builtin/node.yaml     | 191 ----
 .../legacy/testing/data/builtin/pod.yaml      | 283 ------
 .../legacy/testing/data/builtin/service.yaml  |  34 -
 pkg/config/legacy/testing/data/collections.go |  70 --
 pkg/config/legacy/testing/data/events.go      |  83 --
 pkg/config/legacy/testing/data/resources.go   | 137 ---
 pkg/config/legacy/testing/data/yaml.go        | 131 ---
 .../legacy/testing/fixtures/accumulator.go    |  86 --
 .../testing/fixtures/accumulator_test.go      |  62 --
 pkg/config/legacy/testing/fixtures/expect.go  |  97 --
 .../legacy/testing/fixtures/expect_test.go    |  54 -
 pkg/config/legacy/testing/fixtures/filters.go |  92 --
 .../legacy/testing/fixtures/filters_test.go   |  72 --
 .../legacy/testing/fixtures/listener.go       |  31 -
 .../legacy/testing/fixtures/listener_test.go  |  38 -
 pkg/config/legacy/testing/fixtures/source.go  |  50 -
 .../legacy/testing/fixtures/source_test.go    |  68 --
 .../legacy/testing/fixtures/transformer.go    |  94 --
 .../legacy/testing/k8smeta/collections.gen.go | 184 ----
 pkg/config/legacy/testing/k8smeta/generate.go |  23 -
 pkg/config/legacy/testing/k8smeta/get.go      |  50 -
 .../legacy/testing/k8smeta/k8smeta.gen.go     | 312 ------
 .../legacy/testing/k8smeta/k8smeta.yaml       |  95 --
 .../legacy/util/kuberesource/resources.go     |  40 +-
 pkg/config/schema/ast/ast.go                  |  81 +-
 pkg/config/schema/ast/ast_test.go             | 115 ---
 pkg/config/schema/codegen/collections.go      |   5 -
 pkg/config/schema/codegen/collections_test.go |   4 -
 pkg/config/schema/codegen/snapshots.go        |  59 --
 pkg/config/schema/codegen/snapshots_test.go   |  90 --
 .../schema/codegen/tools/collections.main.go  |   7 -
 .../schema/codegen/tools/snapshots.main.go    |  70 --
 pkg/config/schema/collection/names_test.go    |   9 +-
 pkg/config/schema/collection/schema.go        |  24 -
 pkg/config/schema/collection/schemas.go       |  21 -
 .../collections/collections.agent.gen.go      |  16 -
 .../schema/collections/collections.gen.go     | 327 ------
 pkg/config/schema/collections_test.go         |  31 -
 pkg/config/schema/generate.go                 |   8 -
 pkg/config/schema/get.go                      |  70 --
 pkg/config/schema/metadata.gen.go             | 809 ---------------
 pkg/config/schema/metadata.yaml               | 133 ---
 pkg/config/schema/schema.go                   | 297 ------
 pkg/config/schema/schema_test.go              | 390 --------
 pkg/config/schema/snapshots/snapshots.gen.go  |  21 -
 pkg/kube/inject/webhook_test.go               |   4 +-
 tests/fuzz/analyzer_fuzzer.go                 |   3 +-
 tests/fuzz/fuzz.go                            |   9 -
 tests/fuzz/oss_fuzz_build.sh                  |   1 -
 tests/fuzz/regression_test.go                 |   1 -
 tests/integration/pilot/validation_test.go    |   5 +-
 tools/bug-report/pkg/content/content.go       |   4 +-
 108 files changed, 104 insertions(+), 9766 deletions(-)
 delete mode 100644 pkg/config/analysis/equivalence.go
 delete mode 100644 pkg/config/event/buffer.go
 delete mode 100644 pkg/config/event/buffer_test.go
 delete mode 100644 pkg/config/event/dispatcher.go
 delete mode 100644 pkg/config/event/event.go
 delete mode 100644 pkg/config/event/event_test.go
 delete mode 100644 pkg/config/event/handler.go
 delete mode 100644 pkg/config/event/handler_test.go
 delete mode 100644 pkg/config/event/handlers.go
 delete mode 100644 pkg/config/event/handlers_test.go
 delete mode 100644 pkg/config/event/kind.go
 delete mode 100644 pkg/config/event/kind_test.go
 delete mode 100644 pkg/config/event/processor.go
 delete mode 100644 pkg/config/event/queue.go
 delete mode 100644 pkg/config/event/queue_test.go
 delete mode 100644 pkg/config/event/router.go
 delete mode 100644 pkg/config/event/router_test.go
 delete mode 100644 pkg/config/event/source.go
 delete mode 100644 pkg/config/event/source_test.go
 delete mode 100644 pkg/config/event/transformer.go
 delete mode 100644 pkg/config/event/transformer_test.go
 delete mode 100644 pkg/config/legacy/processing/processor.go
 delete mode 100644 pkg/config/legacy/processing/transformer/provider.go
 delete mode 100644 pkg/config/legacy/processing/transformer/provider_test.go
 delete mode 100644 pkg/config/legacy/processor/transforms/direct/create.go
 delete mode 100644 pkg/config/legacy/processor/transforms/direct/create_test.go
 delete mode 100644 pkg/config/legacy/processor/transforms/transforms.go
 delete mode 100644 pkg/config/legacy/testing/basicmeta/basicmeta.gen.go
 delete mode 100644 pkg/config/legacy/testing/basicmeta/basicmeta.yaml
 delete mode 100644 pkg/config/legacy/testing/basicmeta/basicmeta2.yaml
 delete mode 100755 pkg/config/legacy/testing/basicmeta/collections.gen.go
 delete mode 100644 pkg/config/legacy/testing/basicmeta/generate.go
 delete mode 100644 pkg/config/legacy/testing/basicmeta/get.go
 delete mode 100644 pkg/config/legacy/testing/data/builtin.gen.go
 delete mode 100644 pkg/config/legacy/testing/data/builtin.go
 delete mode 100644 pkg/config/legacy/testing/data/builtin/deployment.yaml
 delete mode 100644 pkg/config/legacy/testing/data/builtin/endpoints.yaml
 delete mode 100644 pkg/config/legacy/testing/data/builtin/ingress.yaml
 delete mode 100644 pkg/config/legacy/testing/data/builtin/namespace.yaml
 delete mode 100644 pkg/config/legacy/testing/data/builtin/node.yaml
 delete mode 100644 pkg/config/legacy/testing/data/builtin/pod.yaml
 delete mode 100644 pkg/config/legacy/testing/data/builtin/service.yaml
 delete mode 100644 pkg/config/legacy/testing/data/collections.go
 delete mode 100644 pkg/config/legacy/testing/data/events.go
 delete mode 100644 pkg/config/legacy/testing/data/resources.go
 delete mode 100644 pkg/config/legacy/testing/data/yaml.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/accumulator.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/accumulator_test.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/expect_test.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/filters.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/filters_test.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/listener.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/listener_test.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/source.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/source_test.go
 delete mode 100644 pkg/config/legacy/testing/fixtures/transformer.go
 delete mode 100755 pkg/config/legacy/testing/k8smeta/collections.gen.go
 delete mode 100644 pkg/config/legacy/testing/k8smeta/generate.go
 delete mode 100644 pkg/config/legacy/testing/k8smeta/get.go
 delete mode 100644 pkg/config/legacy/testing/k8smeta/k8smeta.gen.go
 delete mode 100644 pkg/config/legacy/testing/k8smeta/k8smeta.yaml
 delete mode 100644 pkg/config/schema/codegen/snapshots.go
 delete mode 100644 pkg/config/schema/codegen/snapshots_test.go
 delete mode 100644 pkg/config/schema/codegen/tools/snapshots.main.go
 delete mode 100644 pkg/config/schema/collections_test.go
 delete mode 100644 pkg/config/schema/get.go
 delete mode 100644 pkg/config/schema/metadata.gen.go
 delete mode 100644 pkg/config/schema/schema.go
 delete mode 100644 pkg/config/schema/schema_test.go
 delete mode 100755 pkg/config/schema/snapshots/snapshots.gen.go

diff --git a/istioctl/cmd/analyze.go b/istioctl/cmd/analyze.go
index a7ab67840e..4254c2703a 100644
--- a/istioctl/cmd/analyze.go
+++ b/istioctl/cmd/analyze.go
@@ -37,7 +37,6 @@
 	"istio.io/istio/pkg/config/analysis/local"
 	"istio.io/istio/pkg/config/analysis/msg"
 	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/kube"
 	"istio.io/istio/pkg/url"
 )
@@ -146,7 +145,7 @@ func Analyze() *cobra.Command {
 				selectedNamespace = ""
 			}
 
-			sa := local.NewIstiodAnalyzer(schema.NewMustGet(), analyzers.AllCombined(),
+			sa := local.NewIstiodAnalyzer(analyzers.AllCombined(),
 				resource.Namespace(selectedNamespace),
 				resource.Namespace(istioNamespace), nil, true)
 
diff --git a/istioctl/cmd/precheck.go b/istioctl/cmd/precheck.go
index 8e49b81a17..e042a4d302 100644
--- a/istioctl/cmd/precheck.go
+++ b/istioctl/cmd/precheck.go
@@ -42,7 +42,6 @@
 	"istio.io/istio/pkg/config/analysis/msg"
 	kube3 "istio.io/istio/pkg/config/legacy/source/kube"
 	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/collections"
 	"istio.io/istio/pkg/kube"
 	"istio.io/istio/pkg/url"
@@ -120,7 +119,7 @@ func checkControlPlane(cli kube.ExtendedClient) (diag.Messages, error) {
 
 	// TODO: add more checks
 
-	sa := local.NewSourceAnalyzer(schema.MustGet(), analysis.Combine("upgrade precheck", &maturity.AlphaAnalyzer{}),
+	sa := local.NewSourceAnalyzer(analysis.Combine("upgrade precheck", &maturity.AlphaAnalyzer{}),
 		resource.Namespace(selectedNamespace), resource.Namespace(istioNamespace), nil, true, analysisTimeout)
 	// Set up the kube client
 	config := kube.BuildClientCmd(kubeconfig, configContext)
diff --git a/istioctl/cmd/tag.go b/istioctl/cmd/tag.go
index 3a481bea77..aa7f1ca116 100644
--- a/istioctl/cmd/tag.go
+++ b/istioctl/cmd/tag.go
@@ -33,7 +33,6 @@
 	"istio.io/istio/pkg/config/analysis/diag"
 	"istio.io/istio/pkg/config/analysis/local"
 	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/kube"
 )
 
@@ -312,7 +311,7 @@ func setTag(ctx context.Context, kubeClient kube.ExtendedClient, tagName, revisi
 }
 
 func analyzeWebhook(name, wh string, config *rest.Config) error {
-	sa := local.NewSourceAnalyzer(schema.MustGet(), analysis.Combine("webhook", &webhook.Analyzer{}),
+	sa := local.NewSourceAnalyzer(analysis.Combine("webhook", &webhook.Analyzer{}),
 		resource.Namespace(selectedNamespace), resource.Namespace(istioNamespace), nil, true, analysisTimeout)
 	if err := sa.AddReaderKubeSource([]local.ReaderSource{{Name: "", Reader: strings.NewReader(wh)}}); err != nil {
 		return err
diff --git a/istioctl/pkg/verifier/k8s_util.go b/istioctl/pkg/verifier/k8s_util.go
index 042d326d29..32fccf4df8 100644
--- a/istioctl/pkg/verifier/k8s_util.go
+++ b/istioctl/pkg/verifier/k8s_util.go
@@ -19,8 +19,10 @@
 
 	appsv1 "k8s.io/api/apps/v1"
 	v1batch "k8s.io/api/batch/v1"
+	apimachinery_schema "k8s.io/apimachinery/pkg/runtime/schema"
 
-	"istio.io/istio/pkg/config/schema"
+	"istio.io/istio/pkg/config"
+	"istio.io/istio/pkg/config/schema/collections"
 )
 
 func verifyDeploymentStatus(deployment *appsv1.Deployment) error {
@@ -62,11 +64,14 @@ func verifyJobPostInstall(job *v1batch.Job) error {
 	return nil
 }
 
-func findResourceInSpec(kind string) string {
-	for _, c := range schema.MustGet().KubeCollections().All() {
-		if c.Resource().Kind() == kind {
-			return c.Resource().Plural()
-		}
+func findResourceInSpec(gvk apimachinery_schema.GroupVersionKind) string {
+	s, f := collections.All.FindByGroupVersionKind(config.GroupVersionKind{
+		Group:   gvk.Group,
+		Version: gvk.Version,
+		Kind:    gvk.Kind,
+	})
+	if !f {
+		return ""
 	}
-	return ""
+	return s.Resource().Plural()
 }
diff --git a/istioctl/pkg/verifier/verifier.go b/istioctl/pkg/verifier/verifier.go
index f8017e0f67..037334f1b9 100644
--- a/istioctl/pkg/verifier/verifier.go
+++ b/istioctl/pkg/verifier/verifier.go
@@ -266,7 +266,7 @@ func (v *StatusVerifier) verifyPostInstall(visitor resource.Visitor, filename st
 		kind := un.GetKind()
 		name := un.GetName()
 		namespace := un.GetNamespace()
-		kinds := findResourceInSpec(kind)
+		kinds := findResourceInSpec(un.GetObjectKind().GroupVersionKind())
 		if kinds == "" {
 			kinds = strings.ToLower(kind) + "s"
 		}
diff --git a/istioctl/pkg/verifier/verify_test.go b/istioctl/pkg/verifier/verify_test.go
index bcb415472a..ee8efd9bda 100644
--- a/istioctl/pkg/verifier/verify_test.go
+++ b/istioctl/pkg/verifier/verify_test.go
@@ -19,6 +19,9 @@
 	"testing"
 
 	appsv1 "k8s.io/api/apps/v1"
+	"k8s.io/apimachinery/pkg/runtime/schema"
+
+	"istio.io/istio/pkg/config/schema/gvk"
 )
 
 var (
@@ -168,22 +171,22 @@ func TestGetDeploymentCondition(t *testing.T) {
 
 func TestFindResourceInSpec(t *testing.T) {
 	cases := []struct {
-		kind   string
+		kind   schema.GroupVersionKind
 		plural string
 	}{
 		{
 			// Should find Kubernetes resourcespecs
-			kind:   "Service",
+			kind:   gvk.Service.Kubernetes(),
 			plural: "services",
 		},
 		{
 			// Should be empty for not-found
-			kind:   "ThisIsNotAKubernetesResourceSpecKind",
+			kind:   schema.GroupVersionKind{Kind: "fake"},
 			plural: "",
 		},
 		{
 			// Should be empty for empty input
-			kind:   "",
+			kind:   schema.GroupVersionKind{},
 			plural: "",
 		},
 	}
diff --git a/operator/pkg/helmreconciler/reconciler.go b/operator/pkg/helmreconciler/reconciler.go
index 0d64814107..ec65cd9b00 100644
--- a/operator/pkg/helmreconciler/reconciler.go
+++ b/operator/pkg/helmreconciler/reconciler.go
@@ -49,7 +49,6 @@
 	"istio.io/istio/pkg/config/analysis/local"
 	"istio.io/istio/pkg/config/constants"
 	"istio.io/istio/pkg/config/resource"
-	istioConfigSchema "istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/kube"
 	"istio.io/pkg/version"
 )
@@ -569,7 +568,7 @@ func (h *HelmReconciler) analyzeWebhooks(whs []string) error {
 		return nil
 	}
 
-	sa := local.NewSourceAnalyzer(istioConfigSchema.NewMustGet(), analysis.Combine("webhook", &webhook.Analyzer{
+	sa := local.NewSourceAnalyzer(analysis.Combine("webhook", &webhook.Analyzer{
 		SkipServiceCheck: true,
 	}),
 		resource.Namespace(h.iop.Spec.GetNamespace()), resource.Namespace(istioV1Alpha1.Namespace(h.iop.Spec)), nil, true, 30*time.Second)
diff --git a/pilot/pkg/bootstrap/configcontroller.go b/pilot/pkg/bootstrap/configcontroller.go
index 0254f5ed26..8d4c65c533 100644
--- a/pilot/pkg/bootstrap/configcontroller.go
+++ b/pilot/pkg/bootstrap/configcontroller.go
@@ -295,7 +295,7 @@ func (s *Server) initInprocessAnalysisController(args *PilotArgs) error {
 		go leaderelection.
 			NewLeaderElection(args.Namespace, args.PodName, leaderelection.AnalyzeController, args.Revision, s.kubeClient).
 			AddRunFunction(func(stop <-chan struct{}) {
-				cont, err := incluster.NewController(stop, s.RWConfigStore, s.configController,
+				cont, err := incluster.NewController(stop, s.RWConfigStore,
 					s.kubeClient, args.Namespace, s.statusManager, args.RegistryOptions.KubeOptions.DomainSuffix)
 				if err != nil {
 					return
diff --git a/pilot/pkg/model/proxy_config_test.go b/pilot/pkg/model/proxy_config_test.go
index 2ea1b2f560..796e891496 100644
--- a/pilot/pkg/model/proxy_config_test.go
+++ b/pilot/pkg/model/proxy_config_test.go
@@ -28,7 +28,7 @@
 	istioTypes "istio.io/api/type/v1beta1"
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/mesh"
-	"istio.io/istio/pkg/config/schema/collections"
+	"istio.io/istio/pkg/config/schema/gvk"
 )
 
 var now = time.Now()
@@ -408,7 +408,7 @@ func TestEffectiveProxyConfig(t *testing.T) {
 func newProxyConfig(name, ns string, spec config.Spec) config.Config {
 	return config.Config{
 		Meta: config.Meta{
-			GroupVersionKind: collections.K8SNetworkingIstioIoV1Beta1Proxyconfigs.Resource().GroupVersionKind(),
+			GroupVersionKind: gvk.ProxyConfig,
 			Name:             name,
 			Namespace:        ns,
 		},
diff --git a/pkg/config/analysis/analyzer.go b/pkg/config/analysis/analyzer.go
index 0a7509eede..459d9684ec 100644
--- a/pkg/config/analysis/analyzer.go
+++ b/pkg/config/analysis/analyzer.go
@@ -15,8 +15,8 @@
 package analysis
 
 import (
+	"istio.io/istio/pilot/pkg/util/sets"
 	"istio.io/istio/pkg/config/analysis/scope"
-	"istio.io/istio/pkg/config/legacy/processing/transformer"
 	"istio.io/istio/pkg/config/schema/collection"
 )
 
@@ -67,25 +67,18 @@ func (c *CombinedAnalyzer) Analyze(ctx Context) {
 // Transformer information is used to determine, based on the disabled input collections, which output collections
 // should be disabled. Any analyzers that require those output collections will be removed.
 // 2. The analyzer requires a collection not available in the current snapshot(s)
-func (c *CombinedAnalyzer) RemoveSkipped(colsInSnapshots collection.Schemas, disabledInputs collection.Names, xformProviders transformer.Providers) []string {
-	disabledOutputs := getDisabledOutputs(disabledInputs, xformProviders)
+func (c *CombinedAnalyzer) RemoveSkipped(schemas collection.Schemas) []string {
+	s := sets.NewSet()
+	for _, sc := range schemas.All() {
+		s.Insert(sc.Name().String())
+	}
+
 	var enabled []Analyzer
 	var removedNames []string
-
-	snapshotCols := ContainmentMap(colsInSnapshots)
-
 mainloop:
 	for _, a := range c.analyzers {
 		for _, in := range a.Metadata().Inputs {
-			// Skip over any analyzers that require disabled input
-			if _, ok := disabledOutputs[in]; ok {
-				scope.Analysis.Infof("Skipping analyzer %q because collection %s is disabled.", a.Metadata().Name, in)
-				removedNames = append(removedNames, a.Metadata().Name)
-				continue mainloop
-			}
-
-			// Skip over any analyzers needing collections not in the snapshot(s)
-			if _, ok := snapshotCols[in]; !ok {
+			if !s.Contains(in.String()) {
 				scope.Analysis.Infof("Skipping analyzer %q because collection %s is not in the snapshot(s).", a.Metadata().Name, in)
 				removedNames = append(removedNames, a.Metadata().Name)
 				continue mainloop
@@ -116,49 +109,3 @@ func combineInputs(analyzers []Analyzer) collection.Names {
 
 	return result
 }
-
-func getDisabledOutputs(disabledInputs collection.Names, xformProviders transformer.Providers) map[collection.Name]struct{} {
-	// Get disabledCollections as a set
-	disabledInputSet := make(map[collection.Name]struct{})
-	for _, col := range disabledInputs {
-		disabledInputSet[col] = struct{}{}
-	}
-
-	// Disable all outputs where every xform has at least one input disabled
-	// 1. Count, for each output, how many xforms feed it
-	outputXformCount := make(map[collection.Name]int)
-	for _, p := range xformProviders {
-		p.Outputs().ForEach(func(out collection.Schema) (done bool) {
-			outputXformCount[out.Name()]++
-			return
-		})
-	}
-
-	// 2. For each xform, if inputs are disabled decrement each output counter for that xform
-	for _, p := range xformProviders {
-		hasDisabledInput := false
-		p.Inputs().ForEach(func(in collection.Schema) (done bool) {
-			if _, ok := disabledInputSet[in.Name()]; ok {
-				hasDisabledInput = true
-				return true
-			}
-			return
-		})
-		if hasDisabledInput {
-			p.Outputs().ForEach(func(out collection.Schema) (done bool) {
-				outputXformCount[out.Name()]--
-				return
-			})
-		}
-	}
-
-	// 3. Any outputs == 0, add to the result set
-	result := make(map[collection.Name]struct{})
-	for out, count := range outputXformCount {
-		if count == 0 {
-			result[out] = struct{}{}
-		}
-	}
-
-	return result
-}
diff --git a/pkg/config/analysis/analyzer_test.go b/pkg/config/analysis/analyzer_test.go
index b496c12726..e8d50bf96a 100644
--- a/pkg/config/analysis/analyzer_test.go
+++ b/pkg/config/analysis/analyzer_test.go
@@ -19,11 +19,7 @@
 
 	. "github.com/onsi/gomega"
 
-	"istio.io/api/mesh/v1alpha1"
 	"istio.io/istio/pkg/config/analysis/diag"
-	"istio.io/istio/pkg/config/event"
-	util "istio.io/istio/pkg/config/legacy/processing"
-	"istio.io/istio/pkg/config/legacy/processing/transformer"
 	"istio.io/istio/pkg/config/resource"
 	"istio.io/istio/pkg/config/schema/collection"
 	resource2 "istio.io/istio/pkg/config/schema/resource"
@@ -69,20 +65,14 @@ func TestCombinedAnalyzer(t *testing.T) {
 	a3 := &analyzer{name: "a3", inputs: collection.Names{col3.Name()}}
 	a4 := &analyzer{name: "a4", inputs: collection.Names{col4.Name()}}
 
-	xform := transformer.NewSimpleTransformerProvider(col3, col3, func(_ event.Event, _ event.Handler) {})
-
 	a := Combine("combined", a1, a2, a3, a4)
 	g.Expect(a.Metadata().Inputs).To(ConsistOf(col1.Name(), col2.Name(), col3.Name(), col4.Name()))
 
 	avalableSchemas := collection.NewSchemasBuilder()
 	avalableSchemas.Add(&testSchemaImpl{col1.Name()})
 	avalableSchemas.Add(&testSchemaImpl{col2.Name()})
-	avalableSchemas.Add(&testSchemaImpl{col3.Name()})
 
-	removed := a.RemoveSkipped(
-		avalableSchemas.Build(),
-		collection.Names{col3.Name()},
-		transformer.Providers{xform})
+	removed := a.RemoveSkipped(avalableSchemas.Build())
 
 	g.Expect(removed).To(ConsistOf(a3.Metadata().Name, a4.Metadata().Name))
 	g.Expect(a.Metadata().Inputs).To(ConsistOf(col1.Name(), col2.Name()))
@@ -95,49 +85,6 @@ func TestCombinedAnalyzer(t *testing.T) {
 	g.Expect(a4.ran).To(BeFalse())
 }
 
-// ProcessorOptions are options that are passed to event.Processors during startup.
-type ProcessorOptions struct {
-	MeshConfig   *v1alpha1.MeshConfig
-	DomainSuffix string
-}
-
-func TestGetDisabledOutputs(t *testing.T) {
-	g := NewWithT(t)
-
-	in1 := newSchema("in1")
-	in2 := newSchema("in2")
-	in3 := newSchema("in3")
-	in4 := newSchema("in4")
-	in5 := newSchema("in5")
-	out1 := newSchema("out1")
-	out2 := newSchema("out2")
-	out3 := newSchema("out3")
-	out4 := newSchema("out4")
-
-	blankFn := func(_ util.ProcessorOptions) event.Transformer {
-		return event.NewFnTransform(collection.SchemasFor(), collection.SchemasFor(), func() {}, func() {}, func(e event.Event, handler event.Handler) {})
-	}
-
-	xformProviders := transformer.Providers{
-		transformer.NewProvider(collection.SchemasFor(in1), collection.SchemasFor(out1, out2), blankFn),
-		transformer.NewProvider(collection.SchemasFor(in2), collection.SchemasFor(out3), blankFn),
-		transformer.NewProvider(collection.SchemasFor(in3), collection.SchemasFor(out3), blankFn),
-		transformer.NewProvider(collection.SchemasFor(in4, in5), collection.SchemasFor(out4), blankFn),
-	}
-
-	expectCollections(g, getDisabledOutputs(collection.Names{in1.Name()}, xformProviders), collection.Names{out1.Name(), out2.Name()})
-	expectCollections(g, getDisabledOutputs(collection.Names{in2.Name()}, xformProviders), collection.Names{})
-	expectCollections(g, getDisabledOutputs(collection.Names{in2.Name(), in3.Name()}, xformProviders), collection.Names{out3.Name()})
-	expectCollections(g, getDisabledOutputs(collection.Names{in4.Name()}, xformProviders), collection.Names{out4.Name()})
-}
-
-func expectCollections(g *GomegaWithT, actualSet map[collection.Name]struct{}, expectedCols collection.Names) {
-	g.Expect(actualSet).To(HaveLen(len(expectedCols)))
-	for _, col := range expectedCols {
-		g.Expect(actualSet).To(HaveKey(col))
-	}
-}
-
 func newSchema(name string) collection.Schema {
 	return collection.Builder{
 		Name: name,
diff --git a/pkg/config/analysis/analyzers/analyzers_bench_test.go b/pkg/config/analysis/analyzers/analyzers_bench_test.go
index 93006259a6..dda5933235 100644
--- a/pkg/config/analysis/analyzers/analyzers_bench_test.go
+++ b/pkg/config/analysis/analyzers/analyzers_bench_test.go
@@ -24,10 +24,8 @@
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/analysis/local"
 	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/collection"
 	"istio.io/istio/pkg/config/schema/collections"
-	"istio.io/istio/pkg/config/schema/snapshots"
 	"istio.io/pkg/log"
 )
 
@@ -77,21 +75,9 @@ func benchmarkAnalyzersArtificialBlankData(count int, b *testing.B) {
 	validationScope.SetOutputLevel(log.ErrorLevel)
 	defer validationScope.SetOutputLevel(oldLevel)
 
-	// Get the set of collections that could actually get used
-	m := schema.MustGet()
-	isUsedCollection := make(map[string]bool)
-	for _, col := range m.AllCollectionsInSnapshots(snapshots.SnapshotNames()) {
-		isUsedCollection[col] = true
-	}
-
 	// Generate blank test data
 	store := memory.MakeSkipValidation(collections.All)
 	collections.All.ForEach(func(s collection.Schema) bool {
-		// Skip over collections that the Galley pipeline would always ignore
-		if !isUsedCollection[s.Name().String()] {
-			return false
-		}
-
 		for i := 0; i < count; i++ {
 			name := resource.NewFullName("default", resource.LocalName(fmt.Sprintf("%s-%d", s.Name(), i)))
 			_, _ = store.Create(config.Config{
diff --git a/pkg/config/analysis/analyzers/analyzers_test.go b/pkg/config/analysis/analyzers/analyzers_test.go
index 9641a159b3..8dd5ff609d 100644
--- a/pkg/config/analysis/analyzers/analyzers_test.go
+++ b/pkg/config/analysis/analyzers/analyzers_test.go
@@ -43,7 +43,6 @@
 	"istio.io/istio/pkg/config/analysis/diag"
 	"istio.io/istio/pkg/config/analysis/local"
 	"istio.io/istio/pkg/config/analysis/msg"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/collection"
 	"istio.io/istio/pkg/config/schema/collections"
 )
@@ -732,7 +731,7 @@ func TestAnalyzersHaveDescription(t *testing.T) {
 }
 
 func setupAnalyzerForCase(tc testCase, cr local.CollectionReporterFn) (*local.IstiodAnalyzer, error) {
-	sa := local.NewSourceAnalyzer(schema.NewMustGet(), analysis.Combine("testCase", tc.analyzer), "", "istio-system", cr, true, 10*time.Second)
+	sa := local.NewSourceAnalyzer(analysis.Combine("testCase", tc.analyzer), "", "istio-system", cr, true, 10*time.Second)
 
 	// If a mesh config file is specified, use it instead of the defaults
 	if tc.meshConfigFile != "" {
diff --git a/pkg/config/analysis/equivalence.go b/pkg/config/analysis/equivalence.go
deleted file mode 100644
index df0bdc0301..0000000000
--- a/pkg/config/analysis/equivalence.go
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- Copyright Istio Authors
-
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
-*/
-
-package analysis
-
-import (
-	"istio.io/istio/pkg/config/schema/collection"
-	"istio.io/istio/pkg/config/schema/collections"
-)
-
-var globals = map[collection.Schema]collection.Schema{
-	collections.K8SExtensionsIstioIoV1Alpha1Wasmplugins:         collections.IstioExtensionsV1Alpha1Wasmplugins,
-	collections.K8SNetworkingIstioIoV1Alpha3Destinationrules:    collections.IstioNetworkingV1Alpha3Destinationrules,
-	collections.K8SNetworkingIstioIoV1Alpha3Envoyfilters:        collections.IstioNetworkingV1Alpha3Envoyfilters,
-	collections.K8SNetworkingIstioIoV1Alpha3Gateways:            collections.IstioNetworkingV1Alpha3Gateways,
-	collections.K8SNetworkingIstioIoV1Alpha3Serviceentries:      collections.IstioNetworkingV1Alpha3Serviceentries,
-	collections.K8SNetworkingIstioIoV1Alpha3Sidecars:            collections.IstioNetworkingV1Alpha3Sidecars,
-	collections.K8SNetworkingIstioIoV1Alpha3Virtualservices:     collections.IstioNetworkingV1Alpha3Virtualservices,
-	collections.K8SNetworkingIstioIoV1Alpha3Workloadentries:     collections.IstioNetworkingV1Alpha3Workloadentries,
-	collections.K8SNetworkingIstioIoV1Alpha3Workloadgroups:      collections.IstioNetworkingV1Alpha3Workloadgroups,
-	collections.K8SNetworkingIstioIoV1Beta1Proxyconfigs:         collections.IstioNetworkingV1Beta1Proxyconfigs,
-	collections.K8SSecurityIstioIoV1Beta1Authorizationpolicies:  collections.IstioSecurityV1Beta1Authorizationpolicies,
-	collections.K8SSecurityIstioIoV1Beta1Peerauthentications:    collections.IstioSecurityV1Beta1Peerauthentications,
-	collections.K8SSecurityIstioIoV1Beta1Requestauthentications: collections.IstioSecurityV1Beta1Requestauthentications,
-	collections.K8STelemetryIstioIoV1Alpha1Telemetries:          collections.IstioTelemetryV1Alpha1Telemetries,
-}
-
-func AreEquivalent(one, two collection.Schema) bool {
-	if eq, ok := globals[one]; ok {
-		return two == eq
-	}
-	if eq, ok := globals[two]; ok {
-		return one == eq
-	}
-	return one == two
-}
-
-func ContainmentMap(schemas collection.Schemas) map[collection.Name]struct{} {
-	out := map[collection.Name]struct{}{}
-	for schema := range ContainmentMapSchema(schemas) {
-		out[schema.Name()] = struct{}{}
-	}
-	return out
-}
-
-func ContainmentMapSchema(schemas collection.Schemas) map[collection.Schema]struct{} {
-	reverseMap := map[collection.Schema]collection.Schema{}
-	for k, v := range globals {
-		reverseMap[v] = k
-	}
-	out := map[collection.Schema]struct{}{}
-	for _, schema := range schemas.All() {
-		out[schema] = struct{}{}
-		if val, ok := globals[schema]; ok {
-			out[val] = struct{}{}
-		} else if val, ok := reverseMap[schema]; ok {
-			out[val] = struct{}{}
-		}
-	}
-	return out
-}
diff --git a/pkg/config/analysis/incluster/controller.go b/pkg/config/analysis/incluster/controller.go
index 8d0b89b121..10dfcf210e 100644
--- a/pkg/config/analysis/incluster/controller.go
+++ b/pkg/config/analysis/incluster/controller.go
@@ -26,12 +26,10 @@
 	"istio.io/istio/pilot/pkg/config/kube/arbitraryclient"
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pilot/pkg/status"
-	"istio.io/istio/pkg/config/analysis"
 	"istio.io/istio/pkg/config/analysis/analyzers"
 	"istio.io/istio/pkg/config/analysis/diag"
 	"istio.io/istio/pkg/config/analysis/local"
 	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/collection"
 	"istio.io/istio/pkg/config/schema/collections"
 	"istio.io/istio/pkg/kube"
@@ -45,20 +43,15 @@ type Controller struct {
 	statusctl *status.Controller
 }
 
-func NewController(stop <-chan struct{}, rwConfigStore, configController model.ConfigStoreCache,
+func NewController(stop <-chan struct{}, rwConfigStore model.ConfigStoreCache,
 	kubeClient kube.Client, namespace string, statusManager *status.Manager, domainSuffix string) (*Controller, error) {
-	ia := local.NewIstiodAnalyzer(schema.MustBuildMetadata(configController.Schemas()), analyzers.AllCombined(),
+	ia := local.NewIstiodAnalyzer(analyzers.AllCombined(),
 		"", resource.Namespace(namespace), func(name collection.Name) {}, true)
 	ia.AddSource(rwConfigStore)
 	ctx := status.NewIstioContext(stop)
-	// TODO: many of the types in PilotGatewayAPI (watched above) are duplicated
-	// I'm not sure why, but we shouldn't watch them twice.
-	duplicates := []collection.Schema{}
-	for k := range analysis.ContainmentMapSchema(rwConfigStore.Schemas()) {
-		duplicates = append(duplicates, k)
-	}
+	// Filter out configs watched by rwConfigStore
 	store, err := arbitraryclient.NewForSchemas(ctx, kubeClient, "default",
-		domainSuffix, collections.All.Remove(duplicates...))
+		domainSuffix, collections.All.Remove(rwConfigStore.Schemas().All()...))
 	if err != nil {
 		return nil, fmt.Errorf("unable to load common types for analysis, releasing lease: %v", err)
 	}
diff --git a/pkg/config/analysis/local/analyze_test.go b/pkg/config/analysis/local/analyze_test.go
index d65f58c579..08c86ba051 100644
--- a/pkg/config/analysis/local/analyze_test.go
+++ b/pkg/config/analysis/local/analyze_test.go
@@ -28,10 +28,8 @@
 	"istio.io/istio/pilot/pkg/model"
 	"istio.io/istio/pkg/config/analysis"
 	"istio.io/istio/pkg/config/analysis/msg"
-	"istio.io/istio/pkg/config/legacy/testing/k8smeta"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/collection"
 	"istio.io/istio/pkg/kube"
 )
@@ -79,7 +77,7 @@ func TestAbortWithNoSources(t *testing.T) {
 
 	cancel := make(chan struct{})
 
-	sa := NewSourceAnalyzer(k8smeta.NewMustGet(), blankCombinedAnalyzer, "", "", nil, false, timeout)
+	sa := NewSourceAnalyzer(blankCombinedAnalyzer, "", "", nil, false, timeout)
 	_, err := sa.Analyze(cancel)
 	g.Expect(err).To(Not(BeNil()))
 }
@@ -103,7 +101,7 @@ func TestAnalyzersRun(t *testing.T) {
 		collectionAccessed = col
 	}
 
-	sa := NewSourceAnalyzer(schema.NewMustGet(), analysis.Combine("a", a), "", "", cr, false, timeout)
+	sa := NewSourceAnalyzer(analysis.Combine("a", a), "", "", cr, false, timeout)
 	err := sa.AddReaderKubeSource(nil)
 	g.Expect(err).To(BeNil())
 
@@ -130,7 +128,7 @@ func TestFilterOutputByNamespace(t *testing.T) {
 		},
 	}
 
-	sa := NewSourceAnalyzer(schema.NewMustGet(), analysis.Combine("a", a), "ns1", "", nil, false, timeout)
+	sa := NewSourceAnalyzer(analysis.Combine("a", a), "ns1", "", nil, false, timeout)
 	err := sa.AddReaderKubeSource(nil)
 	g.Expect(err).To(BeNil())
 
@@ -142,7 +140,7 @@ func TestFilterOutputByNamespace(t *testing.T) {
 func TestAddInMemorySource(t *testing.T) {
 	g := NewWithT(t)
 
-	sa := NewSourceAnalyzer(k8smeta.NewMustGet(), blankCombinedAnalyzer, "", "", nil, false, timeout)
+	sa := NewSourceAnalyzer(blankCombinedAnalyzer, "", "", nil, false, timeout)
 
 	src := model.NewFakeStore()
 	sa.AddSource(dfCache{ConfigStore: src})
@@ -156,7 +154,7 @@ func TestAddRunningKubeSource(t *testing.T) {
 
 	mk := kube.NewFakeClient()
 
-	sa := NewSourceAnalyzer(k8smeta.NewMustGet(), blankCombinedAnalyzer, "", "", nil, false, timeout)
+	sa := NewSourceAnalyzer(blankCombinedAnalyzer, "", "", nil, false, timeout)
 
 	sa.AddRunningKubeSource(mk)
 	g.Expect(*sa.meshCfg).To(Equal(mesh.DefaultMeshConfig())) // Base default meshcfg
@@ -186,7 +184,7 @@ func TestAddRunningKubeSourceWithIstioMeshConfigMap(t *testing.T) {
 		t.Fatalf("Error creating mesh config configmap: %v", err)
 	}
 
-	sa := NewSourceAnalyzer(k8smeta.NewMustGet(), blankCombinedAnalyzer, "", istioNamespace, nil, false, timeout)
+	sa := NewSourceAnalyzer(blankCombinedAnalyzer, "", istioNamespace, nil, false, timeout)
 
 	sa.AddRunningKubeSource(mk)
 	g.Expect(sa.meshCfg.RootNamespace).To(Equal(testRootNamespace))
@@ -197,7 +195,7 @@ func TestAddRunningKubeSourceWithIstioMeshConfigMap(t *testing.T) {
 func TestAddReaderKubeSource(t *testing.T) {
 	g := NewWithT(t)
 
-	sa := NewSourceAnalyzer(schema.MustGet(), blankCombinedAnalyzer, "", "", nil, false, timeout)
+	sa := NewSourceAnalyzer(blankCombinedAnalyzer, "", "", nil, false, timeout)
 
 	tmpfile := tempFileFromString(t, YamlN1I1V1)
 	defer os.Remove(tmpfile.Name())
@@ -220,7 +218,7 @@ func TestAddReaderKubeSource(t *testing.T) {
 func TestAddReaderKubeSourceSkipsBadEntries(t *testing.T) {
 	g := NewWithT(t)
 
-	sa := NewSourceAnalyzer(schema.MustGet(), blankCombinedAnalyzer, "", "", nil, false, timeout)
+	sa := NewSourceAnalyzer(blankCombinedAnalyzer, "", "", nil, false, timeout)
 
 	tmpfile := tempFileFromString(t, JoinString(YamlN1I1V1, "bogus resource entry\n"))
 	defer func() { _ = os.Remove(tmpfile.Name()) }()
@@ -258,7 +256,7 @@ func JoinString(parts ...string) string {
 func TestDefaultResourcesRespectsMeshConfig(t *testing.T) {
 	g := NewWithT(t)
 
-	sa := NewSourceAnalyzer(schema.MustGet(), blankCombinedAnalyzer, "", "", nil, false, timeout)
+	sa := NewSourceAnalyzer(blankCombinedAnalyzer, "", "", nil, false, timeout)
 
 	// With ingress off, we shouldn't generate any default resources
 	ingressOffMeshCfg := tempFileFromString(t, "ingressControllerMode: 'OFF'")
diff --git a/pkg/config/analysis/local/helpers_test.go b/pkg/config/analysis/local/helpers_test.go
index d1a5b952df..c587d29574 100644
--- a/pkg/config/analysis/local/helpers_test.go
+++ b/pkg/config/analysis/local/helpers_test.go
@@ -32,25 +32,6 @@
 var K8SCollection1 = collection.Builder{
 	Name:         "k8s/collection1",
 	VariableName: "K8SCollection1",
-	Disabled:     false,
-	Resource: r2.Builder{
-		Group:         "testdata.istio.io",
-		Kind:          "Kind1",
-		Plural:        "Kind1s",
-		Version:       "v1alpha1",
-		Proto:         "google.protobuf.Struct",
-		ReflectType:   reflect.TypeOf(&types.Struct{}).Elem(),
-		ProtoPackage:  "github.com/gogo/protobuf/types",
-		ClusterScoped: false,
-		ValidateProto: validation.EmptyValidate,
-	}.MustBuild(),
-}.MustBuild()
-
-// Collection2 describes the collection collection2
-var Collection2 = collection.Builder{
-	Name:         "collection2",
-	VariableName: "Collection2",
-	Disabled:     false,
 	Resource: r2.Builder{
 		Group:         "testdata.istio.io",
 		Kind:          "Kind1",
diff --git a/pkg/config/analysis/local/istiod_analyze.go b/pkg/config/analysis/local/istiod_analyze.go
index 444a4000aa..586597cd55 100644
--- a/pkg/config/analysis/local/istiod_analyze.go
+++ b/pkg/config/analysis/local/istiod_analyze.go
@@ -41,12 +41,9 @@
 	"istio.io/istio/pkg/config/analysis/diag"
 	"istio.io/istio/pkg/config/analysis/scope"
 	mesh_const "istio.io/istio/pkg/config/legacy/mesh"
-	"istio.io/istio/pkg/config/legacy/processing/transformer"
-	"istio.io/istio/pkg/config/legacy/processor/transforms"
 	"istio.io/istio/pkg/config/legacy/util/kuberesource"
 	"istio.io/istio/pkg/config/mesh"
 	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/collection"
 	"istio.io/istio/pkg/config/schema/collections"
 	kubelib "istio.io/istio/pkg/kube"
@@ -54,14 +51,16 @@
 
 // IstiodAnalyzer handles local analysis of k8s event sources, both live and file-based
 type IstiodAnalyzer struct {
-	m *schema.Metadata
-	// sources              []precedenceSourceInput
-	internalStore        model.ConfigStore
-	stores               []model.ConfigStoreCache
-	analyzer             *analysis.CombinedAnalyzer
-	transformerProviders transformer.Providers
-	namespace            resource.Namespace
-	istioNamespace       resource.Namespace
+	// internalStore stores synthetic configs for analysis (mesh config, etc)
+	internalStore model.ConfigStore
+	// stores contains all the (non file) config sources to analyze
+	stores []model.ConfigStoreCache
+	// fileSource contains all file bases sources
+	fileSource *file.KubeSource
+
+	analyzer       *analysis.CombinedAnalyzer
+	namespace      resource.Namespace
+	istioNamespace resource.Namespace
 
 	initializedStore model.ConfigStoreCache
 
@@ -81,50 +80,41 @@ type IstiodAnalyzer struct {
 	// Hook function called when a collection is used in analysis
 	collectionReporter CollectionReporterFn
 
-	fileSource   *file.KubeSource
 	clientsToRun []kubelib.Client
 }
 
 // NewSourceAnalyzer is a drop-in replacement for the galley function, adapting to istiod analyzer.
-func NewSourceAnalyzer(m *schema.Metadata, analyzer *analysis.CombinedAnalyzer, namespace, istioNamespace resource.Namespace,
+func NewSourceAnalyzer(analyzer *analysis.CombinedAnalyzer, namespace, istioNamespace resource.Namespace,
 	cr CollectionReporterFn, serviceDiscovery bool, _ time.Duration) *IstiodAnalyzer {
-	return NewIstiodAnalyzer(m, analyzer, namespace, istioNamespace, cr, serviceDiscovery)
+	return NewIstiodAnalyzer(analyzer, namespace, istioNamespace, cr, serviceDiscovery)
 }
 
 // NewIstiodAnalyzer creates a new IstiodAnalyzer with no sources. Use the Add*Source
 // methods to add sources in ascending precedence order,
 // then execute Analyze to perform the analysis
-func NewIstiodAnalyzer(m *schema.Metadata, analyzer *analysis.CombinedAnalyzer, namespace,
+func NewIstiodAnalyzer(analyzer *analysis.CombinedAnalyzer, namespace,
 	istioNamespace resource.Namespace, cr CollectionReporterFn, serviceDiscovery bool) *IstiodAnalyzer {
 	// collectionReporter hook function defaults to no-op
 	if cr == nil {
 		cr = func(collection.Name) {}
 	}
 
-	transformerProviders := transforms.Providers(m)
-
 	// Get the closure of all input collections for our analyzer, paying attention to transforms
-	kubeResources := kuberesource.DisableExcludedCollections(
-		m.KubeCollections(),
-		transformerProviders,
+	kubeResources := kuberesource.SkipExcludedCollections(
 		analyzer.Metadata().Inputs,
 		kuberesource.DefaultExcludedResourceKinds(),
 		serviceDiscovery)
 
-	kubeResources = kubeResources.WithoutDisabledCollections()
-
 	mcfg := mesh.DefaultMeshConfig()
 	sa := &IstiodAnalyzer{
-		m:                    m,
-		meshCfg:              &mcfg,
-		meshNetworks:         mesh.DefaultMeshNetworks(),
-		analyzer:             analyzer,
-		transformerProviders: transformerProviders,
-		namespace:            namespace,
-		internalStore:        memory.Make(collection.SchemasFor(collections.IstioMeshV1Alpha1MeshNetworks, collections.IstioMeshV1Alpha1MeshConfig)),
-		istioNamespace:       istioNamespace,
-		kubeResources:        kubeResources,
-		collectionReporter:   cr,
+		meshCfg:            &mcfg,
+		meshNetworks:       mesh.DefaultMeshNetworks(),
+		analyzer:           analyzer,
+		namespace:          namespace,
+		internalStore:      memory.Make(collection.SchemasFor(collections.IstioMeshV1Alpha1MeshNetworks, collections.IstioMeshV1Alpha1MeshConfig)),
+		istioNamespace:     istioNamespace,
+		kubeResources:      kubeResources,
+		collectionReporter: cr,
 	}
 
 	return sa
@@ -134,10 +124,8 @@ func NewIstiodAnalyzer(m *schema.Metadata, analyzer *analysis.CombinedAnalyzer,
 func (sa *IstiodAnalyzer) ReAnalyze(cancel <-chan struct{}) (AnalysisResult, error) {
 	var result AnalysisResult
 	store := sa.initializedStore
-	allSchemas := store.Schemas()
-	result.SkippedAnalyzers = sa.analyzer.RemoveSkipped(allSchemas,
-		sa.kubeResources.DisabledCollectionNames(), sa.transformerProviders)
 	result.ExecutedAnalyzers = sa.analyzer.AnalyzerNames()
+	result.SkippedAnalyzers = sa.analyzer.RemoveSkipped(store.Schemas())
 
 	cache.WaitForCacheSync(cancel,
 		store.HasSynced)
@@ -275,6 +263,7 @@ func (sa *IstiodAnalyzer) AddReaderKubeSource(readers []ReaderSource) error {
 // Also tries to get mesh config from the running cluster, if it can
 func (sa *IstiodAnalyzer) AddRunningKubeSource(c kubelib.Client) {
 	// TODO: are either of these string constants intended to vary?
+	// This gets us only istio/ ones
 	store, err := crdclient.NewForSchemas(context.Background(), c, "default",
 		"cluster.local", sa.kubeResources.Intersect(collections.PilotGatewayAPI))
 	// RunAndWait must be called after NewForSchema so that the informers are all created and started.
@@ -293,15 +282,8 @@ func (sa *IstiodAnalyzer) AddRunningKubeSource(c kubelib.Client) {
 		return
 	}
 
-	// TODO: many of the types in PilotGatewayAPI (watched above) are duplicated
-	// I'm not sure why, but we shouldn't watch them twice.
-	duplicates := []collection.Schema{}
-	for k := range analysis.ContainmentMapSchema(collections.PilotGatewayAPI) {
-		duplicates = append(duplicates, k)
-	}
-
 	store, err = arbitraryclient.NewForSchemas(context.Background(), c, "default",
-		"cluster.local", sa.kubeResources.Remove(duplicates...))
+		"cluster.local", sa.kubeResources.Remove(collections.PilotGatewayAPI.All()...))
 	if err != nil {
 		scope.Analysis.Errorf("error adding kube arbitraryclient: %v", err)
 		return
diff --git a/pkg/config/event/buffer.go b/pkg/config/event/buffer.go
deleted file mode 100644
index 01dbe1e295..0000000000
--- a/pkg/config/event/buffer.go
+++ /dev/null
@@ -1,111 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-import (
-	"sync"
-
-	"istio.io/istio/pkg/config/analysis/scope"
-)
-
-// Buffer is a growing event buffer.
-type Buffer struct {
-	mu         sync.Mutex
-	queue      queue
-	handler    Handler
-	cond       *sync.Cond
-	processing bool
-}
-
-var (
-	_ Handler    = &Buffer{}
-	_ Dispatcher = &Buffer{}
-)
-
-// NewBuffer returns new Buffer instance
-func NewBuffer() *Buffer {
-	b := &Buffer{}
-	b.cond = sync.NewCond(&b.mu)
-	return b
-}
-
-// WithBuffer returns a new Buffer instance that listens to the given Source.
-func WithBuffer(s Dispatcher) *Buffer {
-	b := NewBuffer()
-	s.Dispatch(b)
-
-	return b
-}
-
-// Handle implements Handler
-func (b *Buffer) Handle(e Event) {
-	b.mu.Lock()
-	b.queue.add(e)
-	b.cond.Broadcast()
-	b.mu.Unlock()
-}
-
-// Dispatch implements Source
-func (b *Buffer) Dispatch(handler Handler) {
-	b.handler = CombineHandlers(b.handler, handler)
-}
-
-// Clear the buffer contents.
-func (b *Buffer) Clear() {
-	b.mu.Lock()
-	b.queue.clear()
-	b.mu.Unlock()
-}
-
-// Stop processing
-func (b *Buffer) Stop() {
-	b.mu.Lock()
-	b.processing = false
-	b.cond.Broadcast()
-	b.mu.Unlock()
-}
-
-// Process events in the buffer. This method will not return until the Buffer is stopped.
-func (b *Buffer) Process() {
-	b.mu.Lock()
-	if b.processing {
-		b.mu.Unlock()
-		return
-	}
-	b.processing = true
-
-	for {
-		// lock must be held when entering the for loop (whether from beginning, or through loop continuation).
-		// this makes locking/unlocking slightly more efficient.
-		if !b.processing {
-			scope.Processing.Debug(">>> Buffer.Process: exiting")
-			b.mu.Unlock()
-			return
-		}
-
-		e, ok := b.queue.pop()
-		if !ok {
-			scope.Processing.Debug("Buffer.Process: no more items to process, waiting")
-			b.cond.Wait()
-			continue
-		}
-
-		if b.handler != nil {
-			b.mu.Unlock()
-			b.handler.Handle(e)
-			b.mu.Lock()
-		}
-	}
-}
diff --git a/pkg/config/event/buffer_test.go b/pkg/config/event/buffer_test.go
deleted file mode 100644
index 11d8f241f3..0000000000
--- a/pkg/config/event/buffer_test.go
+++ /dev/null
@@ -1,140 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event_test
-
-import (
-	"sync/atomic"
-	"testing"
-	"time"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	"istio.io/istio/pkg/config/legacy/testing/data"
-	"istio.io/istio/pkg/config/legacy/testing/fixtures"
-)
-
-func TestBuffer_Basics(t *testing.T) {
-	g := NewWithT(t)
-
-	s := &fixtures.Source{}
-	acc := &fixtures.Accumulator{}
-
-	b := event.WithBuffer(s)
-	b.Dispatch(acc)
-
-	s.Handlers.Handle(data.Event1Col1AddItem1)
-
-	go b.Process()
-
-	g.Eventually(acc.Events).Should(HaveLen(1))
-	g.Eventually(acc.Events).Should(ContainElement(data.Event1Col1AddItem1))
-
-	b.Stop()
-}
-
-func TestBuffer_Clear(t *testing.T) {
-	g := NewWithT(t)
-
-	s := &fixtures.Source{}
-	acc := &fixtures.Accumulator{}
-
-	b := event.WithBuffer(s)
-	b.Dispatch(acc)
-
-	s.Handlers.Handle(data.Event1Col1AddItem1)
-
-	b.Clear()
-	g.Consistently(acc.Events).Should(HaveLen(0))
-
-	b.Stop()
-}
-
-func TestBuffer_DoubleProcess(t *testing.T) {
-	g := NewWithT(t)
-
-	s := &fixtures.Source{}
-	acc := &fixtures.Accumulator{}
-
-	b := event.WithBuffer(s)
-	b.Dispatch(acc)
-
-	s.Handlers.Handle(data.Event1Col1AddItem1)
-
-	var ready int32
-	var cnt int32
-	go func() {
-		atomic.AddInt32(&cnt, 1)
-		atomic.AddInt32(&ready, 1)
-		b.Process()
-		atomic.AddInt32(&cnt, -1)
-	}()
-	go func() {
-		atomic.AddInt32(&cnt, 1)
-		atomic.AddInt32(&ready, 1)
-		b.Process()
-		atomic.AddInt32(&cnt, -1)
-	}()
-
-	// Wait for cnt to update.
-	g.Eventually(func() int32 { return atomic.LoadInt32(&ready) }).Should(Equal(int32(2)))
-
-	// Only one of the process calls should keep executing.
-	g.Eventually(func() int32 { return atomic.LoadInt32(&cnt) }).Should(Equal(int32(1)))
-
-	// Both process calls should exit.
-	b.Stop()
-	g.Eventually(func() int32 { return atomic.LoadInt32(&cnt) }).Should(Equal(int32(0)))
-}
-
-func TestBuffer_Stress(t *testing.T) {
-	g := NewWithT(t)
-
-	s := &fixtures.Source{}
-	acc := &fixtures.Accumulator{}
-
-	b := event.WithBuffer(s)
-	b.Dispatch(acc)
-
-	go b.Process()
-	time.Sleep(time.Millisecond) // Yield
-
-	var pumps int32
-	var cnt int32
-	var done int32
-	pump := func() {
-		atomic.AddInt32(&pumps, 1)
-		for {
-			b.Handle(data.Event1Col1AddItem1)
-			atomic.AddInt32(&cnt, 1)
-			if atomic.LoadInt32(&done) != 0 {
-				break
-			}
-		}
-		atomic.AddInt32(&pumps, -1)
-	}
-
-	for i := 0; i < 100; i++ {
-		go pump()
-	}
-
-	g.Eventually(func() int32 { return atomic.LoadInt32(&pumps) }).Should(Equal(int32(100)))
-	time.Sleep(time.Second) // Let the pumps run for a second.
-	atomic.StoreInt32(&done, 1)
-	g.Eventually(func() int32 { return atomic.LoadInt32(&pumps) }).Should(Equal(int32(0)))
-	t.Logf("Pumped '%d' events.", atomic.LoadInt32(&cnt))
-	g.Eventually(acc.Events, time.Second*5, time.Millisecond*100).Should(HaveLen(int(atomic.LoadInt32(&cnt))))
-	b.Stop()
-}
diff --git a/pkg/config/event/dispatcher.go b/pkg/config/event/dispatcher.go
deleted file mode 100644
index c28d9d1087..0000000000
--- a/pkg/config/event/dispatcher.go
+++ /dev/null
@@ -1,21 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-// Dispatcher is an event source that can dispatch events to Handlers.
-type Dispatcher interface {
-	// Dispatch events to the given handler.
-	Dispatch(handler Handler)
-}
diff --git a/pkg/config/event/event.go b/pkg/config/event/event.go
deleted file mode 100644
index 45ce91d1e4..0000000000
--- a/pkg/config/event/event.go
+++ /dev/null
@@ -1,126 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-import (
-	"fmt"
-
-	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-var _ fmt.Stringer = Event{}
-
-// Event represents a change that occurred against a resource in the source config system.
-type Event struct {
-	Kind Kind
-
-	// Source collection that this event is emanating from.
-	Source collection.Schema
-
-	// A single entry, in case the event is Added, Updated or Deleted.
-	Resource *resource.Instance
-}
-
-// SourceName is a utility method that returns the name of the source. If nil, returns "".
-func (e *Event) SourceName() collection.Name {
-	if e.Source != nil {
-		return e.Source.Name()
-	}
-	return ""
-}
-
-// IsSource checks whether the event has the appropriate source and returns false if it does not.
-func (e *Event) IsSource(s collection.Name) bool {
-	return e.SourceName() == s
-}
-
-// IsSourceAny checks whether the event has the appropriate source and returns false if it does not.
-func (e *Event) IsSourceAny(names ...collection.Name) bool {
-	name := e.SourceName()
-	for _, n := range names {
-		if n == name {
-			return true
-		}
-	}
-
-	return false
-}
-
-// WithSource returns a new event with the source changed to the given collection.Name, if the event.Kind != Reset.
-func (e *Event) WithSource(s collection.Schema) Event {
-	if e.Kind == Reset {
-		return *e
-	}
-
-	r := *e
-	r.Source = s
-	return r
-}
-
-// Clone creates a deep clone of the event.
-func (e *Event) Clone() Event {
-	entry := e.Resource
-	if entry != nil {
-		entry = entry.Clone()
-	}
-	return Event{
-		Resource: entry,
-		Source:   e.Source,
-		Kind:     e.Kind,
-	}
-}
-
-// String implements Stringer.String
-func (e Event) String() string {
-	switch e.Kind {
-	case Added, Updated, Deleted:
-		return fmt.Sprintf("[Event](%s: %v/%v)", e.Kind.String(), e.SourceName(), e.Resource.Metadata.FullName)
-	case FullSync:
-		return fmt.Sprintf("[Event](%s: %v)", e.Kind.String(), e.SourceName())
-	default:
-		return fmt.Sprintf("[Event](%s)", e.Kind.String())
-	}
-}
-
-// FullSyncFor creates a FullSync event for the given source.
-func FullSyncFor(source collection.Schema) Event {
-	return Event{Kind: FullSync, Source: source}
-}
-
-// AddFor creates an Add event for the given source and entry.
-func AddFor(source collection.Schema, r *resource.Instance) Event {
-	return Event{Kind: Added, Source: source, Resource: r}
-}
-
-// UpdateFor creates an Update event for the given source and entry.
-func UpdateFor(source collection.Schema, r *resource.Instance) Event {
-	return Event{Kind: Updated, Source: source, Resource: r}
-}
-
-// DeleteForResource creates a Deleted event for the given source and entry.
-func DeleteForResource(source collection.Schema, r *resource.Instance) Event {
-	return Event{Kind: Deleted, Source: source, Resource: r}
-}
-
-// DeleteFor creates a Delete event for the given source and name.
-func DeleteFor(source collection.Schema, name resource.FullName, v resource.Version) Event {
-	return DeleteForResource(source, &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: name,
-			Version:  v,
-		},
-	})
-}
diff --git a/pkg/config/event/event_test.go b/pkg/config/event/event_test.go
deleted file mode 100644
index 348ebe716e..0000000000
--- a/pkg/config/event/event_test.go
+++ /dev/null
@@ -1,294 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event_test
-
-import (
-	"strings"
-	"testing"
-
-	"github.com/gogo/protobuf/types"
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	"istio.io/istio/pkg/config/legacy/testing/data"
-	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-func TestEvent_String(t *testing.T) {
-	e := resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("ns1", "rs1"),
-			Version:  "v1",
-		},
-		Message: &types.Empty{},
-	}
-
-	tests := []struct {
-		i   event.Event
-		exp string
-	}{
-		{
-			i:   event.Event{},
-			exp: "[Event](None)",
-		},
-		{
-			i:   event.Event{Kind: event.Added, Resource: &e},
-			exp: "[Event](Added: /ns1/rs1)",
-		},
-		{
-			i:   event.Event{Kind: event.Updated, Resource: &e},
-			exp: "[Event](Updated: /ns1/rs1)",
-		},
-		{
-			i:   event.Event{Kind: event.Deleted, Resource: &e},
-			exp: "[Event](Deleted: /ns1/rs1)",
-		},
-		{
-			i:   event.Event{Kind: event.FullSync, Source: data.Foo},
-			exp: "[Event](FullSync: foo)",
-		},
-		{
-			i:   event.Event{Kind: event.Kind(99), Source: data.Foo},
-			exp: "[Event](<<Unknown Kind 99>>)",
-		},
-	}
-
-	for _, tc := range tests {
-		t.Run("", func(t *testing.T) {
-			g := NewWithT(t)
-			actual := tc.i.String()
-			g.Expect(strings.TrimSpace(actual)).To(Equal(strings.TrimSpace(tc.exp)))
-		})
-	}
-}
-
-func TestEvent_DetailedString(t *testing.T) {
-	e := resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("ns1", "rs1"),
-			Version:  "v1",
-		},
-		Message: &types.Empty{},
-	}
-
-	tests := []struct {
-		i      event.Event
-		prefix string
-	}{
-		{
-			i:      event.Event{},
-			prefix: "[Event](None",
-		},
-		{
-			i:      event.Event{Kind: event.Added, Resource: &e},
-			prefix: "[Event](Added: /ns1/rs1",
-		},
-		{
-			i:      event.Event{Kind: event.Updated, Resource: &e},
-			prefix: "[Event](Updated: /ns1/rs1",
-		},
-		{
-			i:      event.Event{Kind: event.Deleted, Resource: &e},
-			prefix: "[Event](Deleted: /ns1/rs1",
-		},
-		{
-			i:      event.Event{Kind: event.FullSync, Source: data.Foo},
-			prefix: "[Event](FullSync: foo",
-		},
-		{
-			i:      event.Event{Kind: event.Kind(99), Source: data.Foo},
-			prefix: "[Event](<<Unknown Kind 99>>",
-		},
-	}
-
-	for _, tc := range tests {
-		t.Run("", func(t *testing.T) {
-			g := NewWithT(t)
-			actual := tc.i.String()
-			actual = strings.TrimSpace(actual)
-			expected := strings.TrimSpace(tc.prefix)
-			g.Expect(actual).To(HavePrefix(expected))
-		})
-	}
-}
-
-func TestEvent_Clone(t *testing.T) {
-	g := NewWithT(t)
-
-	r := resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("ns1", "rs1"),
-			Labels: map[string]string{
-				"foo": "bar",
-			},
-			Version: "v1",
-		},
-		Message: &types.Empty{},
-	}
-
-	e := event.Event{Kind: event.Added, Source: data.Boo, Resource: &r}
-
-	g.Expect(e.Clone()).To(Equal(e))
-}
-
-func TestEvent_FullSyncFor(t *testing.T) {
-	g := NewWithT(t)
-
-	e := event.FullSyncFor(data.Boo)
-
-	expected := event.Event{
-		Kind:   event.FullSync,
-		Source: data.Boo,
-	}
-	g.Expect(e).To(Equal(expected))
-}
-
-func TestEvent_AddFor(t *testing.T) {
-	g := NewWithT(t)
-
-	r := resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("ns1", "rs1"),
-			Labels: map[string]string{
-				"foo": "bar",
-			},
-			Version: "v1",
-		},
-		Message: &types.Empty{},
-	}
-
-	e := event.AddFor(data.Boo, &r)
-
-	expected := event.Event{
-		Kind:     event.Added,
-		Source:   data.Boo,
-		Resource: &r,
-	}
-	g.Expect(e).To(Equal(expected))
-}
-
-func TestEvent_UpdateFor(t *testing.T) {
-	g := NewWithT(t)
-
-	r := resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("ns1", "rs1"),
-			Labels: map[string]string{
-				"foo": "bar",
-			},
-			Version: "v1",
-		},
-		Message: &types.Empty{},
-	}
-
-	e := event.UpdateFor(data.Boo, &r)
-
-	expected := event.Event{
-		Kind:     event.Updated,
-		Source:   data.Boo,
-		Resource: &r,
-	}
-	g.Expect(e).To(Equal(expected))
-}
-
-func TestEvent_DeleteFor(t *testing.T) {
-	g := NewWithT(t)
-
-	n := resource.NewFullName("ns1", "rs1")
-	v := resource.Version("v1")
-	e := event.DeleteFor(data.Boo, n, v)
-
-	expected := event.Event{
-		Kind:   event.Deleted,
-		Source: data.Boo,
-		Resource: &resource.Instance{
-			Metadata: resource.Metadata{
-				FullName: n,
-				Version:  v,
-			},
-		},
-	}
-	g.Expect(e).To(Equal(expected))
-}
-
-func TestEvent_UpdateForResource(t *testing.T) {
-	g := NewWithT(t)
-
-	r := resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("ns1", "rs1"),
-			Labels: map[string]string{
-				"foo": "bar",
-			},
-			Version: "v1",
-		},
-		Message: &types.Empty{},
-	}
-
-	e := event.DeleteForResource(data.Boo, &r)
-
-	expected := event.Event{
-		Kind:     event.Deleted,
-		Source:   data.Boo,
-		Resource: &r,
-	}
-	g.Expect(e).To(Equal(expected))
-}
-
-func TestEvent_IsSource(t *testing.T) {
-	g := NewWithT(t)
-	e := event.Event{
-		Kind:   event.Deleted,
-		Source: data.Boo,
-	}
-	g.Expect(e.IsSource(data.Boo.Name())).To(BeTrue())
-	g.Expect(e.IsSource(collection.NewName("noo"))).To(BeFalse())
-}
-
-func TestEvent_IsSourceAny(t *testing.T) {
-	g := NewWithT(t)
-	e := event.Event{
-		Kind:   event.Deleted,
-		Source: data.Boo,
-	}
-	g.Expect(e.IsSourceAny(data.Foo.Name())).To(BeFalse())
-	g.Expect(e.IsSourceAny(data.Boo.Name())).To(BeTrue())
-	g.Expect(e.IsSourceAny(data.Boo.Name(), data.Foo.Name())).To(BeTrue())
-}
-
-func TestEvent_WithSource(t *testing.T) {
-	g := NewWithT(t)
-	oldCol := data.Boo
-	e := event.Event{
-		Kind:   event.Deleted,
-		Source: oldCol,
-	}
-	newCol := data.Foo
-	a := e.WithSource(newCol)
-	g.Expect(a.Source.Name()).To(Equal(newCol.Name()))
-	g.Expect(e.Source.Name()).To(Equal(oldCol.Name()))
-}
-
-func TestEvent_WithSource_Reset(t *testing.T) {
-	g := NewWithT(t)
-	e := event.Event{
-		Kind: event.Reset,
-	}
-	newCol := data.Foo
-	a := e.WithSource(newCol)
-	g.Expect(a.Source).To(BeNil())
-	g.Expect(e.Source).To(BeNil())
-}
diff --git a/pkg/config/event/handler.go b/pkg/config/event/handler.go
deleted file mode 100644
index 86c87d9932..0000000000
--- a/pkg/config/event/handler.go
+++ /dev/null
@@ -1,54 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-// Handler handles an incoming resource event.
-type Handler interface {
-	Handle(e Event)
-}
-
-// SentinelHandler is a special handler that does nothing with the event. It is useful to avoid
-// nil checks on Handler fields. Specialized operations, such as CombineHandlers recognize SentinelHandlers
-// and elide them when merging.
-func SentinelHandler() Handler {
-	return &sentinelInstance
-}
-
-var sentinelInstance sentinelHandler
-
-type sentinelHandler struct{}
-
-var _ Handler = &sentinelHandler{}
-
-// Handle implements Handler
-func (s *sentinelHandler) Handle(_ Event) {}
-
-// HandlerFromFn returns a new Handler, based on the Handler function.
-func HandlerFromFn(fn func(e Event)) Handler {
-	return &fnHandler{
-		fn: fn,
-	}
-}
-
-var _ Handler = &fnHandler{}
-
-type fnHandler struct {
-	fn func(e Event)
-}
-
-// Handle implements Handler.
-func (h *fnHandler) Handle(e Event) {
-	h.fn(e)
-}
diff --git a/pkg/config/event/handler_test.go b/pkg/config/event/handler_test.go
deleted file mode 100644
index 4336fb570b..0000000000
--- a/pkg/config/event/handler_test.go
+++ /dev/null
@@ -1,206 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event_test
-
-import (
-	"testing"
-
-	"github.com/gogo/protobuf/types"
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	"istio.io/istio/pkg/config/resource"
-)
-
-func TestHandlerFromFn(t *testing.T) {
-	g := NewWithT(t)
-	var received event.Event
-	h := event.HandlerFromFn(func(e event.Event) {
-		received = e
-	})
-
-	sent := event.Event{
-		Kind: event.Added,
-		Resource: &resource.Instance{
-			Message: &types.Empty{},
-		},
-	}
-
-	h.Handle(sent)
-
-	g.Expect(received).To(Equal(sent))
-}
-
-func TestHandlers(t *testing.T) {
-	g := NewWithT(t)
-
-	var received1 event.Event
-	h1 := event.HandlerFromFn(func(e event.Event) {
-		received1 = e
-	})
-
-	var received2 event.Event
-	h2 := event.HandlerFromFn(func(e event.Event) {
-		received2 = e
-	})
-
-	var hs event.Handlers
-	hs.Add(h1)
-	hs.Add(h2)
-
-	sent := event.Event{
-		Kind: event.Added,
-		Resource: &resource.Instance{
-			Message: &types.Empty{},
-		},
-	}
-
-	hs.Handle(sent)
-
-	g.Expect(received1).To(Equal(sent))
-	g.Expect(received2).To(Equal(sent))
-}
-
-func TestCombineHandlers(t *testing.T) {
-	g := NewWithT(t)
-
-	var received1 event.Event
-	h1 := event.HandlerFromFn(func(e event.Event) {
-		received1 = e
-	})
-
-	var received2 event.Event
-	h2 := event.HandlerFromFn(func(e event.Event) {
-		received2 = e
-	})
-
-	h3 := event.CombineHandlers(h1, h2)
-
-	sent := event.Event{
-		Kind: event.Added,
-		Resource: &resource.Instance{
-			Message: &types.Empty{},
-		},
-	}
-
-	h3.Handle(sent)
-
-	g.Expect(received1).To(Equal(sent))
-	g.Expect(received2).To(Equal(sent))
-}
-
-func TestCombineHandlers_Nil1(t *testing.T) {
-	g := NewWithT(t)
-
-	var received1 event.Event
-	h1 := event.HandlerFromFn(func(e event.Event) {
-		received1 = e
-	})
-
-	h3 := event.CombineHandlers(h1, nil)
-
-	sent := event.Event{
-		Kind: event.Added,
-		Resource: &resource.Instance{
-			Message: &types.Empty{},
-		},
-	}
-
-	h3.Handle(sent)
-
-	g.Expect(received1).To(Equal(sent))
-}
-
-func TestCombineHandlers_Nil2(t *testing.T) {
-	g := NewWithT(t)
-
-	var received1 event.Event
-	h1 := event.HandlerFromFn(func(e event.Event) {
-		received1 = e
-	})
-
-	h3 := event.CombineHandlers(nil, h1)
-
-	sent := event.Event{
-		Kind: event.Added,
-		Resource: &resource.Instance{
-			Message: &types.Empty{},
-		},
-	}
-
-	h3.Handle(sent)
-
-	g.Expect(received1).To(Equal(sent))
-}
-
-func TestCombineHandlers_MultipleHandlers(t *testing.T) {
-	g := NewWithT(t)
-
-	var received1 event.Event
-	h1 := event.HandlerFromFn(func(e event.Event) {
-		received1 = e
-	})
-
-	var received2 event.Event
-	h2 := event.HandlerFromFn(func(e event.Event) {
-		received2 = e
-	})
-
-	hs1 := &event.Handlers{}
-	hs1.Add(h1)
-	hs1.Add(h2)
-
-	var received3 event.Event
-	h3 := event.HandlerFromFn(func(e event.Event) {
-		received3 = e
-	})
-
-	var received4 event.Event
-	h4 := event.HandlerFromFn(func(e event.Event) {
-		received4 = e
-	})
-
-	hs2 := &event.Handlers{}
-	hs2.Add(h3)
-	hs2.Add(h4)
-
-	sent := event.Event{
-		Kind: event.Added,
-		Resource: &resource.Instance{
-			Message: &types.Empty{},
-		},
-	}
-
-	hc := event.CombineHandlers(hs1, hs2)
-	hc.Handle(sent)
-
-	g.Expect(received1).To(Equal(sent))
-	g.Expect(received2).To(Equal(sent))
-	g.Expect(received3).To(Equal(sent))
-	g.Expect(received4).To(Equal(sent))
-}
-
-func TestSentinelHandler(t *testing.T) {
-	h := event.SentinelHandler()
-	e := event.Event{
-		Kind: event.Added,
-		Resource: &resource.Instance{
-			Message: &types.Empty{},
-		},
-	}
-
-	// Does not crash
-	h.Handle(e)
-}
diff --git a/pkg/config/event/handlers.go b/pkg/config/event/handlers.go
deleted file mode 100644
index bc6e321703..0000000000
--- a/pkg/config/event/handlers.go
+++ /dev/null
@@ -1,75 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-// Handlers is a group of zero or more Handlers. Handlers is an instance of Handler, dispatching incoming events
-// to the Handlers it contains.
-type Handlers struct {
-	handlers []Handler
-}
-
-var _ Handler = &Handlers{}
-
-// Handle implements Handler
-func (hs *Handlers) Handle(e Event) {
-	for _, h := range hs.handlers {
-		h.Handle(e)
-	}
-}
-
-// Add a new handler to handlers
-func (hs *Handlers) Add(h Handler) {
-	hs.handlers = append(hs.handlers, h)
-}
-
-// Size returns number of handlers in this handler set.
-func (hs *Handlers) Size() int {
-	return len(hs.handlers)
-}
-
-// CombineHandlers combines two handlers into a single set of handlers and returns. If any of the Handlers is an
-// instance of Handlers, then their contains will be flattened into a single list.
-func CombineHandlers(h1 Handler, h2 Handler) Handler {
-	if h1 == nil {
-		return h2
-	}
-
-	if h2 == nil {
-		return h1
-	}
-
-	if _, ok := h1.(*sentinelHandler); ok {
-		return h2
-	}
-
-	if _, ok := h2.(*sentinelHandler); ok {
-		return h1
-	}
-
-	var r Handlers
-	if hs, ok := h1.(*Handlers); ok {
-		r.handlers = append(r.handlers, hs.handlers...)
-	} else {
-		r.handlers = append(r.handlers, h1)
-	}
-
-	if hs, ok := h2.(*Handlers); ok {
-		r.handlers = append(r.handlers, hs.handlers...)
-	} else {
-		r.handlers = append(r.handlers, h2)
-	}
-
-	return &r
-}
diff --git a/pkg/config/event/handlers_test.go b/pkg/config/event/handlers_test.go
deleted file mode 100644
index b96cffea2b..0000000000
--- a/pkg/config/event/handlers_test.go
+++ /dev/null
@@ -1,123 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event_test
-
-import (
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	data "istio.io/istio/pkg/config/legacy/testing/data"
-	fixtures "istio.io/istio/pkg/config/legacy/testing/fixtures"
-)
-
-func TestHandlers_Handle_Zero(t *testing.T) {
-	g := NewWithT(t)
-	hs := &event.Handlers{}
-	g.Expect(hs.Size()).To(Equal(0))
-
-	hs.Handle(data.Event1Col1AddItem1)
-}
-
-func TestHandlers_Handle_One(t *testing.T) {
-	g := NewWithT(t)
-
-	hs := &event.Handlers{}
-
-	h1 := &fixtures.Accumulator{}
-	hs.Add(h1)
-	g.Expect(hs.Size()).To(Equal(1))
-
-	hs.Handle(data.Event1Col1AddItem1)
-
-	g.Expect(h1.Events()).To(HaveLen(1))
-	g.Expect(h1.Events()[0]).To(Equal(data.Event1Col1AddItem1))
-}
-
-func TestHandlers_Handle_Multiple(t *testing.T) {
-	g := NewWithT(t)
-
-	hs := &event.Handlers{}
-
-	h1 := &fixtures.Accumulator{}
-	hs.Add(h1)
-
-	h2 := &fixtures.Accumulator{}
-	hs.Add(h2)
-	g.Expect(hs.Size()).To(Equal(2))
-
-	hs.Handle(data.Event1Col1AddItem1)
-
-	g.Expect(h1.Events()).To(HaveLen(1))
-	g.Expect(h1.Events()[0]).To(Equal(data.Event1Col1AddItem1))
-
-	g.Expect(h2.Events()).To(HaveLen(1))
-	g.Expect(h2.Events()[0]).To(Equal(data.Event1Col1AddItem1))
-}
-
-func TestHandlers_Handle_Multiple_MultipleEvents(t *testing.T) {
-	g := NewWithT(t)
-
-	hs := &event.Handlers{}
-
-	h1 := &fixtures.Accumulator{}
-	hs.Add(h1)
-
-	h2 := &fixtures.Accumulator{}
-	hs.Add(h2)
-
-	hs.Handle(data.Event1Col1AddItem1)
-	hs.Handle(data.Event2Col1AddItem2)
-
-	expected := []event.Event{data.Event1Col1AddItem1, data.Event2Col1AddItem2}
-
-	g.Expect(h1.Events()).To(Equal(expected))
-	g.Expect(h2.Events()).To(Equal(expected))
-}
-
-func TestHandlers_CombineHandlers_SentinelFirst(t *testing.T) {
-	g := NewWithT(t)
-
-	h1 := event.SentinelHandler()
-	h2 := &fixtures.Accumulator{}
-	hs := event.CombineHandlers(h1, h2)
-
-	g.Expect(hs).To(BeAssignableToTypeOf(&fixtures.Accumulator{}))
-
-	hs.Handle(data.Event1Col1AddItem1)
-	hs.Handle(data.Event2Col1AddItem2)
-
-	expected := []event.Event{data.Event1Col1AddItem1, data.Event2Col1AddItem2}
-
-	g.Expect(h2.Events()).To(Equal(expected))
-}
-
-func TestHandlers_CombineHandlers_SentinelSecond(t *testing.T) {
-	g := NewWithT(t)
-
-	h1 := &fixtures.Accumulator{}
-	h2 := event.SentinelHandler()
-	hs := event.CombineHandlers(h1, h2)
-
-	g.Expect(hs).To(BeAssignableToTypeOf(&fixtures.Accumulator{}))
-
-	hs.Handle(data.Event1Col1AddItem1)
-	hs.Handle(data.Event2Col1AddItem2)
-
-	expected := []event.Event{data.Event1Col1AddItem1, data.Event2Col1AddItem2}
-
-	g.Expect(h1.Events()).To(Equal(expected))
-}
diff --git a/pkg/config/event/kind.go b/pkg/config/event/kind.go
deleted file mode 100644
index 6213edf753..0000000000
--- a/pkg/config/event/kind.go
+++ /dev/null
@@ -1,65 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-import (
-	"fmt"
-)
-
-// Kind is the type of an event for a resource collection.
-type Kind int
-
-const (
-	// None is a sentinel value. Should not be used.
-	None Kind = iota
-
-	// Added indicates that a new resource has been added to a collection.
-	Added
-
-	// Updated indicates that an existing resource has been updated in a collection.
-	Updated
-
-	// Deleted indicates an existing resource has been deleted from a collection.
-	Deleted
-
-	// FullSync indicates that the source has completed the publishing of initial state of a collection as a series
-	// of add events. Events after FullSync are incremental change events that were applied to the origin collection.
-	FullSync
-
-	// Reset indicates that the originating event.Source had a change that cannot be recovered from (e.g. CRDs have
-	// changed). It indicates that the listener should abandon its internal state and restart. This is a source-level
-	// event and applies to all collections.
-	Reset
-)
-
-// String implements Stringer.String
-func (k Kind) String() string {
-	switch k {
-	case None:
-		return "None"
-	case Added:
-		return "Added"
-	case Updated:
-		return "Updated"
-	case Deleted:
-		return "Deleted"
-	case FullSync:
-		return "FullSync"
-	case Reset:
-		return "Reset"
-	default:
-		return fmt.Sprintf("<<Unknown Kind %d>>", k)
-	}
-}
diff --git a/pkg/config/event/kind_test.go b/pkg/config/event/kind_test.go
deleted file mode 100644
index a450b81bd9..0000000000
--- a/pkg/config/event/kind_test.go
+++ /dev/null
@@ -1,42 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event_test
-
-import (
-	"testing"
-
-	"istio.io/istio/pkg/config/event"
-)
-
-func TestEventKind_String(t *testing.T) {
-	tests := map[event.Kind]string{
-		event.None:     "None",
-		event.Added:    "Added",
-		event.Updated:  "Updated",
-		event.Deleted:  "Deleted",
-		event.FullSync: "FullSync",
-		event.Reset:    "Reset",
-		55:             "<<Unknown Kind 55>>",
-	}
-
-	for i, e := range tests {
-		t.Run(e, func(t *testing.T) {
-			a := i.String()
-			if a != e {
-				t.Fatalf("Mismatch: Actual=%v, Expected=%v", a, e)
-			}
-		})
-	}
-}
diff --git a/pkg/config/event/processor.go b/pkg/config/event/processor.go
deleted file mode 100644
index 598d135664..0000000000
--- a/pkg/config/event/processor.go
+++ /dev/null
@@ -1,31 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-// Processor is a config event processor.
-//
-// - Start and Stop can be called multiple times, idempotently.
-// - A processor can keep internal state after it is started, but it *must* not carry state over
-// between multiple start/stop calls.
-// - It must complete all its internal initialization, by the time Start call returns. That is,
-// the callers will assume that events can be sent (be be processed) after Start returns.
-// - Processor may still receive events after Stop is called. These events must be discarded.
-//
-type Processor interface {
-	Handler
-
-	Start()
-	Stop()
-}
diff --git a/pkg/config/event/queue.go b/pkg/config/event/queue.go
deleted file mode 100644
index a7f1540c78..0000000000
--- a/pkg/config/event/queue.go
+++ /dev/null
@@ -1,107 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-const (
-	defaultSizeIncrement = 32
-)
-
-// A circular queue for events that can expand as needed. Queue is not thread-safe. It needs to be protected externally
-// in a concurrent context.
-type queue struct {
-	items []Event
-	head  int
-	end   int
-}
-
-// add a new item to the queue.
-func (q *queue) add(e Event) {
-	if q.isFull() {
-		q.expand()
-	}
-
-	q.items[q.end] = e
-	q.end = incAndWrap(q.end, len(q.items))
-}
-
-func (q *queue) pop() (Event, bool) {
-	if q.isEmpty() {
-		return Event{}, false
-	}
-
-	idx := wrap(q.head, len(q.items))
-	q.head = incAndWrap(q.head, len(q.items))
-
-	return q.items[idx], true
-}
-
-func (q *queue) clear() {
-	q.items = nil
-	q.head = 0
-	q.end = 0
-}
-
-func (q *queue) expand() {
-	oldSize := len(q.items)
-	newSize := len(q.items) + defaultSizeIncrement
-	old := q.items
-	oldh := q.head
-
-	q.items = make([]Event, newSize)
-	q.head = 0
-	q.end = 0
-
-	for i := 0; i < oldSize-1; i++ {
-		idx := wrap(oldh+i, oldSize)
-		q.add(old[idx])
-	}
-}
-
-func (q *queue) size() int {
-	h := q.head
-	e := q.end
-	if e < h {
-		e += len(q.items)
-	}
-
-	return e - h
-}
-
-func (q *queue) isFull() bool {
-	l := len(q.items)
-	if l == 0 {
-		return true
-	}
-
-	e := q.end + 1
-	e = wrap(e, l)
-	return e == q.head
-}
-
-func (q *queue) isEmpty() bool {
-	return q.head == q.end
-}
-
-func wrap(i, length int) int {
-	if length == 0 {
-		return i
-	}
-	return i % length
-}
-
-func incAndWrap(i, length int) int {
-	i++
-	return wrap(i, length)
-}
diff --git a/pkg/config/event/queue_test.go b/pkg/config/event/queue_test.go
deleted file mode 100644
index 81ffa749ad..0000000000
--- a/pkg/config/event/queue_test.go
+++ /dev/null
@@ -1,112 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-import (
-	"fmt"
-	"strconv"
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/resource"
-)
-
-func TestQueue_Empty(t *testing.T) {
-	g := NewWithT(t)
-
-	q := &queue{}
-
-	g.Expect(q.isEmpty()).To(BeTrue())
-	g.Expect(q.isFull()).To(BeTrue())
-
-	_, ok := q.pop()
-	g.Expect(ok).To(BeFalse())
-}
-
-func TestQueueWrapEmpty(t *testing.T) {
-	g := NewWithT(t)
-
-	for i := 0; i < 100; i++ {
-		a := wrap(i, 0)
-		g.Expect(a).To(Equal(i))
-	}
-}
-
-func TestQueue_Expand_And_Use(t *testing.T) {
-	q := &queue{}
-
-	addCtr := 0
-	popCtr := 0
-	for max := 1; max < 513; max++ {
-		t.Run(fmt.Sprintf("M%d", max), func(t *testing.T) {
-			g := NewWithT(t)
-
-			g.Expect(q.isEmpty()).To(BeTrue())
-			g.Expect(q.size()).To(Equal(0))
-
-			for i := 0; i < max; i++ {
-				e := genEvent(&addCtr)
-				q.add(e)
-
-				g.Expect(q.size()).To(Equal(i + 1))
-			}
-
-			if max == len(q.items)-1 {
-				g.Expect(q.isFull()).To(BeTrue())
-			} else {
-				g.Expect(q.isFull()).To(BeFalse())
-			}
-
-			for i := 0; i < max; i++ {
-				a, ok := q.pop()
-				g.Expect(ok).To(BeTrue())
-
-				g.Expect(matchesEventSequence(&popCtr, a)).To(BeTrue())
-			}
-
-			g.Expect(q.isEmpty()).To(BeTrue())
-			g.Expect(q.isFull()).To(BeFalse())
-			g.Expect(q.size()).To(Equal(0))
-
-			_, ok := q.pop()
-			g.Expect(ok).To(BeFalse())
-		})
-	}
-}
-
-func genEvent(ctr *int) Event {
-	vStr := fmt.Sprintf("%d", *ctr)
-	*ctr++
-
-	return Event{
-		Kind: Added,
-		Resource: &resource.Instance{
-			Metadata: resource.Metadata{
-				Version: resource.Version(vStr),
-			},
-		},
-	}
-}
-
-func matchesEventSequence(ctr *int, e Event) bool {
-	*ctr++
-	i, err := strconv.ParseInt(string(e.Resource.Metadata.Version), 10, 64)
-	if err != nil {
-		return false
-	}
-
-	return int(i) == *ctr-1
-}
diff --git a/pkg/config/event/router.go b/pkg/config/event/router.go
deleted file mode 100644
index 1535fd3c1d..0000000000
--- a/pkg/config/event/router.go
+++ /dev/null
@@ -1,147 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-import (
-	"fmt"
-
-	"istio.io/istio/pkg/config/analysis/scope"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-// Router distributes events to different handlers, based on collection name.
-type Router interface {
-	Handler
-	Broadcast(e Event)
-}
-
-// emptyRouter
-type emptyRouter struct{}
-
-var _ Router = &emptyRouter{}
-
-// Handle implements Router
-func (r *emptyRouter) Handle(_ Event) {}
-
-// Broadcast implements Router
-func (r *emptyRouter) Broadcast(_ Event) {}
-
-type singleRouter struct {
-	source  collection.Schema
-	handler Handler
-}
-
-var _ Router = &singleRouter{}
-
-// Handle implements Handler
-func (r *singleRouter) Handle(e Event) {
-	if e.Kind == Reset || e.IsSource(r.source.Name()) {
-		r.handler.Handle(e)
-	}
-}
-
-// Broadcast implements Router
-func (r *singleRouter) Broadcast(e Event) {
-	e = e.WithSource(r.source)
-	r.handler.Handle(e)
-}
-
-// Router distributes events to multiple different handlers, based on collection name.
-type router struct {
-	routers map[collection.Name]*singleRouter
-}
-
-var _ Router = &router{}
-
-// Handle implements Handler
-func (r *router) Handle(e Event) {
-	h, found := r.routers[e.SourceName()]
-	if found {
-		h.handler.Handle(e)
-	} else {
-		scope.Processing.Warn("Router.Handle: No handler for event, dropping: ", e)
-	}
-}
-
-// Broadcast implements Router
-func (r *router) Broadcast(e Event) {
-	for _, h := range r.routers {
-		e = e.WithSource(h.source)
-		h.handler.Handle(e)
-	}
-}
-
-// NewRouter returns a new instance of Router
-func NewRouter() Router {
-	return &emptyRouter{}
-}
-
-// AddToRouter adds the given handler for the given source collection.
-func AddToRouter(r Router, source collection.Schema, handler Handler) Router {
-	if r == nil {
-		return &singleRouter{
-			source:  source,
-			handler: handler,
-		}
-	}
-
-	switch v := r.(type) {
-	case *emptyRouter:
-		return &singleRouter{
-			source:  source,
-			handler: handler,
-		}
-
-	case *singleRouter:
-		if v.source == source {
-			return &singleRouter{
-				source:  source,
-				handler: CombineHandlers(v.handler, handler),
-			}
-		}
-		s := &router{
-			routers: make(map[collection.Name]*singleRouter),
-		}
-		s.routers[v.source.Name()] = &singleRouter{
-			source:  v.source,
-			handler: v.handler,
-		}
-		s.routers[source.Name()] = &singleRouter{
-			source:  source,
-			handler: handler,
-		}
-		return s
-
-	case *router:
-		s := &router{
-			routers: make(map[collection.Name]*singleRouter),
-		}
-		for name, router := range v.routers {
-			s.routers[name] = router
-		}
-		var oldHandler Handler
-		if old := s.routers[source.Name()]; old != nil {
-			oldHandler = old.handler
-		}
-		s.routers[source.Name()] = &singleRouter{
-			source:  source,
-			handler: CombineHandlers(oldHandler, handler),
-		}
-		return s
-
-	default:
-		panic(fmt.Sprintf("unknown Router: %T", v))
-	}
-}
diff --git a/pkg/config/event/router_test.go b/pkg/config/event/router_test.go
deleted file mode 100644
index 91876a62bf..0000000000
--- a/pkg/config/event/router_test.go
+++ /dev/null
@@ -1,157 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event_test
-
-import (
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	basicmeta "istio.io/istio/pkg/config/legacy/testing/basicmeta"
-	data "istio.io/istio/pkg/config/legacy/testing/data"
-	fixtures "istio.io/istio/pkg/config/legacy/testing/fixtures"
-)
-
-func TestRouter_Empty(t *testing.T) {
-	s := event.NewRouter()
-	// No crash
-	s.Handle(data.Event1Col1AddItem1)
-	s.Broadcast(data.Event1Col1DeleteItem1)
-}
-
-func TestRouter_Single_Handle(t *testing.T) {
-	g := NewWithT(t)
-
-	s := event.NewRouter()
-	acc := &fixtures.Accumulator{}
-	s = event.AddToRouter(s, basicmeta.K8SCollection1, acc)
-	s.Handle(data.Event1Col1AddItem1)
-
-	g.Expect(acc.Events()).To(HaveLen(1))
-}
-
-func TestRouter_Single_Handle_AddToNil(t *testing.T) {
-	g := NewWithT(t)
-
-	var s event.Router
-	acc := &fixtures.Accumulator{}
-	s = event.AddToRouter(s, basicmeta.K8SCollection1, acc)
-	s.Handle(data.Event1Col1AddItem1)
-
-	g.Expect(acc.Events()).To(HaveLen(1))
-}
-
-func TestRouter_Single_Handle_NoMatch(t *testing.T) {
-	g := NewWithT(t)
-
-	s := event.NewRouter()
-	acc := &fixtures.Accumulator{}
-	s = event.AddToRouter(s, basicmeta.Collection2, acc)
-	s.Handle(data.Event1Col1AddItem1)
-
-	g.Expect(acc.Events()).To(HaveLen(0))
-}
-
-func TestRouter_Single_MultiListener(t *testing.T) {
-	g := NewWithT(t)
-
-	s := event.NewRouter()
-	acc1 := &fixtures.Accumulator{}
-	acc2 := &fixtures.Accumulator{}
-	s = event.AddToRouter(s, basicmeta.K8SCollection1, acc1)
-	s = event.AddToRouter(s, basicmeta.K8SCollection1, acc2)
-	s.Handle(data.Event1Col1AddItem1)
-
-	g.Expect(acc1.Events()).To(HaveLen(1))
-	g.Expect(acc2.Events()).To(HaveLen(1))
-}
-
-func TestRouter_Single_Broadcast(t *testing.T) {
-	g := NewWithT(t)
-
-	s := event.NewRouter()
-	acc := &fixtures.Accumulator{}
-	s = event.AddToRouter(s, basicmeta.K8SCollection1, acc)
-	s.Broadcast(event.Event{Kind: event.Reset})
-
-	g.Expect(acc.Events()).To(HaveLen(1))
-}
-
-func TestRouter_Multi_Handle(t *testing.T) {
-	g := NewWithT(t)
-
-	s := event.NewRouter()
-	acc1 := &fixtures.Accumulator{}
-	acc2 := &fixtures.Accumulator{}
-	acc3 := &fixtures.Accumulator{}
-	s = event.AddToRouter(s, basicmeta.K8SCollection1, acc1)
-	s = event.AddToRouter(s, basicmeta.Collection2, acc2)
-	s = event.AddToRouter(s, data.Foo, acc3)
-	s.Handle(data.Event1Col1AddItem1)
-	s.Handle(data.Event3Col2AddItem1)
-
-	g.Expect(acc1.Events()).To(HaveLen(1))
-	g.Expect(acc2.Events()).To(HaveLen(1))
-	g.Expect(acc3.Events()).To(HaveLen(0))
-}
-
-func TestRouter_Multi_NoTarget(t *testing.T) {
-	g := NewWithT(t)
-
-	s := event.NewRouter()
-	acc1 := &fixtures.Accumulator{}
-	acc2 := &fixtures.Accumulator{}
-	s = event.AddToRouter(s, basicmeta.K8SCollection1, acc1)
-	s = event.AddToRouter(s, data.Foo, acc2)
-	s.Handle(data.Event3Col2AddItem1)
-
-	g.Expect(acc1.Events()).To(HaveLen(0))
-	g.Expect(acc2.Events()).To(HaveLen(0))
-}
-
-func TestRouter_Multi_Broadcast(t *testing.T) {
-	g := NewWithT(t)
-
-	s := event.NewRouter()
-	acc1 := &fixtures.Accumulator{}
-	acc2 := &fixtures.Accumulator{}
-	acc3 := &fixtures.Accumulator{}
-	s = event.AddToRouter(s, basicmeta.K8SCollection1, acc1)
-	s = event.AddToRouter(s, basicmeta.Collection2, acc2)
-	s = event.AddToRouter(s, data.Foo, acc3)
-	s.Broadcast(event.Event{Kind: event.Reset})
-
-	g.Expect(acc1.Events()).To(HaveLen(1))
-	g.Expect(acc2.Events()).To(HaveLen(1))
-	g.Expect(acc3.Events()).To(HaveLen(1))
-}
-
-func TestRouter_Multi_Unknown_Panic(t *testing.T) {
-	g := NewWithT(t)
-
-	defer func() {
-		r := recover()
-		g.Expect(r).ToNot(BeNil())
-	}()
-	_ = event.AddToRouter(&unknownSelector{}, data.Foo, &fixtures.Accumulator{})
-}
-
-type unknownSelector struct{}
-
-var _ event.Router = &unknownSelector{}
-
-func (u *unknownSelector) Handle(event.Event)    {}
-func (u *unknownSelector) Broadcast(event.Event) {}
diff --git a/pkg/config/event/source.go b/pkg/config/event/source.go
deleted file mode 100644
index 744e85f9d8..0000000000
--- a/pkg/config/event/source.go
+++ /dev/null
@@ -1,75 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-import "sync"
-
-// Source is an event source for a single collection.
-//
-// - A Source can be started/stopped multiple times, idempotently.
-// - Every time a Source is started, it is expected to send the full list of events, including a FullSync event for
-// each collection.
-// - It must halt its dispatch of events before the Stop() call returns. The callers will assume that
-// once Stop() returns, none of the registered handlers will receive any new events from this source.
-type Source interface {
-	Dispatcher
-
-	// Start sending events.
-	Start()
-
-	// Stop sending events.
-	Stop()
-}
-
-type compositeSource struct {
-	mu      sync.Mutex
-	sources []Source
-}
-
-var _ Source = &compositeSource{}
-
-// Start implements Source
-func (s *compositeSource) Start() {
-	s.mu.Lock()
-	defer s.mu.Unlock()
-	for _, src := range s.sources {
-		src.Start()
-	}
-}
-
-// Stop implements Source
-func (s *compositeSource) Stop() {
-	s.mu.Lock()
-	defer s.mu.Unlock()
-	for _, src := range s.sources {
-		src.Stop()
-	}
-}
-
-// Dispatch implements Source
-func (s *compositeSource) Dispatch(h Handler) {
-	s.mu.Lock()
-	defer s.mu.Unlock()
-	for _, src := range s.sources {
-		src.Dispatch(h)
-	}
-}
-
-// CombineSources combines multiple Sources and returns it as a single Source
-func CombineSources(s ...Source) Source {
-	return &compositeSource{
-		sources: s,
-	}
-}
diff --git a/pkg/config/event/source_test.go b/pkg/config/event/source_test.go
deleted file mode 100644
index 5483eb4e90..0000000000
--- a/pkg/config/event/source_test.go
+++ /dev/null
@@ -1,75 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event_test
-
-import (
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	fixtures "istio.io/istio/pkg/config/legacy/testing/fixtures"
-)
-
-func TestMergeSources_Basic(t *testing.T) {
-	g := NewWithT(t)
-
-	s1 := &fixtures.Source{}
-	s2 := &fixtures.Source{}
-
-	s := event.CombineSources(s1, s2)
-
-	h := &fixtures.Accumulator{}
-	s.Dispatch(h)
-
-	g.Expect(s1.Handlers).To(Equal(h))
-	g.Expect(s2.Handlers).To(Equal(h))
-
-	s.Start()
-	g.Expect(s1.Running()).To(BeTrue())
-	g.Expect(s2.Running()).To(BeTrue())
-
-	s.Stop()
-	g.Expect(s1.Running()).To(BeFalse())
-	g.Expect(s2.Running()).To(BeFalse())
-}
-
-func TestMergeSources_Composite(t *testing.T) {
-	g := NewWithT(t)
-
-	s1 := &fixtures.Source{}
-	s2a := &fixtures.Source{}
-	s2b := &fixtures.Source{}
-	s2 := event.CombineSources(s2a, s2b)
-
-	s := event.CombineSources(s1, s2)
-
-	h := &fixtures.Accumulator{}
-	s.Dispatch(h)
-
-	g.Expect(s1.Handlers).To(Equal(h))
-	g.Expect(s2a.Handlers).To(Equal(h))
-	g.Expect(s2b.Handlers).To(Equal(h))
-
-	s.Start()
-	g.Expect(s1.Running()).To(BeTrue())
-	g.Expect(s2a.Running()).To(BeTrue())
-	g.Expect(s2b.Running()).To(BeTrue())
-
-	s.Stop()
-	g.Expect(s1.Running()).To(BeFalse())
-	g.Expect(s2a.Running()).To(BeFalse())
-	g.Expect(s2b.Running()).To(BeFalse())
-}
diff --git a/pkg/config/event/transformer.go b/pkg/config/event/transformer.go
deleted file mode 100644
index 7fe41e7d4a..0000000000
--- a/pkg/config/event/transformer.go
+++ /dev/null
@@ -1,137 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event
-
-import (
-	"sync/atomic"
-
-	"istio.io/istio/pkg/config/analysis/scope"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-// Transformer is a Processor that transforms input events from one or more collections to a set of output events to
-// one or more collections.
-//
-// - A transformer must declare its inputs and outputs collections. via Inputs and Outputs methods. These must return
-// idempotent results.
-// - For every output collection that Transformer exposes, it must send a FullSync event, once the Transformer is
-// started.
-//
-type Transformer interface {
-	Processor
-
-	// DispatchFor registers the given handler for a particular output collection.
-	DispatchFor(c collection.Schema, h Handler)
-
-	// Inputs for this transformer
-	Inputs() collection.Schemas
-
-	// Outputs for this transformer
-	Outputs() collection.Schemas
-}
-
-// FnTransform is a base type for handling common Transformer operations.
-type FnTransform struct {
-	in       collection.Schemas
-	inNames  collection.Names
-	out      collection.Schemas
-	selector Router
-	startFn  func()
-	stopFn   func()
-	handleFn func(e Event, h Handler)
-	syncCtr  int32
-}
-
-var _ Transformer = &FnTransform{}
-
-// Inputs partially implements Transformer
-func (t *FnTransform) Inputs() collection.Schemas {
-	return t.in
-}
-
-// Outputs partially implements Transformer
-func (t *FnTransform) Outputs() collection.Schemas {
-	return t.out
-}
-
-// Start implements Transformer
-func (t *FnTransform) Start() {
-	scope.Processing.Debug("FnTransform.Start")
-	if t.selector == nil {
-		t.selector = NewRouter()
-	}
-
-	atomic.StoreInt32(&t.syncCtr, int32(len(t.inNames)))
-
-	if t.startFn != nil {
-		t.startFn()
-	}
-}
-
-// Stop implements Transformer
-func (t *FnTransform) Stop() {
-	scope.Processing.Debug("FnTransform.Stop")
-	if t.stopFn != nil {
-		t.stopFn()
-	}
-}
-
-// DispatchFor implements Transformer
-func (t *FnTransform) DispatchFor(c collection.Schema, h Handler) {
-	scope.Processing.Debugf("FnTransform.DispatchFor: %v => %T", c, h)
-	t.selector = AddToRouter(t.selector, c, h)
-}
-
-// Handle implements Transformer
-func (t *FnTransform) Handle(e Event) {
-	if e.Kind == Reset {
-		t.selector.Broadcast(e)
-		return
-	}
-
-	if !e.IsSourceAny(t.inNames...) {
-		scope.Processing.Warnf("Event with unexpected source received: %v", e)
-		return
-	}
-
-	if e.Kind == FullSync {
-		for {
-			old := atomic.LoadInt32(&t.syncCtr)
-			swapped := atomic.CompareAndSwapInt32(&t.syncCtr, old, old-1)
-			if swapped {
-				if old == 1 {
-					// Limit reached to 0.
-					t.selector.Broadcast(e)
-				}
-				break
-			}
-		}
-		return
-	}
-
-	t.handleFn(e, t.selector)
-}
-
-// NewFnTransform returns a Transformer based on the given start, stop and input event handler functions.
-func NewFnTransform(inputs, outputs collection.Schemas, startFn, stopFn func(), fn func(e Event, handler Handler)) *FnTransform {
-	return &FnTransform{
-		in:       inputs,
-		inNames:  inputs.CollectionNames(),
-		out:      outputs,
-		startFn:  startFn,
-		stopFn:   stopFn,
-		handleFn: fn,
-	}
-}
diff --git a/pkg/config/event/transformer_test.go b/pkg/config/event/transformer_test.go
deleted file mode 100644
index 474af80e01..0000000000
--- a/pkg/config/event/transformer_test.go
+++ /dev/null
@@ -1,212 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package event_test
-
-import (
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	"istio.io/istio/pkg/config/legacy/testing/data"
-	"istio.io/istio/pkg/config/legacy/testing/fixtures"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-func TestTransformer_Basics(t *testing.T) {
-	g := NewWithT(t)
-
-	inputs := collection.NewSchemasBuilder().MustAdd(data.Foo).MustAdd(data.Bar).Build()
-	outputs := collection.NewSchemasBuilder().MustAdd(data.Boo).MustAdd(data.Baz).Build()
-
-	var started, stopped bool
-	xform := event.NewFnTransform(
-		inputs,
-		outputs,
-		func() { started = true },
-		func() { stopped = true },
-		func(e event.Event, h event.Handler) {},
-	)
-
-	g.Expect(xform.Inputs()).To(Equal(inputs))
-	g.Expect(xform.Outputs()).To(Equal(outputs))
-
-	g.Expect(started).To(BeFalse())
-	g.Expect(stopped).To(BeFalse())
-
-	xform.Start()
-	g.Expect(started).To(BeTrue())
-	g.Expect(stopped).To(BeFalse())
-
-	xform.Stop()
-	g.Expect(stopped).To(BeTrue())
-}
-
-func TestTransformer_Selection(t *testing.T) {
-	g := NewWithT(t)
-
-	inputs := collection.NewSchemasBuilder().MustAdd(data.Foo).MustAdd(data.Bar).Build()
-	outputs := collection.NewSchemasBuilder().MustAdd(data.Boo).MustAdd(data.Baz).Build()
-
-	xform := event.NewFnTransform(
-		inputs,
-		outputs,
-		nil,
-		nil,
-		func(e event.Event, h event.Handler) {
-			// Simply translate events
-			if e.IsSource(data.Foo.Name()) {
-				h.Handle(e.WithSource(data.Boo))
-			}
-			if e.IsSource(data.Bar.Name()) {
-				h.Handle(e.WithSource(data.Baz))
-			}
-		},
-	)
-
-	accBoo := &fixtures.Accumulator{}
-	accBaz := &fixtures.Accumulator{}
-	xform.DispatchFor(data.Boo, accBoo)
-	xform.DispatchFor(data.Baz, accBaz)
-
-	xform.Start()
-
-	xform.Handle(data.Event1Col1AddItem1.WithSource(data.Foo))
-	xform.Handle(data.Event1Col1AddItem1.WithSource(data.Bar))
-
-	g.Expect(accBoo.Events()).To(ConsistOf(
-		data.Event1Col1AddItem1.WithSource(data.Boo),
-	))
-	g.Expect(accBaz.Events()).To(ConsistOf(
-		data.Event1Col1AddItem1.WithSource(data.Baz),
-	))
-}
-
-func TestTransformer_InvalidEvent(t *testing.T) {
-	g := NewWithT(t)
-
-	inputs := collection.NewSchemasBuilder().MustAdd(data.Foo).Build()
-	outputs := collection.NewSchemasBuilder().MustAdd(data.Bar).Build()
-
-	xform := event.NewFnTransform(
-		inputs,
-		outputs,
-		nil,
-		nil,
-		func(e event.Event, h event.Handler) {
-			// Simply translate events
-			if e.IsSource(data.Foo.Name()) {
-				h.Handle(e.WithSource(data.Bar))
-			}
-		},
-	)
-
-	acc := &fixtures.Accumulator{}
-	xform.DispatchFor(data.Bar, acc)
-
-	xform.Start()
-
-	xform.Handle(data.Event1Col1AddItem1.WithSource(data.Bar))
-
-	g.Expect(acc.Events()).To(BeEmpty())
-}
-
-func TestTransformer_Reset(t *testing.T) {
-	g := NewWithT(t)
-
-	inputs := collection.NewSchemasBuilder().MustAdd(data.Foo).Build()
-	outputs := collection.NewSchemasBuilder().MustAdd(data.Bar).MustAdd(data.Baz).Build()
-
-	xform := event.NewFnTransform(
-		inputs,
-		outputs,
-		nil,
-		nil,
-		func(e event.Event, h event.Handler) {
-			// Simply translate events
-			if e.IsSource(data.Foo.Name()) {
-				h.Handle(e.WithSource(data.Bar))
-			}
-		},
-	)
-
-	accBar := &fixtures.Accumulator{} // it is a trap!
-	xform.DispatchFor(data.Bar, accBar)
-	accBaz := &fixtures.Accumulator{}
-	xform.DispatchFor(data.Baz, accBaz)
-
-	xform.Start()
-
-	xform.Handle(event.Event{Kind: event.Reset})
-
-	g.Expect(accBar.Events()).To(ConsistOf(
-		event.Event{Kind: event.Reset},
-	))
-	g.Expect(accBar.Events()).To(ConsistOf(
-		event.Event{Kind: event.Reset},
-	))
-}
-
-func TestTransformer_FullSync(t *testing.T) {
-	g := NewWithT(t)
-
-	inputs := collection.NewSchemasBuilder().MustAdd(data.Foo).MustAdd(data.Bar).Build()
-	outputs := collection.NewSchemasBuilder().MustAdd(data.Boo).MustAdd(data.Baz).Build()
-
-	xform := event.NewFnTransform(
-		inputs,
-		outputs,
-		nil,
-		nil,
-		func(e event.Event, h event.Handler) {
-			// Simply translate events
-			if e.IsSource(data.Foo.Name()) {
-				h.Handle(e.WithSource(data.Boo))
-			}
-			if e.IsSource(data.Bar.Name()) {
-				h.Handle(e.WithSource(data.Baz))
-			}
-		},
-	)
-
-	accBoo := &fixtures.Accumulator{}
-	accBaz := &fixtures.Accumulator{}
-	xform.DispatchFor(data.Boo, accBoo)
-	xform.DispatchFor(data.Baz, accBaz)
-
-	xform.Start()
-
-	xform.Handle(event.FullSyncFor(data.Foo))
-	g.Expect(accBoo.Events()).To(BeEmpty())
-	g.Expect(accBaz.Events()).To(BeEmpty())
-
-	xform.Handle(event.FullSyncFor(data.Bar))
-	g.Expect(accBoo.Events()).To(ConsistOf(event.FullSyncFor(data.Boo)))
-	g.Expect(accBaz.Events()).To(ConsistOf(event.FullSyncFor(data.Baz)))
-
-	// redo
-	accBoo.Clear()
-	accBaz.Clear()
-	xform.Stop()
-	xform.Start()
-
-	xform.Handle(event.FullSyncFor(data.Bar))
-	g.Expect(accBoo.Events()).To(BeEmpty())
-	g.Expect(accBaz.Events()).To(BeEmpty())
-
-	xform.Handle(event.FullSyncFor(data.Foo))
-	g.Expect(accBoo.Events()).To(ConsistOf(event.FullSyncFor(data.Boo)))
-	g.Expect(accBaz.Events()).To(ConsistOf(event.FullSyncFor(data.Baz)))
-}
diff --git a/pkg/config/legacy/processing/processor.go b/pkg/config/legacy/processing/processor.go
deleted file mode 100644
index b6d9e80d3d..0000000000
--- a/pkg/config/legacy/processing/processor.go
+++ /dev/null
@@ -1,25 +0,0 @@
-/*
- Copyright Istio Authors
-
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
-*/
-
-package util
-
-import "istio.io/api/mesh/v1alpha1"
-
-// ProcessorOptions are options that are passed to event.Processors during startup.
-type ProcessorOptions struct {
-	MeshConfig   *v1alpha1.MeshConfig
-	DomainSuffix string
-}
diff --git a/pkg/config/legacy/processing/transformer/provider.go b/pkg/config/legacy/processing/transformer/provider.go
deleted file mode 100644
index c75dd14811..0000000000
--- a/pkg/config/legacy/processing/transformer/provider.go
+++ /dev/null
@@ -1,113 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-// Package transforms contains basic processing building blocks that can be incorporated into bigger/self-contained
-// processing pipelines.
-
-package transformer
-
-import (
-	"istio.io/istio/pkg/config/event"
-	util "istio.io/istio/pkg/config/legacy/processing"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-// Provider includes the basic schema and a function to create a Transformer
-// We do this instead of creating transformers directly because many transformers need ProcessorOptions
-// that aren't available until after processing has started, but we need to know about inputs/outputs
-// before that happens.
-type Provider struct {
-	inputs   collection.Schemas
-	outputs  collection.Schemas
-	createFn func(util.ProcessorOptions) event.Transformer
-}
-
-// NewProvider creates a new transformer Provider
-func NewProvider(inputs, outputs collection.Schemas, createFn func(util.ProcessorOptions) event.Transformer) Provider {
-	return Provider{
-		inputs:   inputs,
-		outputs:  outputs,
-		createFn: createFn,
-	}
-}
-
-// Inputs returns the input collections for this provider
-func (p *Provider) Inputs() collection.Schemas {
-	return p.inputs
-}
-
-// Outputs returns the output collections for this provider
-func (p *Provider) Outputs() collection.Schemas {
-	return p.outputs
-}
-
-// Create returns the actual Transformer for this provider
-func (p *Provider) Create(o util.ProcessorOptions) event.Transformer {
-	return p.createFn(o)
-}
-
-// Providers represents a list of Provider
-type Providers []Provider
-
-// Create creates a list of providers from a list of Transformers
-func (t Providers) Create(o util.ProcessorOptions) []event.Transformer {
-	xforms := make([]event.Transformer, 0)
-	for _, i := range t {
-		xforms = append(xforms, i.Create(o))
-	}
-	return xforms
-}
-
-// RequiredInputsFor back-maps a list of collections used as transformer outputs, returning the set of
-// upstream input collections required to generate those outputs.
-func (t Providers) RequiredInputsFor(outputs collection.Names) map[collection.Name]struct{} {
-	// For each transform, map output to inputs
-	outToIn := make(map[collection.Name]map[collection.Name]struct{})
-	for _, xfp := range t {
-		xfp.Outputs().ForEach(func(out collection.Schema) (outDone bool) {
-			if _, ok := outToIn[out.Name()]; !ok {
-				outToIn[out.Name()] = make(map[collection.Name]struct{})
-			}
-			xfp.Inputs().ForEach(func(in collection.Schema) (inDone bool) {
-				outToIn[out.Name()][in.Name()] = struct{}{}
-				return
-			})
-			return
-		})
-	}
-
-	// 2. For each input collection, get its inputs using the above mapping and include them in the output set
-	inputs := make(map[collection.Name]struct{})
-	for _, c := range outputs {
-		if len(outToIn[c]) == 0 {
-			inputs[c] = struct{}{}
-		}
-		for in := range outToIn[c] {
-			inputs[in] = struct{}{}
-		}
-	}
-
-	return inputs
-}
-
-// NewSimpleTransformerProvider creates a basic transformer provider for a basic transformer
-func NewSimpleTransformerProvider(input, output collection.Schema, handleFn func(e event.Event, h event.Handler)) Provider {
-	inputs := collection.NewSchemasBuilder().MustAdd(input).Build()
-	outputs := collection.NewSchemasBuilder().MustAdd(output).Build()
-
-	createFn := func(util.ProcessorOptions) event.Transformer {
-		return event.NewFnTransform(inputs, outputs, nil, nil, handleFn)
-	}
-	return NewProvider(inputs, outputs, createFn)
-}
diff --git a/pkg/config/legacy/processing/transformer/provider_test.go b/pkg/config/legacy/processing/transformer/provider_test.go
deleted file mode 100644
index fab14a6c64..0000000000
--- a/pkg/config/legacy/processing/transformer/provider_test.go
+++ /dev/null
@@ -1,48 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package transformer
-
-import (
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	util "istio.io/istio/pkg/config/legacy/processing"
-	basicmeta "istio.io/istio/pkg/config/legacy/testing/basicmeta"
-	fixtures "istio.io/istio/pkg/config/legacy/testing/fixtures"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-func TestSimpleTransformerProvider(t *testing.T) {
-	g := NewWithT(t)
-
-	input := basicmeta.K8SCollection1
-	output := basicmeta.Collection2
-	handleFn := func(e event.Event, h event.Handler) {}
-	opts := util.ProcessorOptions{}
-
-	providers := Providers{
-		NewSimpleTransformerProvider(input, output, handleFn),
-	}
-	fixtures.ExpectEqual(t, providers[0].Inputs(), collection.SchemasFor(input))
-	fixtures.ExpectEqual(t, providers[0].Outputs(), collection.SchemasFor(output))
-
-	transformers := providers.Create(opts)
-	g.Expect(transformers).To(HaveLen(len(providers)))
-
-	fixtures.ExpectEqual(t, transformers[0].Inputs(), collection.SchemasFor(input))
-	fixtures.ExpectEqual(t, transformers[0].Outputs(), collection.SchemasFor(output))
-}
diff --git a/pkg/config/legacy/processor/transforms/direct/create.go b/pkg/config/legacy/processor/transforms/direct/create.go
deleted file mode 100644
index 1326843148..0000000000
--- a/pkg/config/legacy/processor/transforms/direct/create.go
+++ /dev/null
@@ -1,40 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package direct
-
-import (
-	"istio.io/istio/pkg/config/event"
-	"istio.io/istio/pkg/config/legacy/processing/transformer"
-	"istio.io/istio/pkg/config/schema"
-)
-
-// GetProviders creates a transformer provider for each direct transform in the metadata
-func GetProviders(m *schema.Metadata) transformer.Providers {
-	var result []transformer.Provider
-
-	cols := m.AllCollections()
-
-	for k, v := range m.DirectTransformSettings().Mapping() {
-		from := cols.MustFind(k.String())
-		to := cols.MustFind(v.String())
-
-		handleFn := func(e event.Event, h event.Handler) {
-			e = e.WithSource(to)
-			h.Handle(e)
-		}
-		result = append(result, transformer.NewSimpleTransformerProvider(from, to, handleFn))
-	}
-	return result
-}
diff --git a/pkg/config/legacy/processor/transforms/direct/create_test.go b/pkg/config/legacy/processor/transforms/direct/create_test.go
deleted file mode 100644
index e2c89efa85..0000000000
--- a/pkg/config/legacy/processor/transforms/direct/create_test.go
+++ /dev/null
@@ -1,245 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package direct
-
-import (
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	util "istio.io/istio/pkg/config/legacy/processing"
-	"istio.io/istio/pkg/config/legacy/testing/basicmeta"
-	"istio.io/istio/pkg/config/legacy/testing/data"
-	"istio.io/istio/pkg/config/legacy/testing/fixtures"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-func TestDirect_Input_Output(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, _, _ := setup(g)
-
-	fixtures.ExpectEqual(t, xform.Inputs(), collection.NewSchemasBuilder().MustAdd(basicmeta.K8SCollection1).Build())
-	fixtures.ExpectEqual(t, xform.Outputs(), collection.NewSchemasBuilder().MustAdd(basicmeta.Collection2).Build())
-}
-
-func TestDirect_AddSync(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.AddFor(basicmeta.K8SCollection1, data.EntryN1I1V1))
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.AddFor(basicmeta.Collection2, data.EntryN1I1V1), // XForm to Collection2
-		event.FullSyncFor(basicmeta.Collection2))
-}
-
-func TestDirect_SyncAdd(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.AddFor(basicmeta.K8SCollection1, data.EntryN1I1V1))
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.FullSyncFor(basicmeta.Collection2),
-		event.AddFor(basicmeta.Collection2, data.EntryN1I1V1)) // XForm to Collection2
-}
-
-func TestDirect_AddUpdateDelete(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.AddFor(basicmeta.K8SCollection1, data.EntryN1I1V1))
-	src.Handlers.Handle(event.UpdateFor(basicmeta.K8SCollection1, data.EntryN1I1V2))
-	src.Handlers.Handle(event.DeleteForResource(basicmeta.K8SCollection1, data.EntryN1I1V2))
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.FullSyncFor(basicmeta.Collection2),
-		event.AddFor(basicmeta.Collection2, data.EntryN1I1V1),
-		event.UpdateFor(basicmeta.Collection2, data.EntryN1I1V2),
-		event.DeleteForResource(basicmeta.Collection2, data.EntryN1I1V2),
-	)
-}
-
-func TestDirect_SyncReset(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.Event{Kind: event.Reset})
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.FullSyncFor(basicmeta.Collection2),
-		event.Event{Kind: event.Reset},
-	)
-}
-
-func TestDirect_InvalidEventKind(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.Event{Kind: 55})
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.FullSyncFor(basicmeta.Collection2),
-	)
-}
-
-func TestDirect_NoListeners(t *testing.T) {
-	g := NewWithT(t)
-
-	xforms := GetProviders(basicmeta.MustGet()).Create(util.ProcessorOptions{})
-	g.Expect(xforms).To(HaveLen(1))
-
-	src := &fixtures.Source{}
-	xform := xforms[0]
-	src.Dispatch(xform)
-
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.Event{Kind: event.Reset})
-	src.Handlers.Handle(event.AddFor(basicmeta.K8SCollection1, data.EntryN1I1V1))
-
-	// No crash
-}
-
-func TestDirect_DoubleStart(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.AddFor(basicmeta.K8SCollection1, data.EntryN1I1V1))
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.FullSyncFor(basicmeta.Collection2),
-		event.AddFor(basicmeta.Collection2, data.EntryN1I1V1), // XForm to Collection2
-	)
-}
-
-func TestDirect_DoubleStop(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.AddFor(basicmeta.K8SCollection1, data.EntryN1I1V1))
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.FullSyncFor(basicmeta.Collection2),
-		event.AddFor(basicmeta.Collection2, data.EntryN1I1V1), // XForm to Collection2
-	)
-
-	acc.Clear()
-
-	xform.Stop()
-	xform.Stop()
-
-	g.Consistently(acc.Events).Should(BeEmpty())
-}
-
-func TestDirect_StartStopStartStop(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.AddFor(basicmeta.K8SCollection1, data.EntryN1I1V1))
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.FullSyncFor(basicmeta.Collection2),
-		event.AddFor(basicmeta.Collection2, data.EntryN1I1V1), // XForm to Collection2
-	)
-
-	acc.Clear()
-	xform.Stop()
-	g.Consistently(acc.Events).Should(BeEmpty())
-
-	xform.Start()
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.K8SCollection1))
-	src.Handlers.Handle(event.AddFor(basicmeta.K8SCollection1, data.EntryN1I1V1))
-
-	fixtures.ExpectEventsEventually(t, acc,
-		event.FullSyncFor(basicmeta.Collection2),
-		event.AddFor(basicmeta.Collection2, data.EntryN1I1V1), // XForm to Collection2
-	)
-
-	acc.Clear()
-	xform.Stop()
-	g.Consistently(acc.Events).Should(BeEmpty())
-}
-
-func TestDirect_InvalidEvent(t *testing.T) {
-	g := NewWithT(t)
-
-	xform, src, acc := setup(g)
-
-	xform.Start()
-	defer xform.Stop()
-
-	src.Handlers.Handle(event.FullSyncFor(basicmeta.Collection2)) // Collection2
-	src.Handlers.Handle(event.AddFor(basicmeta.Collection2, data.EntryN1I1V1))
-
-	g.Consistently(acc.Events).Should(BeEmpty())
-}
-
-func setup(g *GomegaWithT) (event.Transformer, *fixtures.Source, *fixtures.Accumulator) {
-	xforms := GetProviders(basicmeta.MustGet()).Create(util.ProcessorOptions{})
-	g.Expect(xforms).To(HaveLen(1))
-
-	src := &fixtures.Source{}
-	acc := &fixtures.Accumulator{}
-	xform := xforms[0]
-	src.Dispatch(xform)
-	xform.DispatchFor(xform.Outputs().All()[0], acc)
-
-	return xform, src, acc
-}
diff --git a/pkg/config/legacy/processor/transforms/transforms.go b/pkg/config/legacy/processor/transforms/transforms.go
deleted file mode 100644
index 426c7d8e00..0000000000
--- a/pkg/config/legacy/processor/transforms/transforms.go
+++ /dev/null
@@ -1,32 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-// Package transforms contains basic processing building blocks that can be incorporated into bigger/self-contained
-// processing pipelines.
-package transforms
-
-import (
-	"istio.io/istio/pkg/config/legacy/processing/transformer"
-	"istio.io/istio/pkg/config/legacy/processor/transforms/direct"
-	"istio.io/istio/pkg/config/schema"
-)
-
-// Providers builds and returns a list of all transformer objects
-func Providers(m *schema.Metadata) transformer.Providers {
-	providers := make([]transformer.Provider, 0)
-
-	providers = append(providers, direct.GetProviders(m)...)
-
-	return providers
-}
diff --git a/pkg/config/legacy/testing/basicmeta/basicmeta.gen.go b/pkg/config/legacy/testing/basicmeta/basicmeta.gen.go
deleted file mode 100644
index 5c523a2818..0000000000
--- a/pkg/config/legacy/testing/basicmeta/basicmeta.gen.go
+++ /dev/null
@@ -1,326 +0,0 @@
-// Code generated for package basicmeta by go-bindata DO NOT EDIT. (@generated)
-// sources:
-// basicmeta.yaml
-// basicmeta2.yaml
-package basicmeta
-
-import (
-	"fmt"
-	"io/ioutil"
-	"os"
-	"path/filepath"
-	"strings"
-	"time"
-)
-type asset struct {
-	bytes []byte
-	info  os.FileInfo
-}
-
-type bindataFileInfo struct {
-	name    string
-	size    int64
-	mode    os.FileMode
-	modTime time.Time
-}
-
-// Name return file name
-func (fi bindataFileInfo) Name() string {
-	return fi.name
-}
-
-// Size return file size
-func (fi bindataFileInfo) Size() int64 {
-	return fi.size
-}
-
-// Mode return file mode
-func (fi bindataFileInfo) Mode() os.FileMode {
-	return fi.mode
-}
-
-// Mode return file modify time
-func (fi bindataFileInfo) ModTime() time.Time {
-	return fi.modTime
-}
-
-// IsDir return file whether a directory
-func (fi bindataFileInfo) IsDir() bool {
-	return fi.mode&os.ModeDir != 0
-}
-
-// Sys return file is sys mode
-func (fi bindataFileInfo) Sys() interface{} {
-	return nil
-}
-
-var _basicmetaYaml = []byte(`# Copyright 2019 Istio Authors
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in conformance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-collections:
-  - name: "k8s/collection1"
-    kind: "Kind1"
-    group: "testdata.istio.io"
-
-  - name: "collection2"
-    kind: "Kind1"
-    group: "testdata.istio.io"
-
-resources:
-  - kind: "Kind1"
-    plural: "Kind1s"
-    group: "testdata.istio.io"
-    version: "v1alpha1"
-    proto: "google.protobuf.Struct"
-    protoPackage: "github.com/gogo/protobuf/types"
-
-transforms:
-  - type: direct
-    mapping:
-      "k8s/collection1": "collection2"
-`)
-
-func basicmetaYamlBytes() ([]byte, error) {
-	return _basicmetaYaml, nil
-}
-
-func basicmetaYaml() (*asset, error) {
-	bytes, err := basicmetaYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "basicmeta.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-var _basicmeta2Yaml = []byte(`# Copyright 2019 Istio Authors
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in conformance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-collections:
-  - name: "k8s/collection1"
-    kind: "Kind1"
-    group: "testdata.istio.io"
-
-  - name: "collection1out"
-    kind: "Kind1"
-    group: "testdata.istio.io"
-
-  - name: "k8s/collection2"
-    kind: "Kind2"
-    group: "testdata.istio.io"
-
-  - name: "collection2out"
-    kind: "Kind2"
-    group: "testdata.istio.io"
-
-resources:
-  - kind: "Kind1"
-    plural: "Kind1s"
-    group: "testdata.istio.io"
-    version: "v1alpha1"
-    proto: "google.protobuf.Struct"
-    protoPackage: "github.com/gogo/protobuf/types"
-
-  - kind: "Kind2"
-    plural: "Kind2s"
-    group: "testdata.istio.io"
-    version: "v1alpha1"
-    optional: true
-    clusterScoped: true
-    proto: "google.protobuf.Struct"
-    protoPackage: "github.com/gogo/protobuf/types"
-
-transforms:
-  - type: direct
-    mapping:
-      "k8s/collection1": "collection1out"
-      "k8s/collection2": "collection2out"
-`)
-
-func basicmeta2YamlBytes() ([]byte, error) {
-	return _basicmeta2Yaml, nil
-}
-
-func basicmeta2Yaml() (*asset, error) {
-	bytes, err := basicmeta2YamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "basicmeta2.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-// Asset loads and returns the asset for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func Asset(name string) ([]byte, error) {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[cannonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
-		}
-		return a.bytes, nil
-	}
-	return nil, fmt.Errorf("Asset %s not found", name)
-}
-
-// MustAsset is like Asset but panics when Asset would return an error.
-// It simplifies safe initialization of global variables.
-func MustAsset(name string) []byte {
-	a, err := Asset(name)
-	if err != nil {
-		panic("asset: Asset(" + name + "): " + err.Error())
-	}
-
-	return a
-}
-
-// AssetInfo loads and returns the asset info for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func AssetInfo(name string) (os.FileInfo, error) {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[cannonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
-		}
-		return a.info, nil
-	}
-	return nil, fmt.Errorf("AssetInfo %s not found", name)
-}
-
-// AssetNames returns the names of the assets.
-func AssetNames() []string {
-	names := make([]string, 0, len(_bindata))
-	for name := range _bindata {
-		names = append(names, name)
-	}
-	return names
-}
-
-// _bindata is a table, holding each asset generator, mapped to its name.
-var _bindata = map[string]func() (*asset, error){
-	"basicmeta.yaml":  basicmetaYaml,
-	"basicmeta2.yaml": basicmeta2Yaml,
-}
-
-// AssetDir returns the file names below a certain
-// directory embedded in the file by go-bindata.
-// For example if you run go-bindata on data/... and data contains the
-// following hierarchy:
-//     data/
-//       foo.txt
-//       img/
-//         a.png
-//         b.png
-// then AssetDir("data") would return []string{"foo.txt", "img"}
-// AssetDir("data/img") would return []string{"a.png", "b.png"}
-// AssetDir("foo.txt") and AssetDir("notexist") would return an error
-// AssetDir("") will return []string{"data"}.
-func AssetDir(name string) ([]string, error) {
-	node := _bintree
-	if len(name) != 0 {
-		cannonicalName := strings.Replace(name, "\\", "/", -1)
-		pathList := strings.Split(cannonicalName, "/")
-		for _, p := range pathList {
-			node = node.Children[p]
-			if node == nil {
-				return nil, fmt.Errorf("Asset %s not found", name)
-			}
-		}
-	}
-	if node.Func != nil {
-		return nil, fmt.Errorf("Asset %s not found", name)
-	}
-	rv := make([]string, 0, len(node.Children))
-	for childName := range node.Children {
-		rv = append(rv, childName)
-	}
-	return rv, nil
-}
-
-type bintree struct {
-	Func     func() (*asset, error)
-	Children map[string]*bintree
-}
-
-var _bintree = &bintree{nil, map[string]*bintree{
-	"basicmeta.yaml":  &bintree{basicmetaYaml, map[string]*bintree{}},
-	"basicmeta2.yaml": &bintree{basicmeta2Yaml, map[string]*bintree{}},
-}}
-
-// RestoreAsset restores an asset under the given directory
-func RestoreAsset(dir, name string) error {
-	data, err := Asset(name)
-	if err != nil {
-		return err
-	}
-	info, err := AssetInfo(name)
-	if err != nil {
-		return err
-	}
-	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
-	if err != nil {
-		return err
-	}
-	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
-	if err != nil {
-		return err
-	}
-	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
-	if err != nil {
-		return err
-	}
-	return nil
-}
-
-// RestoreAssets restores an asset under the given directory recursively
-func RestoreAssets(dir, name string) error {
-	children, err := AssetDir(name)
-	// File
-	if err != nil {
-		return RestoreAsset(dir, name)
-	}
-	// Dir
-	for _, child := range children {
-		err = RestoreAssets(dir, filepath.Join(name, child))
-		if err != nil {
-			return err
-		}
-	}
-	return nil
-}
-
-func _filePath(dir, name string) string {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
-}
diff --git a/pkg/config/legacy/testing/basicmeta/basicmeta.yaml b/pkg/config/legacy/testing/basicmeta/basicmeta.yaml
deleted file mode 100644
index 00162b6de5..0000000000
--- a/pkg/config/legacy/testing/basicmeta/basicmeta.yaml
+++ /dev/null
@@ -1,36 +0,0 @@
-# Copyright 2019 Istio Authors
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in conformance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-collections:
-  - name: "k8s/collection1"
-    kind: "Kind1"
-    group: "testdata.istio.io"
-
-  - name: "collection2"
-    kind: "Kind1"
-    group: "testdata.istio.io"
-
-resources:
-  - kind: "Kind1"
-    plural: "Kind1s"
-    group: "testdata.istio.io"
-    version: "v1alpha1"
-    proto: "google.protobuf.Struct"
-    protoPackage: "github.com/gogo/protobuf/types"
-
-transforms:
-  - type: direct
-    mapping:
-      "k8s/collection1": "collection2"
diff --git a/pkg/config/legacy/testing/basicmeta/basicmeta2.yaml b/pkg/config/legacy/testing/basicmeta/basicmeta2.yaml
deleted file mode 100644
index d76e5df20a..0000000000
--- a/pkg/config/legacy/testing/basicmeta/basicmeta2.yaml
+++ /dev/null
@@ -1,53 +0,0 @@
-# Copyright 2019 Istio Authors
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in conformance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-collections:
-  - name: "k8s/collection1"
-    kind: "Kind1"
-    group: "testdata.istio.io"
-
-  - name: "collection1out"
-    kind: "Kind1"
-    group: "testdata.istio.io"
-
-  - name: "k8s/collection2"
-    kind: "Kind2"
-    group: "testdata.istio.io"
-
-  - name: "collection2out"
-    kind: "Kind2"
-    group: "testdata.istio.io"
-
-resources:
-  - kind: "Kind1"
-    plural: "Kind1s"
-    group: "testdata.istio.io"
-    version: "v1alpha1"
-    proto: "google.protobuf.Struct"
-    protoPackage: "github.com/gogo/protobuf/types"
-
-  - kind: "Kind2"
-    plural: "Kind2s"
-    group: "testdata.istio.io"
-    version: "v1alpha1"
-    optional: true
-    clusterScoped: true
-    proto: "google.protobuf.Struct"
-    protoPackage: "github.com/gogo/protobuf/types"
-
-transforms:
-  - type: direct
-    mapping:
-      "k8s/collection1": "collection1out"
-      "k8s/collection2": "collection2out"
diff --git a/pkg/config/legacy/testing/basicmeta/collections.gen.go b/pkg/config/legacy/testing/basicmeta/collections.gen.go
deleted file mode 100755
index 780ff47acd..0000000000
--- a/pkg/config/legacy/testing/basicmeta/collections.gen.go
+++ /dev/null
@@ -1,80 +0,0 @@
-// GENERATED FILE -- DO NOT EDIT
-//
-
-package basicmeta
-
-import (
-	"reflect"
-
-	githubcomgogoprotobuftypes "github.com/gogo/protobuf/types"
-
-	"istio.io/istio/pkg/config/schema/collection"
-	"istio.io/istio/pkg/config/schema/resource"
-	"istio.io/istio/pkg/config/validation"
-)
-
-var (
-
-	// Collection2 describes the collection collection2
-	Collection2 = collection.Builder{
-		Name:         "collection2",
-		VariableName: "Collection2",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "testdata.istio.io",
-			Kind:          "Kind1",
-			Plural:        "Kind1s",
-			Version:       "v1alpha1",
-			Proto:         "google.protobuf.Struct",
-			ReflectType:   reflect.TypeOf(&githubcomgogoprotobuftypes.Struct{}).Elem(),
-			ProtoPackage:  "github.com/gogo/protobuf/types",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SCollection1 describes the collection k8s/collection1
-	K8SCollection1 = collection.Builder{
-		Name:         "k8s/collection1",
-		VariableName: "K8SCollection1",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "testdata.istio.io",
-			Kind:          "Kind1",
-			Plural:        "Kind1s",
-			Version:       "v1alpha1",
-			Proto:         "google.protobuf.Struct",
-			ReflectType:   reflect.TypeOf(&githubcomgogoprotobuftypes.Struct{}).Elem(),
-			ProtoPackage:  "github.com/gogo/protobuf/types",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// All contains all collections in the system.
-	All = collection.NewSchemasBuilder().
-		MustAdd(Collection2).
-		MustAdd(K8SCollection1).
-		Build()
-
-	// Istio contains only Istio collections.
-	Istio = collection.NewSchemasBuilder().
-		Build()
-
-	// Kube contains only kubernetes collections.
-	Kube = collection.NewSchemasBuilder().
-		MustAdd(K8SCollection1).
-		Build()
-
-	// Pilot contains only collections used by Pilot.
-	Pilot = collection.NewSchemasBuilder().
-		Build()
-
-	// PilotGatewayAPI contains only collections used by Pilot, including experimental Service Api.
-	PilotGatewayAPI = collection.NewSchemasBuilder().
-			Build()
-
-	// Deprecated contains only collections used by that will soon be used by nothing.
-	Deprecated = collection.NewSchemasBuilder().
-			Build()
-)
diff --git a/pkg/config/legacy/testing/basicmeta/generate.go b/pkg/config/legacy/testing/basicmeta/generate.go
deleted file mode 100644
index e3d463c6cc..0000000000
--- a/pkg/config/legacy/testing/basicmeta/generate.go
+++ /dev/null
@@ -1,23 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package basicmeta
-
-// Embed the core metadata file containing the collections as a resource
-//go:generate go-bindata --nocompress --nometadata --pkg basicmeta -o basicmeta.gen.go basicmeta.yaml basicmeta2.yaml
-
-// Create collection constants
-//go:generate go run $REPO_ROOT/pkg/config/schema/codegen/tools/collections.main.go basicmeta basicmeta.yaml collections.gen.go
-
-//go:generate goimports -w -local istio.io "$REPO_ROOT/pkg/config/legacy/testing/basicmeta/collections.gen.go"
diff --git a/pkg/config/legacy/testing/basicmeta/get.go b/pkg/config/legacy/testing/basicmeta/get.go
deleted file mode 100644
index 067e60f1d4..0000000000
--- a/pkg/config/legacy/testing/basicmeta/get.go
+++ /dev/null
@@ -1,69 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package basicmeta
-
-import (
-	"fmt"
-
-	"istio.io/istio/pkg/config/schema"
-)
-
-// Get returns the contained baiscmeta.yaml file, in parsed form.
-func Get() (*schema.Metadata, error) {
-	b, err := Asset("basicmeta.yaml")
-	if err != nil {
-		return nil, err
-	}
-
-	m, err := schema.ParseAndBuild(string(b))
-	if err != nil {
-		return nil, err
-	}
-
-	return m, nil
-}
-
-// Get returns the contained baiscmeta2.yaml file, in parsed form.
-func Get2() (*schema.Metadata, error) {
-	b, err := Asset("basicmeta2.yaml")
-	if err != nil {
-		return nil, err
-	}
-
-	m, err := schema.ParseAndBuild(string(b))
-	if err != nil {
-		return nil, err
-	}
-
-	return m, nil
-}
-
-// MustGet calls Get and panics if it returns and error.
-func MustGet() *schema.Metadata {
-	s, err := Get()
-	if err != nil {
-		panic(fmt.Sprintf("testmeta.MustGet: %v", err))
-	}
-	return s
-}
-
-// MustGet2 calls Get2 and panics if it returns and error.
-func MustGet2() *schema.Metadata {
-	s, err := Get2()
-	if err != nil {
-		panic(fmt.Sprintf("testmeta.MustGet2: %v", err))
-	}
-	return s
-}
diff --git a/pkg/config/legacy/testing/data/builtin.gen.go b/pkg/config/legacy/testing/data/builtin.gen.go
deleted file mode 100644
index 021d609b1d..0000000000
--- a/pkg/config/legacy/testing/data/builtin.gen.go
+++ /dev/null
@@ -1,943 +0,0 @@
-// Code generated for package data by go-bindata DO NOT EDIT. (@generated)
-// sources:
-// builtin/deployment.yaml
-// builtin/endpoints.yaml
-// builtin/ingress.yaml
-// builtin/namespace.yaml
-// builtin/node.yaml
-// builtin/pod.yaml
-// builtin/service.yaml
-package data
-
-import (
-	"fmt"
-	"io/ioutil"
-	"os"
-	"path/filepath"
-	"strings"
-	"time"
-)
-type asset struct {
-	bytes []byte
-	info  os.FileInfo
-}
-
-type bindataFileInfo struct {
-	name    string
-	size    int64
-	mode    os.FileMode
-	modTime time.Time
-}
-
-// Name return file name
-func (fi bindataFileInfo) Name() string {
-	return fi.name
-}
-
-// Size return file size
-func (fi bindataFileInfo) Size() int64 {
-	return fi.size
-}
-
-// Mode return file mode
-func (fi bindataFileInfo) Mode() os.FileMode {
-	return fi.mode
-}
-
-// Mode return file modify time
-func (fi bindataFileInfo) ModTime() time.Time {
-	return fi.modTime
-}
-
-// IsDir return file whether a directory
-func (fi bindataFileInfo) IsDir() bool {
-	return fi.mode&os.ModeDir != 0
-}
-
-// Sys return file is sys mode
-func (fi bindataFileInfo) Sys() interface{} {
-	return nil
-}
-
-var _builtinDeploymentYaml = []byte(`apiVersion: apps/v1
-kind: Deployment
-metadata:
-  name: httpbin
-spec:
-  replicas: 1
-  selector:
-    matchLabels:
-      app: httpbin
-      version: v1
-  template:
-    metadata:
-      labels:
-        app: httpbin
-        version: v1
-    spec:
-      containers:
-      - image: docker.io/kennethreitz/httpbin
-        imagePullPolicy: IfNotPresent
-        name: httpbin
-        ports:
-        - containerPort: 80
-`)
-
-func builtinDeploymentYamlBytes() ([]byte, error) {
-	return _builtinDeploymentYaml, nil
-}
-
-func builtinDeploymentYaml() (*asset, error) {
-	bytes, err := builtinDeploymentYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "builtin/deployment.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-var _builtinEndpointsYaml = []byte(`apiVersion: v1
-kind: Endpoints
-metadata:
-  creationTimestamp: 2018-02-12T15:48:44Z
-  labels:
-    addonmanager.kubernetes.io/mode: Reconcile
-    k8s-app: kube-dns
-    kubernetes.io/cluster-service: "true"
-    kubernetes.io/name: KubeDNS
-  name: kube-dns
-  namespace: kube-system
-  resourceVersion: "50573380"
-  selfLink: /api/v1/namespaces/kube-system/endpoints/kube-dns
-  uid: 34991433-100c-11e8-a600-42010a8002c3
-subsets:
-- addresses:
-  - ip: 10.40.0.5
-    nodeName: gke-istio-test-default-pool-866a0405-420r
-    targetRef:
-      kind: Pod
-      name: kube-dns-548976df6c-kxnhb
-      namespace: kube-system
-      resourceVersion: "50573379"
-      uid: 66b0ca7d-f71d-11e8-af4f-42010a800072
-  - ip: 10.40.1.4
-    nodeName: gke-istio-test-default-pool-866a0405-ftch
-    targetRef:
-      kind: Pod
-      name: kube-dns-548976df6c-d9kkv
-      namespace: kube-system
-      resourceVersion: "50572715"
-      uid: dd4bbbd4-f71c-11e8-af4f-42010a800072
-  ports:
-  - name: dns
-    port: 53
-    protocol: UDP
-  - name: dns-tcp
-    port: 53
-    protocol: TCP
-`)
-
-func builtinEndpointsYamlBytes() ([]byte, error) {
-	return _builtinEndpointsYaml, nil
-}
-
-func builtinEndpointsYaml() (*asset, error) {
-	bytes, err := builtinEndpointsYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "builtin/endpoints.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-var _builtinIngressYaml = []byte(`apiVersion: extensions/v1beta1
-kind: Ingress
-metadata:
-  name: secured-ingress
-  annotations:
-    kubernetes.io/ingress.class: "istio"
-spec:
-  tls:
-    - secretName: istio-ingress-certs
-  rules:
-    - http:
-        paths:
-          - path: /http
-            backend:
-              serviceName: a
-              servicePort: http
-          - path: /pasta
-            backend:
-              serviceName: b
-              servicePort: 8080
-          - path: /.*
-            backend:
-              serviceName: a
-              servicePort: grpc
-`)
-
-func builtinIngressYamlBytes() ([]byte, error) {
-	return _builtinIngressYaml, nil
-}
-
-func builtinIngressYaml() (*asset, error) {
-	bytes, err := builtinIngressYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "builtin/ingress.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-var _builtinNamespaceYaml = []byte(`apiVersion: v1
-kind: Namespace
-metadata:
-  labels:
-    istio-injection: disabled
-  name: somens
-spec:
-  finalizers:
-    - kubernetes
-status:
-  phase: Active
-`)
-
-func builtinNamespaceYamlBytes() ([]byte, error) {
-	return _builtinNamespaceYaml, nil
-}
-
-func builtinNamespaceYaml() (*asset, error) {
-	bytes, err := builtinNamespaceYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "builtin/namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-var _builtinNodeYaml = []byte(`apiVersion: v1
-kind: Node
-metadata:
-  annotations:
-    container.googleapis.com/instance_id: "2787417306096525587"
-    node.alpha.kubernetes.io/ttl: "0"
-    volumes.kubernetes.io/controller-managed-attach-detach: "true"
-  creationTimestamp: 2018-10-05T19:40:48Z
-  labels:
-    kubernetes.io/arch: amd64
-    beta.kubernetes.io/fluentd-ds-ready: "true"
-    beta.kubernetes.io/instance-type: n1-standard-4
-    kubernetes.io/os: linux
-    cloud.google.com/gke-nodepool: default-pool
-    cloud.google.com/gke-os-distribution: cos
-    failure-domain.beta.kubernetes.io/region: us-central1
-    failure-domain.beta.kubernetes.io/zone: us-central1-a
-    kubernetes.io/hostname: gke-istio-test-default-pool-866a0405-420r
-  name: gke-istio-test-default-pool-866a0405-420r
-  resourceVersion: "60695251"
-  selfLink: /api/v1/nodes/gke-istio-test-default-pool-866a0405-420r
-  uid: 8f63dfef-c8d6-11e8-8901-42010a800278
-spec:
-  externalID: "1929748586650271976"
-  podCIDR: 10.40.0.0/24
-  providerID: gce://nathanmittler-istio-test/us-central1-a/gke-istio-test-default-pool-866a0405-420r
-status:
-  addresses:
-  - address: 10.128.0.4
-    type: InternalIP
-  - address: 35.238.214.129
-    type: ExternalIP
-  - address: gke-istio-test-default-pool-866a0405-420r
-    type: Hostname
-  allocatable:
-    cpu: 3920m
-    ephemeral-storage: "47093746742"
-    hugepages-2Mi: "0"
-    memory: 12699980Ki
-    pods: "110"
-  capacity:
-    cpu: "4"
-    ephemeral-storage: 98868448Ki
-    hugepages-2Mi: "0"
-    memory: 15399244Ki
-    pods: "110"
-  conditions:
-  - lastHeartbeatTime: 2019-01-15T17:36:51Z
-    lastTransitionTime: 2018-12-03T17:00:58Z
-    message: node is functioning properly
-    reason: UnregisterNetDevice
-    status: "False"
-    type: FrequentUnregisterNetDevice
-  - lastHeartbeatTime: 2019-01-15T17:36:51Z
-    lastTransitionTime: 2018-12-03T16:55:56Z
-    message: kernel has no deadlock
-    reason: KernelHasNoDeadlock
-    status: "False"
-    type: KernelDeadlock
-  - lastHeartbeatTime: 2018-10-05T19:40:58Z
-    lastTransitionTime: 2018-10-05T19:40:58Z
-    message: RouteController created a route
-    reason: RouteCreated
-    status: "False"
-    type: NetworkUnavailable
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-12-03T16:55:57Z
-    message: kubelet has sufficient disk space available
-    reason: KubeletHasSufficientDisk
-    status: "False"
-    type: OutOfDisk
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-12-03T16:55:57Z
-    message: kubelet has sufficient memory available
-    reason: KubeletHasSufficientMemory
-    status: "False"
-    type: MemoryPressure
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-12-03T16:55:57Z
-    message: kubelet has no disk pressure
-    reason: KubeletHasNoDiskPressure
-    status: "False"
-    type: DiskPressure
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-10-05T19:40:48Z
-    message: kubelet has sufficient PID available
-    reason: KubeletHasSufficientPID
-    status: "False"
-    type: PIDPressure
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-12-03T16:56:07Z
-    message: kubelet is posting ready status. AppArmor enabled
-    reason: KubeletReady
-    status: "True"
-    type: Ready
-  daemonEndpoints:
-    kubeletEndpoint:
-      Port: 10250
-  images:
-  - names:
-    - gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:a33f69d0034fdce835a1eb7df8a051ea74323f3fc30d911bbd2e3f2aef09fc93
-    - gcr.io/stackdriver-agents/stackdriver-logging-agent:0.3-1.5.34-1-k8s-1
-    sizeBytes: 554981103
-  - names:
-    - istio/examples-bookinfo-reviews-v3@sha256:8c0385f0ca799e655d8770b52cb4618ba54e8966a0734ab1aeb6e8b14e171a3b
-    - istio/examples-bookinfo-reviews-v3:1.9.0
-    sizeBytes: 525074812
-  - names:
-    - istio/examples-bookinfo-reviews-v2@sha256:d2483dcb235b27309680177726e4e86905d66e47facaf1d57ed590b2bf95c8ad
-    - istio/examples-bookinfo-reviews-v2:1.9.0
-    sizeBytes: 525074812
-  - names:
-    - istio/examples-bookinfo-reviews-v1@sha256:920d46b3c526376b28b90d0e895ca7682d36132e6338301fcbcd567ef81bde05
-    - istio/examples-bookinfo-reviews-v1:1.9.0
-    sizeBytes: 525074812
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:8cea2c055dd3d3ab78f99584256efcc1cff7d8ddbed11cded404e9d164235502
-    sizeBytes: 448337138
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:9949bc22667ef88e54ae91700a64bf1459e8c14ed92b870b7ec2f630e14cf3c1
-    sizeBytes: 446407220
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:fc1f957cfa26673768be8fa865066f730f22fde98a6e80654d00f755a643b507
-    sizeBytes: 446407220
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:23a52850819d5196d66e8e20f4f63f314f779716f830e1d109ad0e24b1f0df43
-    sizeBytes: 446407220
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:e338c2c5cbc379db24c5b2d67a4acc9cca9a069c2927217fca0ce7cbc582d312
-    - gcr.io/nathanmittler-istio-test/proxyv2:latest
-    sizeBytes: 446398900
-  - names:
-    - gcr.io/istio-release/proxyv2@sha256:dec972eab4f46c974feec1563ea484ad4995edf55ea91d42e148c5db04b3d4d2
-    - gcr.io/istio-release/proxyv2:master-latest-daily
-    sizeBytes: 353271308
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:cb4a29362ff9014bf1d96e0ce2bb6337bf034908bb4a8d48af0628a4d8d64413
-    sizeBytes: 344543156
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:9d502fd29961bc3464f7906ac0e86b07edf01cf4892352ef780e55b3525fb0b8
-    sizeBytes: 344257154
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:cdd2f527b4bd392b533d2d0e62c257c19d5a35a6b5fc3512aa327c560866aec1
-    sizeBytes: 344257154
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:6ec1dced4cee8569c77817927938fa4341f939e0dddab511bc3ee8724d652ae2
-    sizeBytes: 344257154
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:3f4115cd8c26a17f6bf8ea49f1ff5b875382bda5a6d46281c70c886e802666b0
-    sizeBytes: 344257154
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:4e75c42518bb46376cfe0b4fbaa3da1d8f1cea99f706736f1b0b04a3ac554db2
-    sizeBytes: 344201616
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:58a7511f549448f6f86280559069bc57f5c754877ebec69da5bbc7ad55e42162
-    sizeBytes: 344201616
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:7f60a750d15cda9918e9172e529270ce78c670751d4027f6adc6bdc84ec2d884
-    sizeBytes: 344201436
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:6fc25c08212652c7539caaf0f6d913d929f84c54767f20066657ce0f4e6a51e0
-    sizeBytes: 344193424
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:4e93825950c831ce6d2b65c9a80921c8860035e39a4b384d38d40f7d2cb2a4ee
-    sizeBytes: 344185232
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:842216399613774640a4605202d446cf61bd48ff20e12391a0239cbc6a8f2c77
-    sizeBytes: 344185052
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:8ee2bb6fc5484373227b17e377fc226d8d19be11d38d6dbc304970bd46bc929b
-    sizeBytes: 344159662
-  - names:
-    - gcr.io/nathanmittler-istio-test/pilot@sha256:b62e9f12609b89892bb38c858936f76d81aa3ccdc91a3961309f900c1c4f574b
-    sizeBytes: 307722351
-  - names:
-    - gcr.io/nathanmittler-istio-test/pilot@sha256:2445d3c2839825be2decbafcd3f2668bdf148ba9acbbb855810006a58899f320
-    sizeBytes: 307722351
-  - names:
-    - gcr.io/nathanmittler-istio-test/pilot@sha256:ea8e501811c06674bb4b4622862e2d12e700f5edadc01a050030a0b33a6435a6
-    sizeBytes: 307722351
-  nodeInfo:
-    architecture: amd64
-    bootID: 8f772c7c-09eb-41eb-8bb5-76ef214eaaa1
-    containerRuntimeVersion: docker://17.3.2
-    kernelVersion: 4.14.65+
-    kubeProxyVersion: v1.11.3-gke.18
-    kubeletVersion: v1.11.3-gke.18
-    machineID: f325f89cd295bdcda652fd40f0049e32
-    operatingSystem: linux
-    osImage: Container-Optimized OS from Google
-    systemUUID: F325F89C-D295-BDCD-A652-FD40F0049E32
-`)
-
-func builtinNodeYamlBytes() ([]byte, error) {
-	return _builtinNodeYaml, nil
-}
-
-func builtinNodeYaml() (*asset, error) {
-	bytes, err := builtinNodeYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "builtin/node.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-var _builtinPodYaml = []byte(`apiVersion: v1
-kind: Pod
-metadata:
-  annotations:
-    scheduler.alpha.kubernetes.io/critical-pod: ""
-    seccomp.security.alpha.kubernetes.io/pod: docker/default
-  creationTimestamp: 2018-12-03T16:59:57Z
-  generateName: kube-dns-548976df6c-
-  labels:
-    k8s-app: kube-dns
-    pod-template-hash: "1045328927"
-  name: kube-dns-548976df6c-d9kkv
-  namespace: kube-system
-  ownerReferences:
-  - apiVersion: apps/v1
-    blockOwnerDeletion: true
-    controller: true
-    kind: ReplicaSet
-    name: kube-dns-548976df6c
-    uid: b589a851-f71b-11e8-af4f-42010a800072
-  resourceVersion: "50572715"
-  selfLink: /api/v1/namespaces/kube-system/pods/kube-dns-548976df6c-d9kkv
-  uid: dd4bbbd4-f71c-11e8-af4f-42010a800072
-spec:
-  containers:
-  - args:
-    - --domain=cluster.local.
-    - --dns-port=10053
-    - --config-dir=/kube-dns-config
-    - --v=2
-    env:
-    - name: PROMETHEUS_PORT
-      value: "10055"
-    image: k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13
-    imagePullPolicy: IfNotPresent
-    livenessProbe:
-      failureThreshold: 5
-      httpGet:
-        path: /healthcheck/kubedns
-        port: 10054
-        scheme: HTTP
-      initialDelaySeconds: 60
-      periodSeconds: 10
-      successThreshold: 1
-      timeoutSeconds: 5
-    name: kubedns
-    ports:
-    - containerPort: 10053
-      name: dns-local
-      protocol: UDP
-    - containerPort: 10053
-      name: dns-tcp-local
-      protocol: TCP
-    - containerPort: 10055
-      name: metrics
-      protocol: TCP
-    readinessProbe:
-      failureThreshold: 3
-      httpGet:
-        path: /readiness
-        port: 8081
-        scheme: HTTP
-      initialDelaySeconds: 3
-      periodSeconds: 10
-      successThreshold: 1
-      timeoutSeconds: 5
-    resources:
-      limits:
-        memory: 170Mi
-      requests:
-        cpu: 100m
-        memory: 70Mi
-    terminationMessagePath: /dev/termination-log
-    terminationMessagePolicy: File
-    volumeMounts:
-    - mountPath: /kube-dns-config
-      name: kube-dns-config
-    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
-      name: kube-dns-token-lwn8l
-      readOnly: true
-  - args:
-    - -v=2
-    - -logtostderr
-    - -configDir=/etc/k8s/dns/dnsmasq-nanny
-    - -restartDnsmasq=true
-    - --
-    - -k
-    - --cache-size=1000
-    - --no-negcache
-    - --log-facility=-
-    - --server=/cluster.local/127.0.0.1#10053
-    - --server=/in-addr.arpa/127.0.0.1#10053
-    - --server=/ip6.arpa/127.0.0.1#10053
-    image: k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.13
-    imagePullPolicy: IfNotPresent
-    livenessProbe:
-      failureThreshold: 5
-      httpGet:
-        path: /healthcheck/dnsmasq
-        port: 10054
-        scheme: HTTP
-      initialDelaySeconds: 60
-      periodSeconds: 10
-      successThreshold: 1
-      timeoutSeconds: 5
-    name: dnsmasq
-    ports:
-    - containerPort: 53
-      name: dns
-      protocol: UDP
-    - containerPort: 53
-      name: dns-tcp
-      protocol: TCP
-    resources:
-      requests:
-        cpu: 150m
-        memory: 20Mi
-    terminationMessagePath: /dev/termination-log
-    terminationMessagePolicy: File
-    volumeMounts:
-    - mountPath: /etc/k8s/dns/dnsmasq-nanny
-      name: kube-dns-config
-    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
-      name: kube-dns-token-lwn8l
-      readOnly: true
-  - args:
-    - --v=2
-    - --logtostderr
-    - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
-    - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
-    image: k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.13
-    imagePullPolicy: IfNotPresent
-    livenessProbe:
-      failureThreshold: 5
-      httpGet:
-        path: /metrics
-        port: 10054
-        scheme: HTTP
-      initialDelaySeconds: 60
-      periodSeconds: 10
-      successThreshold: 1
-      timeoutSeconds: 5
-    name: sidecar
-    ports:
-    - containerPort: 10054
-      name: metrics
-      protocol: TCP
-    resources:
-      requests:
-        cpu: 10m
-        memory: 20Mi
-    terminationMessagePath: /dev/termination-log
-    terminationMessagePolicy: File
-    volumeMounts:
-    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
-      name: kube-dns-token-lwn8l
-      readOnly: true
-  - command:
-    - /monitor
-    - --component=kubedns
-    - --target-port=10054
-    - --stackdriver-prefix=container.googleapis.com/internal/addons
-    - --api-override=https://monitoring.googleapis.com/
-    - --whitelisted-metrics=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits
-    - --pod-id=$(POD_NAME)
-    - --namespace-id=$(POD_NAMESPACE)
-    - --v=2
-    env:
-    - name: POD_NAME
-      valueFrom:
-        fieldRef:
-          apiVersion: v1
-          fieldPath: metadata.name
-    - name: POD_NAMESPACE
-      valueFrom:
-        fieldRef:
-          apiVersion: v1
-          fieldPath: metadata.namespace
-    image: gcr.io/google-containers/prometheus-to-sd:v0.2.3
-    imagePullPolicy: IfNotPresent
-    name: prometheus-to-sd
-    resources: {}
-    terminationMessagePath: /dev/termination-log
-    terminationMessagePolicy: File
-    volumeMounts:
-    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
-      name: kube-dns-token-lwn8l
-      readOnly: true
-  dnsPolicy: Default
-  nodeName: gke-istio-test-default-pool-866a0405-ftch
-  priority: 2000000000
-  priorityClassName: system-cluster-critical
-  restartPolicy: Always
-  schedulerName: default-scheduler
-  securityContext: {}
-  serviceAccount: kube-dns
-  serviceAccountName: kube-dns
-  terminationGracePeriodSeconds: 30
-  tolerations:
-  - key: CriticalAddonsOnly
-    operator: Exists
-  - effect: NoExecute
-    key: node.kubernetes.io/not-ready
-    operator: Exists
-    tolerationSeconds: 300
-  - effect: NoExecute
-    key: node.kubernetes.io/unreachable
-    operator: Exists
-    tolerationSeconds: 300
-  volumes:
-  - configMap:
-      defaultMode: 420
-      name: kube-dns
-      optional: true
-    name: kube-dns-config
-  - name: kube-dns-token-lwn8l
-    secret:
-      defaultMode: 420
-      secretName: kube-dns-token-lwn8l
-status:
-  conditions:
-  - lastProbeTime: null
-    lastTransitionTime: 2018-12-03T17:00:00Z
-    status: "True"
-    type: Initialized
-  - lastProbeTime: null
-    lastTransitionTime: 2018-12-03T17:00:20Z
-    status: "True"
-    type: Ready
-  - lastProbeTime: null
-    lastTransitionTime: null
-    status: "True"
-    type: ContainersReady
-  - lastProbeTime: null
-    lastTransitionTime: 2018-12-03T16:59:57Z
-    status: "True"
-    type: PodScheduled
-  containerStatuses:
-  - containerID: docker://676f6c98bfa136315c4ccf0fe40e7a56cbf9ac85128e94310eae82f191246b3e
-    image: k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.13
-    imageID: docker-pullable://k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64@sha256:45df3e8e0c551bd0c79cdba48ae6677f817971dcbd1eeed7fd1f9a35118410e4
-    lastState: {}
-    name: dnsmasq
-    ready: true
-    restartCount: 0
-    state:
-      running:
-        startedAt: 2018-12-03T17:00:14Z
-  - containerID: docker://93fd0664e150982dad0481c5260183308a7035a2f938ec50509d586ed586a107
-    image: k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13
-    imageID: docker-pullable://k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52
-    lastState: {}
-    name: kubedns
-    ready: true
-    restartCount: 0
-    state:
-      running:
-        startedAt: 2018-12-03T17:00:10Z
-  - containerID: docker://e823b79a0a48af75f2eebb1c89ba4c31e8c1ee67ee0d917ac7b4891b67d2cd0f
-    image: gcr.io/google-containers/prometheus-to-sd:v0.2.3
-    imageID: docker-pullable://gcr.io/google-containers/prometheus-to-sd@sha256:be220ec4a66275442f11d420033c106bb3502a3217a99c806eef3cf9858788a2
-    lastState: {}
-    name: prometheus-to-sd
-    ready: true
-    restartCount: 0
-    state:
-      running:
-        startedAt: 2018-12-03T17:00:18Z
-  - containerID: docker://74223c401a8dac04b8bd29cdfedcb216881791b4e84bb80a15714991dd18735e
-    image: k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.13
-    imageID: docker-pullable://k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:cedc8fe2098dffc26d17f64061296b7aa54258a31513b6c52df271a98bb522b3
-    lastState: {}
-    name: sidecar
-    ready: true
-    restartCount: 0
-    state:
-      running:
-        startedAt: 2018-12-03T17:00:16Z
-  hostIP: 10.128.0.5
-  phase: Running
-  podIP: 10.40.1.4
-  qosClass: Burstable
-  startTime: 2018-12-03T17:00:00Z
-`)
-
-func builtinPodYamlBytes() ([]byte, error) {
-	return _builtinPodYaml, nil
-}
-
-func builtinPodYaml() (*asset, error) {
-	bytes, err := builtinPodYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "builtin/pod.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-var _builtinServiceYaml = []byte(`apiVersion: v1
-kind: Service
-metadata:
-  annotations:
-    kubectl.kubernetes.io/last-applied-configuration: |
-      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"KubeDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.240.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
-  creationTimestamp: 2018-02-12T15:48:44Z
-  labels:
-    addonmanager.kubernetes.io/mode: Reconcile
-    k8s-app: kube-dns
-    kubernetes.io/cluster-service: "true"
-    kubernetes.io/name: KubeDNS
-  name: kube-dns
-  namespace: kube-system
-  resourceVersion: "274"
-  selfLink: /api/v1/namespaces/kube-system/services/kube-dns
-  uid: 3497d702-100c-11e8-a600-42010a8002c3
-spec:
-  clusterIP: 10.43.240.10
-  ports:
-  - name: dns
-    port: 53
-    protocol: UDP
-    targetPort: 53
-  - name: dns-tcp
-    port: 53
-    protocol: TCP
-    targetPort: 53
-  selector:
-    k8s-app: kube-dns
-  sessionAffinity: None
-  type: ClusterIP
-status:
-  loadBalancer: {}
-`)
-
-func builtinServiceYamlBytes() ([]byte, error) {
-	return _builtinServiceYaml, nil
-}
-
-func builtinServiceYaml() (*asset, error) {
-	bytes, err := builtinServiceYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "builtin/service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-// Asset loads and returns the asset for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func Asset(name string) ([]byte, error) {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[cannonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
-		}
-		return a.bytes, nil
-	}
-	return nil, fmt.Errorf("Asset %s not found", name)
-}
-
-// MustAsset is like Asset but panics when Asset would return an error.
-// It simplifies safe initialization of global variables.
-func MustAsset(name string) []byte {
-	a, err := Asset(name)
-	if err != nil {
-		panic("asset: Asset(" + name + "): " + err.Error())
-	}
-
-	return a
-}
-
-// AssetInfo loads and returns the asset info for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func AssetInfo(name string) (os.FileInfo, error) {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[cannonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
-		}
-		return a.info, nil
-	}
-	return nil, fmt.Errorf("AssetInfo %s not found", name)
-}
-
-// AssetNames returns the names of the assets.
-func AssetNames() []string {
-	names := make([]string, 0, len(_bindata))
-	for name := range _bindata {
-		names = append(names, name)
-	}
-	return names
-}
-
-// _bindata is a table, holding each asset generator, mapped to its name.
-var _bindata = map[string]func() (*asset, error){
-	"builtin/deployment.yaml": builtinDeploymentYaml,
-	"builtin/endpoints.yaml":  builtinEndpointsYaml,
-	"builtin/ingress.yaml":    builtinIngressYaml,
-	"builtin/namespace.yaml":  builtinNamespaceYaml,
-	"builtin/node.yaml":       builtinNodeYaml,
-	"builtin/pod.yaml":        builtinPodYaml,
-	"builtin/service.yaml":    builtinServiceYaml,
-}
-
-// AssetDir returns the file names below a certain
-// directory embedded in the file by go-bindata.
-// For example if you run go-bindata on data/... and data contains the
-// following hierarchy:
-//     data/
-//       foo.txt
-//       img/
-//         a.png
-//         b.png
-// then AssetDir("data") would return []string{"foo.txt", "img"}
-// AssetDir("data/img") would return []string{"a.png", "b.png"}
-// AssetDir("foo.txt") and AssetDir("notexist") would return an error
-// AssetDir("") will return []string{"data"}.
-func AssetDir(name string) ([]string, error) {
-	node := _bintree
-	if len(name) != 0 {
-		cannonicalName := strings.Replace(name, "\\", "/", -1)
-		pathList := strings.Split(cannonicalName, "/")
-		for _, p := range pathList {
-			node = node.Children[p]
-			if node == nil {
-				return nil, fmt.Errorf("Asset %s not found", name)
-			}
-		}
-	}
-	if node.Func != nil {
-		return nil, fmt.Errorf("Asset %s not found", name)
-	}
-	rv := make([]string, 0, len(node.Children))
-	for childName := range node.Children {
-		rv = append(rv, childName)
-	}
-	return rv, nil
-}
-
-type bintree struct {
-	Func     func() (*asset, error)
-	Children map[string]*bintree
-}
-
-var _bintree = &bintree{nil, map[string]*bintree{
-	"builtin": &bintree{nil, map[string]*bintree{
-		"deployment.yaml": &bintree{builtinDeploymentYaml, map[string]*bintree{}},
-		"endpoints.yaml":  &bintree{builtinEndpointsYaml, map[string]*bintree{}},
-		"ingress.yaml":    &bintree{builtinIngressYaml, map[string]*bintree{}},
-		"namespace.yaml":  &bintree{builtinNamespaceYaml, map[string]*bintree{}},
-		"node.yaml":       &bintree{builtinNodeYaml, map[string]*bintree{}},
-		"pod.yaml":        &bintree{builtinPodYaml, map[string]*bintree{}},
-		"service.yaml":    &bintree{builtinServiceYaml, map[string]*bintree{}},
-	}},
-}}
-
-// RestoreAsset restores an asset under the given directory
-func RestoreAsset(dir, name string) error {
-	data, err := Asset(name)
-	if err != nil {
-		return err
-	}
-	info, err := AssetInfo(name)
-	if err != nil {
-		return err
-	}
-	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
-	if err != nil {
-		return err
-	}
-	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
-	if err != nil {
-		return err
-	}
-	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
-	if err != nil {
-		return err
-	}
-	return nil
-}
-
-// RestoreAssets restores an asset under the given directory recursively
-func RestoreAssets(dir, name string) error {
-	children, err := AssetDir(name)
-	// File
-	if err != nil {
-		return RestoreAsset(dir, name)
-	}
-	// Dir
-	for _, child := range children {
-		err = RestoreAssets(dir, filepath.Join(name, child))
-		if err != nil {
-			return err
-		}
-	}
-	return nil
-}
-
-func _filePath(dir, name string) string {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
-}
diff --git a/pkg/config/legacy/testing/data/builtin.go b/pkg/config/legacy/testing/data/builtin.go
deleted file mode 100644
index c7b95b83e0..0000000000
--- a/pkg/config/legacy/testing/data/builtin.go
+++ /dev/null
@@ -1,53 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-// Embed the core metadata file containing the collections as a resource
-//go:generate go-bindata --nocompress --nometadata --pkg data -o builtin.gen.go builtin/
-
-package data
-
-// GetEndpoints returns Endpoints test data
-func GetEndpoints() string {
-	return string(MustAsset("builtin/endpoints.yaml"))
-}
-
-// GetNode returns Node test data
-func GetNode() string {
-	return string(MustAsset("builtin/node.yaml"))
-}
-
-// GetPod returns Pod test data
-func GetPod() string {
-	return string(MustAsset("builtin/pod.yaml"))
-}
-
-// GetService returns Service test data
-func GetService() string {
-	return string(MustAsset("builtin/service.yaml"))
-}
-
-// GetNamespace returns Namespace test data
-func GetNamespace() string {
-	return string(MustAsset("builtin/namespace.yaml"))
-}
-
-// GetIngress returns Ingress test data
-func GetIngress() string {
-	return string(MustAsset("builtin/ingress.yaml"))
-}
-
-// GetDeployment returns Deployment test data
-func GetDeployment() string {
-	return string(MustAsset("builtin/deployment.yaml"))
-}
diff --git a/pkg/config/legacy/testing/data/builtin/deployment.yaml b/pkg/config/legacy/testing/data/builtin/deployment.yaml
deleted file mode 100644
index d34a03c6d5..0000000000
--- a/pkg/config/legacy/testing/data/builtin/deployment.yaml
+++ /dev/null
@@ -1,22 +0,0 @@
-apiVersion: apps/v1
-kind: Deployment
-metadata:
-  name: httpbin
-spec:
-  replicas: 1
-  selector:
-    matchLabels:
-      app: httpbin
-      version: v1
-  template:
-    metadata:
-      labels:
-        app: httpbin
-        version: v1
-    spec:
-      containers:
-      - image: docker.io/kennethreitz/httpbin
-        imagePullPolicy: IfNotPresent
-        name: httpbin
-        ports:
-        - containerPort: 80
diff --git a/pkg/config/legacy/testing/data/builtin/endpoints.yaml b/pkg/config/legacy/testing/data/builtin/endpoints.yaml
deleted file mode 100644
index e95c902ae1..0000000000
--- a/pkg/config/legacy/testing/data/builtin/endpoints.yaml
+++ /dev/null
@@ -1,39 +0,0 @@
-apiVersion: v1
-kind: Endpoints
-metadata:
-  creationTimestamp: 2018-02-12T15:48:44Z
-  labels:
-    addonmanager.kubernetes.io/mode: Reconcile
-    k8s-app: kube-dns
-    kubernetes.io/cluster-service: "true"
-    kubernetes.io/name: KubeDNS
-  name: kube-dns
-  namespace: kube-system
-  resourceVersion: "50573380"
-  selfLink: /api/v1/namespaces/kube-system/endpoints/kube-dns
-  uid: 34991433-100c-11e8-a600-42010a8002c3
-subsets:
-- addresses:
-  - ip: 10.40.0.5
-    nodeName: gke-istio-test-default-pool-866a0405-420r
-    targetRef:
-      kind: Pod
-      name: kube-dns-548976df6c-kxnhb
-      namespace: kube-system
-      resourceVersion: "50573379"
-      uid: 66b0ca7d-f71d-11e8-af4f-42010a800072
-  - ip: 10.40.1.4
-    nodeName: gke-istio-test-default-pool-866a0405-ftch
-    targetRef:
-      kind: Pod
-      name: kube-dns-548976df6c-d9kkv
-      namespace: kube-system
-      resourceVersion: "50572715"
-      uid: dd4bbbd4-f71c-11e8-af4f-42010a800072
-  ports:
-  - name: dns
-    port: 53
-    protocol: UDP
-  - name: dns-tcp
-    port: 53
-    protocol: TCP
diff --git a/pkg/config/legacy/testing/data/builtin/ingress.yaml b/pkg/config/legacy/testing/data/builtin/ingress.yaml
deleted file mode 100644
index 3eae1f1dd9..0000000000
--- a/pkg/config/legacy/testing/data/builtin/ingress.yaml
+++ /dev/null
@@ -1,24 +0,0 @@
-apiVersion: extensions/v1beta1
-kind: Ingress
-metadata:
-  name: secured-ingress
-  annotations:
-    kubernetes.io/ingress.class: "istio"
-spec:
-  tls:
-    - secretName: istio-ingress-certs
-  rules:
-    - http:
-        paths:
-          - path: /http
-            backend:
-              serviceName: a
-              servicePort: http
-          - path: /pasta
-            backend:
-              serviceName: b
-              servicePort: 8080
-          - path: /.*
-            backend:
-              serviceName: a
-              servicePort: grpc
diff --git a/pkg/config/legacy/testing/data/builtin/namespace.yaml b/pkg/config/legacy/testing/data/builtin/namespace.yaml
deleted file mode 100644
index d7993f40f1..0000000000
--- a/pkg/config/legacy/testing/data/builtin/namespace.yaml
+++ /dev/null
@@ -1,11 +0,0 @@
-apiVersion: v1
-kind: Namespace
-metadata:
-  labels:
-    istio-injection: disabled
-  name: somens
-spec:
-  finalizers:
-    - kubernetes
-status:
-  phase: Active
diff --git a/pkg/config/legacy/testing/data/builtin/node.yaml b/pkg/config/legacy/testing/data/builtin/node.yaml
deleted file mode 100644
index 362008ff3d..0000000000
--- a/pkg/config/legacy/testing/data/builtin/node.yaml
+++ /dev/null
@@ -1,191 +0,0 @@
-apiVersion: v1
-kind: Node
-metadata:
-  annotations:
-    container.googleapis.com/instance_id: "2787417306096525587"
-    node.alpha.kubernetes.io/ttl: "0"
-    volumes.kubernetes.io/controller-managed-attach-detach: "true"
-  creationTimestamp: 2018-10-05T19:40:48Z
-  labels:
-    kubernetes.io/arch: amd64
-    beta.kubernetes.io/fluentd-ds-ready: "true"
-    beta.kubernetes.io/instance-type: n1-standard-4
-    kubernetes.io/os: linux
-    cloud.google.com/gke-nodepool: default-pool
-    cloud.google.com/gke-os-distribution: cos
-    failure-domain.beta.kubernetes.io/region: us-central1
-    failure-domain.beta.kubernetes.io/zone: us-central1-a
-    kubernetes.io/hostname: gke-istio-test-default-pool-866a0405-420r
-  name: gke-istio-test-default-pool-866a0405-420r
-  resourceVersion: "60695251"
-  selfLink: /api/v1/nodes/gke-istio-test-default-pool-866a0405-420r
-  uid: 8f63dfef-c8d6-11e8-8901-42010a800278
-spec:
-  externalID: "1929748586650271976"
-  podCIDR: 10.40.0.0/24
-  providerID: gce://nathanmittler-istio-test/us-central1-a/gke-istio-test-default-pool-866a0405-420r
-status:
-  addresses:
-  - address: 10.128.0.4
-    type: InternalIP
-  - address: 35.238.214.129
-    type: ExternalIP
-  - address: gke-istio-test-default-pool-866a0405-420r
-    type: Hostname
-  allocatable:
-    cpu: 3920m
-    ephemeral-storage: "47093746742"
-    hugepages-2Mi: "0"
-    memory: 12699980Ki
-    pods: "110"
-  capacity:
-    cpu: "4"
-    ephemeral-storage: 98868448Ki
-    hugepages-2Mi: "0"
-    memory: 15399244Ki
-    pods: "110"
-  conditions:
-  - lastHeartbeatTime: 2019-01-15T17:36:51Z
-    lastTransitionTime: 2018-12-03T17:00:58Z
-    message: node is functioning properly
-    reason: UnregisterNetDevice
-    status: "False"
-    type: FrequentUnregisterNetDevice
-  - lastHeartbeatTime: 2019-01-15T17:36:51Z
-    lastTransitionTime: 2018-12-03T16:55:56Z
-    message: kernel has no deadlock
-    reason: KernelHasNoDeadlock
-    status: "False"
-    type: KernelDeadlock
-  - lastHeartbeatTime: 2018-10-05T19:40:58Z
-    lastTransitionTime: 2018-10-05T19:40:58Z
-    message: RouteController created a route
-    reason: RouteCreated
-    status: "False"
-    type: NetworkUnavailable
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-12-03T16:55:57Z
-    message: kubelet has sufficient disk space available
-    reason: KubeletHasSufficientDisk
-    status: "False"
-    type: OutOfDisk
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-12-03T16:55:57Z
-    message: kubelet has sufficient memory available
-    reason: KubeletHasSufficientMemory
-    status: "False"
-    type: MemoryPressure
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-12-03T16:55:57Z
-    message: kubelet has no disk pressure
-    reason: KubeletHasNoDiskPressure
-    status: "False"
-    type: DiskPressure
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-10-05T19:40:48Z
-    message: kubelet has sufficient PID available
-    reason: KubeletHasSufficientPID
-    status: "False"
-    type: PIDPressure
-  - lastHeartbeatTime: 2019-01-15T17:37:32Z
-    lastTransitionTime: 2018-12-03T16:56:07Z
-    message: kubelet is posting ready status. AppArmor enabled
-    reason: KubeletReady
-    status: "True"
-    type: Ready
-  daemonEndpoints:
-    kubeletEndpoint:
-      Port: 10250
-  images:
-  - names:
-    - gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:a33f69d0034fdce835a1eb7df8a051ea74323f3fc30d911bbd2e3f2aef09fc93
-    - gcr.io/stackdriver-agents/stackdriver-logging-agent:0.3-1.5.34-1-k8s-1
-    sizeBytes: 554981103
-  - names:
-    - istio/examples-bookinfo-reviews-v3@sha256:8c0385f0ca799e655d8770b52cb4618ba54e8966a0734ab1aeb6e8b14e171a3b
-    - istio/examples-bookinfo-reviews-v3:1.9.0
-    sizeBytes: 525074812
-  - names:
-    - istio/examples-bookinfo-reviews-v2@sha256:d2483dcb235b27309680177726e4e86905d66e47facaf1d57ed590b2bf95c8ad
-    - istio/examples-bookinfo-reviews-v2:1.9.0
-    sizeBytes: 525074812
-  - names:
-    - istio/examples-bookinfo-reviews-v1@sha256:920d46b3c526376b28b90d0e895ca7682d36132e6338301fcbcd567ef81bde05
-    - istio/examples-bookinfo-reviews-v1:1.9.0
-    sizeBytes: 525074812
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:8cea2c055dd3d3ab78f99584256efcc1cff7d8ddbed11cded404e9d164235502
-    sizeBytes: 448337138
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:9949bc22667ef88e54ae91700a64bf1459e8c14ed92b870b7ec2f630e14cf3c1
-    sizeBytes: 446407220
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:fc1f957cfa26673768be8fa865066f730f22fde98a6e80654d00f755a643b507
-    sizeBytes: 446407220
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:23a52850819d5196d66e8e20f4f63f314f779716f830e1d109ad0e24b1f0df43
-    sizeBytes: 446407220
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:e338c2c5cbc379db24c5b2d67a4acc9cca9a069c2927217fca0ce7cbc582d312
-    - gcr.io/nathanmittler-istio-test/proxyv2:latest
-    sizeBytes: 446398900
-  - names:
-    - gcr.io/istio-release/proxyv2@sha256:dec972eab4f46c974feec1563ea484ad4995edf55ea91d42e148c5db04b3d4d2
-    - gcr.io/istio-release/proxyv2:master-latest-daily
-    sizeBytes: 353271308
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:cb4a29362ff9014bf1d96e0ce2bb6337bf034908bb4a8d48af0628a4d8d64413
-    sizeBytes: 344543156
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:9d502fd29961bc3464f7906ac0e86b07edf01cf4892352ef780e55b3525fb0b8
-    sizeBytes: 344257154
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:cdd2f527b4bd392b533d2d0e62c257c19d5a35a6b5fc3512aa327c560866aec1
-    sizeBytes: 344257154
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:6ec1dced4cee8569c77817927938fa4341f939e0dddab511bc3ee8724d652ae2
-    sizeBytes: 344257154
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:3f4115cd8c26a17f6bf8ea49f1ff5b875382bda5a6d46281c70c886e802666b0
-    sizeBytes: 344257154
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:4e75c42518bb46376cfe0b4fbaa3da1d8f1cea99f706736f1b0b04a3ac554db2
-    sizeBytes: 344201616
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:58a7511f549448f6f86280559069bc57f5c754877ebec69da5bbc7ad55e42162
-    sizeBytes: 344201616
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:7f60a750d15cda9918e9172e529270ce78c670751d4027f6adc6bdc84ec2d884
-    sizeBytes: 344201436
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:6fc25c08212652c7539caaf0f6d913d929f84c54767f20066657ce0f4e6a51e0
-    sizeBytes: 344193424
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:4e93825950c831ce6d2b65c9a80921c8860035e39a4b384d38d40f7d2cb2a4ee
-    sizeBytes: 344185232
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:842216399613774640a4605202d446cf61bd48ff20e12391a0239cbc6a8f2c77
-    sizeBytes: 344185052
-  - names:
-    - gcr.io/nathanmittler-istio-test/proxyv2@sha256:8ee2bb6fc5484373227b17e377fc226d8d19be11d38d6dbc304970bd46bc929b
-    sizeBytes: 344159662
-  - names:
-    - gcr.io/nathanmittler-istio-test/pilot@sha256:b62e9f12609b89892bb38c858936f76d81aa3ccdc91a3961309f900c1c4f574b
-    sizeBytes: 307722351
-  - names:
-    - gcr.io/nathanmittler-istio-test/pilot@sha256:2445d3c2839825be2decbafcd3f2668bdf148ba9acbbb855810006a58899f320
-    sizeBytes: 307722351
-  - names:
-    - gcr.io/nathanmittler-istio-test/pilot@sha256:ea8e501811c06674bb4b4622862e2d12e700f5edadc01a050030a0b33a6435a6
-    sizeBytes: 307722351
-  nodeInfo:
-    architecture: amd64
-    bootID: 8f772c7c-09eb-41eb-8bb5-76ef214eaaa1
-    containerRuntimeVersion: docker://17.3.2
-    kernelVersion: 4.14.65+
-    kubeProxyVersion: v1.11.3-gke.18
-    kubeletVersion: v1.11.3-gke.18
-    machineID: f325f89cd295bdcda652fd40f0049e32
-    operatingSystem: linux
-    osImage: Container-Optimized OS from Google
-    systemUUID: F325F89C-D295-BDCD-A652-FD40F0049E32
diff --git a/pkg/config/legacy/testing/data/builtin/pod.yaml b/pkg/config/legacy/testing/data/builtin/pod.yaml
deleted file mode 100644
index 790b656f5d..0000000000
--- a/pkg/config/legacy/testing/data/builtin/pod.yaml
+++ /dev/null
@@ -1,283 +0,0 @@
-apiVersion: v1
-kind: Pod
-metadata:
-  annotations:
-    scheduler.alpha.kubernetes.io/critical-pod: ""
-    seccomp.security.alpha.kubernetes.io/pod: docker/default
-  creationTimestamp: 2018-12-03T16:59:57Z
-  generateName: kube-dns-548976df6c-
-  labels:
-    k8s-app: kube-dns
-    pod-template-hash: "1045328927"
-  name: kube-dns-548976df6c-d9kkv
-  namespace: kube-system
-  ownerReferences:
-  - apiVersion: apps/v1
-    blockOwnerDeletion: true
-    controller: true
-    kind: ReplicaSet
-    name: kube-dns-548976df6c
-    uid: b589a851-f71b-11e8-af4f-42010a800072
-  resourceVersion: "50572715"
-  selfLink: /api/v1/namespaces/kube-system/pods/kube-dns-548976df6c-d9kkv
-  uid: dd4bbbd4-f71c-11e8-af4f-42010a800072
-spec:
-  containers:
-  - args:
-    - --domain=cluster.local.
-    - --dns-port=10053
-    - --config-dir=/kube-dns-config
-    - --v=2
-    env:
-    - name: PROMETHEUS_PORT
-      value: "10055"
-    image: k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13
-    imagePullPolicy: IfNotPresent
-    livenessProbe:
-      failureThreshold: 5
-      httpGet:
-        path: /healthcheck/kubedns
-        port: 10054
-        scheme: HTTP
-      initialDelaySeconds: 60
-      periodSeconds: 10
-      successThreshold: 1
-      timeoutSeconds: 5
-    name: kubedns
-    ports:
-    - containerPort: 10053
-      name: dns-local
-      protocol: UDP
-    - containerPort: 10053
-      name: dns-tcp-local
-      protocol: TCP
-    - containerPort: 10055
-      name: metrics
-      protocol: TCP
-    readinessProbe:
-      failureThreshold: 3
-      httpGet:
-        path: /readiness
-        port: 8081
-        scheme: HTTP
-      initialDelaySeconds: 3
-      periodSeconds: 10
-      successThreshold: 1
-      timeoutSeconds: 5
-    resources:
-      limits:
-        memory: 170Mi
-      requests:
-        cpu: 100m
-        memory: 70Mi
-    terminationMessagePath: /dev/termination-log
-    terminationMessagePolicy: File
-    volumeMounts:
-    - mountPath: /kube-dns-config
-      name: kube-dns-config
-    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
-      name: kube-dns-token-lwn8l
-      readOnly: true
-  - args:
-    - -v=2
-    - -logtostderr
-    - -configDir=/etc/k8s/dns/dnsmasq-nanny
-    - -restartDnsmasq=true
-    - --
-    - -k
-    - --cache-size=1000
-    - --no-negcache
-    - --log-facility=-
-    - --server=/cluster.local/127.0.0.1#10053
-    - --server=/in-addr.arpa/127.0.0.1#10053
-    - --server=/ip6.arpa/127.0.0.1#10053
-    image: k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.13
-    imagePullPolicy: IfNotPresent
-    livenessProbe:
-      failureThreshold: 5
-      httpGet:
-        path: /healthcheck/dnsmasq
-        port: 10054
-        scheme: HTTP
-      initialDelaySeconds: 60
-      periodSeconds: 10
-      successThreshold: 1
-      timeoutSeconds: 5
-    name: dnsmasq
-    ports:
-    - containerPort: 53
-      name: dns
-      protocol: UDP
-    - containerPort: 53
-      name: dns-tcp
-      protocol: TCP
-    resources:
-      requests:
-        cpu: 150m
-        memory: 20Mi
-    terminationMessagePath: /dev/termination-log
-    terminationMessagePolicy: File
-    volumeMounts:
-    - mountPath: /etc/k8s/dns/dnsmasq-nanny
-      name: kube-dns-config
-    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
-      name: kube-dns-token-lwn8l
-      readOnly: true
-  - args:
-    - --v=2
-    - --logtostderr
-    - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
-    - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
-    image: k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.13
-    imagePullPolicy: IfNotPresent
-    livenessProbe:
-      failureThreshold: 5
-      httpGet:
-        path: /metrics
-        port: 10054
-        scheme: HTTP
-      initialDelaySeconds: 60
-      periodSeconds: 10
-      successThreshold: 1
-      timeoutSeconds: 5
-    name: sidecar
-    ports:
-    - containerPort: 10054
-      name: metrics
-      protocol: TCP
-    resources:
-      requests:
-        cpu: 10m
-        memory: 20Mi
-    terminationMessagePath: /dev/termination-log
-    terminationMessagePolicy: File
-    volumeMounts:
-    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
-      name: kube-dns-token-lwn8l
-      readOnly: true
-  - command:
-    - /monitor
-    - --component=kubedns
-    - --target-port=10054
-    - --stackdriver-prefix=container.googleapis.com/internal/addons
-    - --api-override=https://monitoring.googleapis.com/
-    - --whitelisted-metrics=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits
-    - --pod-id=$(POD_NAME)
-    - --namespace-id=$(POD_NAMESPACE)
-    - --v=2
-    env:
-    - name: POD_NAME
-      valueFrom:
-        fieldRef:
-          apiVersion: v1
-          fieldPath: metadata.name
-    - name: POD_NAMESPACE
-      valueFrom:
-        fieldRef:
-          apiVersion: v1
-          fieldPath: metadata.namespace
-    image: gcr.io/google-containers/prometheus-to-sd:v0.2.3
-    imagePullPolicy: IfNotPresent
-    name: prometheus-to-sd
-    resources: {}
-    terminationMessagePath: /dev/termination-log
-    terminationMessagePolicy: File
-    volumeMounts:
-    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
-      name: kube-dns-token-lwn8l
-      readOnly: true
-  dnsPolicy: Default
-  nodeName: gke-istio-test-default-pool-866a0405-ftch
-  priority: 2000000000
-  priorityClassName: system-cluster-critical
-  restartPolicy: Always
-  schedulerName: default-scheduler
-  securityContext: {}
-  serviceAccount: kube-dns
-  serviceAccountName: kube-dns
-  terminationGracePeriodSeconds: 30
-  tolerations:
-  - key: CriticalAddonsOnly
-    operator: Exists
-  - effect: NoExecute
-    key: node.kubernetes.io/not-ready
-    operator: Exists
-    tolerationSeconds: 300
-  - effect: NoExecute
-    key: node.kubernetes.io/unreachable
-    operator: Exists
-    tolerationSeconds: 300
-  volumes:
-  - configMap:
-      defaultMode: 420
-      name: kube-dns
-      optional: true
-    name: kube-dns-config
-  - name: kube-dns-token-lwn8l
-    secret:
-      defaultMode: 420
-      secretName: kube-dns-token-lwn8l
-status:
-  conditions:
-  - lastProbeTime: null
-    lastTransitionTime: 2018-12-03T17:00:00Z
-    status: "True"
-    type: Initialized
-  - lastProbeTime: null
-    lastTransitionTime: 2018-12-03T17:00:20Z
-    status: "True"
-    type: Ready
-  - lastProbeTime: null
-    lastTransitionTime: null
-    status: "True"
-    type: ContainersReady
-  - lastProbeTime: null
-    lastTransitionTime: 2018-12-03T16:59:57Z
-    status: "True"
-    type: PodScheduled
-  containerStatuses:
-  - containerID: docker://676f6c98bfa136315c4ccf0fe40e7a56cbf9ac85128e94310eae82f191246b3e
-    image: k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.13
-    imageID: docker-pullable://k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64@sha256:45df3e8e0c551bd0c79cdba48ae6677f817971dcbd1eeed7fd1f9a35118410e4
-    lastState: {}
-    name: dnsmasq
-    ready: true
-    restartCount: 0
-    state:
-      running:
-        startedAt: 2018-12-03T17:00:14Z
-  - containerID: docker://93fd0664e150982dad0481c5260183308a7035a2f938ec50509d586ed586a107
-    image: k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13
-    imageID: docker-pullable://k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52
-    lastState: {}
-    name: kubedns
-    ready: true
-    restartCount: 0
-    state:
-      running:
-        startedAt: 2018-12-03T17:00:10Z
-  - containerID: docker://e823b79a0a48af75f2eebb1c89ba4c31e8c1ee67ee0d917ac7b4891b67d2cd0f
-    image: gcr.io/google-containers/prometheus-to-sd:v0.2.3
-    imageID: docker-pullable://gcr.io/google-containers/prometheus-to-sd@sha256:be220ec4a66275442f11d420033c106bb3502a3217a99c806eef3cf9858788a2
-    lastState: {}
-    name: prometheus-to-sd
-    ready: true
-    restartCount: 0
-    state:
-      running:
-        startedAt: 2018-12-03T17:00:18Z
-  - containerID: docker://74223c401a8dac04b8bd29cdfedcb216881791b4e84bb80a15714991dd18735e
-    image: k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.13
-    imageID: docker-pullable://k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:cedc8fe2098dffc26d17f64061296b7aa54258a31513b6c52df271a98bb522b3
-    lastState: {}
-    name: sidecar
-    ready: true
-    restartCount: 0
-    state:
-      running:
-        startedAt: 2018-12-03T17:00:16Z
-  hostIP: 10.128.0.5
-  phase: Running
-  podIP: 10.40.1.4
-  qosClass: Burstable
-  startTime: 2018-12-03T17:00:00Z
diff --git a/pkg/config/legacy/testing/data/builtin/service.yaml b/pkg/config/legacy/testing/data/builtin/service.yaml
deleted file mode 100644
index 7f205e1dcb..0000000000
--- a/pkg/config/legacy/testing/data/builtin/service.yaml
+++ /dev/null
@@ -1,34 +0,0 @@
-apiVersion: v1
-kind: Service
-metadata:
-  annotations:
-    kubectl.kubernetes.io/last-applied-configuration: |
-      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"KubeDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.240.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
-  creationTimestamp: 2018-02-12T15:48:44Z
-  labels:
-    addonmanager.kubernetes.io/mode: Reconcile
-    k8s-app: kube-dns
-    kubernetes.io/cluster-service: "true"
-    kubernetes.io/name: KubeDNS
-  name: kube-dns
-  namespace: kube-system
-  resourceVersion: "274"
-  selfLink: /api/v1/namespaces/kube-system/services/kube-dns
-  uid: 3497d702-100c-11e8-a600-42010a8002c3
-spec:
-  clusterIP: 10.43.240.10
-  ports:
-  - name: dns
-    port: 53
-    protocol: UDP
-    targetPort: 53
-  - name: dns-tcp
-    port: 53
-    protocol: TCP
-    targetPort: 53
-  selector:
-    k8s-app: kube-dns
-  sessionAffinity: None
-  type: ClusterIP
-status:
-  loadBalancer: {}
diff --git a/pkg/config/legacy/testing/data/collections.go b/pkg/config/legacy/testing/data/collections.go
deleted file mode 100644
index 57a69832e6..0000000000
--- a/pkg/config/legacy/testing/data/collections.go
+++ /dev/null
@@ -1,70 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package data
-
-import (
-	"istio.io/istio/pkg/config/legacy/testing/basicmeta"
-	"istio.io/istio/pkg/config/schema/collection"
-	"istio.io/istio/pkg/config/schema/resource"
-)
-
-var (
-	// K8SCollection2 is a testing collection
-	K8SCollection2 = basicmeta.MustGet2().KubeCollections().MustFind("k8s/collection2")
-
-	Foo = collection.Builder{
-		Name:         "foo",
-		VariableName: "Foo",
-		Resource: resource.Builder{
-			Kind:         "Foo",
-			Plural:       "Foos",
-			ProtoPackage: "github.com/gogo/protobuf/types",
-			Proto:        "google.protobuf.Empty",
-		}.MustBuild(),
-	}.MustBuild()
-
-	Bar = collection.Builder{
-		Name:         "bar",
-		VariableName: "Bar",
-		Resource: resource.Builder{
-			Kind:         "Bar",
-			Plural:       "Bars",
-			ProtoPackage: "github.com/gogo/protobuf/types",
-			Proto:        "google.protobuf.Empty",
-		}.MustBuild(),
-	}.MustBuild()
-
-	Boo = collection.Builder{
-		Name:         "boo",
-		VariableName: "Boo",
-		Resource: resource.Builder{
-			Kind:         "Boo",
-			Plural:       "Boos",
-			ProtoPackage: "github.com/gogo/protobuf/types",
-			Proto:        "google.protobuf.Empty",
-		}.MustBuild(),
-	}.MustBuild()
-
-	Baz = collection.Builder{
-		Name:         "baz",
-		VariableName: "Baz",
-		Resource: resource.Builder{
-			Kind:         "Baz",
-			Plural:       "Bazes",
-			ProtoPackage: "github.com/gogo/protobuf/types",
-			Proto:        "google.protobuf.Empty",
-		}.MustBuild(),
-	}.MustBuild()
-)
diff --git a/pkg/config/legacy/testing/data/events.go b/pkg/config/legacy/testing/data/events.go
deleted file mode 100644
index 03f8e19fa7..0000000000
--- a/pkg/config/legacy/testing/data/events.go
+++ /dev/null
@@ -1,83 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package data
-
-import (
-	"istio.io/istio/pkg/config/event"
-	"istio.io/istio/pkg/config/legacy/testing/basicmeta"
-)
-
-var (
-	// Event1Col1AddItem1 is a testing event
-	Event1Col1AddItem1 = event.Event{
-		Kind:     event.Added,
-		Source:   basicmeta.K8SCollection1,
-		Resource: EntryN1I1V1,
-	}
-
-	// Event1Col1AddItem1Broken is a testing event
-	Event1Col1AddItem1Broken = event.Event{
-		Kind:     event.Added,
-		Source:   basicmeta.K8SCollection1,
-		Resource: EntryN1I1V1Broken,
-	}
-
-	// Event1Col1UpdateItem1 is a testing event
-	Event1Col1UpdateItem1 = event.Event{
-		Kind:     event.Updated,
-		Source:   basicmeta.K8SCollection1,
-		Resource: EntryN1I1V2,
-	}
-
-	// Event1Col1DeleteItem1 is a testing event
-	Event1Col1DeleteItem1 = event.Event{
-		Kind:     event.Deleted,
-		Source:   basicmeta.K8SCollection1,
-		Resource: EntryN1I1V1,
-	}
-
-	// Event1Col1DeleteItem2 is a testing event
-	Event1Col1DeleteItem2 = event.Event{
-		Kind:     event.Deleted,
-		Source:   basicmeta.K8SCollection1,
-		Resource: EntryN2I2V2,
-	}
-
-	// Event1Col1Synced is a testing event
-	Event1Col1Synced = event.Event{
-		Kind:   event.FullSync,
-		Source: basicmeta.K8SCollection1,
-	}
-
-	// Event1Col2Synced is a testing event
-	Event1Col2Synced = event.Event{
-		Kind:   event.FullSync,
-		Source: basicmeta.Collection2,
-	}
-
-	// Event2Col1AddItem2 is a testing event
-	Event2Col1AddItem2 = event.Event{
-		Kind:     event.Added,
-		Source:   basicmeta.K8SCollection1,
-		Resource: EntryN2I2V2,
-	}
-
-	// Event3Col2AddItem1 is a testing event
-	Event3Col2AddItem1 = event.Event{
-		Kind:     event.Added,
-		Source:   basicmeta.Collection2,
-		Resource: EntryN1I1V1,
-	}
-)
diff --git a/pkg/config/legacy/testing/data/resources.go b/pkg/config/legacy/testing/data/resources.go
deleted file mode 100644
index c3ed6034cb..0000000000
--- a/pkg/config/legacy/testing/data/resources.go
+++ /dev/null
@@ -1,137 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package data
-
-import (
-	"bytes"
-
-	"github.com/gogo/protobuf/jsonpb"
-	"github.com/gogo/protobuf/types"
-
-	basicmeta "istio.io/istio/pkg/config/legacy/testing/basicmeta"
-	"istio.io/istio/pkg/config/resource"
-)
-
-var (
-	// EntryN1I1V1 is a test resource.Instance
-	EntryN1I1V1 = &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("n1", "i1"),
-			Version:  "v1",
-			Schema:   basicmeta.K8SCollection1.Resource(),
-		},
-		Message: parseStruct(`
-{
-	"n1_i1": "v1"
-}`),
-	}
-
-	// EntryN1I1V1ClusterScoped is a test resource.Instance that is cluster scoped.
-	EntryN1I1V1ClusterScoped = &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("", "i1"),
-			Version:  "v1",
-			Schema:   K8SCollection2.Resource(),
-		},
-		Message: parseStruct(`
-{
-	"n1_i1": "v1"
-}`),
-	}
-
-	// EntryN1I1V1Broken is a test resource.Instance
-	EntryN1I1V1Broken = &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("n1", "i1"),
-			Version:  "v1",
-			Schema:   basicmeta.K8SCollection1.Resource(),
-		},
-		Message: nil,
-	}
-
-	// EntryN1I1V2 is a test resource.Instance
-	EntryN1I1V2 = &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("n1", "i1"),
-			Version:  "v2",
-			Schema:   basicmeta.K8SCollection1.Resource(),
-		},
-		Message: parseStruct(`
-{
-	"n1_i1": "v2"
-}`),
-	}
-
-	// EntryN2I2V1 is a test resource.Instance
-	EntryN2I2V1 = &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("n2", "i2"),
-			Version:  "v1",
-			Schema:   basicmeta.K8SCollection1.Resource(),
-		},
-		Message: parseStruct(`
-{
-	"n2_i2": "v1"
-}`),
-	}
-
-	// EntryN2I2V2 is a test resource.Instance
-	EntryN2I2V2 = &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("n2", "i2"),
-			Version:  "v2",
-			Schema:   basicmeta.K8SCollection1.Resource(),
-		},
-		Message: parseStruct(`{
-	"n2_i2": "v2"
-}`),
-	}
-
-	// EntryN3I3V1 is a test resource.Instance
-	EntryN3I3V1 = &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("n3", "i3"),
-			Version:  "v1",
-			Schema:   basicmeta.K8SCollection1.Resource(),
-		},
-		Message: parseStruct(`{
-	"n3_i3": "v1"
-}`),
-	}
-
-	// EntryI1V1NoNamespace is a test resource.Instance
-	EntryI1V1NoNamespace = &resource.Instance{
-		Metadata: resource.Metadata{
-			FullName: resource.NewFullName("", "i1"),
-			Version:  "v1",
-			Schema:   basicmeta.K8SCollection1.Resource(),
-		},
-		Message: parseStruct(`{
-		"n1_i1": "v1"
-	}`),
-	}
-)
-
-func parseStruct(s string) *types.Struct {
-	m := jsonpb.Unmarshaler{}
-
-	str := &types.Struct{}
-	err := m.Unmarshal(bytes.NewReader([]byte(s)), str)
-	if err != nil {
-		panic(err)
-	}
-
-	return str
-}
diff --git a/pkg/config/legacy/testing/data/yaml.go b/pkg/config/legacy/testing/data/yaml.go
deleted file mode 100644
index 24faa12146..0000000000
--- a/pkg/config/legacy/testing/data/yaml.go
+++ /dev/null
@@ -1,131 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package data
-
-var (
-	// YamlN1I1V1 is a testing resource in Yaml form
-	YamlN1I1V1 = `
-apiVersion: testdata.istio.io/v1alpha1
-kind: Kind1
-metadata:
-  namespace: n1
-  name: i1
-spec:
-  n1_i1: v1
-`
-
-	// YamlN2I2V1 is a testing resource in Yaml form
-	YamlN2I2V1 = `
-apiVersion: testdata.istio.io/v1alpha1
-kind: Kind1
-metadata:
-  namespace: n2
-  name: i2
-spec:
-  n2_i2: v1
-`
-	// YamlN2I2V2 is a testing resource in Yaml form
-	YamlN2I2V2 = `
-apiVersion: testdata.istio.io/v1alpha1
-kind: Kind1
-metadata:
-  namespace: n2
-  name: i2
-spec:
-  n2_i2: v2
-`
-
-	// YamlN3I3V1 is a testing resource in Yaml form
-	YamlN3I3V1 = `
-apiVersion: testdata.istio.io/v1alpha1
-kind: Kind1
-metadata:
-  namespace: n3
-  name: i3
-spec:
-  n3_i3: v1
-`
-
-	// YamlUnrecognized is a testing resource in Yaml form
-	YamlUnrecognized = `
-apiVersion: testdata.istio.io/v1alpha1
-kind: KindUnknown
-metadata:
-  namespace: n1
-  name: i1
-spec:
-  n1_i1: v1
-`
-
-	// YamlUnparseableResource is a testing resource in Yaml form
-	YamlUnparseableResource = `
-apiVersion: testdata.istio.io/v1alpha1/foo/bar
-kind: Kind1
-metadata:
-  namespace: n1
-  name: i1
-spec:
-  foo: bar
-`
-
-	// YamlNonStringKey is a testing resource in Yaml form
-	YamlNonStringKey = `
-23: true
-`
-
-	// YamlN1I1V1Kind2 is a testing resource in Yaml form
-	YamlN1I1V1Kind2 = `
-apiVersion: testdata.istio.io/v1alpha1
-kind: Kind2
-metadata:
-  namespace: n1
-  name: i1
-spec:
-  n1_i1: v1
-`
-
-	// YamlI1V1NoNamespace is a testing resource in Yaml form
-	YamlI1V1NoNamespace = `
-apiVersion: testdata.istio.io/v1alpha1
-kind: Kind1
-metadata:
-  name: i1
-spec:
-  n1_i1: v1
-`
-
-	// YamlI1V1NoNamespaceKind2 is a testing resource in Yaml form
-	YamlI1V1NoNamespaceKind2 = `
-apiVersion: testdata.istio.io/v1alpha1
-kind: Kind2
-metadata:
-  name: i1
-spec:
-  n1_i1: v1
-`
-
-	// YamlI1V1WithCommentContainingDocumentSeparator is a testing resource in
-	// yaml form with a comment containing a document separator.
-	YamlI1V1WithCommentContainingDocumentSeparator = `
-# ---
-apiVersion: testdata.istio.io/v1alpha1
-kind: Kind1
-metadata:
-  namespace: n1
-  name: i1
-spec:
-  n1_i1: v1
-`
-)
diff --git a/pkg/config/legacy/testing/fixtures/accumulator.go b/pkg/config/legacy/testing/fixtures/accumulator.go
deleted file mode 100644
index 643ff35dd3..0000000000
--- a/pkg/config/legacy/testing/fixtures/accumulator.go
+++ /dev/null
@@ -1,86 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures
-
-import (
-	"fmt"
-	"sync"
-
-	"istio.io/istio/pkg/config/event"
-)
-
-// Accumulator accumulates events that is dispatched to it.
-type Accumulator struct {
-	mu sync.Mutex
-
-	events []event.Event
-}
-
-// Handle implements event.Handler
-func (a *Accumulator) Handle(e event.Event) {
-	a.mu.Lock()
-	defer a.mu.Unlock()
-
-	a.events = append(a.events, e)
-}
-
-// Events return current set of accumulated events.
-func (a *Accumulator) Events() []event.Event {
-	a.mu.Lock()
-	defer a.mu.Unlock()
-
-	r := make([]event.Event, len(a.events))
-	copy(r, a.events)
-
-	return r
-}
-
-// EventsWithoutOrigins calls Events, strips the origin fields from the embedded resources and returns result.
-func (a *Accumulator) EventsWithoutOrigins() []event.Event {
-	a.mu.Lock()
-	defer a.mu.Unlock()
-
-	events := make([]event.Event, len(a.events))
-	copy(events, a.events)
-
-	for i := 0; i < len(events); i++ {
-		e := events[i].Resource
-		if e != nil {
-			e.Origin = nil
-		}
-		events[i].Resource = e
-	}
-	return events
-}
-
-// Clear all currently accummulated events.
-func (a *Accumulator) Clear() {
-	a.mu.Lock()
-	defer a.mu.Unlock()
-
-	a.events = nil
-}
-
-func (a *Accumulator) String() string {
-	a.mu.Lock()
-	defer a.mu.Unlock()
-
-	var result string
-	for _, e := range a.events {
-		result += fmt.Sprintf("%v\n", e)
-	}
-
-	return result
-}
diff --git a/pkg/config/legacy/testing/fixtures/accumulator_test.go b/pkg/config/legacy/testing/fixtures/accumulator_test.go
deleted file mode 100644
index 4ba8c40931..0000000000
--- a/pkg/config/legacy/testing/fixtures/accumulator_test.go
+++ /dev/null
@@ -1,62 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures
-
-import (
-	"testing"
-
-	"github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	data "istio.io/istio/pkg/config/legacy/testing/data"
-)
-
-func TestAccumulator(t *testing.T) {
-	g := gomega.NewWithT(t)
-
-	a := &Accumulator{}
-
-	a.Handle(data.Event1Col1AddItem1)
-
-	expected := []event.Event{data.Event1Col1AddItem1}
-	g.Expect(a.Events()).To(gomega.Equal(expected))
-
-	a.Handle(data.Event2Col1AddItem2)
-
-	expected = []event.Event{data.Event1Col1AddItem1, data.Event2Col1AddItem2}
-	g.Expect(a.Events()).To(gomega.Equal(expected))
-}
-
-func TestAccumulator_Clear(t *testing.T) {
-	g := gomega.NewWithT(t)
-
-	a := &Accumulator{}
-
-	a.Handle(data.Event1Col1AddItem1)
-	a.Handle(data.Event2Col1AddItem2)
-	a.Clear()
-
-	g.Expect(a.Events()).To(gomega.Equal([]event.Event{}))
-}
-
-func TestAccumulator_String(t *testing.T) {
-	a := &Accumulator{}
-
-	a.Handle(data.Event1Col1AddItem1)
-	a.Handle(data.Event2Col1AddItem2)
-
-	// ensure that it does not crash
-	_ = a.String()
-}
diff --git a/pkg/config/legacy/testing/fixtures/expect.go b/pkg/config/legacy/testing/fixtures/expect.go
index d148ad171c..3ac62cbc5c 100644
--- a/pkg/config/legacy/testing/fixtures/expect.go
+++ b/pkg/config/legacy/testing/fixtures/expect.go
@@ -16,72 +16,11 @@
 
 import (
 	"fmt"
-	"sort"
-	"strings"
 	"testing"
-	"time"
 
 	"github.com/google/go-cmp/cmp"
-	"github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	"istio.io/istio/pkg/config/schema/collection"
-	"istio.io/istio/pkg/test/util/retry"
 )
 
-// ExpectEventsEventually waits for the Accumulator.Events() to contain the expected events.
-func ExpectEventsEventually(t *testing.T, acc *Accumulator, expected ...event.Event) {
-	t.Helper()
-	expectEventsEventually(t, acc.Events, expected...)
-}
-
-// ExpectEventsWithoutOriginsEventually waits for the Accumulator.EventsWithoutOrigins() to contain the expected events.
-func ExpectEventsWithoutOriginsEventually(t *testing.T, acc *Accumulator, expected ...event.Event) {
-	t.Helper()
-	expectEventsEventually(t, acc.EventsWithoutOrigins, expected...)
-}
-
-func expectEventsEventually(t *testing.T, getActuals func() []event.Event, expected ...event.Event) {
-	t.Helper()
-	retry.UntilSuccessOrFail(t, func() error {
-		return CheckContainEvents(getActuals(), expected...)
-	}, retry.Delay(time.Millisecond*100), retry.Timeout(time.Second*2))
-}
-
-// ExpectContainEvents calls CheckContainEvents and fails the test if an error is returned.
-func ExpectContainEvents(t *testing.T, actuals []event.Event, expected ...event.Event) {
-	t.Helper()
-	if err := CheckContainEvents(actuals, expected...); err != nil {
-		t.Fatal(err)
-	}
-}
-
-// CheckContainEvents checks that the expected elements are all contained within the actual events list (order independent).
-func CheckContainEvents(actuals []event.Event, expected ...event.Event) error {
-	sort.SliceStable(expected, func(i, j int) bool {
-		return strings.Compare(expected[i].String(), expected[j].String()) < 0
-	})
-
-	sort.SliceStable(actuals, func(i, j int) bool {
-		return strings.Compare(actuals[i].String(), actuals[j].String()) < 0
-	})
-
-	for _, e := range expected {
-		found := false
-		for _, a := range actuals {
-			if cmp.Equal(a, e) {
-				found = true
-				break
-			}
-		}
-
-		if !found {
-			return fmt.Errorf("element %s not found. Diff:\n%s", e, cmp.Diff(actuals, expected))
-		}
-	}
-	return nil
-}
-
 // ExpectEqual calls CheckEqual and fails the test if it returns an error.
 func ExpectEqual(t *testing.T, o1 interface{}, o2 interface{}) {
 	t.Helper()
@@ -97,39 +36,3 @@ func CheckEqual(o1 interface{}, o2 interface{}) error {
 	}
 	return nil
 }
-
-// Expect calls gomega.Eventually to wait until the accumulator accumulated specified events.
-func Expect(t *testing.T, acc *Accumulator, expected ...event.Event) {
-	ExpectFilter(t, acc, nil, expected...)
-}
-
-// ExpectFullSync expects the given full sync event.
-func ExpectFullSync(t *testing.T, acc *Accumulator, c collection.Schema) {
-	e := event.FullSyncFor(c)
-	Expect(t, acc, e)
-}
-
-// ExpectNone expects no events to arrive.
-func ExpectNone(t *testing.T, acc *Accumulator) {
-	time.Sleep(time.Second) // Sleep for a long time to avoid missing any events that might be accumulated
-	Expect(t, acc)
-}
-
-// ExpectFilter works similar to Expect, except it filters out events based on the given function.
-func ExpectFilter(t *testing.T, acc *Accumulator, fn FilterFn, expected ...event.Event) {
-	t.Helper()
-	g := gomega.NewWithT(t)
-
-	wrapFn := func() []event.Event {
-		e := acc.Events()
-		if fn != nil {
-			e = fn(e)
-		}
-
-		if len(e) == 0 {
-			e = nil
-		}
-		return e
-	}
-	g.Eventually(wrapFn).Should(gomega.Equal(expected))
-}
diff --git a/pkg/config/legacy/testing/fixtures/expect_test.go b/pkg/config/legacy/testing/fixtures/expect_test.go
deleted file mode 100644
index 917032ac11..0000000000
--- a/pkg/config/legacy/testing/fixtures/expect_test.go
+++ /dev/null
@@ -1,54 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures_test
-
-import (
-	"testing"
-
-	"istio.io/istio/pkg/config/legacy/testing/basicmeta"
-	"istio.io/istio/pkg/config/legacy/testing/data"
-	"istio.io/istio/pkg/config/legacy/testing/fixtures"
-)
-
-func TestExpect(t *testing.T) {
-	acc := &fixtures.Accumulator{}
-	acc.Handle(data.Event1Col1AddItem1)
-	acc.Handle(data.Event2Col1AddItem2)
-
-	fixtures.Expect(t, acc, data.Event1Col1AddItem1, data.Event2Col1AddItem2)
-}
-
-func TestExpect_FullSync(t *testing.T) {
-	acc := &fixtures.Accumulator{}
-	acc.Handle(data.Event1Col1Synced)
-
-	fixtures.ExpectFullSync(t, acc, basicmeta.K8SCollection1)
-}
-
-func TestExpect_None(t *testing.T) {
-	acc := &fixtures.Accumulator{}
-
-	fixtures.ExpectNone(t, acc)
-}
-
-func TestExpect_ExpectFilter(t *testing.T) {
-	acc := &fixtures.Accumulator{}
-	acc.Handle(data.Event1Col1AddItem1)
-	acc.Handle(data.Event1Col1Synced)
-	acc.Handle(data.Event2Col1AddItem2)
-
-	fixtures.ExpectFilter(
-		t, acc, fixtures.NoFullSync, data.Event1Col1AddItem1, data.Event2Col1AddItem2)
-}
diff --git a/pkg/config/legacy/testing/fixtures/filters.go b/pkg/config/legacy/testing/fixtures/filters.go
deleted file mode 100644
index adbcb8f7ba..0000000000
--- a/pkg/config/legacy/testing/fixtures/filters.go
+++ /dev/null
@@ -1,92 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures
-
-import (
-	"fmt"
-	"sort"
-	"strings"
-
-	"istio.io/istio/pkg/config/event"
-)
-
-// FilterFn is a function for filtering events
-type FilterFn func(event []event.Event) []event.Event
-
-// NoVersions strips the versions from the given events
-func NoVersions(events []event.Event) []event.Event {
-	result := make([]event.Event, len(events))
-	copy(result, events)
-
-	for i := range result {
-		result[i].Resource = result[i].Resource.Clone()
-		result[i].Resource.Metadata.Version = ""
-	}
-
-	return result
-}
-
-// NoFullSync filters FullSync events and returns.
-func NoFullSync(events []event.Event) []event.Event {
-	result := make([]event.Event, 0, len(events))
-
-	for _, e := range events {
-		if e.Kind == event.FullSync {
-			continue
-		}
-		result = append(result, e)
-	}
-
-	return result
-}
-
-// Sort events in a stable order.
-func Sort(events []event.Event) []event.Event {
-	result := make([]event.Event, len(events))
-	copy(result, events)
-
-	sort.SliceStable(result, func(i, j int) bool {
-		c := strings.Compare(result[i].String(), result[j].String())
-		if c != 0 {
-			return c < 0
-		}
-
-		if result[i].Resource == nil && result[j].Resource == nil {
-			return false
-		}
-
-		if result[i].Resource == nil {
-			return false
-		}
-
-		if result[j].Resource == nil {
-			return true
-		}
-
-		return strings.Compare(fmt.Sprintf("%+v", result[i].Resource), fmt.Sprintf("%+v", result[j].Resource)) < 0
-	})
-
-	return result
-}
-
-// Chain filters back to back
-func Chain(fns ...FilterFn) FilterFn {
-	return func(e []event.Event) []event.Event {
-		for _, fn := range fns {
-			e = fn(e)
-		}
-		return e
-	}
-}
diff --git a/pkg/config/legacy/testing/fixtures/filters_test.go b/pkg/config/legacy/testing/fixtures/filters_test.go
deleted file mode 100644
index 0cdc5e4b83..0000000000
--- a/pkg/config/legacy/testing/fixtures/filters_test.go
+++ /dev/null
@@ -1,72 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures_test
-
-import (
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	data "istio.io/istio/pkg/config/legacy/testing/data"
-	fixtures "istio.io/istio/pkg/config/legacy/testing/fixtures"
-	"istio.io/istio/pkg/config/resource"
-)
-
-func TestNoVersions(t *testing.T) {
-	g := NewWithT(t)
-
-	events := []event.Event{data.Event1Col1AddItem1}
-	g.Expect(events[0].Resource.Metadata.Version).NotTo(Equal(resource.Version("")))
-	events = fixtures.NoVersions(events)
-	g.Expect(events[0].Resource.Metadata.Version).To(Equal(resource.Version("")))
-}
-
-func TestNoFullSync(t *testing.T) {
-	g := NewWithT(t)
-
-	events := []event.Event{data.Event1Col1AddItem1, data.Event1Col1Synced, data.Event2Col1AddItem2}
-	events = fixtures.NoFullSync(events)
-
-	expected := []event.Event{data.Event1Col1AddItem1, data.Event2Col1AddItem2}
-	g.Expect(events).To(Equal(expected))
-}
-
-func TestSort(t *testing.T) {
-	g := NewWithT(t)
-
-	events := []event.Event{data.Event2Col1AddItem2, data.Event1Col1Synced, data.Event1Col1AddItem1}
-	events = fixtures.Sort(events)
-
-	expected := []event.Event{data.Event1Col1AddItem1, data.Event2Col1AddItem2, data.Event1Col1Synced}
-	g.Expect(events).To(Equal(expected))
-}
-
-func TestChain(t *testing.T) {
-	g := NewWithT(t)
-
-	events := []event.Event{data.Event2Col1AddItem2, data.Event1Col1Synced, data.Event1Col1AddItem1}
-	fn := fixtures.Chain(fixtures.Sort, fixtures.NoFullSync, fixtures.NoVersions)
-	events = fn(events)
-
-	expected := []event.Event{
-		data.Event1Col1AddItem1.Clone(),
-		data.Event2Col1AddItem2.Clone(),
-	}
-	expected[0].Resource.Metadata.Version = resource.Version("")
-	expected[1].Resource.Metadata.Version = resource.Version("")
-
-	g.Expect(events).To(Equal(expected))
-}
diff --git a/pkg/config/legacy/testing/fixtures/listener.go b/pkg/config/legacy/testing/fixtures/listener.go
deleted file mode 100644
index 63856c3d08..0000000000
--- a/pkg/config/legacy/testing/fixtures/listener.go
+++ /dev/null
@@ -1,31 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures
-
-import (
-	"istio.io/istio/pkg/config/event"
-)
-
-// Listener is a simple event.Dispatcher implementation for testing.
-type Listener struct {
-	Handlers event.Handlers
-}
-
-var _ event.Dispatcher = &Listener{}
-
-// Dispatch implements event.Listener
-func (c *Listener) Dispatch(handler event.Handler) {
-	c.Handlers.Add(handler)
-}
diff --git a/pkg/config/legacy/testing/fixtures/listener_test.go b/pkg/config/legacy/testing/fixtures/listener_test.go
deleted file mode 100644
index 9a328cadeb..0000000000
--- a/pkg/config/legacy/testing/fixtures/listener_test.go
+++ /dev/null
@@ -1,38 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures
-
-import (
-	"testing"
-
-	"github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	data "istio.io/istio/pkg/config/legacy/testing/data"
-)
-
-func TestDispatcher(t *testing.T) {
-	g := gomega.NewWithT(t)
-
-	d := &Listener{}
-
-	h1 := &Accumulator{}
-	d.Dispatch(h1)
-
-	d.Handlers.Handle(data.Event1Col1AddItem1)
-
-	expected := []event.Event{data.Event1Col1AddItem1}
-	g.Expect(h1.Events()).To(gomega.Equal(expected))
-}
diff --git a/pkg/config/legacy/testing/fixtures/source.go b/pkg/config/legacy/testing/fixtures/source.go
deleted file mode 100644
index dbe717e702..0000000000
--- a/pkg/config/legacy/testing/fixtures/source.go
+++ /dev/null
@@ -1,50 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures
-
-import "istio.io/istio/pkg/config/event"
-
-// Source is a test implementation of event.Source
-type Source struct {
-	Handlers event.Handler
-	running  bool
-}
-
-var _ event.Source = &Source{}
-
-// Dispatch implements event.Dispatcher
-func (s *Source) Dispatch(h event.Handler) {
-	s.Handlers = event.CombineHandlers(s.Handlers, h)
-}
-
-// Start implements event.Source
-func (s *Source) Start() {
-	s.running = true
-}
-
-// Stop implements event.Source
-func (s *Source) Stop() {
-	s.running = false
-}
-
-// Running indicates whether the Source is currently running or not.
-func (s *Source) Running() bool {
-	return s.running
-}
-
-// Handle has the source send the specified event to its handler
-func (s *Source) Handle(e event.Event) {
-	s.Handlers.Handle(e)
-}
diff --git a/pkg/config/legacy/testing/fixtures/source_test.go b/pkg/config/legacy/testing/fixtures/source_test.go
deleted file mode 100644
index 6a82a0f44c..0000000000
--- a/pkg/config/legacy/testing/fixtures/source_test.go
+++ /dev/null
@@ -1,68 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures
-
-import (
-	"testing"
-
-	"github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/event"
-	basicmeta "istio.io/istio/pkg/config/legacy/testing/basicmeta"
-)
-
-func TestSource(t *testing.T) {
-	g := gomega.NewWithT(t)
-
-	s := &Source{}
-
-	s.Start()
-	g.Expect(s.running).To(gomega.BeTrue())
-
-	s.Stop()
-	g.Expect(s.running).To(gomega.BeFalse())
-}
-
-func TestSource_Dispatch(t *testing.T) {
-	g := gomega.NewWithT(t)
-
-	a := &Accumulator{}
-
-	s := &Source{}
-	s.Dispatch(a)
-	s.Start()
-
-	g.Expect(s.Handlers).To(gomega.Equal(a))
-}
-
-func TestSource_Handle(t *testing.T) {
-	g := gomega.NewWithT(t)
-
-	s := &Source{}
-
-	a := &Accumulator{}
-	s.Dispatch(a)
-
-	s.Start()
-
-	e := event.Event{
-		Kind:     event.Added,
-		Source:   basicmeta.K8SCollection1,
-		Resource: nil,
-	}
-	s.Handle(e)
-
-	g.Expect(a.Events()).To(gomega.Equal([]event.Event{e}))
-}
diff --git a/pkg/config/legacy/testing/fixtures/transformer.go b/pkg/config/legacy/testing/fixtures/transformer.go
deleted file mode 100644
index 1f1f7ee7cf..0000000000
--- a/pkg/config/legacy/testing/fixtures/transformer.go
+++ /dev/null
@@ -1,94 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package fixtures
-
-import (
-	"istio.io/istio/pkg/config/event"
-	"istio.io/istio/pkg/config/schema/collection"
-)
-
-// Transformer implements event.Transformer for testing purposes.
-type Transformer struct {
-	Handlers          map[collection.Name]*sourceAndHandler
-	Started           bool
-	InputCollections  collection.Schemas
-	OutputCollections collection.Schemas
-
-	fn func(tr *Transformer, e event.Event)
-}
-
-var _ event.Transformer = &Transformer{}
-
-// NewTransformer returns a new fixture.Transformer.
-func NewTransformer(inputs, outputs collection.Schemas, handlerFn func(tr *Transformer, e event.Event)) *Transformer {
-	return &Transformer{
-		InputCollections:  inputs,
-		OutputCollections: outputs,
-		Handlers:          make(map[collection.Name]*sourceAndHandler),
-		fn:                handlerFn,
-	}
-}
-
-// Start implements event.Transformer
-func (t *Transformer) Start() {
-	t.Started = true
-}
-
-// Stop implements event.Transformer
-func (t *Transformer) Stop() {
-	t.Started = false
-}
-
-// Handle implements event.Transformer
-func (t *Transformer) Handle(e event.Event) {
-	t.fn(t, e)
-}
-
-// DispatchFor implements event.Transformer
-func (t *Transformer) DispatchFor(c collection.Schema, h event.Handler) {
-	entry := t.Handlers[c.Name()]
-	if entry == nil {
-		t.Handlers[c.Name()] = &sourceAndHandler{
-			source:  c,
-			handler: h,
-		}
-		return
-	}
-
-	entry.handler = event.CombineHandlers(entry.handler, h)
-}
-
-// Inputs implements event.Transformer
-func (t *Transformer) Inputs() collection.Schemas {
-	return t.InputCollections
-}
-
-// Outputs implements event.Transformer
-func (t *Transformer) Outputs() collection.Schemas {
-	return t.OutputCollections
-}
-
-// Publish a message to the given collection
-func (t *Transformer) Publish(c collection.Name, e event.Event) {
-	h := t.Handlers[c]
-	if h != nil {
-		h.handler.Handle(e)
-	}
-}
-
-type sourceAndHandler struct {
-	source  collection.Schema
-	handler event.Handler
-}
diff --git a/pkg/config/legacy/testing/k8smeta/collections.gen.go b/pkg/config/legacy/testing/k8smeta/collections.gen.go
deleted file mode 100755
index e0262aa4a3..0000000000
--- a/pkg/config/legacy/testing/k8smeta/collections.gen.go
+++ /dev/null
@@ -1,184 +0,0 @@
-// GENERATED FILE -- DO NOT EDIT
-//
-
-package k8smeta
-
-import (
-	"reflect"
-
-	k8sioapiappsv1 "k8s.io/api/apps/v1"
-	k8sioapicorev1 "k8s.io/api/core/v1"
-	k8sioapiextensionsv1beta1 "k8s.io/api/extensions/v1beta1"
-
-	"istio.io/istio/pkg/config/schema/collection"
-	"istio.io/istio/pkg/config/schema/resource"
-	"istio.io/istio/pkg/config/validation"
-)
-
-var (
-
-	// K8SAppsV1Deployments describes the collection k8s/apps/v1/deployments
-	K8SAppsV1Deployments = collection.Builder{
-		Name:         "k8s/apps/v1/deployments",
-		VariableName: "K8SAppsV1Deployments",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "apps",
-			Kind:          "Deployment",
-			Plural:        "deployments",
-			Version:       "v1",
-			Proto:         "k8s.io.api.apps.v1.Deployment",
-			ReflectType:   reflect.TypeOf(&k8sioapiappsv1.Deployment{}).Elem(),
-			ProtoPackage:  "k8s.io/api/apps/v1",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SCoreV1Endpoints describes the collection k8s/core/v1/endpoints
-	K8SCoreV1Endpoints = collection.Builder{
-		Name:         "k8s/core/v1/endpoints",
-		VariableName: "K8SCoreV1Endpoints",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "",
-			Kind:          "Endpoints",
-			Plural:        "endpoints",
-			Version:       "v1",
-			Proto:         "k8s.io.api.core.v1.Endpoints",
-			ReflectType:   reflect.TypeOf(&k8sioapicorev1.Endpoints{}).Elem(),
-			ProtoPackage:  "k8s.io/api/core/v1",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SCoreV1Namespaces describes the collection k8s/core/v1/namespaces
-	K8SCoreV1Namespaces = collection.Builder{
-		Name:         "k8s/core/v1/namespaces",
-		VariableName: "K8SCoreV1Namespaces",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "",
-			Kind:          "Namespace",
-			Plural:        "namespaces",
-			Version:       "v1",
-			Proto:         "k8s.io.api.core.v1.NamespaceSpec",
-			ReflectType:   reflect.TypeOf(&k8sioapicorev1.NamespaceSpec{}).Elem(),
-			ProtoPackage:  "k8s.io/api/core/v1",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SCoreV1Nodes describes the collection k8s/core/v1/nodes
-	K8SCoreV1Nodes = collection.Builder{
-		Name:         "k8s/core/v1/nodes",
-		VariableName: "K8SCoreV1Nodes",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "",
-			Kind:          "Node",
-			Plural:        "nodes",
-			Version:       "v1",
-			Proto:         "k8s.io.api.core.v1.NodeSpec",
-			ReflectType:   reflect.TypeOf(&k8sioapicorev1.NodeSpec{}).Elem(),
-			ProtoPackage:  "k8s.io/api/core/v1",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SCoreV1Pods describes the collection k8s/core/v1/pods
-	K8SCoreV1Pods = collection.Builder{
-		Name:         "k8s/core/v1/pods",
-		VariableName: "K8SCoreV1Pods",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "",
-			Kind:          "Pod",
-			Plural:        "pods",
-			Version:       "v1",
-			Proto:         "k8s.io.api.core.v1.Pod",
-			ReflectType:   reflect.TypeOf(&k8sioapicorev1.Pod{}).Elem(),
-			ProtoPackage:  "k8s.io/api/core/v1",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SCoreV1Services describes the collection k8s/core/v1/services
-	K8SCoreV1Services = collection.Builder{
-		Name:         "k8s/core/v1/services",
-		VariableName: "K8SCoreV1Services",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "",
-			Kind:          "Service",
-			Plural:        "services",
-			Version:       "v1",
-			Proto:         "k8s.io.api.core.v1.ServiceSpec",
-			ReflectType:   reflect.TypeOf(&k8sioapicorev1.ServiceSpec{}).Elem(),
-			ProtoPackage:  "k8s.io/api/core/v1",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SExtensionsV1Beta1Ingresses describes the collection
-	// k8s/extensions/v1beta1/ingresses
-	K8SExtensionsV1Beta1Ingresses = collection.Builder{
-		Name:         "k8s/extensions/v1beta1/ingresses",
-		VariableName: "K8SExtensionsV1Beta1Ingresses",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:         "extensions",
-			Kind:          "Ingress",
-			Plural:        "ingresses",
-			Version:       "v1beta1",
-			Proto:         "k8s.io.api.extensions.v1beta1.IngressSpec",
-			ReflectType:   reflect.TypeOf(&k8sioapiextensionsv1beta1.IngressSpec{}).Elem(),
-			ProtoPackage:  "k8s.io/api/extensions/v1beta1",
-			ClusterScoped: false,
-			ValidateProto: validation.EmptyValidate,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// All contains all collections in the system.
-	All = collection.NewSchemasBuilder().
-		MustAdd(K8SAppsV1Deployments).
-		MustAdd(K8SCoreV1Endpoints).
-		MustAdd(K8SCoreV1Namespaces).
-		MustAdd(K8SCoreV1Nodes).
-		MustAdd(K8SCoreV1Pods).
-		MustAdd(K8SCoreV1Services).
-		MustAdd(K8SExtensionsV1Beta1Ingresses).
-		Build()
-
-	// Istio contains only Istio collections.
-	Istio = collection.NewSchemasBuilder().
-		Build()
-
-	// Kube contains only kubernetes collections.
-	Kube = collection.NewSchemasBuilder().
-		MustAdd(K8SAppsV1Deployments).
-		MustAdd(K8SCoreV1Endpoints).
-		MustAdd(K8SCoreV1Namespaces).
-		MustAdd(K8SCoreV1Nodes).
-		MustAdd(K8SCoreV1Pods).
-		MustAdd(K8SCoreV1Services).
-		MustAdd(K8SExtensionsV1Beta1Ingresses).
-		Build()
-
-	// Pilot contains only collections used by Pilot.
-	Pilot = collection.NewSchemasBuilder().
-		Build()
-
-	// PilotGatewayAPI contains only collections used by Pilot, including experimental Service Api.
-	PilotGatewayAPI = collection.NewSchemasBuilder().
-			Build()
-
-	// Deprecated contains only collections used by that will soon be used by nothing.
-	Deprecated = collection.NewSchemasBuilder().
-			Build()
-)
diff --git a/pkg/config/legacy/testing/k8smeta/generate.go b/pkg/config/legacy/testing/k8smeta/generate.go
deleted file mode 100644
index b483624600..0000000000
--- a/pkg/config/legacy/testing/k8smeta/generate.go
+++ /dev/null
@@ -1,23 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package k8smeta
-
-// Embed the core metadata file containing the collections as a resource
-//go:generate go-bindata --nocompress --nometadata --pkg k8smeta -o k8smeta.gen.go  k8smeta.yaml
-
-// Create collection constants
-//go:generate go run $REPO_ROOT/pkg/config/schema/codegen/tools/collections.main.go k8smeta k8smeta.yaml collections.gen.go
-
-//go:generate goimports -w -local istio.io "$REPO_ROOT/pkg/config/legacy/testing/k8smeta/collections.gen.go"
diff --git a/pkg/config/legacy/testing/k8smeta/get.go b/pkg/config/legacy/testing/k8smeta/get.go
deleted file mode 100644
index 31ddb53293..0000000000
--- a/pkg/config/legacy/testing/k8smeta/get.go
+++ /dev/null
@@ -1,50 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package k8smeta
-
-import (
-	"fmt"
-
-	"istio.io/istio/pkg/config/schema"
-)
-
-// Get returns the contained k8smeta.yaml file, in parsed form.
-func Get() (*schema.Metadata, error) {
-	b, err := Asset("k8smeta.yaml")
-	if err != nil {
-		return nil, err
-	}
-
-	m, err := schema.ParseAndBuild(string(b))
-	if err != nil {
-		return nil, err
-	}
-
-	return m, nil
-}
-
-// MustGet calls GetBasicMeta and panics if it returns and error.
-func MustGet() *schema.Metadata {
-	s, err := Get()
-	if err != nil {
-		panic(fmt.Sprintf("k8smeta.MustGet: %v", err))
-	}
-	return s
-}
-
-func NewMustGet() *schema.Metadata {
-	s := MustGet()
-	return schema.NewMustGetWrapper(s)
-}
diff --git a/pkg/config/legacy/testing/k8smeta/k8smeta.gen.go b/pkg/config/legacy/testing/k8smeta/k8smeta.gen.go
deleted file mode 100644
index a1aa70835d..0000000000
--- a/pkg/config/legacy/testing/k8smeta/k8smeta.gen.go
+++ /dev/null
@@ -1,312 +0,0 @@
-// Code generated for package k8smeta by go-bindata DO NOT EDIT. (@generated)
-// sources:
-// k8smeta.yaml
-package k8smeta
-
-import (
-	"fmt"
-	"io/ioutil"
-	"os"
-	"path/filepath"
-	"strings"
-	"time"
-)
-type asset struct {
-	bytes []byte
-	info  os.FileInfo
-}
-
-type bindataFileInfo struct {
-	name    string
-	size    int64
-	mode    os.FileMode
-	modTime time.Time
-}
-
-// Name return file name
-func (fi bindataFileInfo) Name() string {
-	return fi.name
-}
-
-// Size return file size
-func (fi bindataFileInfo) Size() int64 {
-	return fi.size
-}
-
-// Mode return file mode
-func (fi bindataFileInfo) Mode() os.FileMode {
-	return fi.mode
-}
-
-// Mode return file modify time
-func (fi bindataFileInfo) ModTime() time.Time {
-	return fi.modTime
-}
-
-// IsDir return file whether a directory
-func (fi bindataFileInfo) IsDir() bool {
-	return fi.mode&os.ModeDir != 0
-}
-
-// Sys return file is sys mode
-func (fi bindataFileInfo) Sys() interface{} {
-	return nil
-}
-
-var _k8smetaYaml = []byte(`# Copyright 2019 Istio Authors
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in conformance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-collections:
-  # Built-in K8s collections
-  - name: "k8s/core/v1/endpoints"
-    kind: "Endpoints"
-
-  - name: "k8s/core/v1/namespaces"
-    kind: "Namespace"
-
-  - name: "k8s/core/v1/nodes"
-    kind: "Node"
-
-  - name: "k8s/core/v1/pods"
-    kind: "Pod"
-
-  - name: "k8s/core/v1/services"
-    kind: "Service"
-
-  - name: "k8s/extensions/v1beta1/ingresses"
-    kind: "Ingress"
-    group: "extensions"
-
-  - name: "k8s/apps/v1/deployments"
-    kind: "Deployment"
-    group: "apps"
-
-resources:
-  - collection: "k8s/extensions/v1beta1/ingresses"
-    kind: "Ingress"
-    plural: "ingresses"
-    group: "extensions"
-    version: "v1beta1"
-    proto: "k8s.io.api.extensions.v1beta1.IngressSpec"
-    protoPackage: "k8s.io/api/extensions/v1beta1"
-
-  - collection: "k8s/core/v1/services"
-    kind: "Service"
-    plural: "services"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.ServiceSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/core/v1/namespaces"
-    kind: "Namespace"
-    plural: "namespaces"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.NamespaceSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/core/v1/nodes"
-    kind: "Node"
-    plural: "nodes"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.NodeSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/core/v1/pods"
-    kind: "Pod"
-    plural: "pods"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.Pod"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/core/v1/endpoints"
-    kind: "Endpoints"
-    plural: "endpoints"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.Endpoints"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/apps/v1/deployments"
-    kind: "Deployment"
-    plural: "deployments"
-    group: "apps"
-    version: "v1"
-    proto: "k8s.io.api.apps.v1.Deployment"
-    protoPackage: "k8s.io/api/apps/v1"
-
-transforms:
-  - type: direct
-    mapping:
-`)
-
-func k8smetaYamlBytes() ([]byte, error) {
-	return _k8smetaYaml, nil
-}
-
-func k8smetaYaml() (*asset, error) {
-	bytes, err := k8smetaYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "k8smeta.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-// Asset loads and returns the asset for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func Asset(name string) ([]byte, error) {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[cannonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
-		}
-		return a.bytes, nil
-	}
-	return nil, fmt.Errorf("Asset %s not found", name)
-}
-
-// MustAsset is like Asset but panics when Asset would return an error.
-// It simplifies safe initialization of global variables.
-func MustAsset(name string) []byte {
-	a, err := Asset(name)
-	if err != nil {
-		panic("asset: Asset(" + name + "): " + err.Error())
-	}
-
-	return a
-}
-
-// AssetInfo loads and returns the asset info for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func AssetInfo(name string) (os.FileInfo, error) {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[cannonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
-		}
-		return a.info, nil
-	}
-	return nil, fmt.Errorf("AssetInfo %s not found", name)
-}
-
-// AssetNames returns the names of the assets.
-func AssetNames() []string {
-	names := make([]string, 0, len(_bindata))
-	for name := range _bindata {
-		names = append(names, name)
-	}
-	return names
-}
-
-// _bindata is a table, holding each asset generator, mapped to its name.
-var _bindata = map[string]func() (*asset, error){
-	"k8smeta.yaml": k8smetaYaml,
-}
-
-// AssetDir returns the file names below a certain
-// directory embedded in the file by go-bindata.
-// For example if you run go-bindata on data/... and data contains the
-// following hierarchy:
-//     data/
-//       foo.txt
-//       img/
-//         a.png
-//         b.png
-// then AssetDir("data") would return []string{"foo.txt", "img"}
-// AssetDir("data/img") would return []string{"a.png", "b.png"}
-// AssetDir("foo.txt") and AssetDir("notexist") would return an error
-// AssetDir("") will return []string{"data"}.
-func AssetDir(name string) ([]string, error) {
-	node := _bintree
-	if len(name) != 0 {
-		cannonicalName := strings.Replace(name, "\\", "/", -1)
-		pathList := strings.Split(cannonicalName, "/")
-		for _, p := range pathList {
-			node = node.Children[p]
-			if node == nil {
-				return nil, fmt.Errorf("Asset %s not found", name)
-			}
-		}
-	}
-	if node.Func != nil {
-		return nil, fmt.Errorf("Asset %s not found", name)
-	}
-	rv := make([]string, 0, len(node.Children))
-	for childName := range node.Children {
-		rv = append(rv, childName)
-	}
-	return rv, nil
-}
-
-type bintree struct {
-	Func     func() (*asset, error)
-	Children map[string]*bintree
-}
-
-var _bintree = &bintree{nil, map[string]*bintree{
-	"k8smeta.yaml": &bintree{k8smetaYaml, map[string]*bintree{}},
-}}
-
-// RestoreAsset restores an asset under the given directory
-func RestoreAsset(dir, name string) error {
-	data, err := Asset(name)
-	if err != nil {
-		return err
-	}
-	info, err := AssetInfo(name)
-	if err != nil {
-		return err
-	}
-	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
-	if err != nil {
-		return err
-	}
-	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
-	if err != nil {
-		return err
-	}
-	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
-	if err != nil {
-		return err
-	}
-	return nil
-}
-
-// RestoreAssets restores an asset under the given directory recursively
-func RestoreAssets(dir, name string) error {
-	children, err := AssetDir(name)
-	// File
-	if err != nil {
-		return RestoreAsset(dir, name)
-	}
-	// Dir
-	for _, child := range children {
-		err = RestoreAssets(dir, filepath.Join(name, child))
-		if err != nil {
-			return err
-		}
-	}
-	return nil
-}
-
-func _filePath(dir, name string) string {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
-}
diff --git a/pkg/config/legacy/testing/k8smeta/k8smeta.yaml b/pkg/config/legacy/testing/k8smeta/k8smeta.yaml
deleted file mode 100644
index b6b10bbf44..0000000000
--- a/pkg/config/legacy/testing/k8smeta/k8smeta.yaml
+++ /dev/null
@@ -1,95 +0,0 @@
-# Copyright 2019 Istio Authors
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in conformance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-collections:
-  # Built-in K8s collections
-  - name: "k8s/core/v1/endpoints"
-    kind: "Endpoints"
-
-  - name: "k8s/core/v1/namespaces"
-    kind: "Namespace"
-
-  - name: "k8s/core/v1/nodes"
-    kind: "Node"
-
-  - name: "k8s/core/v1/pods"
-    kind: "Pod"
-
-  - name: "k8s/core/v1/services"
-    kind: "Service"
-
-  - name: "k8s/extensions/v1beta1/ingresses"
-    kind: "Ingress"
-    group: "extensions"
-
-  - name: "k8s/apps/v1/deployments"
-    kind: "Deployment"
-    group: "apps"
-
-resources:
-  - collection: "k8s/extensions/v1beta1/ingresses"
-    kind: "Ingress"
-    plural: "ingresses"
-    group: "extensions"
-    version: "v1beta1"
-    proto: "k8s.io.api.extensions.v1beta1.IngressSpec"
-    protoPackage: "k8s.io/api/extensions/v1beta1"
-
-  - collection: "k8s/core/v1/services"
-    kind: "Service"
-    plural: "services"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.ServiceSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/core/v1/namespaces"
-    kind: "Namespace"
-    plural: "namespaces"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.NamespaceSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/core/v1/nodes"
-    kind: "Node"
-    plural: "nodes"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.NodeSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/core/v1/pods"
-    kind: "Pod"
-    plural: "pods"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.Pod"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/core/v1/endpoints"
-    kind: "Endpoints"
-    plural: "endpoints"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.Endpoints"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - collection: "k8s/apps/v1/deployments"
-    kind: "Deployment"
-    plural: "deployments"
-    group: "apps"
-    version: "v1"
-    proto: "k8s.io.api.apps.v1.Deployment"
-    protoPackage: "k8s.io/api/apps/v1"
-
-transforms:
-  - type: direct
-    mapping:
diff --git a/pkg/config/legacy/util/kuberesource/resources.go b/pkg/config/legacy/util/kuberesource/resources.go
index 2a0d4ec940..461f18f42e 100644
--- a/pkg/config/legacy/util/kuberesource/resources.go
+++ b/pkg/config/legacy/util/kuberesource/resources.go
@@ -17,25 +17,18 @@
 import (
 	"fmt"
 
-	"istio.io/istio/pkg/config/legacy/processing/transformer"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/collection"
+	"istio.io/istio/pkg/config/schema/collections"
 	"istio.io/istio/pkg/config/schema/resource"
 )
 
-// DisableExcludedCollections is a helper that filters collection.Schemas to disable some resources
-// The first filter behaves in the same way as existing logic:
-// - Builtin types are excluded by default.
-// - If ServiceDiscovery is enabled, any built-in type should be re-added.
-// In addition, any resources not needed as inputs by the specified collections are disabled
-func DisableExcludedCollections(in collection.Schemas, providers transformer.Providers,
-	requiredCols collection.Names, excludedResourceKinds []string, enableServiceDiscovery bool) collection.Schemas {
-	// Get upstream collections in terms of transformer configuration
-	// Required collections are specified in terms of transformer outputs, but we care here about the corresponding inputs
-	upstreamCols := providers.RequiredInputsFor(requiredCols)
-
+func SkipExcludedCollections(requiredCols collection.Names, excludedResourceKinds []string, enableServiceDiscovery bool) collection.Schemas {
 	resultBuilder := collection.NewSchemasBuilder()
-	for _, s := range in.All() {
+	for _, name := range requiredCols {
+		s, f := collections.All.Find(name.String())
+		if !f {
+			continue
+		}
 		disabled := false
 		if isKindExcluded(excludedResourceKinds, s.Resource().Kind()) {
 			// Found a matching exclude directive for this KubeResource. Disable the resource.
@@ -50,13 +43,8 @@ func DisableExcludedCollections(in collection.Schemas, providers transformer.Pro
 			}
 		}
 
-		// Additionally, filter out any resources not upstream of required collections
-		if _, ok := upstreamCols[s.Name()]; !ok {
-			disabled = true
-		}
-
 		if disabled {
-			s = s.Disable()
+			continue
 		}
 
 		_ = resultBuilder.Add(s)
@@ -68,7 +56,7 @@ func DisableExcludedCollections(in collection.Schemas, providers transformer.Pro
 // DefaultExcludedResourceKinds returns the default list of resource kinds to exclude.
 func DefaultExcludedResourceKinds() []string {
 	resources := make([]string, 0)
-	for _, r := range schema.MustGet().KubeCollections().All() {
+	for _, r := range collections.Kube.All() {
 		if IsDefaultExcluded(r.Resource()) {
 			resources = append(resources, r.Resource().Kind())
 		}
@@ -90,11 +78,11 @@ func isKindExcluded(excludedResourceKinds []string, kind string) bool {
 // without propagating the many dependencies it comes with.
 
 var knownTypes = map[string]struct{}{
-	asTypesKey("", "Service"):   struct{}{},
-	asTypesKey("", "Namespace"): struct{}{},
-	asTypesKey("", "Node"):      struct{}{},
-	asTypesKey("", "Pod"):       struct{}{},
-	asTypesKey("", "Secret"):    struct{}{},
+	asTypesKey("", "Service"):   {},
+	asTypesKey("", "Namespace"): {},
+	asTypesKey("", "Node"):      {},
+	asTypesKey("", "Pod"):       {},
+	asTypesKey("", "Secret"):    {},
 }
 
 func asTypesKey(group, kind string) string {
diff --git a/pkg/config/schema/ast/ast.go b/pkg/config/schema/ast/ast.go
index 487fb54a4d..0a1bf0e475 100644
--- a/pkg/config/schema/ast/ast.go
+++ b/pkg/config/schema/ast/ast.go
@@ -16,7 +16,6 @@
 
 import (
 	"encoding/json"
-	"fmt"
 
 	"sigs.k8s.io/yaml"
 
@@ -24,15 +23,10 @@
 	"istio.io/istio/pkg/util/strcase"
 )
 
-// Direct transform's name. Used for parsing.
-const Direct = "direct"
-
 // Metadata is the top-level container.
 type Metadata struct {
-	Collections       []*Collection       `json:"collections"`
-	Resources         []*Resource         `json:"resources"`
-	Snapshots         []*Snapshot         `json:"snapshots"`
-	TransformSettings []TransformSettings `json:"transforms"`
+	Collections []*Collection `json:"collections"`
+	Resources   []*Resource   `json:"resources"`
 }
 
 var _ json.Unmarshaler = &Metadata{}
@@ -44,25 +38,10 @@ type Collection struct {
 	Description  string `json:"description"`
 	Group        string `json:"group"`
 	Kind         string `json:"kind"`
-	Disabled     bool   `json:"disabled"`
 	Pilot        bool   `json:"pilot"`
 	Deprecated   bool   `json:"deprecated"`
 }
 
-// Snapshot metadata. Describes the snapshots that should be produced.
-type Snapshot struct {
-	Name         string   `json:"name"`
-	Strategy     string   `json:"strategy"`
-	Collections  []string `json:"collections"`
-	VariableName string   `json:"variableName"`
-	Description  string   `json:"description"`
-}
-
-// TransformSettings configuration metadata.
-type TransformSettings interface {
-	Type() string
-}
-
 // Resource metadata for resources contained within a collection.
 type Resource struct {
 	Group              string `json:"group"`
@@ -78,21 +57,6 @@ type Resource struct {
 	Description        string `json:"description"`
 }
 
-// DirectTransformSettings configuration
-type DirectTransformSettings struct {
-	Mapping map[string]string `json:"mapping"`
-}
-
-var _ TransformSettings = &DirectTransformSettings{}
-
-// Type implements TransformSettings
-func (d *DirectTransformSettings) Type() string {
-	return Direct
-}
-
-// for testing purposes
-var jsonUnmarshal = json.Unmarshal
-
 // FindResourceForGroupKind looks up a resource with the given group and kind. Returns nil if not found.
 func (m *Metadata) FindResourceForGroupKind(group, kind string) *Resource {
 	for _, r := range m.Resources {
@@ -106,37 +70,16 @@ func (m *Metadata) FindResourceForGroupKind(group, kind string) *Resource {
 // UnmarshalJSON implements json.Unmarshaler
 func (m *Metadata) UnmarshalJSON(data []byte) error {
 	var in struct {
-		Collections []*Collection     `json:"collections"`
-		Resources   []*Resource       `json:"resources"`
-		Snapshots   []*Snapshot       `json:"snapshots"`
-		Transforms  []json.RawMessage `json:"transforms"`
+		Collections []*Collection `json:"collections"`
+		Resources   []*Resource   `json:"resources"`
 	}
 
-	if err := jsonUnmarshal(data, &in); err != nil {
+	if err := json.Unmarshal(data, &in); err != nil {
 		return err
 	}
 
 	m.Collections = in.Collections
 	m.Resources = in.Resources
-	m.Snapshots = in.Snapshots
-
-	// Parse the transforms manually.
-	for _, xform := range in.Transforms {
-		rawMap := make(map[string]interface{})
-		if err := jsonUnmarshal(xform, &rawMap); err != nil {
-			return err
-		}
-
-		if rawMap["type"] == Direct {
-			dt := &DirectTransformSettings{}
-			if err := jsonUnmarshal(xform, &dt); err != nil {
-				return err
-			}
-			m.TransformSettings = append(m.TransformSettings, dt)
-		} else {
-			return fmt.Errorf("unable to parse transform: %v", string([]byte(xform)))
-		}
-	}
 
 	// Process resources.
 	for i, r := range m.Resources {
@@ -161,16 +104,6 @@ func (m *Metadata) UnmarshalJSON(data []byte) error {
 		}
 	}
 
-	// Process snapshots.
-	for i, s := range m.Snapshots {
-		if s.VariableName == "" {
-			m.Snapshots[i].VariableName = asSnapshotVariableName(s.Name)
-		}
-		if s.Description == "" {
-			m.Snapshots[i].Description = "describes the snapshot " + s.Name
-		}
-	}
-
 	return nil
 }
 
@@ -193,7 +126,3 @@ func asCollectionVariableName(n string) string {
 	n = strcase.CamelCaseWithSeparator(n, ".")
 	return n
 }
-
-func asSnapshotVariableName(name string) string {
-	return strcase.CamelCase(name)
-}
diff --git a/pkg/config/schema/ast/ast_test.go b/pkg/config/schema/ast/ast_test.go
index a742b10794..e23594d7b2 100644
--- a/pkg/config/schema/ast/ast_test.go
+++ b/pkg/config/schema/ast/ast_test.go
@@ -15,8 +15,6 @@
 package ast
 
 import (
-	"encoding/json"
-	"fmt"
 	"testing"
 
 	. "github.com/onsi/gomega"
@@ -38,22 +36,12 @@ func TestParse(t *testing.T) {
     kind:  "MeshConfig"
     group: ""
 
-snapshots:
-  - name: "default"
-    collections:
-      - "istio/meshconfig"
-
 resources:
   - kind:         "VirtualService"
     group:        "networking.istio.io"
     version:      "v1alpha3"
     proto:        "istio.networking.v1alpha3.VirtualService"
     protoPackage: "istio.io/api/networking/v1alpha3"
-
-transforms:
-  - type: direct
-    mapping:
-      "k8s/networking.istio.io/v1alpha3/destinationrules": "istio/networking/v1alpha3/destinationrules"
 `,
 			expected: &Metadata{
 				Collections: []*Collection{
@@ -65,16 +53,6 @@ func TestParse(t *testing.T) {
 						Group:        "",
 					},
 				},
-				Snapshots: []*Snapshot{
-					{
-						Name: "default",
-						Collections: []string{
-							"istio/meshconfig",
-						},
-						VariableName: "Default",
-						Description:  "describes the snapshot default",
-					},
-				},
 				Resources: []*Resource{
 					{
 						Kind:         "VirtualService",
@@ -85,13 +63,6 @@ func TestParse(t *testing.T) {
 						Validate:     "ValidateVirtualService",
 					},
 				},
-				TransformSettings: []TransformSettings{
-					&DirectTransformSettings{
-						Mapping: map[string]string{
-							"k8s/networking.istio.io/v1alpha3/destinationrules": "istio/networking/v1alpha3/destinationrules",
-						},
-					},
-				},
 			},
 		},
 	}
@@ -105,89 +76,3 @@ func TestParse(t *testing.T) {
 		})
 	}
 }
-
-func TestTransformParseError(t *testing.T) {
-	cases := []string{
-		`
-collections:
-  - name:  "istio/meshconfig"
-    kind:  "MeshConfig"
-    group: ""
-
-snapshots:
-  - name: "default"
-    collections:
-      - "istio/meshconfig"
-
-resources:
-  - kind:         "VirtualService"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-  
-transforms:
-  - type: foo
-    mapping:
-      "k8s/networking.istio.io/v1alpha3/destinationrules": "istio/networking/v1alpha3/destinationrules"
-`,
-	}
-
-	for _, c := range cases {
-		t.Run("", func(t *testing.T) {
-			g := NewWithT(t)
-			_, err := Parse(c)
-			g.Expect(err).NotTo(BeNil())
-		})
-	}
-}
-
-func TestParseErrors_Unmarshal(t *testing.T) {
-	input := `
-collections:
-  - name:  "istio/meshconfig"
-    kind:   "VirtualService"
-    group:  "networking.istio.io"
-
-snapshots:
-  - name: "default"
-    collections:
-      - "istio/meshconfig"
-
-resources:
-  - kind:         "VirtualService"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.mesh.v1alpha1.MeshConfig"
-    protoPackage: "istio.io/api/mesh/v1alpha1"
-  
-transforms:
-  - type: direct
-    mapping:
-      "k8s/networking.istio.io/v1alpha3/destinationrules": "istio/networking/v1alpha3/destinationrules"
-`
-
-	// This is fragile! It assumes the exact number of calls from the code.
-	expectedCalls := 3
-	for i := 0; i < expectedCalls; i++ {
-		t.Run(fmt.Sprintf("%d", i), func(t *testing.T) {
-			g := NewWithT(t)
-
-			var cur int
-			jsonUnmarshal = func(data []byte, v interface{}) error {
-				if cur >= i {
-					return fmt.Errorf("err")
-				}
-				cur++
-				return json.Unmarshal(data, v)
-			}
-
-			defer func() {
-				jsonUnmarshal = json.Unmarshal
-			}()
-
-			_, err := Parse(input)
-			g.Expect(err).NotTo(BeNil())
-		})
-	}
-}
diff --git a/pkg/config/schema/codegen/collections.go b/pkg/config/schema/codegen/collections.go
index e08f200aad..488e66dc2d 100644
--- a/pkg/config/schema/codegen/collections.go
+++ b/pkg/config/schema/codegen/collections.go
@@ -62,7 +62,6 @@
 	{{ .Collection.VariableName }} = collection.Builder {
 		Name: "{{ .Collection.Name }}",
 		VariableName: "{{ .Collection.VariableName }}",
-		Disabled: {{ .Collection.Disabled }},
 		Resource: resource.Builder {
 			Group: "{{ .Resource.Group }}",
 			Kind: "{{ .Resource.Kind }}",
@@ -147,10 +146,6 @@ func WriteGvk(packageName string, m *ast.Metadata) (string, error) {
 		"k8s/gateway_api/v1alpha2/gateways": "KubernetesGateway",
 	}
 	for _, c := range m.Collections {
-		// Filter out pilot ones, as these are duplicated
-		if c.Pilot {
-			continue
-		}
 		r := m.FindResourceForGroupKind(c.Group, c.Kind)
 		if r == nil {
 			return "", fmt.Errorf("failed to find resource (%s/%s) for collection %s", c.Group, c.Kind, c.Name)
diff --git a/pkg/config/schema/codegen/collections_test.go b/pkg/config/schema/codegen/collections_test.go
index 638d49aef9..ada73219f2 100644
--- a/pkg/config/schema/codegen/collections_test.go
+++ b/pkg/config/schema/codegen/collections_test.go
@@ -41,7 +41,6 @@ func TestStaticCollections(t *testing.T) {
 						Description:  "describes a really cool foo thing",
 						Group:        "foo.group",
 						Kind:         "fookind",
-						Disabled:     true,
 					},
 					{
 						Name:         "bar",
@@ -49,7 +48,6 @@ func TestStaticCollections(t *testing.T) {
 						Description:  "describes a really cool bar thing",
 						Group:        "bar.group",
 						Kind:         "barkind",
-						Disabled:     false,
 					},
 				},
 				Resources: []*ast.Resource{
@@ -95,7 +93,6 @@ func TestStaticCollections(t *testing.T) {
 	Bar = collection.Builder {
 		Name: "bar",
 		VariableName: "Bar",
-		Disabled: false,
 		Resource: resource.Builder {
 			Group: "bar.group",
 			Kind: "barkind",
@@ -113,7 +110,6 @@ func TestStaticCollections(t *testing.T) {
 	Foo = collection.Builder {
 		Name: "foo",
 		VariableName: "Foo",
-		Disabled: true,
 		Resource: resource.Builder {
 			Group: "foo.group",
 			Kind: "fookind",
diff --git a/pkg/config/schema/codegen/snapshots.go b/pkg/config/schema/codegen/snapshots.go
deleted file mode 100644
index 5d62988825..0000000000
--- a/pkg/config/schema/codegen/snapshots.go
+++ /dev/null
@@ -1,59 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package codegen
-
-import (
-	"sort"
-	"strings"
-
-	"istio.io/istio/pkg/config/schema/ast"
-)
-
-const staticSnapshotsTemplate = `
-// GENERATED FILE -- DO NOT EDIT
-//
-
-package {{ .PackageName }}
-
-var (
-{{ range .Entries }}
-	{{ commentBlock (wordWrap (printf "%s %s" .VariableName .Description) 70) 1 }}
-	{{ .VariableName }} = "{{ .Name }}"
-{{ end }}
-)
-
-// SnapshotNames returns the snapshot names declared in this package.
-func SnapshotNames() []string {
-	return []string {
-		{{ range .Entries }}{{ .VariableName }},
-		{{ end }}
-	}
-}
-`
-
-// StaticSnapshots generates a Go file for static-declaring Snapshot names.
-func StaticSnapshots(packageName string, m *ast.Metadata) (string, error) {
-	sort.Slice(m.Snapshots, func(i, j int) bool {
-		return strings.Compare(m.Snapshots[i].Name, m.Snapshots[j].Name) < 0
-	})
-
-	context := struct {
-		Entries     []*ast.Snapshot
-		PackageName string
-	}{Entries: m.Snapshots, PackageName: packageName}
-
-	// Calculate the Go packages that needs to be imported for the proto types to be registered.
-	return applyTemplate(staticSnapshotsTemplate, context)
-}
diff --git a/pkg/config/schema/codegen/snapshots_test.go b/pkg/config/schema/codegen/snapshots_test.go
deleted file mode 100644
index 95aa89eaf5..0000000000
--- a/pkg/config/schema/codegen/snapshots_test.go
+++ /dev/null
@@ -1,90 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package codegen
-
-import (
-	"strings"
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	"istio.io/istio/pkg/config/schema/ast"
-)
-
-func TestStaticSnapshots(t *testing.T) {
-	cases := []struct {
-		packageName string
-		snapshots   []*ast.Snapshot
-		err         string
-		output      string
-	}{
-		{
-			packageName: "pkg",
-			snapshots: []*ast.Snapshot{
-				{
-					Name:         "foo",
-					VariableName: "Foo",
-					Description:  "this is a really cool foo snapshot",
-				},
-				{
-					Name:         "bar",
-					VariableName: "Bar",
-					Description:  "this is a really cool bar snapshot",
-				},
-			},
-			output: `
-// GENERATED FILE -- DO NOT EDIT
-//
-
-package pkg
-
-var (
-
-	// Bar this is a really cool bar snapshot
-	Bar = "bar"
-
-	// Foo this is a really cool foo snapshot
-	Foo = "foo"
-
-)
-
-// SnapshotNames returns the snapshot names declared in this package.
-func SnapshotNames() []string {
-	return []string {
-		Bar,
-		Foo,
-		
-	}
-}`,
-		},
-	}
-
-	for _, c := range cases {
-		t.Run("", func(t *testing.T) {
-			g := NewWithT(t)
-
-			s, err := StaticSnapshots(c.packageName, &ast.Metadata{
-				Snapshots: c.snapshots,
-			})
-			if c.err != "" {
-				g.Expect(err).NotTo(BeNil())
-				g.Expect(err.Error()).To(Equal(s))
-			} else {
-				g.Expect(err).To(BeNil())
-				g.Expect(strings.TrimSpace(s)).To(Equal(strings.TrimSpace(c.output)))
-			}
-		})
-	}
-}
diff --git a/pkg/config/schema/codegen/tools/collections.main.go b/pkg/config/schema/codegen/tools/collections.main.go
index 49578da4cd..5a7615d50d 100644
--- a/pkg/config/schema/codegen/tools/collections.main.go
+++ b/pkg/config/schema/codegen/tools/collections.main.go
@@ -22,7 +22,6 @@
 	"os"
 	"strings"
 
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/ast"
 	"istio.io/istio/pkg/config/schema/codegen"
 )
@@ -58,12 +57,6 @@ func main() {
 		os.Exit(-3)
 	}
 
-	// Validate the input.
-	if _, err := schema.Build(m); err != nil {
-		fmt.Printf("failed building metadata: %v", err)
-		os.Exit(-4)
-	}
-
 	var contents string
 
 	if pkg == "gvk" {
diff --git a/pkg/config/schema/codegen/tools/snapshots.main.go b/pkg/config/schema/codegen/tools/snapshots.main.go
deleted file mode 100644
index 7ecc61e1ed..0000000000
--- a/pkg/config/schema/codegen/tools/snapshots.main.go
+++ /dev/null
@@ -1,70 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-//go:build ignore
-// +build ignore
-
-package main
-
-import (
-	"fmt"
-	"os"
-
-	"istio.io/istio/pkg/config/schema"
-	"istio.io/istio/pkg/config/schema/ast"
-	"istio.io/istio/pkg/config/schema/codegen"
-)
-
-// Utility for generating snapshots.gen.go. Called from gen.go
-func main() {
-	if len(os.Args) != 4 {
-		fmt.Printf("Invalid args: %v", os.Args)
-		os.Exit(-1)
-	}
-
-	pkg := os.Args[1]
-	input := os.Args[2]
-	output := os.Args[3]
-
-	// Read the input file
-	b, err := os.ReadFile(input)
-	if err != nil {
-		fmt.Printf("unable to read input file: %v", err)
-		os.Exit(-2)
-	}
-
-	// Parse the file.
-	m, err := ast.Parse(string(b))
-	if err != nil {
-		fmt.Printf("failed parsing input file: %v", err)
-		os.Exit(-3)
-	}
-
-	// Validate the input.
-	if _, err := schema.Build(m); err != nil {
-		fmt.Printf("failed building metadata: %v", err)
-		os.Exit(-4)
-	}
-
-	contents, err := codegen.StaticSnapshots(pkg, m)
-	if err != nil {
-		fmt.Printf("Error applying static init template: %v", err)
-		os.Exit(-5)
-	}
-
-	if err = os.WriteFile(output, []byte(contents), os.ModePerm); err != nil {
-		fmt.Printf("Error writing output file: %v", err)
-		os.Exit(-6)
-	}
-}
diff --git a/pkg/config/schema/collection/names_test.go b/pkg/config/schema/collection/names_test.go
index 09511d1948..89a1f27aec 100644
--- a/pkg/config/schema/collection/names_test.go
+++ b/pkg/config/schema/collection/names_test.go
@@ -19,15 +19,14 @@
 
 	. "github.com/onsi/gomega"
 
-	basicmeta "istio.io/istio/pkg/config/legacy/testing/basicmeta"
-	data "istio.io/istio/pkg/config/legacy/testing/data"
 	"istio.io/istio/pkg/config/schema/collection"
+	"istio.io/istio/pkg/config/schema/collections"
 )
 
 func TestNames_Clone(t *testing.T) {
 	g := NewWithT(t)
 
-	n := collection.Names{basicmeta.K8SCollection1.Name(), basicmeta.Collection2.Name()}
+	n := collection.Names{collections.All.All()[0].Name(), collections.All.All()[1].Name()}
 
 	n2 := n.Clone()
 	g.Expect(n2).To(Equal(n))
@@ -36,8 +35,8 @@ func TestNames_Clone(t *testing.T) {
 func TestNames_Sort(t *testing.T) {
 	g := NewWithT(t)
 
-	n := collection.Names{data.Foo.Name(), data.Baz.Name(), data.Bar.Name()}
-	expected := collection.Names{data.Bar.Name(), data.Baz.Name(), data.Foo.Name()}
+	n := collection.Names{collections.IstioMeshV1Alpha1MeshConfig.Name(), collections.IstioExtensionsV1Alpha1Wasmplugins.Name()}
+	expected := collection.Names{collections.IstioExtensionsV1Alpha1Wasmplugins.Name(), collections.IstioMeshV1Alpha1MeshConfig.Name()}
 
 	n.Sort()
 	g.Expect(n).To(Equal(expected))
diff --git a/pkg/config/schema/collection/schema.go b/pkg/config/schema/collection/schema.go
index ba1871865b..faae08c143 100644
--- a/pkg/config/schema/collection/schema.go
+++ b/pkg/config/schema/collection/schema.go
@@ -33,12 +33,6 @@ type Schema interface {
 	// Resource is the schema for resources contained in this collection.
 	Resource() resource.Schema
 
-	// IsDisabled indicates whether or not this collection is disabled.
-	IsDisabled() bool
-
-	// Disable creates a disabled copy of this Schema.
-	Disable() Schema
-
 	// Equal is a helper function for testing equality between Schema instances. This supports comparison
 	// with the cmp library.
 	Equal(other Schema) bool
@@ -48,7 +42,6 @@ type Schema interface {
 type Builder struct {
 	Name         string
 	VariableName string
-	Disabled     bool
 	Resource     resource.Schema
 }
 
@@ -64,7 +57,6 @@ func (b Builder) Build() (Schema, error) {
 	return &schemaImpl{
 		name:         NewName(b.Name),
 		variableName: b.VariableName,
-		disabled:     b.Disabled,
 		resource:     b.Resource,
 	}, nil
 }
@@ -83,7 +75,6 @@ type schemaImpl struct {
 	resource     resource.Schema
 	name         Name
 	variableName string
-	disabled     bool
 }
 
 // String interface method implementation.
@@ -103,22 +94,7 @@ func (s *schemaImpl) Resource() resource.Schema {
 	return s.resource
 }
 
-func (s *schemaImpl) IsDisabled() bool {
-	return s.disabled
-}
-
-func (s *schemaImpl) Disable() Schema {
-	if s.disabled {
-		return s
-	}
-
-	cpy := *s
-	cpy.disabled = true
-	return &cpy
-}
-
 func (s *schemaImpl) Equal(o Schema) bool {
 	return s.name == o.Name() &&
-		s.disabled == o.IsDisabled() &&
 		s.Resource().Equal(o.Resource())
 }
diff --git a/pkg/config/schema/collection/schemas.go b/pkg/config/schema/collection/schemas.go
index 26519b97c3..1f33f008cd 100644
--- a/pkg/config/schema/collection/schemas.go
+++ b/pkg/config/schema/collection/schemas.go
@@ -236,27 +236,6 @@ func (s Schemas) Kinds() []string {
 	return out
 }
 
-func (s Schemas) WithoutDisabledCollections() Schemas {
-	result := NewSchemasBuilder()
-	for _, i := range s.byAddOrder {
-		if !i.IsDisabled() {
-			_ = result.Add(i)
-		}
-	}
-	return result.Build()
-}
-
-// DisabledCollectionNames returns the names of disabled collections
-func (s Schemas) DisabledCollectionNames() Names {
-	disabledCollections := make(Names, 0)
-	for _, i := range s.byAddOrder {
-		if i.IsDisabled() {
-			disabledCollections = append(disabledCollections, i.Name())
-		}
-	}
-	return disabledCollections
-}
-
 // Validate the schemas. Returns error if there is a problem.
 func (s Schemas) Validate() (err error) {
 	for _, c := range s.byAddOrder {
diff --git a/pkg/config/schema/collections/collections.agent.gen.go b/pkg/config/schema/collections/collections.agent.gen.go
index 648f5f4f0c..3c0b12a5e8 100755
--- a/pkg/config/schema/collections/collections.agent.gen.go
+++ b/pkg/config/schema/collections/collections.agent.gen.go
@@ -28,7 +28,6 @@
 	IstioExtensionsV1Alpha1Wasmplugins = collection.Builder{
 		Name:         "istio/extensions/v1alpha1/wasmplugins",
 		VariableName: "IstioExtensionsV1Alpha1Wasmplugins",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "extensions.istio.io",
 			Kind:    "WasmPlugin",
@@ -47,7 +46,6 @@
 	IstioMeshV1Alpha1MeshConfig = collection.Builder{
 		Name:         "istio/mesh/v1alpha1/MeshConfig",
 		VariableName: "IstioMeshV1Alpha1MeshConfig",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "MeshConfig",
@@ -66,7 +64,6 @@
 	IstioMeshV1Alpha1MeshNetworks = collection.Builder{
 		Name:         "istio/mesh/v1alpha1/MeshNetworks",
 		VariableName: "IstioMeshV1Alpha1MeshNetworks",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "MeshNetworks",
@@ -85,7 +82,6 @@
 	IstioNetworkingV1Alpha3Destinationrules = collection.Builder{
 		Name:         "istio/networking/v1alpha3/destinationrules",
 		VariableName: "IstioNetworkingV1Alpha3Destinationrules",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "DestinationRule",
@@ -104,7 +100,6 @@
 	IstioNetworkingV1Alpha3Envoyfilters = collection.Builder{
 		Name:         "istio/networking/v1alpha3/envoyfilters",
 		VariableName: "IstioNetworkingV1Alpha3Envoyfilters",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "EnvoyFilter",
@@ -123,7 +118,6 @@
 	IstioNetworkingV1Alpha3Gateways = collection.Builder{
 		Name:         "istio/networking/v1alpha3/gateways",
 		VariableName: "IstioNetworkingV1Alpha3Gateways",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "Gateway",
@@ -142,7 +136,6 @@
 	IstioNetworkingV1Alpha3Serviceentries = collection.Builder{
 		Name:         "istio/networking/v1alpha3/serviceentries",
 		VariableName: "IstioNetworkingV1Alpha3Serviceentries",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "ServiceEntry",
@@ -161,7 +154,6 @@
 	IstioNetworkingV1Alpha3Sidecars = collection.Builder{
 		Name:         "istio/networking/v1alpha3/sidecars",
 		VariableName: "IstioNetworkingV1Alpha3Sidecars",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "Sidecar",
@@ -180,7 +172,6 @@
 	IstioNetworkingV1Alpha3Virtualservices = collection.Builder{
 		Name:         "istio/networking/v1alpha3/virtualservices",
 		VariableName: "IstioNetworkingV1Alpha3Virtualservices",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "VirtualService",
@@ -199,7 +190,6 @@
 	IstioNetworkingV1Alpha3Workloadentries = collection.Builder{
 		Name:         "istio/networking/v1alpha3/workloadentries",
 		VariableName: "IstioNetworkingV1Alpha3Workloadentries",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "WorkloadEntry",
@@ -218,7 +208,6 @@
 	IstioNetworkingV1Alpha3Workloadgroups = collection.Builder{
 		Name:         "istio/networking/v1alpha3/workloadgroups",
 		VariableName: "IstioNetworkingV1Alpha3Workloadgroups",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "WorkloadGroup",
@@ -237,7 +226,6 @@
 	IstioNetworkingV1Beta1Proxyconfigs = collection.Builder{
 		Name:         "istio/networking/v1beta1/proxyconfigs",
 		VariableName: "IstioNetworkingV1Beta1Proxyconfigs",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "ProxyConfig",
@@ -256,7 +244,6 @@
 	IstioSecurityV1Beta1Authorizationpolicies = collection.Builder{
 		Name:         "istio/security/v1beta1/authorizationpolicies",
 		VariableName: "IstioSecurityV1Beta1Authorizationpolicies",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "security.istio.io",
 			Kind:    "AuthorizationPolicy",
@@ -275,7 +262,6 @@
 	IstioSecurityV1Beta1Peerauthentications = collection.Builder{
 		Name:         "istio/security/v1beta1/peerauthentications",
 		VariableName: "IstioSecurityV1Beta1Peerauthentications",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "security.istio.io",
 			Kind:    "PeerAuthentication",
@@ -294,7 +280,6 @@
 	IstioSecurityV1Beta1Requestauthentications = collection.Builder{
 		Name:         "istio/security/v1beta1/requestauthentications",
 		VariableName: "IstioSecurityV1Beta1Requestauthentications",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "security.istio.io",
 			Kind:    "RequestAuthentication",
@@ -313,7 +298,6 @@
 	IstioTelemetryV1Alpha1Telemetries = collection.Builder{
 		Name:         "istio/telemetry/v1alpha1/telemetries",
 		VariableName: "IstioTelemetryV1Alpha1Telemetries",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "telemetry.istio.io",
 			Kind:    "Telemetry",
diff --git a/pkg/config/schema/collections/collections.gen.go b/pkg/config/schema/collections/collections.gen.go
index cb0663cb21..e071e11dfd 100755
--- a/pkg/config/schema/collections/collections.gen.go
+++ b/pkg/config/schema/collections/collections.gen.go
@@ -35,7 +35,6 @@
 	IstioExtensionsV1Alpha1Wasmplugins = collection.Builder{
 		Name:         "istio/extensions/v1alpha1/wasmplugins",
 		VariableName: "IstioExtensionsV1Alpha1Wasmplugins",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "extensions.istio.io",
 			Kind:    "WasmPlugin",
@@ -54,7 +53,6 @@
 	IstioMeshV1Alpha1MeshConfig = collection.Builder{
 		Name:         "istio/mesh/v1alpha1/MeshConfig",
 		VariableName: "IstioMeshV1Alpha1MeshConfig",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "MeshConfig",
@@ -73,7 +71,6 @@
 	IstioMeshV1Alpha1MeshNetworks = collection.Builder{
 		Name:         "istio/mesh/v1alpha1/MeshNetworks",
 		VariableName: "IstioMeshV1Alpha1MeshNetworks",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "MeshNetworks",
@@ -92,7 +89,6 @@
 	IstioNetworkingV1Alpha3Destinationrules = collection.Builder{
 		Name:         "istio/networking/v1alpha3/destinationrules",
 		VariableName: "IstioNetworkingV1Alpha3Destinationrules",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "DestinationRule",
@@ -111,7 +107,6 @@
 	IstioNetworkingV1Alpha3Envoyfilters = collection.Builder{
 		Name:         "istio/networking/v1alpha3/envoyfilters",
 		VariableName: "IstioNetworkingV1Alpha3Envoyfilters",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "EnvoyFilter",
@@ -130,7 +125,6 @@
 	IstioNetworkingV1Alpha3Gateways = collection.Builder{
 		Name:         "istio/networking/v1alpha3/gateways",
 		VariableName: "IstioNetworkingV1Alpha3Gateways",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "Gateway",
@@ -149,7 +143,6 @@
 	IstioNetworkingV1Alpha3Serviceentries = collection.Builder{
 		Name:         "istio/networking/v1alpha3/serviceentries",
 		VariableName: "IstioNetworkingV1Alpha3Serviceentries",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "ServiceEntry",
@@ -168,7 +161,6 @@
 	IstioNetworkingV1Alpha3Sidecars = collection.Builder{
 		Name:         "istio/networking/v1alpha3/sidecars",
 		VariableName: "IstioNetworkingV1Alpha3Sidecars",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "Sidecar",
@@ -187,7 +179,6 @@
 	IstioNetworkingV1Alpha3Virtualservices = collection.Builder{
 		Name:         "istio/networking/v1alpha3/virtualservices",
 		VariableName: "IstioNetworkingV1Alpha3Virtualservices",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "VirtualService",
@@ -206,7 +197,6 @@
 	IstioNetworkingV1Alpha3Workloadentries = collection.Builder{
 		Name:         "istio/networking/v1alpha3/workloadentries",
 		VariableName: "IstioNetworkingV1Alpha3Workloadentries",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "WorkloadEntry",
@@ -225,7 +215,6 @@
 	IstioNetworkingV1Alpha3Workloadgroups = collection.Builder{
 		Name:         "istio/networking/v1alpha3/workloadgroups",
 		VariableName: "IstioNetworkingV1Alpha3Workloadgroups",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "WorkloadGroup",
@@ -244,7 +233,6 @@
 	IstioNetworkingV1Beta1Proxyconfigs = collection.Builder{
 		Name:         "istio/networking/v1beta1/proxyconfigs",
 		VariableName: "IstioNetworkingV1Beta1Proxyconfigs",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "networking.istio.io",
 			Kind:    "ProxyConfig",
@@ -263,7 +251,6 @@
 	IstioSecurityV1Beta1Authorizationpolicies = collection.Builder{
 		Name:         "istio/security/v1beta1/authorizationpolicies",
 		VariableName: "IstioSecurityV1Beta1Authorizationpolicies",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "security.istio.io",
 			Kind:    "AuthorizationPolicy",
@@ -282,7 +269,6 @@
 	IstioSecurityV1Beta1Peerauthentications = collection.Builder{
 		Name:         "istio/security/v1beta1/peerauthentications",
 		VariableName: "IstioSecurityV1Beta1Peerauthentications",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "security.istio.io",
 			Kind:    "PeerAuthentication",
@@ -301,7 +287,6 @@
 	IstioSecurityV1Beta1Requestauthentications = collection.Builder{
 		Name:         "istio/security/v1beta1/requestauthentications",
 		VariableName: "IstioSecurityV1Beta1Requestauthentications",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "security.istio.io",
 			Kind:    "RequestAuthentication",
@@ -320,7 +305,6 @@
 	IstioTelemetryV1Alpha1Telemetries = collection.Builder{
 		Name:         "istio/telemetry/v1alpha1/telemetries",
 		VariableName: "IstioTelemetryV1Alpha1Telemetries",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "telemetry.istio.io",
 			Kind:    "Telemetry",
@@ -340,7 +324,6 @@
 	K8SAdmissionregistrationK8SIoV1Mutatingwebhookconfigurations = collection.Builder{
 		Name:         "k8s/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
 		VariableName: "K8SAdmissionregistrationK8SIoV1Mutatingwebhookconfigurations",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "admissionregistration.k8s.io",
 			Kind:          "MutatingWebhookConfiguration",
@@ -359,7 +342,6 @@
 	K8SApiextensionsK8SIoV1Customresourcedefinitions = collection.Builder{
 		Name:         "k8s/apiextensions.k8s.io/v1/customresourcedefinitions",
 		VariableName: "K8SApiextensionsK8SIoV1Customresourcedefinitions",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "apiextensions.k8s.io",
 			Kind:          "CustomResourceDefinition",
@@ -377,7 +359,6 @@
 	K8SAppsV1Deployments = collection.Builder{
 		Name:         "k8s/apps/v1/deployments",
 		VariableName: "K8SAppsV1Deployments",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "apps",
 			Kind:          "Deployment",
@@ -395,7 +376,6 @@
 	K8SCoreV1Configmaps = collection.Builder{
 		Name:         "k8s/core/v1/configmaps",
 		VariableName: "K8SCoreV1Configmaps",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "ConfigMap",
@@ -413,7 +393,6 @@
 	K8SCoreV1Endpoints = collection.Builder{
 		Name:         "k8s/core/v1/endpoints",
 		VariableName: "K8SCoreV1Endpoints",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "Endpoints",
@@ -431,7 +410,6 @@
 	K8SCoreV1Namespaces = collection.Builder{
 		Name:         "k8s/core/v1/namespaces",
 		VariableName: "K8SCoreV1Namespaces",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "Namespace",
@@ -449,7 +427,6 @@
 	K8SCoreV1Nodes = collection.Builder{
 		Name:         "k8s/core/v1/nodes",
 		VariableName: "K8SCoreV1Nodes",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "Node",
@@ -467,7 +444,6 @@
 	K8SCoreV1Pods = collection.Builder{
 		Name:         "k8s/core/v1/pods",
 		VariableName: "K8SCoreV1Pods",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "Pod",
@@ -485,7 +461,6 @@
 	K8SCoreV1Secrets = collection.Builder{
 		Name:         "k8s/core/v1/secrets",
 		VariableName: "K8SCoreV1Secrets",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "Secret",
@@ -503,7 +478,6 @@
 	K8SCoreV1Services = collection.Builder{
 		Name:         "k8s/core/v1/services",
 		VariableName: "K8SCoreV1Services",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "",
 			Kind:          "Service",
@@ -517,31 +491,11 @@
 		}.MustBuild(),
 	}.MustBuild()
 
-	// K8SExtensionsIstioIoV1Alpha1Wasmplugins describes the collection
-	// k8s/extensions.istio.io/v1alpha1/wasmplugins
-	K8SExtensionsIstioIoV1Alpha1Wasmplugins = collection.Builder{
-		Name:         "k8s/extensions.istio.io/v1alpha1/wasmplugins",
-		VariableName: "K8SExtensionsIstioIoV1Alpha1Wasmplugins",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "extensions.istio.io",
-			Kind:    "WasmPlugin",
-			Plural:  "wasmplugins",
-			Version: "v1alpha1",
-			Proto:   "istio.extensions.v1alpha1.WasmPlugin", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapiextensionsv1alpha1.WasmPlugin{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/extensions/v1alpha1", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateWasmPlugin,
-		}.MustBuild(),
-	}.MustBuild()
-
 	// K8SExtensionsV1Beta1Ingresses describes the collection
 	// k8s/extensions/v1beta1/ingresses
 	K8SExtensionsV1Beta1Ingresses = collection.Builder{
 		Name:         "k8s/extensions/v1beta1/ingresses",
 		VariableName: "K8SExtensionsV1Beta1Ingresses",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "extensions",
 			Kind:    "Ingress",
@@ -560,7 +514,6 @@
 	K8SGatewayApiV1Alpha2Gatewayclasses = collection.Builder{
 		Name:         "k8s/gateway_api/v1alpha2/gatewayclasses",
 		VariableName: "K8SGatewayApiV1Alpha2Gatewayclasses",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "gateway.networking.k8s.io",
 			Kind:    "GatewayClass",
@@ -579,7 +532,6 @@
 	K8SGatewayApiV1Alpha2Gateways = collection.Builder{
 		Name:         "k8s/gateway_api/v1alpha2/gateways",
 		VariableName: "K8SGatewayApiV1Alpha2Gateways",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "gateway.networking.k8s.io",
 			Kind:    "Gateway",
@@ -598,7 +550,6 @@
 	K8SGatewayApiV1Alpha2Httproutes = collection.Builder{
 		Name:         "k8s/gateway_api/v1alpha2/httproutes",
 		VariableName: "K8SGatewayApiV1Alpha2Httproutes",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "gateway.networking.k8s.io",
 			Kind:    "HTTPRoute",
@@ -617,7 +568,6 @@
 	K8SGatewayApiV1Alpha2Referencepolicies = collection.Builder{
 		Name:         "k8s/gateway_api/v1alpha2/referencepolicies",
 		VariableName: "K8SGatewayApiV1Alpha2Referencepolicies",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:         "gateway.networking.k8s.io",
 			Kind:          "ReferencePolicy",
@@ -636,7 +586,6 @@
 	K8SGatewayApiV1Alpha2Tcproutes = collection.Builder{
 		Name:         "k8s/gateway_api/v1alpha2/tcproutes",
 		VariableName: "K8SGatewayApiV1Alpha2Tcproutes",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "gateway.networking.k8s.io",
 			Kind:    "TCPRoute",
@@ -655,7 +604,6 @@
 	K8SGatewayApiV1Alpha2Tlsroutes = collection.Builder{
 		Name:         "k8s/gateway_api/v1alpha2/tlsroutes",
 		VariableName: "K8SGatewayApiV1Alpha2Tlsroutes",
-		Disabled:     false,
 		Resource: resource.Builder{
 			Group:   "gateway.networking.k8s.io",
 			Kind:    "TLSRoute",
@@ -669,253 +617,6 @@
 		}.MustBuild(),
 	}.MustBuild()
 
-	// K8SNetworkingIstioIoV1Alpha3Destinationrules describes the collection
-	// k8s/networking.istio.io/v1alpha3/destinationrules
-	K8SNetworkingIstioIoV1Alpha3Destinationrules = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1alpha3/destinationrules",
-		VariableName: "K8SNetworkingIstioIoV1Alpha3Destinationrules",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "DestinationRule",
-			Plural:  "destinationrules",
-			Version: "v1alpha3",
-			Proto:   "istio.networking.v1alpha3.DestinationRule", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1alpha3.DestinationRule{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1alpha3", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateDestinationRule,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SNetworkingIstioIoV1Alpha3Envoyfilters describes the collection
-	// k8s/networking.istio.io/v1alpha3/envoyfilters
-	K8SNetworkingIstioIoV1Alpha3Envoyfilters = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1alpha3/envoyfilters",
-		VariableName: "K8SNetworkingIstioIoV1Alpha3Envoyfilters",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "EnvoyFilter",
-			Plural:  "envoyfilters",
-			Version: "v1alpha3",
-			Proto:   "istio.networking.v1alpha3.EnvoyFilter", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1alpha3.EnvoyFilter{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1alpha3", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateEnvoyFilter,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SNetworkingIstioIoV1Alpha3Gateways describes the collection
-	// k8s/networking.istio.io/v1alpha3/gateways
-	K8SNetworkingIstioIoV1Alpha3Gateways = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1alpha3/gateways",
-		VariableName: "K8SNetworkingIstioIoV1Alpha3Gateways",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "Gateway",
-			Plural:  "gateways",
-			Version: "v1alpha3",
-			Proto:   "istio.networking.v1alpha3.Gateway", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1alpha3.Gateway{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1alpha3", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateGateway,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SNetworkingIstioIoV1Alpha3Serviceentries describes the collection
-	// k8s/networking.istio.io/v1alpha3/serviceentries
-	K8SNetworkingIstioIoV1Alpha3Serviceentries = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1alpha3/serviceentries",
-		VariableName: "K8SNetworkingIstioIoV1Alpha3Serviceentries",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "ServiceEntry",
-			Plural:  "serviceentries",
-			Version: "v1alpha3",
-			Proto:   "istio.networking.v1alpha3.ServiceEntry", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1alpha3.ServiceEntry{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1alpha3", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateServiceEntry,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SNetworkingIstioIoV1Alpha3Sidecars describes the collection
-	// k8s/networking.istio.io/v1alpha3/sidecars
-	K8SNetworkingIstioIoV1Alpha3Sidecars = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1alpha3/sidecars",
-		VariableName: "K8SNetworkingIstioIoV1Alpha3Sidecars",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "Sidecar",
-			Plural:  "sidecars",
-			Version: "v1alpha3",
-			Proto:   "istio.networking.v1alpha3.Sidecar", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1alpha3.Sidecar{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1alpha3", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateSidecar,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SNetworkingIstioIoV1Alpha3Virtualservices describes the collection
-	// k8s/networking.istio.io/v1alpha3/virtualservices
-	K8SNetworkingIstioIoV1Alpha3Virtualservices = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1alpha3/virtualservices",
-		VariableName: "K8SNetworkingIstioIoV1Alpha3Virtualservices",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "VirtualService",
-			Plural:  "virtualservices",
-			Version: "v1alpha3",
-			Proto:   "istio.networking.v1alpha3.VirtualService", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1alpha3.VirtualService{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1alpha3", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateVirtualService,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SNetworkingIstioIoV1Alpha3Workloadentries describes the collection
-	// k8s/networking.istio.io/v1alpha3/workloadentries
-	K8SNetworkingIstioIoV1Alpha3Workloadentries = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1alpha3/workloadentries",
-		VariableName: "K8SNetworkingIstioIoV1Alpha3Workloadentries",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "WorkloadEntry",
-			Plural:  "workloadentries",
-			Version: "v1alpha3",
-			Proto:   "istio.networking.v1alpha3.WorkloadEntry", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1alpha3.WorkloadEntry{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1alpha3", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateWorkloadEntry,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SNetworkingIstioIoV1Alpha3Workloadgroups describes the collection
-	// k8s/networking.istio.io/v1alpha3/workloadgroups
-	K8SNetworkingIstioIoV1Alpha3Workloadgroups = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1alpha3/workloadgroups",
-		VariableName: "K8SNetworkingIstioIoV1Alpha3Workloadgroups",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "WorkloadGroup",
-			Plural:  "workloadgroups",
-			Version: "v1alpha3",
-			Proto:   "istio.networking.v1alpha3.WorkloadGroup", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1alpha3.WorkloadGroup{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1alpha3", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateWorkloadGroup,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SNetworkingIstioIoV1Beta1Proxyconfigs describes the collection
-	// k8s/networking.istio.io/v1beta1/proxyconfigs
-	K8SNetworkingIstioIoV1Beta1Proxyconfigs = collection.Builder{
-		Name:         "k8s/networking.istio.io/v1beta1/proxyconfigs",
-		VariableName: "K8SNetworkingIstioIoV1Beta1Proxyconfigs",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "networking.istio.io",
-			Kind:    "ProxyConfig",
-			Plural:  "proxyconfigs",
-			Version: "v1beta1",
-			Proto:   "istio.networking.v1beta1.ProxyConfig", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapinetworkingv1beta1.ProxyConfig{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/networking/v1beta1", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateProxyConfig,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SSecurityIstioIoV1Beta1Authorizationpolicies describes the collection
-	// k8s/security.istio.io/v1beta1/authorizationpolicies
-	K8SSecurityIstioIoV1Beta1Authorizationpolicies = collection.Builder{
-		Name:         "k8s/security.istio.io/v1beta1/authorizationpolicies",
-		VariableName: "K8SSecurityIstioIoV1Beta1Authorizationpolicies",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "security.istio.io",
-			Kind:    "AuthorizationPolicy",
-			Plural:  "authorizationpolicies",
-			Version: "v1beta1",
-			Proto:   "istio.security.v1beta1.AuthorizationPolicy", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapisecurityv1beta1.AuthorizationPolicy{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/security/v1beta1", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateAuthorizationPolicy,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SSecurityIstioIoV1Beta1Peerauthentications describes the collection
-	// k8s/security.istio.io/v1beta1/peerauthentications
-	K8SSecurityIstioIoV1Beta1Peerauthentications = collection.Builder{
-		Name:         "k8s/security.istio.io/v1beta1/peerauthentications",
-		VariableName: "K8SSecurityIstioIoV1Beta1Peerauthentications",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "security.istio.io",
-			Kind:    "PeerAuthentication",
-			Plural:  "peerauthentications",
-			Version: "v1beta1",
-			Proto:   "istio.security.v1beta1.PeerAuthentication", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapisecurityv1beta1.PeerAuthentication{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/security/v1beta1", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidatePeerAuthentication,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8SSecurityIstioIoV1Beta1Requestauthentications describes the
-	// collection k8s/security.istio.io/v1beta1/requestauthentications
-	K8SSecurityIstioIoV1Beta1Requestauthentications = collection.Builder{
-		Name:         "k8s/security.istio.io/v1beta1/requestauthentications",
-		VariableName: "K8SSecurityIstioIoV1Beta1Requestauthentications",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "security.istio.io",
-			Kind:    "RequestAuthentication",
-			Plural:  "requestauthentications",
-			Version: "v1beta1",
-			Proto:   "istio.security.v1beta1.RequestAuthentication", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapisecurityv1beta1.RequestAuthentication{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/security/v1beta1", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateRequestAuthentication,
-		}.MustBuild(),
-	}.MustBuild()
-
-	// K8STelemetryIstioIoV1Alpha1Telemetries describes the collection
-	// k8s/telemetry.istio.io/v1alpha1/telemetries
-	K8STelemetryIstioIoV1Alpha1Telemetries = collection.Builder{
-		Name:         "k8s/telemetry.istio.io/v1alpha1/telemetries",
-		VariableName: "K8STelemetryIstioIoV1Alpha1Telemetries",
-		Disabled:     false,
-		Resource: resource.Builder{
-			Group:   "telemetry.istio.io",
-			Kind:    "Telemetry",
-			Plural:  "telemetries",
-			Version: "v1alpha1",
-			Proto:   "istio.telemetry.v1alpha1.Telemetry", StatusProto: "istio.meta.v1alpha1.IstioStatus",
-			ReflectType: reflect.TypeOf(&istioioapitelemetryv1alpha1.Telemetry{}).Elem(), StatusType: reflect.TypeOf(&istioioapimetav1alpha1.IstioStatus{}).Elem(),
-			ProtoPackage: "istio.io/api/telemetry/v1alpha1", StatusPackage: "istio.io/api/meta/v1alpha1",
-			ClusterScoped: false,
-			ValidateProto: validation.ValidateTelemetry,
-		}.MustBuild(),
-	}.MustBuild()
-
 	// All contains all collections in the system.
 	All = collection.NewSchemasBuilder().
 		MustAdd(IstioExtensionsV1Alpha1Wasmplugins).
@@ -944,7 +645,6 @@
 		MustAdd(K8SCoreV1Pods).
 		MustAdd(K8SCoreV1Secrets).
 		MustAdd(K8SCoreV1Services).
-		MustAdd(K8SExtensionsIstioIoV1Alpha1Wasmplugins).
 		MustAdd(K8SExtensionsV1Beta1Ingresses).
 		MustAdd(K8SGatewayApiV1Alpha2Gatewayclasses).
 		MustAdd(K8SGatewayApiV1Alpha2Gateways).
@@ -952,19 +652,6 @@
 		MustAdd(K8SGatewayApiV1Alpha2Referencepolicies).
 		MustAdd(K8SGatewayApiV1Alpha2Tcproutes).
 		MustAdd(K8SGatewayApiV1Alpha2Tlsroutes).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Destinationrules).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Envoyfilters).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Gateways).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Serviceentries).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Sidecars).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Virtualservices).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Workloadentries).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Workloadgroups).
-		MustAdd(K8SNetworkingIstioIoV1Beta1Proxyconfigs).
-		MustAdd(K8SSecurityIstioIoV1Beta1Authorizationpolicies).
-		MustAdd(K8SSecurityIstioIoV1Beta1Peerauthentications).
-		MustAdd(K8SSecurityIstioIoV1Beta1Requestauthentications).
-		MustAdd(K8STelemetryIstioIoV1Alpha1Telemetries).
 		Build()
 
 	// Istio contains only Istio collections.
@@ -999,7 +686,6 @@
 		MustAdd(K8SCoreV1Pods).
 		MustAdd(K8SCoreV1Secrets).
 		MustAdd(K8SCoreV1Services).
-		MustAdd(K8SExtensionsIstioIoV1Alpha1Wasmplugins).
 		MustAdd(K8SExtensionsV1Beta1Ingresses).
 		MustAdd(K8SGatewayApiV1Alpha2Gatewayclasses).
 		MustAdd(K8SGatewayApiV1Alpha2Gateways).
@@ -1007,19 +693,6 @@
 		MustAdd(K8SGatewayApiV1Alpha2Referencepolicies).
 		MustAdd(K8SGatewayApiV1Alpha2Tcproutes).
 		MustAdd(K8SGatewayApiV1Alpha2Tlsroutes).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Destinationrules).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Envoyfilters).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Gateways).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Serviceentries).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Sidecars).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Virtualservices).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Workloadentries).
-		MustAdd(K8SNetworkingIstioIoV1Alpha3Workloadgroups).
-		MustAdd(K8SNetworkingIstioIoV1Beta1Proxyconfigs).
-		MustAdd(K8SSecurityIstioIoV1Beta1Authorizationpolicies).
-		MustAdd(K8SSecurityIstioIoV1Beta1Peerauthentications).
-		MustAdd(K8SSecurityIstioIoV1Beta1Requestauthentications).
-		MustAdd(K8STelemetryIstioIoV1Alpha1Telemetries).
 		Build()
 
 	// Pilot contains only collections used by Pilot.
diff --git a/pkg/config/schema/collections_test.go b/pkg/config/schema/collections_test.go
deleted file mode 100644
index 473ad1ed14..0000000000
--- a/pkg/config/schema/collections_test.go
+++ /dev/null
@@ -1,31 +0,0 @@
-/*
- Copyright Istio Authors
-
- Licensed under the Apache License, Version 2.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
-*/
-
-package schema
-
-import (
-	"testing"
-
-	"istio.io/istio/pkg/config/schema/collections"
-)
-
-// this test moved out of collections subdir to avoid circular reference
-func TestCollectionNames(t *testing.T) {
-	c := collections.All.CollectionNames()
-	if len(c) != len(MustGet().AllCollections().CollectionNames()) {
-		t.Fatalf("Unexpected number of collections: %v", len(c))
-	}
-}
diff --git a/pkg/config/schema/generate.go b/pkg/config/schema/generate.go
index 7290a8a55d..b28c159683 100644
--- a/pkg/config/schema/generate.go
+++ b/pkg/config/schema/generate.go
@@ -14,9 +14,6 @@
 
 package schema
 
-// Embed the core metadata file containing the collections as a resource
-//go:generate go-bindata --nocompress --nometadata --pkg schema -o metadata.gen.go metadata.yaml
-
 // Create collection constants
 // We will generate collections twice. Once is the full collection set. The other includes only Istio types, with build tags set for agent
 // This allows the agent to use collections without importing all of Kuberntes libraries
@@ -25,10 +22,5 @@
 // Create gvk helpers
 //go:generate go run $REPO_ROOT/pkg/config/schema/codegen/tools/collections.main.go gvk metadata.yaml "$REPO_ROOT/pkg/config/schema/gvk/resources.gen.go"
 
-// Create snapshot constants
-// nolint: lll
-//go:generate go run $REPO_ROOT/pkg/config/schema/codegen/tools/snapshots.main.go snapshots metadata.yaml "$REPO_ROOT/pkg/config/schema/snapshots/snapshots.gen.go"
-
 //go:generate goimports -w -local istio.io "$REPO_ROOT/pkg/config/schema/collections/collections.gen.go"
 //go:generate goimports -w -local istio.io "$REPO_ROOT/pkg/config/schema/collections/collections.agent.gen.go"
-//go:generate goimports -w -local istio.io "$REPO_ROOT/pkg/config/schema/snapshots/snapshots.gen.go"
diff --git a/pkg/config/schema/get.go b/pkg/config/schema/get.go
deleted file mode 100644
index d39849ec09..0000000000
--- a/pkg/config/schema/get.go
+++ /dev/null
@@ -1,70 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package schema
-
-import (
-	"fmt"
-
-	"istio.io/istio/pkg/config/schema/collection"
-	"istio.io/istio/pkg/config/schema/collections"
-)
-
-// Get returns the contained resources.yaml file, in parsed form.
-func Get() (*Metadata, error) {
-	b, err := Asset("metadata.yaml")
-	if err != nil {
-		return nil, err
-	}
-
-	m, err := ParseAndBuild(string(b))
-	if err != nil {
-		return nil, err
-	}
-
-	return m, nil
-}
-
-// MustGet calls Get and panics if it returns and error.
-func MustGet() *Metadata {
-	s, err := Get()
-	if err != nil {
-		panic(fmt.Sprintf("metadata.MustGet: %v", err))
-	}
-	return s
-}
-
-func NewMustGet() *Metadata {
-	s, err := Get()
-	if err != nil {
-		panic(fmt.Sprintf("metadata.MustGet: %v", err))
-	}
-	return NewMustGetWrapper(s)
-}
-
-func NewMustGetWrapper(s *Metadata) *Metadata {
-	return &Metadata{
-		collections:       collections.All,
-		kubeCollections:   collections.All.Intersect(s.KubeCollections()),
-		snapshots:         s.snapshots,
-		transformSettings: s.transformSettings,
-	}
-}
-
-// BuildMetadata assists with pilot
-func MustBuildMetadata(s collection.Schemas) *Metadata {
-	m := NewMustGet()
-	m.kubeCollections = s
-	return m
-}
diff --git a/pkg/config/schema/metadata.gen.go b/pkg/config/schema/metadata.gen.go
deleted file mode 100644
index 3df375e305..0000000000
--- a/pkg/config/schema/metadata.gen.go
+++ /dev/null
@@ -1,809 +0,0 @@
-// Code generated for package schema by go-bindata DO NOT EDIT. (@generated)
-// sources:
-// metadata.yaml
-package schema
-
-import (
-	"fmt"
-	"io/ioutil"
-	"os"
-	"path/filepath"
-	"strings"
-	"time"
-)
-type asset struct {
-	bytes []byte
-	info  os.FileInfo
-}
-
-type bindataFileInfo struct {
-	name    string
-	size    int64
-	mode    os.FileMode
-	modTime time.Time
-}
-
-// Name return file name
-func (fi bindataFileInfo) Name() string {
-	return fi.name
-}
-
-// Size return file size
-func (fi bindataFileInfo) Size() int64 {
-	return fi.size
-}
-
-// Mode return file mode
-func (fi bindataFileInfo) Mode() os.FileMode {
-	return fi.mode
-}
-
-// Mode return file modify time
-func (fi bindataFileInfo) ModTime() time.Time {
-	return fi.modTime
-}
-
-// IsDir return file whether a directory
-func (fi bindataFileInfo) IsDir() bool {
-	return fi.mode&os.ModeDir != 0
-}
-
-// Sys return file is sys mode
-func (fi bindataFileInfo) Sys() interface{} {
-	return nil
-}
-
-var _metadataYaml = []byte(`# Copyright 2019 Istio Authors
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in conformance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-#
-# This is the main metadata file for Galley processing.
-# ####  KEEP ENTRIES ALPHASORTED! ####
-#
-
-# The total set of collections, both Istio (i.e. MCP) and K8s (API Server/K8s).
-collections:
-  ## Istio collections
-  - name: "istio/extensions/v1alpha1/wasmplugins"
-    kind: "WasmPlugin"
-    group: "extensions.istio.io"
-    pilot: true
-
-  - name: "istio/mesh/v1alpha1/MeshConfig"
-    kind: "MeshConfig"
-    group: ""
-
-  - name: "istio/mesh/v1alpha1/MeshNetworks"
-    kind: "MeshNetworks"
-    group: ""
-
-  - name: "istio/networking/v1alpha3/destinationrules"
-    kind: DestinationRule
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/networking/v1alpha3/envoyfilters"
-    kind: "EnvoyFilter"
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/networking/v1alpha3/gateways"
-    kind: "Gateway"
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/networking/v1alpha3/serviceentries"
-    kind: "ServiceEntry"
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/networking/v1alpha3/workloadentries"
-    kind: "WorkloadEntry"
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/networking/v1alpha3/workloadgroups"
-    kind: "WorkloadGroup"
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/networking/v1alpha3/sidecars"
-    kind: "Sidecar"
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/networking/v1alpha3/virtualservices"
-    kind: "VirtualService"
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/networking/v1beta1/proxyconfigs"
-    kind: "ProxyConfig"
-    group: "networking.istio.io"
-    pilot: true
-
-  - name: "istio/security/v1beta1/authorizationpolicies"
-    kind: AuthorizationPolicy
-    group: "security.istio.io"
-    pilot: true
-
-  - name: "istio/security/v1beta1/requestauthentications"
-    kind: RequestAuthentication
-    group: "security.istio.io"
-    pilot: true
-
-  - name: "istio/security/v1beta1/peerauthentications"
-    kind: PeerAuthentication
-    group: "security.istio.io"
-    pilot: true
-
-  - name: "istio/telemetry/v1alpha1/telemetries"
-    kind: "Telemetry"
-    group: "telemetry.istio.io"
-    pilot: true
-
-  ### K8s collections ###
-
-  # Built-in K8s collections
-  - name: "k8s/apiextensions.k8s.io/v1/customresourcedefinitions"
-    kind: "CustomResourceDefinition"
-    group: "apiextensions.k8s.io"
-
-  - name: "k8s/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
-    kind: "MutatingWebhookConfiguration"
-    group: "admissionregistration.k8s.io"
-
-  - name: "k8s/apps/v1/deployments"
-    kind: "Deployment"
-    group: "apps"
-
-  - name: "k8s/core/v1/endpoints"
-    kind: "Endpoints"
-    group: ""
-
-  - name: "k8s/core/v1/namespaces"
-    kind: "Namespace"
-    group: ""
-
-  - name: "k8s/core/v1/nodes"
-    kind: "Node"
-    group: ""
-
-  - name: "k8s/core/v1/pods"
-    kind: "Pod"
-    group: ""
-
-  - name: "k8s/core/v1/secrets"
-    kind: "Secret"
-    group: ""
-
-  - name: "k8s/core/v1/services"
-    kind: "Service"
-    group: ""
-
-  - name: "k8s/core/v1/configmaps"
-    kind: "ConfigMap"
-    group: ""
-
-  - name: "k8s/extensions/v1beta1/ingresses"
-    kind: "Ingress"
-    group: "extensions"
-
-  - kind: "GatewayClass"
-    name: "k8s/gateway_api/v1alpha2/gatewayclasses"
-    group: "gateway.networking.k8s.io"
-
-  - kind: "Gateway"
-    name: "k8s/gateway_api/v1alpha2/gateways"
-    group: "gateway.networking.k8s.io"
-
-  - kind: "HTTPRoute"
-    name: "k8s/gateway_api/v1alpha2/httproutes"
-    group: "gateway.networking.k8s.io"
-
-  - kind: "TCPRoute"
-    name: "k8s/gateway_api/v1alpha2/tcproutes"
-    group: "gateway.networking.k8s.io"
-
-  - kind: "TLSRoute"
-    name: "k8s/gateway_api/v1alpha2/tlsroutes"
-    group: "gateway.networking.k8s.io"
-
-  - kind: "ReferencePolicy"
-    name: "k8s/gateway_api/v1alpha2/referencepolicies"
-    group: "gateway.networking.k8s.io"
-
-  # Istio CRD collections
-  - name: "k8s/extensions.istio.io/v1alpha1/wasmplugins"
-    kind: WasmPlugin
-    group: "extensions.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/destinationrules"
-    kind: DestinationRule
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/envoyfilters"
-    kind: "EnvoyFilter"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/gateways"
-    kind: "Gateway"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/serviceentries"
-    kind: "ServiceEntry"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/workloadentries"
-    kind: "WorkloadEntry"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/workloadgroups"
-    kind: "WorkloadGroup"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/sidecars"
-    kind: "Sidecar"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1beta1/proxyconfigs"
-    kind: "ProxyConfig"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind: "VirtualService"
-    group: "networking.istio.io"
-
-  - name: "k8s/security.istio.io/v1beta1/authorizationpolicies"
-    kind: AuthorizationPolicy
-    group: "security.istio.io"
-
-  - name: "k8s/security.istio.io/v1beta1/requestauthentications"
-    kind: RequestAuthentication
-    group: "security.istio.io"
-
-  - name: "k8s/security.istio.io/v1beta1/peerauthentications"
-    kind: PeerAuthentication
-    group: "security.istio.io"
-
-  - name: "k8s/telemetry.istio.io/v1alpha1/telemetries"
-    kind: "Telemetry"
-    group: "telemetry.istio.io"
-
-# The snapshots to generate
-snapshots:
-  # Used by Galley to distribute configuration.
-  - name: "default"
-    strategy: debounce
-    collections:
-      - "istio/extensions/v1alpha1/wasmplugins"
-      - "istio/mesh/v1alpha1/MeshConfig"
-      - "istio/networking/v1alpha3/destinationrules"
-      - "istio/networking/v1alpha3/envoyfilters"
-      - "istio/networking/v1alpha3/gateways"
-      - "istio/networking/v1alpha3/serviceentries"
-      - "istio/networking/v1alpha3/workloadentries"
-      - "istio/networking/v1alpha3/workloadgroups"
-      - "istio/networking/v1alpha3/sidecars"
-      - "istio/networking/v1beta1/proxyconfigs"
-      - "istio/networking/v1alpha3/virtualservices"
-      - "istio/security/v1beta1/authorizationpolicies"
-      - "istio/security/v1beta1/requestauthentications"
-      - "istio/security/v1beta1/peerauthentications"
-      - "istio/telemetry/v1alpha1/telemetries"
-      - "k8s/core/v1/namespaces"
-      - "k8s/core/v1/services"
-
-    # Used by istioctl to perform analysis
-  - name: "localAnalysis"
-    strategy: immediate
-    collections:
-      - "istio/mesh/v1alpha1/MeshConfig"
-      - "istio/mesh/v1alpha1/MeshNetworks"
-      - "istio/networking/v1alpha3/envoyfilters"
-      - "istio/networking/v1alpha3/destinationrules"
-      - "istio/networking/v1alpha3/gateways"
-      - "istio/networking/v1alpha3/serviceentries"
-      - "istio/networking/v1alpha3/sidecars"
-      - "istio/networking/v1alpha3/virtualservices"
-      - "istio/security/v1beta1/authorizationpolicies"
-      - "istio/security/v1beta1/requestauthentications"
-      - "k8s/apiextensions.k8s.io/v1/customresourcedefinitions"
-      - "k8s/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
-      - "k8s/apps/v1/deployments"
-      - "k8s/core/v1/namespaces"
-      - "k8s/core/v1/pods"
-      - "k8s/core/v1/secrets"
-      - "k8s/core/v1/services"
-      - "k8s/core/v1/configmaps"
-
-# Configuration for resource types.
-resources:
-  # Kubernetes specific configuration.
-  - kind: "CustomResourceDefinition"
-    plural: "customresourcedefinitions"
-    group: "apiextensions.k8s.io"
-    version: "v1"
-    proto: "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"
-    protoPackage: "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
-
-  - kind: "MutatingWebhookConfiguration"
-    plural: "mutatingwebhookconfigurations"
-    group: "admissionregistration.k8s.io"
-    version: "v1"
-    proto: "k8s.io.api.admissionregistration.v1.MutatingWebhookConfiguration"
-    protoPackage: "k8s.io/api/admissionregistration/v1"
-
-  - kind: "Deployment"
-    plural: "deployments"
-    group: "apps"
-    version: "v1"
-    proto: "k8s.io.api.apps.v1.DeploymentSpec"
-    protoPackage: "k8s.io/api/apps/v1"
-
-  - kind: "Endpoints"
-    plural: "endpoints"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.Endpoints"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - kind: "Namespace"
-    plural: "namespaces"
-    version: "v1"
-    clusterScoped: true
-    proto: "k8s.io.api.core.v1.NamespaceSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - kind: "Node"
-    plural: "nodes"
-    version: "v1"
-    clusterScoped: true
-    proto: "k8s.io.api.core.v1.NodeSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - kind: "Pod"
-    plural: "pods"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.PodSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - kind: "Secret"
-    plural: "secrets"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.Secret"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - kind: "Service"
-    plural: "services"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.ServiceSpec"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - kind: "ConfigMap"
-    plural: "configmaps"
-    version: "v1"
-    proto: "k8s.io.api.core.v1.ConfigMap"
-    protoPackage: "k8s.io/api/core/v1"
-
-  - kind: "Ingress"
-    plural: "ingresses"
-    group: "extensions"
-    version: "v1beta1"
-    proto: "k8s.io.api.extensions.v1beta1.IngressSpec"
-    protoPackage: "k8s.io/api/extensions/v1beta1"
-    statusProto: "k8s.io.gateway_api.api.v1alpha1.IngressStatus"
-    statusProtoPackage: "k8s.io/api/extensions/v1beta1"
-
-  - kind: "GatewayClass"
-    plural: "gatewayclasses"
-    group: "gateway.networking.k8s.io"
-    version: "v1alpha2"
-    clusterScoped: true
-    protoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-    proto: "k8s.io.gateway_api.api.v1alpha1.GatewayClassSpec"
-    statusProto: "k8s.io.gateway_api.api.v1alpha1.GatewayClassStatus"
-    statusProtoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-
-  - kind: "Gateway"
-    plural: "gateways"
-    group: "gateway.networking.k8s.io"
-    version: "v1alpha2"
-    protoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-    proto: "k8s.io.gateway_api.api.v1alpha1.GatewaySpec"
-    validate: "EmptyValidate"
-    statusProto: "k8s.io.gateway_api.api.v1alpha1.GatewayStatus"
-    statusProtoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-
-  - kind: "HTTPRoute"
-    plural: "httproutes"
-    group: "gateway.networking.k8s.io"
-    version: "v1alpha2"
-    protoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-    proto: "k8s.io.gateway_api.api.v1alpha1.HTTPRouteSpec"
-    statusProto: "k8s.io.gateway_api.api.v1alpha1.HTTPRouteStatus"
-    statusProtoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-
-  - kind: "TCPRoute"
-    plural: "tcproutes"
-    group: "gateway.networking.k8s.io"
-    version: "v1alpha2"
-    protoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-    proto: "k8s.io.gateway_api.api.v1alpha1.TCPRouteSpec"
-    statusProto: "k8s.io.gateway_api.api.v1alpha1.TCPRouteStatus"
-    statusProtoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-
-  - kind: "TLSRoute"
-    plural: "tlsroutes"
-    group: "gateway.networking.k8s.io"
-    version: "v1alpha2"
-    protoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-    proto: "k8s.io.gateway_api.api.v1alpha1.TLSRouteSpec"
-    statusProtoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-    statusProto: "k8s.io.gateway_api.api.v1alpha1.TLSRouteStatus"
-
-  - kind: "ReferencePolicy"
-    plural: "referencepolicies"
-    group: "gateway.networking.k8s.io"
-    version: "v1alpha2"
-    protoPackage: "sigs.k8s.io/gateway-api/apis/v1alpha2"
-    proto: "k8s.io.gateway_api.api.v1alpha1.ReferencePolicySpec"
-
-  ## Istio resources
-  - kind: "VirtualService"
-    plural: "virtualservices"
-    group: "networking.istio.io"
-    version: "v1alpha3"
-    proto: "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-    description: "describes v1alpha3 route rules"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "Gateway"
-    plural: "gateways"
-    group: "networking.istio.io"
-    version: "v1alpha3"
-    proto: "istio.networking.v1alpha3.Gateway"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-    description: "describes a gateway (how a proxy is exposed on the network)"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "ServiceEntry"
-    plural: "serviceentries"
-    group: "networking.istio.io"
-    version: "v1alpha3"
-    proto: "istio.networking.v1alpha3.ServiceEntry"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-    description: "describes service entries"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "WorkloadEntry"
-    plural: "workloadentries"
-    group: "networking.istio.io"
-    version: "v1alpha3"
-    proto: "istio.networking.v1alpha3.WorkloadEntry"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-    description: "describes workload entries"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "WorkloadGroup"
-    plural: "workloadgroups"
-    group: "networking.istio.io"
-    version: "v1alpha3"
-    proto: "istio.networking.v1alpha3.WorkloadGroup"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-    description: "describes workload groups"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: DestinationRule
-    plural: "destinationrules"
-    group: "networking.istio.io"
-    version: "v1alpha3"
-    proto: "istio.networking.v1alpha3.DestinationRule"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-    description: "describes destination rules"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "EnvoyFilter"
-    plural: "envoyfilters"
-    group: "networking.istio.io"
-    version: "v1alpha3"
-    proto: "istio.networking.v1alpha3.EnvoyFilter"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-    description: "describes additional envoy filters to be inserted by Pilot"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "Sidecar"
-    plural: "sidecars"
-    group: "networking.istio.io"
-    version: "v1alpha3"
-    proto: "istio.networking.v1alpha3.Sidecar"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-    description: "describes the listeners associated with sidecars in a namespace"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "ProxyConfig"
-    plural: "proxyconfigs"
-    group: "networking.istio.io"
-    version: "v1beta1"
-    proto: "istio.networking.v1beta1.ProxyConfig"
-    protoPackage: "istio.io/api/networking/v1beta1"
-    description: "defines configuration for individual workloads"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "MeshConfig"
-    plural: "meshconfigs"
-    group: ""
-    version: "v1alpha1"
-    proto: "istio.mesh.v1alpha1.MeshConfig"
-    protoPackage: "istio.io/api/mesh/v1alpha1"
-    description: "describes the configuration for the Istio mesh."
-
-  - kind: "MeshNetworks"
-    plural: "meshnetworks"
-    group: ""
-    version: "v1alpha1"
-    proto: "istio.mesh.v1alpha1.MeshNetworks"
-    protoPackage: "istio.io/api/mesh/v1alpha1"
-    description: "describes the networks for the Istio mesh."
-
-  - kind: AuthorizationPolicy
-    plural: "authorizationpolicies"
-    group: "security.istio.io"
-    version: "v1beta1"
-    proto: "istio.security.v1beta1.AuthorizationPolicy"
-    protoPackage: "istio.io/api/security/v1beta1"
-    description: "describes the authorization policy."
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: RequestAuthentication
-    plural: "requestauthentications"
-    group: "security.istio.io"
-    version: "v1beta1"
-    proto: "istio.security.v1beta1.RequestAuthentication"
-    protoPackage: "istio.io/api/security/v1beta1"
-    description: "describes the request authentication."
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: PeerAuthentication
-    plural: "peerauthentications"
-    group: "security.istio.io"
-    version: "v1beta1"
-    proto: "istio.security.v1beta1.PeerAuthentication"
-    protoPackage: "istio.io/api/security/v1beta1"
-    validate: "ValidatePeerAuthentication"
-    description: "describes the peer authentication."
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "Telemetry"
-    plural: "telemetries"
-    group: "telemetry.istio.io"
-    version: "v1alpha1"
-    proto: "istio.telemetry.v1alpha1.Telemetry"
-    protoPackage: "istio.io/api/telemetry/v1alpha1"
-    description: "describes telemetry configuration for workloads"
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-  - kind: "WasmPlugin"
-    plural: "wasmplugins"
-    group: "extensions.istio.io"
-    version: "v1alpha1"
-    proto: "istio.extensions.v1alpha1.WasmPlugin"
-    protoPackage: "istio.io/api/extensions/v1alpha1"
-    description: ""
-    statusProto: "istio.meta.v1alpha1.IstioStatus"
-    statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-# Transform specific configurations
-transforms:
-  - type: direct
-    mapping:
-      "k8s/apiextensions.k8s.io/v1/customresourcedefinitions": "k8s/apiextensions.k8s.io/v1/customresourcedefinitions"
-      "k8s/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations": "k8s/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
-      "k8s/extensions.istio.io/v1alpha1/wasmplugins": "istio/extensions/v1alpha1/wasmplugins"
-      "k8s/networking.istio.io/v1alpha3/destinationrules": "istio/networking/v1alpha3/destinationrules"
-      "k8s/networking.istio.io/v1alpha3/envoyfilters": "istio/networking/v1alpha3/envoyfilters"
-      "k8s/networking.istio.io/v1alpha3/gateways": "istio/networking/v1alpha3/gateways"
-      "k8s/networking.istio.io/v1alpha3/serviceentries": "istio/networking/v1alpha3/serviceentries"
-      "k8s/networking.istio.io/v1alpha3/workloadentries": "istio/networking/v1alpha3/workloadentries"
-      "k8s/networking.istio.io/v1alpha3/workloadgroups": "istio/networking/v1alpha3/workloadgroups"
-      "k8s/networking.istio.io/v1alpha3/sidecars": "istio/networking/v1alpha3/sidecars"
-      "k8s/networking.istio.io/v1beta1/proxyconfigs": "istio/networking/v1beta1/proxyconfigs"
-      "k8s/networking.istio.io/v1alpha3/virtualservices": "istio/networking/v1alpha3/virtualservices"
-      "k8s/security.istio.io/v1beta1/authorizationpolicies": "istio/security/v1beta1/authorizationpolicies"
-      "k8s/security.istio.io/v1beta1/requestauthentications": "istio/security/v1beta1/requestauthentications"
-      "k8s/security.istio.io/v1beta1/peerauthentications": "istio/security/v1beta1/peerauthentications"
-      "k8s/telemetry.istio.io/v1alpha1/telemetries": "istio/telemetry/v1alpha1/telemetries"
-      "k8s/apps/v1/deployments": "k8s/apps/v1/deployments"
-      "k8s/core/v1/namespaces": "k8s/core/v1/namespaces"
-      "k8s/core/v1/pods": "k8s/core/v1/pods"
-      "k8s/core/v1/secrets": "k8s/core/v1/secrets"
-      "k8s/core/v1/services": "k8s/core/v1/services"
-      "k8s/core/v1/configmaps": "k8s/core/v1/configmaps"
-      "istio/mesh/v1alpha1/MeshConfig": "istio/mesh/v1alpha1/MeshConfig"
-      "istio/mesh/v1alpha1/MeshNetworks": "istio/mesh/v1alpha1/MeshNetworks"
-`)
-
-func metadataYamlBytes() ([]byte, error) {
-	return _metadataYaml, nil
-}
-
-func metadataYaml() (*asset, error) {
-	bytes, err := metadataYamlBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "metadata.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
-	a := &asset{bytes: bytes, info: info}
-	return a, nil
-}
-
-// Asset loads and returns the asset for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func Asset(name string) ([]byte, error) {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[cannonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
-		}
-		return a.bytes, nil
-	}
-	return nil, fmt.Errorf("Asset %s not found", name)
-}
-
-// MustAsset is like Asset but panics when Asset would return an error.
-// It simplifies safe initialization of global variables.
-func MustAsset(name string) []byte {
-	a, err := Asset(name)
-	if err != nil {
-		panic("asset: Asset(" + name + "): " + err.Error())
-	}
-
-	return a
-}
-
-// AssetInfo loads and returns the asset info for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func AssetInfo(name string) (os.FileInfo, error) {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[cannonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
-		}
-		return a.info, nil
-	}
-	return nil, fmt.Errorf("AssetInfo %s not found", name)
-}
-
-// AssetNames returns the names of the assets.
-func AssetNames() []string {
-	names := make([]string, 0, len(_bindata))
-	for name := range _bindata {
-		names = append(names, name)
-	}
-	return names
-}
-
-// _bindata is a table, holding each asset generator, mapped to its name.
-var _bindata = map[string]func() (*asset, error){
-	"metadata.yaml": metadataYaml,
-}
-
-// AssetDir returns the file names below a certain
-// directory embedded in the file by go-bindata.
-// For example if you run go-bindata on data/... and data contains the
-// following hierarchy:
-//     data/
-//       foo.txt
-//       img/
-//         a.png
-//         b.png
-// then AssetDir("data") would return []string{"foo.txt", "img"}
-// AssetDir("data/img") would return []string{"a.png", "b.png"}
-// AssetDir("foo.txt") and AssetDir("notexist") would return an error
-// AssetDir("") will return []string{"data"}.
-func AssetDir(name string) ([]string, error) {
-	node := _bintree
-	if len(name) != 0 {
-		cannonicalName := strings.Replace(name, "\\", "/", -1)
-		pathList := strings.Split(cannonicalName, "/")
-		for _, p := range pathList {
-			node = node.Children[p]
-			if node == nil {
-				return nil, fmt.Errorf("Asset %s not found", name)
-			}
-		}
-	}
-	if node.Func != nil {
-		return nil, fmt.Errorf("Asset %s not found", name)
-	}
-	rv := make([]string, 0, len(node.Children))
-	for childName := range node.Children {
-		rv = append(rv, childName)
-	}
-	return rv, nil
-}
-
-type bintree struct {
-	Func     func() (*asset, error)
-	Children map[string]*bintree
-}
-
-var _bintree = &bintree{nil, map[string]*bintree{
-	"metadata.yaml": &bintree{metadataYaml, map[string]*bintree{}},
-}}
-
-// RestoreAsset restores an asset under the given directory
-func RestoreAsset(dir, name string) error {
-	data, err := Asset(name)
-	if err != nil {
-		return err
-	}
-	info, err := AssetInfo(name)
-	if err != nil {
-		return err
-	}
-	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
-	if err != nil {
-		return err
-	}
-	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
-	if err != nil {
-		return err
-	}
-	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
-	if err != nil {
-		return err
-	}
-	return nil
-}
-
-// RestoreAssets restores an asset under the given directory recursively
-func RestoreAssets(dir, name string) error {
-	children, err := AssetDir(name)
-	// File
-	if err != nil {
-		return RestoreAsset(dir, name)
-	}
-	// Dir
-	for _, child := range children {
-		err = RestoreAssets(dir, filepath.Join(name, child))
-		if err != nil {
-			return err
-		}
-	}
-	return nil
-}
-
-func _filePath(dir, name string) string {
-	cannonicalName := strings.Replace(name, "\\", "/", -1)
-	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
-}
diff --git a/pkg/config/schema/metadata.yaml b/pkg/config/schema/metadata.yaml
index e1d1a2b71b..309c091548 100644
--- a/pkg/config/schema/metadata.yaml
+++ b/pkg/config/schema/metadata.yaml
@@ -169,110 +169,6 @@ collections:
     name: "k8s/gateway_api/v1alpha2/referencepolicies"
     group: "gateway.networking.k8s.io"
 
-  # Istio CRD collections
-  - name: "k8s/extensions.istio.io/v1alpha1/wasmplugins"
-    kind: WasmPlugin
-    group: "extensions.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/destinationrules"
-    kind: DestinationRule
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/envoyfilters"
-    kind: "EnvoyFilter"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/gateways"
-    kind: "Gateway"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/serviceentries"
-    kind: "ServiceEntry"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/workloadentries"
-    kind: "WorkloadEntry"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/workloadgroups"
-    kind: "WorkloadGroup"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/sidecars"
-    kind: "Sidecar"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1beta1/proxyconfigs"
-    kind: "ProxyConfig"
-    group: "networking.istio.io"
-
-  - name: "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind: "VirtualService"
-    group: "networking.istio.io"
-
-  - name: "k8s/security.istio.io/v1beta1/authorizationpolicies"
-    kind: AuthorizationPolicy
-    group: "security.istio.io"
-
-  - name: "k8s/security.istio.io/v1beta1/requestauthentications"
-    kind: RequestAuthentication
-    group: "security.istio.io"
-
-  - name: "k8s/security.istio.io/v1beta1/peerauthentications"
-    kind: PeerAuthentication
-    group: "security.istio.io"
-
-  - name: "k8s/telemetry.istio.io/v1alpha1/telemetries"
-    kind: "Telemetry"
-    group: "telemetry.istio.io"
-
-# The snapshots to generate
-snapshots:
-  # Used by Galley to distribute configuration.
-  - name: "default"
-    strategy: debounce
-    collections:
-      - "istio/extensions/v1alpha1/wasmplugins"
-      - "istio/mesh/v1alpha1/MeshConfig"
-      - "istio/networking/v1alpha3/destinationrules"
-      - "istio/networking/v1alpha3/envoyfilters"
-      - "istio/networking/v1alpha3/gateways"
-      - "istio/networking/v1alpha3/serviceentries"
-      - "istio/networking/v1alpha3/workloadentries"
-      - "istio/networking/v1alpha3/workloadgroups"
-      - "istio/networking/v1alpha3/sidecars"
-      - "istio/networking/v1beta1/proxyconfigs"
-      - "istio/networking/v1alpha3/virtualservices"
-      - "istio/security/v1beta1/authorizationpolicies"
-      - "istio/security/v1beta1/requestauthentications"
-      - "istio/security/v1beta1/peerauthentications"
-      - "istio/telemetry/v1alpha1/telemetries"
-      - "k8s/core/v1/namespaces"
-      - "k8s/core/v1/services"
-
-    # Used by istioctl to perform analysis
-  - name: "localAnalysis"
-    strategy: immediate
-    collections:
-      - "istio/mesh/v1alpha1/MeshConfig"
-      - "istio/mesh/v1alpha1/MeshNetworks"
-      - "istio/networking/v1alpha3/envoyfilters"
-      - "istio/networking/v1alpha3/destinationrules"
-      - "istio/networking/v1alpha3/gateways"
-      - "istio/networking/v1alpha3/serviceentries"
-      - "istio/networking/v1alpha3/sidecars"
-      - "istio/networking/v1alpha3/virtualservices"
-      - "istio/security/v1beta1/authorizationpolicies"
-      - "istio/security/v1beta1/requestauthentications"
-      - "k8s/apiextensions.k8s.io/v1/customresourcedefinitions"
-      - "k8s/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
-      - "k8s/apps/v1/deployments"
-      - "k8s/core/v1/namespaces"
-      - "k8s/core/v1/pods"
-      - "k8s/core/v1/secrets"
-      - "k8s/core/v1/services"
-      - "k8s/core/v1/configmaps"
-
 # Configuration for resource types.
 resources:
   # Kubernetes specific configuration.
@@ -561,32 +457,3 @@ resources:
     description: ""
     statusProto: "istio.meta.v1alpha1.IstioStatus"
     statusProtoPackage: "istio.io/api/meta/v1alpha1"
-
-# Transform specific configurations
-transforms:
-  - type: direct
-    mapping:
-      "k8s/apiextensions.k8s.io/v1/customresourcedefinitions": "k8s/apiextensions.k8s.io/v1/customresourcedefinitions"
-      "k8s/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations": "k8s/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
-      "k8s/extensions.istio.io/v1alpha1/wasmplugins": "istio/extensions/v1alpha1/wasmplugins"
-      "k8s/networking.istio.io/v1alpha3/destinationrules": "istio/networking/v1alpha3/destinationrules"
-      "k8s/networking.istio.io/v1alpha3/envoyfilters": "istio/networking/v1alpha3/envoyfilters"
-      "k8s/networking.istio.io/v1alpha3/gateways": "istio/networking/v1alpha3/gateways"
-      "k8s/networking.istio.io/v1alpha3/serviceentries": "istio/networking/v1alpha3/serviceentries"
-      "k8s/networking.istio.io/v1alpha3/workloadentries": "istio/networking/v1alpha3/workloadentries"
-      "k8s/networking.istio.io/v1alpha3/workloadgroups": "istio/networking/v1alpha3/workloadgroups"
-      "k8s/networking.istio.io/v1alpha3/sidecars": "istio/networking/v1alpha3/sidecars"
-      "k8s/networking.istio.io/v1beta1/proxyconfigs": "istio/networking/v1beta1/proxyconfigs"
-      "k8s/networking.istio.io/v1alpha3/virtualservices": "istio/networking/v1alpha3/virtualservices"
-      "k8s/security.istio.io/v1beta1/authorizationpolicies": "istio/security/v1beta1/authorizationpolicies"
-      "k8s/security.istio.io/v1beta1/requestauthentications": "istio/security/v1beta1/requestauthentications"
-      "k8s/security.istio.io/v1beta1/peerauthentications": "istio/security/v1beta1/peerauthentications"
-      "k8s/telemetry.istio.io/v1alpha1/telemetries": "istio/telemetry/v1alpha1/telemetries"
-      "k8s/apps/v1/deployments": "k8s/apps/v1/deployments"
-      "k8s/core/v1/namespaces": "k8s/core/v1/namespaces"
-      "k8s/core/v1/pods": "k8s/core/v1/pods"
-      "k8s/core/v1/secrets": "k8s/core/v1/secrets"
-      "k8s/core/v1/services": "k8s/core/v1/services"
-      "k8s/core/v1/configmaps": "k8s/core/v1/configmaps"
-      "istio/mesh/v1alpha1/MeshConfig": "istio/mesh/v1alpha1/MeshConfig"
-      "istio/mesh/v1alpha1/MeshNetworks": "istio/mesh/v1alpha1/MeshNetworks"
diff --git a/pkg/config/schema/schema.go b/pkg/config/schema/schema.go
deleted file mode 100644
index b4641cb5dc..0000000000
--- a/pkg/config/schema/schema.go
+++ /dev/null
@@ -1,297 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package schema
-
-import (
-	"fmt"
-	"sort"
-	"strings"
-
-	"github.com/google/go-cmp/cmp"
-
-	"istio.io/istio/pkg/config/schema/ast"
-	"istio.io/istio/pkg/config/schema/collection"
-	"istio.io/istio/pkg/config/schema/resource"
-	"istio.io/istio/pkg/config/validation"
-	"istio.io/istio/pkg/util/strcase"
-)
-
-const (
-	kubeCollectionPrefix = "k8s/"
-)
-
-// Metadata is the top-level container.
-type Metadata struct {
-	collections       collection.Schemas
-	kubeCollections   collection.Schemas
-	snapshots         map[string]*Snapshot
-	transformSettings []TransformSettings
-}
-
-// AllCollections is all known collections
-func (m *Metadata) AllCollections() collection.Schemas { return m.collections }
-
-// KubeCollections is collections for Kubernetes.
-func (m *Metadata) KubeCollections() collection.Schemas { return m.kubeCollections }
-
-// AllSnapshots returns all known snapshots
-func (m *Metadata) AllSnapshots() []*Snapshot {
-	result := make([]*Snapshot, 0, len(m.snapshots))
-	for _, s := range m.snapshots {
-		result = append(result, s)
-	}
-	return result
-}
-
-// TransformSettings is all known transformSettings
-func (m *Metadata) TransformSettings() []TransformSettings {
-	result := make([]TransformSettings, len(m.transformSettings))
-	copy(result, m.transformSettings)
-	return result
-}
-
-// DirectTransformSettings is a temporary convenience function for getting the Direct TransformSettings config. As the
-// infrastructure is generified, then this method should disappear.
-func (m *Metadata) DirectTransformSettings() *DirectTransformSettings {
-	for _, s := range m.transformSettings {
-		if ks, ok := s.(*DirectTransformSettings); ok {
-			return ks
-		}
-	}
-
-	panic("Metadata.DirectTransformSettings: DirectTransformSettings not found")
-}
-
-// AllCollectionsInSnapshots returns an aggregate list of names of collections that will appear in the specified snapshots.
-func (m *Metadata) AllCollectionsInSnapshots(snapshotNames []string) []string {
-	names := make(map[collection.Name]struct{})
-
-	for _, n := range snapshotNames {
-		s, ok := m.snapshots[n]
-		if !ok {
-			panic(fmt.Sprintf("Invalid snapshot name provided: %q", n))
-		}
-		for _, c := range s.Collections {
-			names[c] = struct{}{}
-		}
-	}
-
-	result := make([]string, 0, len(names))
-	for name := range names {
-		result = append(result, name.String())
-	}
-
-	sort.SliceStable(result, func(i, j int) bool {
-		return strings.Compare(result[i], result[j]) < 0
-	})
-
-	return result
-}
-
-func (m *Metadata) Equal(o *Metadata) bool {
-	return cmp.Equal(m.collections, o.collections) &&
-		cmp.Equal(m.kubeCollections, o.kubeCollections) &&
-		cmp.Equal(m.snapshots, o.snapshots) &&
-		cmp.Equal(m.transformSettings, o.transformSettings)
-}
-
-// Snapshot metadata. Describes the snapshots that should be produced.
-type Snapshot struct {
-	Name        string
-	Collections []collection.Name
-	Strategy    string
-}
-
-// TransformSettings is configuration that is supplied to a particular transform.
-type TransformSettings interface {
-	Type() string
-}
-
-// DirectTransformSettings configuration
-type DirectTransformSettings struct {
-	mapping map[collection.Name]collection.Name
-}
-
-var _ TransformSettings = &DirectTransformSettings{}
-
-// Type implements TransformSettings
-func (d *DirectTransformSettings) Type() string {
-	return ast.Direct
-}
-
-// Mapping from source to destination
-func (d *DirectTransformSettings) Mapping() map[collection.Name]collection.Name {
-	m := make(map[collection.Name]collection.Name)
-	for k, v := range d.mapping {
-		m[k] = v
-	}
-
-	return m
-}
-
-func (d *DirectTransformSettings) Equal(o *DirectTransformSettings) bool {
-	return cmp.Equal(d.mapping, o.mapping)
-}
-
-// ParseAndBuild parses the given metadata file and returns the strongly typed schema.
-func ParseAndBuild(yamlText string) (*Metadata, error) {
-	mast, err := ast.Parse(yamlText)
-	if err != nil {
-		return nil, err
-	}
-
-	return Build(mast)
-}
-
-// Build strongly-typed Metadata from parsed AST.
-func Build(astm *ast.Metadata) (*Metadata, error) {
-	resourceKey := func(group, kind string) string {
-		return group + "/" + kind
-	}
-
-	resources := make(map[string]resource.Schema)
-	for i, ar := range astm.Resources {
-		if ar.Kind == "" {
-			return nil, fmt.Errorf("resource %d missing type", i)
-		}
-		if ar.Plural == "" {
-			return nil, fmt.Errorf("resource %d missing plural", i)
-		}
-		if ar.Version == "" {
-			return nil, fmt.Errorf("resource %d missing version", i)
-		}
-		if ar.Proto == "" {
-			return nil, fmt.Errorf("resource %d missing proto", i)
-		}
-		if ar.ProtoPackage == "" {
-			return nil, fmt.Errorf("resource %d missing protoPackage", i)
-		}
-
-		if ar.Validate == "" {
-			validateFn := "Validate" + strcase.CamelCase(ar.Kind)
-			if !validation.IsValidateFunc(validateFn) {
-				validateFn = "EmptyValidate"
-			}
-			ar.Validate = validateFn
-		}
-
-		validateFn := validation.GetValidateFunc(ar.Validate)
-		if validateFn == nil {
-			return nil, fmt.Errorf("failed locating proto validation function %s", ar.Validate)
-		}
-
-		r := resource.Builder{
-			ClusterScoped: ar.ClusterScoped,
-			Kind:          ar.Kind,
-			Plural:        ar.Plural,
-			Group:         ar.Group,
-			Version:       ar.Version,
-			Proto:         ar.Proto,
-			ProtoPackage:  ar.ProtoPackage,
-			ValidateProto: validateFn,
-		}.BuildNoValidate()
-
-		key := resourceKey(ar.Group, ar.Kind)
-		if _, ok := resources[key]; ok {
-			return nil, fmt.Errorf("found duplicate resource for resource (%s)", key)
-		}
-		resources[key] = r
-	}
-
-	cBuilder := collection.NewSchemasBuilder()
-	kubeBuilder := collection.NewSchemasBuilder()
-	for _, c := range astm.Collections {
-		key := resourceKey(c.Group, c.Kind)
-		r, found := resources[key]
-		if !found {
-			return nil, fmt.Errorf("failed locating resource (%s) for collection %s", key, c.Name)
-		}
-
-		s, err := collection.Builder{
-			Name:     c.Name,
-			Disabled: c.Disabled,
-			Resource: r,
-		}.Build()
-		if err != nil {
-			return nil, err
-		}
-
-		if err = cBuilder.Add(s); err != nil {
-			return nil, err
-		}
-
-		if isKubeCollection(s.Name()) {
-			if err = kubeBuilder.Add(s); err != nil {
-				return nil, err
-			}
-		}
-	}
-	collections := cBuilder.Build()
-	kubeCollections := kubeBuilder.Build()
-
-	snapshots := make(map[string]*Snapshot)
-	for _, s := range astm.Snapshots {
-		sn := &Snapshot{
-			Name:     s.Name,
-			Strategy: s.Strategy,
-		}
-
-		for _, c := range s.Collections {
-			col, found := collections.Find(c)
-			if !found {
-				return nil, fmt.Errorf("collection not found: %v", c)
-			}
-			sn.Collections = append(sn.Collections, col.Name())
-		}
-		snapshots[sn.Name] = sn
-	}
-
-	var transforms []TransformSettings
-	for _, t := range astm.TransformSettings {
-		switch v := t.(type) {
-		case *ast.DirectTransformSettings:
-			mapping := make(map[collection.Name]collection.Name)
-			for k, val := range v.Mapping {
-				from, ok := collections.Find(k)
-				if !ok {
-					return nil, fmt.Errorf("collection not found: %v", k)
-				}
-				to, ok := collections.Find(val)
-				if !ok {
-					return nil, fmt.Errorf("collection not found: %v", v)
-				}
-				mapping[from.Name()] = to.Name()
-			}
-			tr := &DirectTransformSettings{
-				mapping: mapping,
-			}
-			transforms = append(transforms, tr)
-
-		default:
-			return nil, fmt.Errorf("unrecognized transform type: %T", t)
-		}
-	}
-
-	return &Metadata{
-		collections:       collections,
-		kubeCollections:   kubeCollections,
-		snapshots:         snapshots,
-		transformSettings: transforms,
-	}, nil
-}
-
-func isKubeCollection(n collection.Name) bool {
-	return strings.HasPrefix(n.String(), kubeCollectionPrefix)
-}
diff --git a/pkg/config/schema/schema_test.go b/pkg/config/schema/schema_test.go
deleted file mode 100644
index 2f4b2a89f6..0000000000
--- a/pkg/config/schema/schema_test.go
+++ /dev/null
@@ -1,390 +0,0 @@
-// Copyright Istio Authors
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package schema
-
-import (
-	"testing"
-
-	. "github.com/onsi/gomega"
-
-	fixtures "istio.io/istio/pkg/config/legacy/testing/fixtures"
-	"istio.io/istio/pkg/config/schema/ast"
-	"istio.io/istio/pkg/config/schema/collection"
-	"istio.io/istio/pkg/config/schema/collections"
-)
-
-var virtualServiceResource = collections.IstioNetworkingV1Alpha3Virtualservices.Resource()
-
-func TestSchema_ParseAndBuild(t *testing.T) {
-	cases := []struct {
-		Input    string
-		Expected *Metadata
-	}{
-		{
-			Input: ``,
-			Expected: &Metadata{
-				collections:     collection.NewSchemasBuilder().Build(),
-				kubeCollections: collection.NewSchemasBuilder().Build(),
-				snapshots:       map[string]*Snapshot{},
-			},
-		},
-		{
-			Input: `
-collections:
-  - name:         "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-
-  - name:         "istio/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-
-snapshots:
-  - name: "default"
-    strategy: debounce
-    collections:
-      - "istio/networking.istio.io/v1alpha3/virtualservices"
-
-resources:
-  - kind:         "VirtualService"
-    plural:       "virtualservices"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-  
-transforms:
-  - type: direct
-    mapping:
-      "k8s/networking.istio.io/v1alpha3/virtualservices": "istio/networking.istio.io/v1alpha3/virtualservices"
-`,
-			Expected: &Metadata{
-				collections: func() collection.Schemas {
-					b := collection.NewSchemasBuilder()
-					b.MustAdd(
-						collection.Builder{
-							Name:     "k8s/networking.istio.io/v1alpha3/virtualservices",
-							Resource: virtualServiceResource,
-						}.MustBuild(),
-					)
-					b.MustAdd(
-						collection.Builder{
-							Name:     "istio/networking.istio.io/v1alpha3/virtualservices",
-							Resource: virtualServiceResource,
-						}.MustBuild(),
-					)
-					return b.Build()
-				}(),
-				kubeCollections: func() collection.Schemas {
-					b := collection.NewSchemasBuilder()
-					b.MustAdd(
-						collection.Builder{
-							Name:     "k8s/networking.istio.io/v1alpha3/virtualservices",
-							Resource: virtualServiceResource,
-						}.MustBuild(),
-					)
-					return b.Build()
-				}(),
-				snapshots: map[string]*Snapshot{
-					"default": {
-						Name:     "default",
-						Strategy: "debounce",
-						Collections: []collection.Name{
-							collection.NewName("istio/networking.istio.io/v1alpha3/virtualservices"),
-						},
-					},
-				},
-				transformSettings: []TransformSettings{
-					&DirectTransformSettings{
-						mapping: map[collection.Name]collection.Name{
-							collection.NewName("k8s/networking.istio.io/v1alpha3/virtualservices"): collection.NewName("istio/networking.istio.io/v1alpha3/virtualservices"),
-						},
-					},
-				},
-			},
-		},
-	}
-
-	for _, c := range cases {
-		t.Run("", func(t *testing.T) {
-			g := NewWithT(t)
-
-			actual, err := ParseAndBuild(c.Input)
-			g.Expect(err).To(BeNil())
-
-			fixtures.ExpectEqual(t, actual, c.Expected)
-		})
-	}
-}
-
-func TestSchema_ParseAndBuild_Error(t *testing.T) {
-	cases := []struct {
-		name     string
-		input    string
-		expected string
-	}{
-		{
-			name:     "invalid yaml",
-			expected: "error converting YAML to JSON",
-			input: `
-	$$$
-`,
-		},
-		{
-			name:     "invalid collection name",
-			expected: "invalid collection name",
-			input: `
-collections:
-  - name:  "$$$"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-resources:
-  - kind:         "VirtualService"
-    plural:       "virtualservices"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-`,
-		},
-		{
-			name:     "duplicate collection",
-			expected: "collection already exists",
-			input: `
-collections:
-  - name:  "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-  - name:  "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-resources:
-  - kind:         "VirtualService"
-    plural:       "virtualservices"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-`,
-		},
-		{
-			name:     "snapshot missing collection",
-			expected: "collection not found",
-			input: `
-collections:
-  - name:  "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-resources:
-  - kind:         "VirtualService"
-    plural:       "virtualservices"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-snapshots:
-- name: "default"
-  strategy: debounce
-  collections:
-  - "istio/networking.istio.io/v1alpha3/virtualservices"
-`,
-		},
-		{
-			name:     "collection missing resource",
-			expected: "failed locating resource (networking.istio.io/VirtualService)",
-			input: `
-collections:
-  - name:  "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-`,
-		},
-		{
-			name:     "transform missing input collection",
-			expected: "collection not found",
-			input: `
-collections:
-  - name:  "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-resources:
-  - kind:         "VirtualService"
-    plural:       "virtualservices"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-transforms:
-  - type: direct
-    mapping:
-      "k8s/networking.istio.io/v1alpha3/virtualservices": "istio/networking.istio.io/v1alpha3/virtualservices"
-`,
-		},
-		{
-			name:     "transform missing output collection",
-			expected: "collection not found",
-			input: `
-collections:
-  - name:  "istio/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-resources:
-  - kind:         "VirtualService"
-    plural:       "virtualservices"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-transforms:
-  - type: direct
-    mapping:
-      "k8s/networking.istio.io/v1alpha3/virtualservices": "istio/networking.istio.io/v1alpha3/virtualservices"
-`,
-		},
-	}
-
-	for _, c := range cases {
-		t.Run(c.name, func(t *testing.T) {
-			g := NewWithT(t)
-
-			_, err := ParseAndBuild(c.input)
-			g.Expect(err).ToNot(BeNil())
-			g.Expect(err.Error()).To(ContainSubstring(c.expected))
-		})
-	}
-}
-
-var input = `
-collections:
-  - name:  "k8s/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-
-  - name:  "istio/networking.istio.io/v1alpha3/virtualservices"
-    kind:         "VirtualService"
-    group:        "networking.istio.io"
-
-snapshots:
-  - name: "default"
-    strategy: debounce
-    collections:
-      - "istio/networking.istio.io/v1alpha3/virtualservices"
-
-resources:
-  - kind:         "VirtualService"
-    plural:       "virtualservices"
-    group:        "networking.istio.io"
-    version:      "v1alpha3"
-    proto:        "istio.networking.v1alpha3.VirtualService"
-    protoPackage: "istio.io/api/networking/v1alpha3"
-  
-transforms:
-  - type: direct
-    mapping:
-      "k8s/networking.istio.io/v1alpha3/virtualservices": "istio/networking.istio.io/v1alpha3/virtualservices"
-`
-
-func TestSchemaBasic(t *testing.T) {
-	g := NewWithT(t)
-
-	s, err := ParseAndBuild(input)
-	g.Expect(err).To(BeNil())
-
-	b := collection.NewSchemasBuilder()
-	b.MustAdd(collection.Builder{
-		Name:     "k8s/networking.istio.io/v1alpha3/virtualservices",
-		Resource: virtualServiceResource,
-	}.MustBuild())
-	b.MustAdd(collection.Builder{
-		Name:     "istio/networking.istio.io/v1alpha3/virtualservices",
-		Resource: virtualServiceResource,
-	}.MustBuild())
-	fixtures.ExpectEqual(t, s.AllCollections(), b.Build())
-	g.Expect(s.AllCollectionsInSnapshots([]string{"default"})).To(ConsistOf("istio/networking.istio.io/v1alpha3/virtualservices"))
-	g.Expect(func() { s.AllCollectionsInSnapshots([]string{"bogus"}) }).To(Panic())
-
-	g.Expect(s.TransformSettings()).To(HaveLen(1))
-	g.Expect(s.TransformSettings()[0]).To(Equal(
-		&DirectTransformSettings{
-			mapping: map[collection.Name]collection.Name{
-				collection.NewName("k8s/networking.istio.io/v1alpha3/virtualservices"): collection.NewName("istio/networking.istio.io/v1alpha3/virtualservices"),
-			},
-		}))
-	g.Expect(s.DirectTransformSettings()).To(Equal(
-		&DirectTransformSettings{
-			mapping: map[collection.Name]collection.Name{
-				collection.NewName("k8s/networking.istio.io/v1alpha3/virtualservices"): collection.NewName("istio/networking.istio.io/v1alpha3/virtualservices"),
-			},
-		}))
-
-	g.Expect(s.DirectTransformSettings().Mapping()).To(Equal(
-		map[collection.Name]collection.Name{
-			collection.NewName("k8s/networking.istio.io/v1alpha3/virtualservices"): collection.NewName("istio/networking.istio.io/v1alpha3/virtualservices"),
-		}))
-
-	fixtures.ExpectEqual(t, s.KubeCollections().All(), []collection.Schema{
-		collection.Builder{
-			Name:     "k8s/networking.istio.io/v1alpha3/virtualservices",
-			Resource: virtualServiceResource,
-		}.MustBuild(),
-	})
-
-	g.Expect(s.AllSnapshots()).To(HaveLen(1))
-	g.Expect(s.AllSnapshots()[0]).To(Equal(
-		&Snapshot{
-			Name:        "default",
-			Strategy:    "debounce",
-			Collections: []collection.Name{collection.NewName("istio/networking.istio.io/v1alpha3/virtualservices")},
-		}))
-
-	fixtures.ExpectEqual(t, s.KubeCollections().CollectionNames(), collection.Names{
-		collection.NewName("k8s/networking.istio.io/v1alpha3/virtualservices"),
-	})
-
-	g.Expect(s.KubeCollections().All()[0].Resource().GroupVersionKind().String()).To(Equal("networking.istio.io/v1alpha3/VirtualService"))
-}
-
-func TestSchema_DirectTransform_Panic(t *testing.T) {
-	g := NewWithT(t)
-
-	defer func() {
-		r := recover()
-		g.Expect(r).NotTo(BeNil())
-	}()
-
-	s, err := ParseAndBuild(``)
-	g.Expect(err).To(BeNil())
-
-	_ = s.DirectTransformSettings()
-}
-
-func TestBuild_UnknownTransform(t *testing.T) {
-	g := NewWithT(t)
-
-	a := &ast.Metadata{
-		TransformSettings: []ast.TransformSettings{
-			&unknownXformSettings{},
-		},
-	}
-
-	_, err := Build(a)
-	g.Expect(err).NotTo(BeNil())
-}
-
-type unknownXformSettings struct{}
-
-var _ ast.TransformSettings = &unknownXformSettings{}
-
-func (u *unknownXformSettings) Type() string { return "unknown" }
diff --git a/pkg/config/schema/snapshots/snapshots.gen.go b/pkg/config/schema/snapshots/snapshots.gen.go
deleted file mode 100755
index 7c47bb6d2e..0000000000
--- a/pkg/config/schema/snapshots/snapshots.gen.go
+++ /dev/null
@@ -1,21 +0,0 @@
-// GENERATED FILE -- DO NOT EDIT
-//
-
-package snapshots
-
-var (
-
-	// Default describes the snapshot default
-	Default = "default"
-
-	// LocalAnalysis describes the snapshot localAnalysis
-	LocalAnalysis = "localAnalysis"
-)
-
-// SnapshotNames returns the snapshot names declared in this package.
-func SnapshotNames() []string {
-	return []string{
-		Default,
-		LocalAnalysis,
-	}
-}
diff --git a/pkg/kube/inject/webhook_test.go b/pkg/kube/inject/webhook_test.go
index c42673017f..06430f031e 100644
--- a/pkg/kube/inject/webhook_test.go
+++ b/pkg/kube/inject/webhook_test.go
@@ -51,7 +51,7 @@
 	"istio.io/istio/pilot/test/util"
 	"istio.io/istio/pkg/config"
 	"istio.io/istio/pkg/config/mesh"
-	"istio.io/istio/pkg/config/schema/collections"
+	"istio.io/istio/pkg/config/schema/gvk"
 	"istio.io/istio/pkg/test/util/retry"
 	sutil "istio.io/istio/security/pkg/nodeagent/util"
 )
@@ -1286,7 +1286,7 @@ func TestParseInjectEnvs(t *testing.T) {
 func newProxyConfig(name, ns string, spec config.Spec) config.Config {
 	return config.Config{
 		Meta: config.Meta{
-			GroupVersionKind: collections.K8SNetworkingIstioIoV1Beta1Proxyconfigs.Resource().GroupVersionKind(),
+			GroupVersionKind: gvk.ProxyConfig,
 			Name:             name,
 			Namespace:        ns,
 		},
diff --git a/tests/fuzz/analyzer_fuzzer.go b/tests/fuzz/analyzer_fuzzer.go
index 2299219abe..3036fda5da 100644
--- a/tests/fuzz/analyzer_fuzzer.go
+++ b/tests/fuzz/analyzer_fuzzer.go
@@ -26,7 +26,6 @@
 	"istio.io/istio/pkg/config/analysis/analyzers"
 	"istio.io/istio/pkg/config/analysis/local"
 	"istio.io/istio/pkg/config/analysis/scope"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/config/schema/collection"
 	"istio.io/pkg/log"
 )
@@ -143,7 +142,7 @@ func FuzzAnalyzer(data []byte) int {
 		return 0
 	}
 
-	sa := local.NewSourceAnalyzer(schema.MustGet(), analysis.Combine("testCase", analyzer), "", "istio-system", cr, true, 10*time.Second)
+	sa := local.NewSourceAnalyzer(analysis.Combine("testCase", analyzer), "", "istio-system", cr, true, 10*time.Second)
 	if addMeshConfig {
 		err = sa.AddFileKubeMeshConfig(meshConfigFile)
 		if err != nil {
diff --git a/tests/fuzz/fuzz.go b/tests/fuzz/fuzz.go
index e47f7b7b1b..f703e39611 100644
--- a/tests/fuzz/fuzz.go
+++ b/tests/fuzz/fuzz.go
@@ -17,7 +17,6 @@
 
 import (
 	"istio.io/istio/pilot/pkg/config/kube/crd"
-	"istio.io/istio/pkg/config/schema"
 )
 
 func FuzzParseInputs(data []byte) int {
@@ -27,11 +26,3 @@ func FuzzParseInputs(data []byte) int {
 	}
 	return 1
 }
-
-func FuzzParseAndBuildSchema(data []byte) int {
-	_, err := schema.ParseAndBuild(string(data))
-	if err != nil {
-		return 0
-	}
-	return 1
-}
diff --git a/tests/fuzz/oss_fuzz_build.sh b/tests/fuzz/oss_fuzz_build.sh
index c52af96b62..1fd238ef62 100755
--- a/tests/fuzz/oss_fuzz_build.sh
+++ b/tests/fuzz/oss_fuzz_build.sh
@@ -76,7 +76,6 @@ compile_go_fuzzer istio.io/istio/tests/fuzz FuzzConvertIngressVirtualService2 fu
 compile_go_fuzzer istio.io/istio/tests/fuzz FuzzConvertIngressV1alpha3 fuzz_convert_ingress_v1alpha3
 compile_go_fuzzer istio.io/istio/tests/fuzz FuzzConvertIngressV1alpha32 fuzz_convert_ingress_v1alpha32
 compile_go_fuzzer istio.io/istio/tests/fuzz FuzzParseInputs fuzz_parse_inputs
-compile_go_fuzzer istio.io/istio/tests/fuzz FuzzParseAndBuildSchema fuzz_parse_and_build_schema
 compile_go_fuzzer istio.io/istio/tests/fuzz FuzzConfigValidation fuzz_config_validation
 compile_go_fuzzer istio.io/istio/tests/fuzz FuzzConfigValidation2 fuzz_config_validation2
 compile_go_fuzzer istio.io/istio/tests/fuzz FuzzParseMeshNetworks fuzz_parse_mesh_networks
diff --git a/tests/fuzz/regression_test.go b/tests/fuzz/regression_test.go
index 6a1e41ed9b..61ee676d62 100644
--- a/tests/fuzz/regression_test.go
+++ b/tests/fuzz/regression_test.go
@@ -114,7 +114,6 @@ func TestFuzzers(t *testing.T) {
 	}{
 		{"FuzzConfigValidation", FuzzConfigValidation},
 		{"FuzzParseInputs", FuzzParseInputs},
-		{"FuzzParseAndBuildSchema", FuzzParseAndBuildSchema},
 		{"FuzzParseMeshNetworks", FuzzParseMeshNetworks},
 		{"FuzzValidateMeshConfig", FuzzValidateMeshConfig},
 		{"FuzzInitContext", FuzzInitContext},
diff --git a/tests/integration/pilot/validation_test.go b/tests/integration/pilot/validation_test.go
index 57ef91ed08..cf814934cd 100644
--- a/tests/integration/pilot/validation_test.go
+++ b/tests/integration/pilot/validation_test.go
@@ -25,7 +25,7 @@
 	"gopkg.in/square/go-jose.v2/json"
 	"sigs.k8s.io/yaml"
 
-	"istio.io/istio/pkg/config/schema"
+	"istio.io/istio/pkg/config/schema/collections"
 	"istio.io/istio/pkg/test/datasets/validation"
 	"istio.io/istio/pkg/test/framework"
 	"istio.io/istio/pkg/test/framework/components/namespace"
@@ -60,7 +60,6 @@ func loadTestData(t framework.TestContext) []testData {
 	var result []testData
 	for _, e := range entries {
 		result = append(result, testData(e.Name()))
-		t.Logf("Found test data: %v", e)
 	}
 
 	return result
@@ -166,7 +165,7 @@ func TestEnsureNoMissingCRDs(t *testing.T) {
 			recognized := make(map[string]struct{})
 
 			// TODO(jasonwzm) remove this after multi-version APIs are supported.
-			for _, r := range schema.MustGet().KubeCollections().All() {
+			for _, r := range collections.Pilot.All() {
 				s := strings.Join([]string{r.Resource().Group(), r.Resource().Version(), r.Resource().Kind()}, "/")
 				recognized[s] = struct{}{}
 			}
diff --git a/tools/bug-report/pkg/content/content.go b/tools/bug-report/pkg/content/content.go
index d41e66ae7b..3ed0140d71 100644
--- a/tools/bug-report/pkg/content/content.go
+++ b/tools/bug-report/pkg/content/content.go
@@ -24,7 +24,6 @@
 	"istio.io/istio/pkg/config/analysis/diag"
 	"istio.io/istio/pkg/config/analysis/local"
 	"istio.io/istio/pkg/config/resource"
-	"istio.io/istio/pkg/config/schema"
 	"istio.io/istio/pkg/kube"
 	"istio.io/istio/tools/bug-report/pkg/common"
 	"istio.io/istio/tools/bug-report/pkg/kubectlcmd"
@@ -220,8 +219,7 @@ func GetNetstat(p *Params) (map[string]string, error) {
 // GetAnalyze returns the output of istioctl analyze.
 func GetAnalyze(p *Params, timeout time.Duration) (map[string]string, error) {
 	out := make(map[string]string)
-	sa := local.NewSourceAnalyzer(schema.NewMustGet(), analyzers.AllCombined(),
-		resource.Namespace(p.Namespace), resource.Namespace(p.IstioNamespace), nil, true, timeout)
+	sa := local.NewSourceAnalyzer(analyzers.AllCombined(), resource.Namespace(p.Namespace), resource.Namespace(p.IstioNamespace), nil, true, timeout)
 
 	k, err := kube.NewClient(kube.NewClientConfigForRestConfig(p.Client.RESTConfig()))
 	if err != nil {
-- 
2.35.3

