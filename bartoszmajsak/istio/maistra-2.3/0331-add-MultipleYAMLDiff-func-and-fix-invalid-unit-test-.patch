From 95e2aff8c9427c871e3d1d01b55f5f1eba4b989c Mon Sep 17 00:00:00 2001
From: Nicole LiHui <nicole.li@daocloud.io>
Date: Wed, 5 Jan 2022 19:06:50 +0800
Subject: add MultipleYAMLDiff func and fix invalid unit test (#35643)

* add MultipleYAMLDiff func and fix invalid unit test

* refactor YAMLDiff to support muti yaml diff validate
---
 operator/pkg/util/yaml.go      | 78 +++++++++++++++++++++++++++++++++-
 operator/pkg/util/yaml_test.go | 54 +++++++++++++++++++++++
 2 files changed, 131 insertions(+), 1 deletion(-)

diff --git a/operator/pkg/util/yaml.go b/operator/pkg/util/yaml.go
index 4775abe7f9..db6009dae2 100644
--- a/operator/pkg/util/yaml.go
+++ b/operator/pkg/util/yaml.go
@@ -15,14 +15,17 @@
 package util
 
 import (
+	"bufio"
 	"bytes"
 	"fmt"
+	"io"
 	"strings"
 
 	jsonpatch "github.com/evanphx/json-patch/v5"
 	"github.com/gogo/protobuf/jsonpb"
 	"github.com/gogo/protobuf/proto"
 	"github.com/kylelemons/godebug/diff"
+	yaml3 "k8s.io/apimachinery/pkg/util/yaml"
 	"sigs.k8s.io/yaml"
 )
 
@@ -145,7 +148,8 @@ func OverlayYAML(base, overlay string) (string, error) {
 	return string(my), nil
 }
 
-func YAMLDiff(a, b string) string {
+// yamlDiff compares single YAML file
+func yamlDiff(a, b string) string {
 	ao, bo := make(map[string]interface{}), make(map[string]interface{})
 	if err := yaml.Unmarshal([]byte(a), &ao); err != nil {
 		return err.Error()
@@ -166,6 +170,78 @@ func YAMLDiff(a, b string) string {
 	return diff.Diff(string(ay), string(by))
 }
 
+// yamlStringsToList yaml string parse to string list
+func yamlStringsToList(str string) []string {
+	reader := bufio.NewReader(strings.NewReader(str))
+	decoder := yaml3.NewYAMLReader(reader)
+	res := make([]string, 0)
+	for {
+		doc, err := decoder.Read()
+		if err == io.EOF {
+			break
+		}
+		if err != nil {
+			break
+		}
+
+		chunk := bytes.TrimSpace(doc)
+		res = append(res, string(chunk))
+	}
+	return res
+}
+
+// multiYamlDiffOutput multi yaml diff output format
+func multiYamlDiffOutput(res, diff string) string {
+	if res == "" {
+		return diff
+	}
+	if diff == "" {
+		return res
+	}
+
+	return res + "\n" + diff
+}
+
+func diffStringList(l1, l2 []string) string {
+	var maxLen int
+	var minLen int
+	var l1Max bool
+	res := ""
+	if len(l1)-len(l2) > 0 {
+		maxLen = len(l1)
+		minLen = len(l2)
+		l1Max = true
+	} else {
+		maxLen = len(l2)
+		minLen = len(l1)
+		l1Max = false
+	}
+
+	for i := 0; i < maxLen; i++ {
+		d := ""
+		if i >= minLen {
+			if l1Max {
+				d = yamlDiff(l1[i], "")
+			} else {
+				d = yamlDiff("", l2[i])
+			}
+		} else {
+			d = yamlDiff(l1[i], l2[i])
+		}
+		res = multiYamlDiffOutput(res, d)
+	}
+	return res
+}
+
+// YAMLDiff compares multiple YAML files and single YAML file
+func YAMLDiff(a, b string) string {
+	al := yamlStringsToList(a)
+	bl := yamlStringsToList(b)
+	res := diffStringList(al, bl)
+
+	return res
+}
+
 // IsYAMLEqual reports whether the YAML in strings a and b are equal.
 func IsYAMLEqual(a, b string) bool {
 	if strings.TrimSpace(a) == "" && strings.TrimSpace(b) == "" {
diff --git a/operator/pkg/util/yaml_test.go b/operator/pkg/util/yaml_test.go
index d7658f6816..d17ce0ca53 100644
--- a/operator/pkg/util/yaml_test.go
+++ b/operator/pkg/util/yaml_test.go
@@ -257,6 +257,60 @@ func TestYAMLDiff(t *testing.T) {
 	}
 }
 
+func TestMultipleYAMLDiff(t *testing.T) {
+	tests := []struct {
+		desc   string
+		diff1  string
+		diff2  string
+		expect string
+	}{
+		{
+			desc: "1-line-diff",
+			diff1: `hola: yo
+foo: bar
+goo: tar
+---
+hola: yo1
+foo: bar1
+goo: tar1
+`,
+			diff2: `hola: yo
+foo: bar
+notgoo: nottar
+`,
+			expect: ` foo: bar
+-goo: tar
+ hola: yo
++notgoo: nottar
+ 
+-foo: bar1
+-goo: tar1
+-hola: yo1
++{}
+ `,
+		},
+		{
+			desc: "no-diff",
+			diff1: `foo: bar
+---
+foo: bar1
+`,
+			diff2: `foo: bar
+---
+foo: bar1
+`,
+			expect: ``,
+		},
+	}
+	for _, tt := range tests {
+		t.Run(tt.desc, func(t *testing.T) {
+			if got := YAMLDiff(tt.diff1, tt.diff2); got != tt.expect {
+				t.Errorf("%s: expect %v got %v", tt.desc, tt.expect, got)
+			}
+		})
+	}
+}
+
 func TestIsYAMLEqual(t *testing.T) {
 	tests := []struct {
 		desc   string
-- 
2.35.3

