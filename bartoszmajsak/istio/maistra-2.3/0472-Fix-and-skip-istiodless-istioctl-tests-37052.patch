From 46e322339846cc5cc3043d7206360aacf4605f52 Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Tue, 1 Feb 2022 12:50:05 -0800
Subject: Fix and skip istiodless istioctl tests (#37052)

See https://github.com/istio/istio/issues/37051

Also fixed some usage of InvokeOrFail in retry loop - this negates the
retry entirely
---
 tests/integration/pilot/istioctl_test.go | 26 +++++++++++++++++++-----
 1 file changed, 21 insertions(+), 5 deletions(-)

diff --git a/tests/integration/pilot/istioctl_test.go b/tests/integration/pilot/istioctl_test.go
index 9d0c878182..6978a5b495 100644
--- a/tests/integration/pilot/istioctl_test.go
+++ b/tests/integration/pilot/istioctl_test.go
@@ -352,6 +352,7 @@ func jsonUnmarshallOrFail(t test.Failer, context, s string) interface{} {
 func TestProxyStatus(t *testing.T) {
 	framework.NewTest(t).Features("usability.observability.proxy-status").
 		RequiresSingleCluster().
+		RequiresLocalControlPlane(). // https://github.com/istio/istio/issues/37051
 		Run(func(t framework.TestContext) {
 			istioCtl := istioctl.NewOrFail(t, t, istioctl.Config{})
 
@@ -383,7 +384,10 @@ func TestProxyStatus(t *testing.T) {
 				args = []string{
 					"proxy-status", fmt.Sprintf("%s.%s", podID, apps.Namespace.Name()),
 				}
-				output, _ = istioCtl.InvokeOrFail(t, args)
+				output, _, err := istioCtl.Invoke(args)
+				if err != nil {
+					return err
+				}
 				return expectSubstrings(output, "Clusters Match", "Listeners Match", "Routes Match")
 			})
 
@@ -399,7 +403,10 @@ func TestProxyStatus(t *testing.T) {
 				args = []string{
 					"proxy-status", fmt.Sprintf("%s.%s", podID, apps.Namespace.Name()), "--file", filename,
 				}
-				output, _ = istioCtl.InvokeOrFail(t, args)
+				output, _, err = istioCtl.Invoke(args)
+				if err != nil {
+					return err
+				}
 				return expectSubstrings(output, "Clusters Match", "Listeners Match", "Routes Match")
 			})
 		})
@@ -440,7 +447,10 @@ func TestXdsProxyStatus(t *testing.T) {
 				args = []string{
 					"proxy-status", fmt.Sprintf("%s.%s", podID, apps.Namespace.Name()),
 				}
-				output, _ = istioCtl.InvokeOrFail(t, args)
+				output, _, err = istioCtl.Invoke(args)
+				if err != nil {
+					return err
+				}
 				return expectSubstrings(output, "Clusters Match", "Listeners Match", "Routes Match")
 			})
 
@@ -456,7 +466,10 @@ func TestXdsProxyStatus(t *testing.T) {
 				args = []string{
 					"proxy-status", fmt.Sprintf("%s.%s", podID, apps.Namespace.Name()), "--file", filename,
 				}
-				output, _ = istioCtl.InvokeOrFail(t, args)
+				output, _, err = istioCtl.Invoke(args)
+				if err != nil {
+					return err
+				}
 				return expectSubstrings(output, "Clusters Match", "Listeners Match", "Routes Match")
 			})
 		})
@@ -510,7 +523,10 @@ func TestAuthZCheck(t *testing.T) {
 				t.NewSubTest(c.name).Run(func(t framework.TestContext) {
 					// Verify the output matches the expected text, which is the policies loaded above.
 					retry.UntilSuccessOrFail(t, func() error {
-						output, _ := istioCtl.InvokeOrFail(t, args)
+						output, _, err := istioCtl.Invoke(args)
+						if err != nil {
+							return err
+						}
 						for _, want := range c.wants {
 							if !want.MatchString(output) {
 								return fmt.Errorf("%v did not match %v", output, want)
-- 
2.35.3

