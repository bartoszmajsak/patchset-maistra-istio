From 1f903b73e572c48ddc7d35bc42f3a7c0082b188c Mon Sep 17 00:00:00 2001
From: Zhongmin <zhongming.chang@daocloud.io>
Date: Tue, 24 May 2022 02:36:28 +0800
Subject: improve test coverage for string (#39064)

Signed-off-by: AllenZMC <zhongming.chang@daocloud.io>
---
 pkg/util/sets/string_test.go | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)

diff --git a/pkg/util/sets/string_test.go b/pkg/util/sets/string_test.go
index 8954908670..a4c815bee4 100644
--- a/pkg/util/sets/string_test.go
+++ b/pkg/util/sets/string_test.go
@@ -16,6 +16,7 @@
 
 import (
 	"fmt"
+	"reflect"
 	"testing"
 
 	"istio.io/istio/pkg/test/util/assert"
@@ -179,3 +180,32 @@ func TestMerge(t *testing.T) {
 		assert.Equal(t, tc.expected, got.SortedList())
 	}
 }
+
+func TestInsertAll(t *testing.T) {
+	tests := []struct {
+		name  string
+		s     Set
+		items []string
+		want  Set
+	}{
+		{
+			name:  "insert new item",
+			s:     New("a1", "a2"),
+			items: []string{"a3"},
+			want:  New("a1", "a2", "a3"),
+		},
+		{
+			name:  "inserted item already exists",
+			s:     New("a1", "a2"),
+			items: []string{"a1"},
+			want:  New("a1", "a2"),
+		},
+	}
+	for _, tt := range tests {
+		t.Run(tt.name, func(t *testing.T) {
+			if got := tt.s.InsertAll(tt.items...); !reflect.DeepEqual(got, tt.want) {
+				t.Errorf("InsertAll() = %v, want %v", got, tt.want)
+			}
+		})
+	}
+}
-- 
2.35.3

