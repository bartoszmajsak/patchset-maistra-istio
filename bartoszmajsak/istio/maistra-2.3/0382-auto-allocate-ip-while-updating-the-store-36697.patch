From a2fca7131379829b543639668fbc9cd0863bb906 Mon Sep 17 00:00:00 2001
From: Rama Chavali <rama.rao@salesforce.com>
Date: Fri, 14 Jan 2022 11:07:15 +0530
Subject: auto allocate ip while updating the store (#36697)

* auto allocate ip during conversion

Signed-off-by: Rama Chavali <rama.rao@salesforce.com>

* fix test

Signed-off-by: Rama Chavali <rama.rao@salesforce.com>

* move auto allocate logic to store

Signed-off-by: Rama Chavali <rama.rao@salesforce.com>

* move to shallow copy

Signed-off-by: Rama Chavali <rama.rao@salesforce.com>

* fix lint

Signed-off-by: Rama Chavali <rama.rao@salesforce.com>
---
 .../serviceentry/conversion_test.go           |  1 -
 .../serviceentry/servicediscovery.go          | 24 +++++++++----------
 .../serviceentry/servicediscovery_test.go     | 22 +++++++++++++++++
 .../pkg/serviceregistry/serviceentry/store.go |  1 +
 4 files changed, 34 insertions(+), 14 deletions(-)

diff --git a/pilot/pkg/serviceregistry/serviceentry/conversion_test.go b/pilot/pkg/serviceregistry/serviceentry/conversion_test.go
index 33a225a2b2..53a423eea9 100644
--- a/pilot/pkg/serviceregistry/serviceentry/conversion_test.go
+++ b/pilot/pkg/serviceregistry/serviceentry/conversion_test.go
@@ -501,7 +501,6 @@ func makeService(hostname host.Name, configNamespace, address string, ports map[
 
 	sortPorts(svcPorts)
 	svc.Ports = svcPorts
-
 	return svc
 }
 
diff --git a/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go b/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
index 3d6443b878..b06a35e661 100644
--- a/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
+++ b/pilot/pkg/serviceregistry/serviceentry/servicediscovery.go
@@ -516,18 +516,8 @@ func (s *ServiceEntryStore) Services() ([]*model.Service, error) {
 		return nil, nil
 	}
 	s.mutex.RLock()
-	allServices := s.services.getAllServices()
-	s.mutex.RUnlock()
-
-	out := make([]*model.Service, 0, len(allServices))
-	for _, svc := range allServices {
-		// TODO: eliminate the deepcopy here
-		// autoAllocateIPs will re-allocate ips for the service,
-		// if return the pointer directly, there will be a race with `BuildNameTable`
-		out = append(out, svc.DeepCopy())
-	}
-	autoAllocateIPs(out)
-	return out, nil
+	defer s.mutex.RUnlock()
+	return s.services.getAllServices(), nil
 }
 
 // GetService retrieves a service by host name if it exists.
@@ -730,7 +720,7 @@ func servicesDiff(os []*model.Service, ns []*model.Service) ([]*model.Service, [
 		newSvc, f := newServiceHosts[s.Hostname]
 		if !f {
 			deleted = append(deleted, s)
-		} else if !reflect.DeepEqual(s, newSvc) {
+		} else if !servicesEqual(s, newSvc) {
 			updated = append(updated, newSvc)
 		} else {
 			unchanged = append(unchanged, newSvc)
@@ -746,6 +736,14 @@ func servicesDiff(os []*model.Service, ns []*model.Service) ([]*model.Service, [
 	return added, deleted, updated, unchanged
 }
 
+func servicesEqual(os *model.Service, ns *model.Service) bool {
+	// Disabling `go vet` warning since this is actually safe in this case.
+	// nolint: vet
+	s := *os
+	s.AutoAllocatedAddress = ""
+	return reflect.DeepEqual(&s, ns)
+}
+
 // Automatically allocates IPs for service entry services WITHOUT an
 // address field if the hostname is not a wildcard, or when resolution
 // is not NONE. The IPs are allocated from the reserved Class E subnet
diff --git a/pilot/pkg/serviceregistry/serviceentry/servicediscovery_test.go b/pilot/pkg/serviceregistry/serviceentry/servicediscovery_test.go
index 0efa9ec840..c9fa765210 100644
--- a/pilot/pkg/serviceregistry/serviceentry/servicediscovery_test.go
+++ b/pilot/pkg/serviceregistry/serviceentry/servicediscovery_test.go
@@ -1037,6 +1037,17 @@ func expectProxyInstances(t testing.TB, sd *ServiceEntryStore, expected []*model
 		instances := sd.GetProxyServiceInstances(&model.Proxy{IPAddresses: []string{ip}, Metadata: &model.NodeMetadata{}})
 		sortServiceInstances(instances)
 		sortServiceInstances(expected)
+		sd.mutex.RLock()
+		allServices := sd.services.getAllServices()
+		sd.mutex.RUnlock()
+		for _, inst := range expected {
+			for _, asvc := range allServices {
+				if inst.Service.Hostname == asvc.Hostname {
+					inst.Service.AutoAllocatedAddress = asvc.AutoAllocatedAddress
+					break
+				}
+			}
+		}
 		if err := compare(t, instances, expected); err != nil {
 			return err
 		}
@@ -1097,6 +1108,17 @@ func expectServiceInstances(t testing.TB, sd *ServiceEntryStore, cfg *config.Con
 			instances := sd.InstancesByPort(svc, port, nil)
 			sortServiceInstances(instances)
 			sortServiceInstances(expected[i])
+			sd.mutex.RLock()
+			allServices := sd.services.getAllServices()
+			sd.mutex.RUnlock()
+			for _, inst := range expected[i] {
+				for _, asvc := range allServices {
+					if inst.Service.Hostname == asvc.Hostname {
+						inst.Service.AutoAllocatedAddress = asvc.AutoAllocatedAddress
+						break
+					}
+				}
+			}
 			if err := compare(t, instances, expected[i]); err != nil {
 				return fmt.Errorf("%d: %v", i, err)
 			}
diff --git a/pilot/pkg/serviceregistry/serviceentry/store.go b/pilot/pkg/serviceregistry/serviceentry/store.go
index bd7de4449c..8a81e99813 100644
--- a/pilot/pkg/serviceregistry/serviceentry/store.go
+++ b/pilot/pkg/serviceregistry/serviceentry/store.go
@@ -170,4 +170,5 @@ func (s *serviceStore) deleteServices(key types.NamespacedName) {
 
 func (s *serviceStore) updateServices(key types.NamespacedName, services []*model.Service) {
 	s.servicesBySE[key] = services
+	autoAllocateIPs(s.getAllServices())
 }
-- 
2.35.3

