From aaef91d65b4baca373640a68978cf9c412b2ead7 Mon Sep 17 00:00:00 2001
From: John Howard <howardjohn@google.com>
Date: Thu, 4 Nov 2021 11:06:37 -0700
Subject: Support WE for IPv6 (#35847)

* Support WE for IPv6

Tested in https://github.com/istio/istio/pull/35354

Fixes https://github.com/istio/istio/issues/35428

* Update deployment.go
---
 .../controller/workloadentry/workloadentry_controller.go   | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/pilot/pkg/controller/workloadentry/workloadentry_controller.go b/pilot/pkg/controller/workloadentry/workloadentry_controller.go
index 664740d446..f78d461321 100644
--- a/pilot/pkg/controller/workloadentry/workloadentry_controller.go
+++ b/pilot/pkg/controller/workloadentry/workloadentry_controller.go
@@ -550,7 +550,7 @@ func autoregisteredWorkloadEntryName(proxy *model.Proxy) string {
 		log.Errorf("auto-registration of %v failed: missing namespace", proxy.ID)
 		return ""
 	}
-	p := []string{proxy.Metadata.AutoRegisterGroup, proxy.IPAddresses[0]}
+	p := []string{proxy.Metadata.AutoRegisterGroup, sanitizeIP(proxy.IPAddresses[0])}
 	if proxy.Metadata.Network != "" {
 		p = append(p, string(proxy.Metadata.Network))
 	}
@@ -563,6 +563,11 @@ func autoregisteredWorkloadEntryName(proxy *model.Proxy) string {
 	return name
 }
 
+// sanitizeIP ensures an IP address (IPv6) can be used in Kubernetes resource name
+func sanitizeIP(s string) string {
+	return strings.ReplaceAll(s, ":", "-")
+}
+
 func transformHealthEvent(proxy *model.Proxy, entryName string, event HealthEvent) HealthCondition {
 	cond := &v1alpha1.IstioCondition{
 		Type: status.ConditionHealthy,
-- 
2.35.3

