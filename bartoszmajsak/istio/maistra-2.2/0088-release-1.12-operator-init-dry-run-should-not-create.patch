From 4548abd2887c27543c20107cda56a344c973a0aa Mon Sep 17 00:00:00 2001
From: Xiaopeng Han <hanxiaop8@outlook.com>
Date: Mon, 20 Dec 2021 19:58:10 +0800
Subject: [release-1.12] operator init `--dry-run` should not create ns
 (#36573)

* cherry-pick

* add releasenotes
---
 operator/cmd/mesh/operator-init.go        |  4 ++--
 operator/cmd/mesh/shared.go               |  4 ++--
 operator/pkg/helmreconciler/reconciler.go | 10 +++++-----
 releasenotes/notes/36570.yaml             |  6 ++++++
 4 files changed, 15 insertions(+), 9 deletions(-)
 create mode 100644 releasenotes/notes/36570.yaml

diff --git a/operator/cmd/mesh/operator-init.go b/operator/cmd/mesh/operator-init.go
index ce58d6d9a6..1165d5b017 100644
--- a/operator/cmd/mesh/operator-init.go
+++ b/operator/cmd/mesh/operator-init.go
@@ -131,7 +131,7 @@ func operatorInit(args *rootArgs, oiArgs *operatorInitArgs, l clog.Logger) {
 		}
 	}
 
-	if err := createNamespace(clientset, oiArgs.common.operatorNamespace, ""); err != nil {
+	if err := createNamespace(clientset, oiArgs.common.operatorNamespace, "", opts.DryRun); err != nil {
 		l.LogAndFatal(err)
 	}
 
@@ -142,7 +142,7 @@ func operatorInit(args *rootArgs, oiArgs *operatorInitArgs, l clog.Logger) {
 		namespaces = append(namespaces, istioNamespace)
 	}
 	for _, ns := range namespaces {
-		if err := createNamespace(clientset, ns, ""); err != nil {
+		if err := createNamespace(clientset, ns, "", opts.DryRun); err != nil {
 			l.LogAndFatal(err)
 		}
 	}
diff --git a/operator/cmd/mesh/shared.go b/operator/cmd/mesh/shared.go
index a862afe253..8aaace5ece 100644
--- a/operator/cmd/mesh/shared.go
+++ b/operator/cmd/mesh/shared.go
@@ -194,8 +194,8 @@ func getCRAndNamespaceFromFile(filePath string, l clog.Logger) (customResource s
 }
 
 // createNamespace creates a namespace using the given k8s interface.
-func createNamespace(cs kubernetes.Interface, namespace string, network string) error {
-	return helmreconciler.CreateNamespace(cs, namespace, network)
+func createNamespace(cs kubernetes.Interface, namespace string, network string, dryRun bool) error {
+	return helmreconciler.CreateNamespace(cs, namespace, network, dryRun)
 }
 
 // saveIOPToCluster saves the state in an IOP CR in the cluster.
diff --git a/operator/pkg/helmreconciler/reconciler.go b/operator/pkg/helmreconciler/reconciler.go
index 0d616e6355..5fbc0f8a24 100644
--- a/operator/pkg/helmreconciler/reconciler.go
+++ b/operator/pkg/helmreconciler/reconciler.go
@@ -530,7 +530,10 @@ func (h *HelmReconciler) reportPrunedObjectKind() {
 }
 
 // CreateNamespace creates a namespace using the given k8s interface.
-func CreateNamespace(cs kubernetes.Interface, namespace string, network string) error {
+func CreateNamespace(cs kubernetes.Interface, namespace string, network string, dryRun bool) error {
+	if dryRun {
+		return nil
+	}
 	if namespace == "" {
 		// Setup default namespace
 		namespace = name.IstioDefaultNamespace
@@ -613,10 +616,7 @@ func (h *HelmReconciler) analyzeWebhooks(whs []string) error {
 
 // createNamespace creates a namespace using the given k8s client.
 func (h *HelmReconciler) createNamespace(namespace string, network string) error {
-	if h.opts.DryRun {
-		return nil
-	}
-	return CreateNamespace(h.clientSet, namespace, network)
+	return CreateNamespace(h.clientSet, namespace, network, h.opts.DryRun)
 }
 
 func (h *HelmReconciler) networkName() string {
diff --git a/releasenotes/notes/36570.yaml b/releasenotes/notes/36570.yaml
new file mode 100644
index 0000000000..721ec7ee15
--- /dev/null
+++ b/releasenotes/notes/36570.yaml
@@ -0,0 +1,6 @@
+apiVersion: release-notes/v2
+kind: bug-fix
+area: istioctl
+releaseNotes:
+  - |
+    **Fixed** `operator init --dry-run` creates unexpected namespaces.
-- 
2.35.3

