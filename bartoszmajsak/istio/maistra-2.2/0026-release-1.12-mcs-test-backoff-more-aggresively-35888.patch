From 00c087643f2092a24324fe52ed9f0f3e24189c01 Mon Sep 17 00:00:00 2001
From: Istio Automation <istio-testing-bot@google.com>
Date: Mon, 8 Nov 2021 10:05:20 -0800
Subject: [release-1.12] mcs test: backoff more aggresively (#35888)

* mcs test: backoff more aggresively

Might help with https://github.com/istio/istio/issues/34051

I think we just retry to much, exhausting all ephemeral ports...

Also make it so you can rerun the test for local dev

* scale back count as well

Co-authored-by: John Howard <howardjohn@google.com>
---
 .../mcs/discoverability/discoverability_test.go    | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/tests/integration/pilot/mcs/discoverability/discoverability_test.go b/tests/integration/pilot/mcs/discoverability/discoverability_test.go
index f70eebfb5d..285e0e8653 100644
--- a/tests/integration/pilot/mcs/discoverability/discoverability_test.go
+++ b/tests/integration/pilot/mcs/discoverability/discoverability_test.go
@@ -29,6 +29,7 @@
 	envoy_admin_v3 "github.com/envoyproxy/go-control-plane/envoy/admin/v3"
 	"golang.org/x/sync/errgroup"
 	kubeCore "k8s.io/api/core/v1"
+	kerrors "k8s.io/apimachinery/pkg/api/errors"
 	kubeMeta "k8s.io/apimachinery/pkg/apis/meta/v1"
 	mcs "sigs.k8s.io/mcs-api/pkg/apis/v1alpha1"
 	"sigs.k8s.io/yaml"
@@ -289,10 +290,10 @@ func checkClustersReached(t framework.TestContext, ht hostType, src, dest echo.I
 	_, err := src.CallWithRetry(echo.CallOptions{
 		Address:   address,
 		Target:    dest,
-		Count:     50,
+		Count:     20,
 		PortName:  "http",
 		Validator: echo.And(echo.ExpectOK(), echo.ExpectReachedClusters(clusters)),
-	}, retryTimeout)
+	}, retry.Delay(time.Millisecond*500), retryTimeout)
 	if err != nil {
 		t.Fatalf("failed calling host %s: %v\nCluster Details:\n%s", address, err,
 			getClusterDetailsYAML(t, address, src, dest))
@@ -419,7 +420,7 @@ func createAndCleanupServiceExport(t framework.TestContext, service string, clus
 
 				err := c.MCSApis().MulticlusterV1alpha1().ServiceExports(testNS).Delete(context.TODO(),
 					serviceExport.Name, kubeMeta.DeleteOptions{})
-				if err != nil {
+				if err != nil && !kerrors.IsAlreadyExists(err) {
 					scopes.Framework.Warnf("failed deleting ServiceExport %s/%s in cluster %s: %v",
 						testNS, serviceB, c.Name(), err)
 					return
@@ -456,7 +457,7 @@ func genClusterSetIPService(c cluster.Cluster) (*kubeCore.Service, error) {
 		},
 	}
 
-	if _, err := c.CoreV1().Services(testNS).Create(context.TODO(), dummySvc, kubeMeta.CreateOptions{}); err != nil {
+	if _, err := c.CoreV1().Services(testNS).Create(context.TODO(), dummySvc, kubeMeta.CreateOptions{}); err != nil && !kerrors.IsAlreadyExists(err) {
 		return nil, err
 	}
 
@@ -508,5 +509,8 @@ func createServiceImport(c cluster.Cluster, vip string) error {
 			Ports: ports,
 		},
 	}, kubeMeta.CreateOptions{})
-	return err
+	if err != nil && !kerrors.IsAlreadyExists(err) {
+		return err
+	}
+	return nil
 }
-- 
2.35.3

