From 1bf4b0b535d6578b5fdfb91011c55ba9ec0d3c85 Mon Sep 17 00:00:00 2001
From: Istio Automation <istio-testing-bot@google.com>
Date: Tue, 30 Nov 2021 11:30:30 -0800
Subject: [release-1.12] Do not skip adding clusters & listeners via
 EnvoyFilter at Gateway if context is ANY. (#36291)

* Do not skip adding clusters & listeners via EnvoyFilter at Gateway if context is ANY.

* fix.

* lll

* comment.

Co-authored-by: Pengyuan Bian <bianpengyuan@google.com>
---
 .../networking/core/v1alpha3/envoyfilter/cluster_patch.go | 5 +++--
 .../core/v1alpha3/envoyfilter/listener_patch.go           | 5 +++--
 releasenotes/notes/envoyfilter-patch-context.yaml         | 8 ++++++++
 3 files changed, 14 insertions(+), 4 deletions(-)
 create mode 100644 releasenotes/notes/envoyfilter-patch-context.yaml

diff --git a/pilot/pkg/networking/core/v1alpha3/envoyfilter/cluster_patch.go b/pilot/pkg/networking/core/v1alpha3/envoyfilter/cluster_patch.go
index ba4b29eb19..6d57564bfc 100644
--- a/pilot/pkg/networking/core/v1alpha3/envoyfilter/cluster_patch.go
+++ b/pilot/pkg/networking/core/v1alpha3/envoyfilter/cluster_patch.go
@@ -146,8 +146,9 @@ func InsertedClusters(pctx networking.EnvoyFilter_PatchContext, efw *model.Envoy
 	// Add cluster if the operation is add, and patch context matches
 	for _, cp := range efw.Patches[networking.EnvoyFilter_CLUSTER] {
 		if cp.Operation == networking.EnvoyFilter_Patch_ADD {
-			// If cluster ADD patch does not specify a patch context, only add for sidecar outbound.
-			if cp.Match.Context == networking.EnvoyFilter_ANY && pctx != networking.EnvoyFilter_SIDECAR_OUTBOUND {
+			// If cluster ADD patch does not specify a patch context, only add for sidecar outbound and gateway.
+			if cp.Match.Context == networking.EnvoyFilter_ANY && pctx != networking.EnvoyFilter_SIDECAR_OUTBOUND &&
+				pctx != networking.EnvoyFilter_GATEWAY {
 				continue
 			}
 			if commonConditionMatch(pctx, cp) {
diff --git a/pilot/pkg/networking/core/v1alpha3/envoyfilter/listener_patch.go b/pilot/pkg/networking/core/v1alpha3/envoyfilter/listener_patch.go
index 6ae07a7863..2f2a803032 100644
--- a/pilot/pkg/networking/core/v1alpha3/envoyfilter/listener_patch.go
+++ b/pilot/pkg/networking/core/v1alpha3/envoyfilter/listener_patch.go
@@ -73,8 +73,9 @@ func patchListeners(
 	if !skipAdds {
 		for _, lp := range efw.Patches[networking.EnvoyFilter_LISTENER] {
 			if lp.Operation == networking.EnvoyFilter_Patch_ADD {
-				// If listener ADD patch does not specify a patch context, only add for sidecar outbound.
-				if lp.Match.Context == networking.EnvoyFilter_ANY && patchContext != networking.EnvoyFilter_SIDECAR_OUTBOUND {
+				// If listener ADD patch does not specify a patch context, only add for sidecar outbound and gateway.
+				if lp.Match.Context == networking.EnvoyFilter_ANY && patchContext != networking.EnvoyFilter_SIDECAR_OUTBOUND &&
+					patchContext != networking.EnvoyFilter_GATEWAY {
 					continue
 				}
 				if !commonConditionMatch(patchContext, lp) {
diff --git a/releasenotes/notes/envoyfilter-patch-context.yaml b/releasenotes/notes/envoyfilter-patch-context.yaml
new file mode 100644
index 0000000000..00f9455813
--- /dev/null
+++ b/releasenotes/notes/envoyfilter-patch-context.yaml
@@ -0,0 +1,8 @@
+apiVersion: release-notes/v2
+kind: bug-fix
+area: traffic-management
+issues:
+- 36284
+releaseNotes:
+- |
+  **Fixed** an issue where `EnvoyFilter` with ANY patch context will skip adding new clusters and listeners at gateway.
-- 
2.35.3

