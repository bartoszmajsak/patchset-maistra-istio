From 935d425234b2084ce0e326229b1e15575d70e8c2 Mon Sep 17 00:00:00 2001
From: Istio Automation <istio-testing-bot@google.com>
Date: Mon, 8 Nov 2021 14:51:40 -0800
Subject: [release-1.12] Add WasmPlugin integration test (#35954)

* Change the customizemetrics integration test to use the WasmPlugin API

* Fix extension naming

Co-authored-by: Daniel Grimm <dgrimm@redhat.com>
---
 pilot/pkg/model/extensions.go                 |  4 +--
 .../core/v1alpha3/extension/wasmplugin.go     |  7 ++--
 .../v1alpha3/extension/wasmplugin_test.go     | 18 ++++++++--
 .../testdata/attributegen_envoy_filter.yaml   | 36 ++++++++++++++-----
 4 files changed, 49 insertions(+), 16 deletions(-)

diff --git a/pilot/pkg/model/extensions.go b/pilot/pkg/model/extensions.go
index 55c0a74cae..b4ff987d90 100644
--- a/pilot/pkg/model/extensions.go
+++ b/pilot/pkg/model/extensions.go
@@ -101,7 +101,7 @@ func convertToWasmPluginWrapper(plugin *config.Config) *WasmPluginWrapper {
 	}
 	typedConfig, err := anypb.New(&envoy_extensions_filters_http_wasm_v3.Wasm{
 		Config: &envoy_extensions_wasm_v3.PluginConfig{
-			Name:          plugin.Name,
+			Name:          plugin.Namespace + "." + plugin.Name,
 			RootId:        wasmPlugin.PluginName,
 			Configuration: cfg,
 			Vm: &envoy_extensions_wasm_v3.PluginConfig_VmConfig{
@@ -117,7 +117,7 @@ func convertToWasmPluginWrapper(plugin *config.Config) *WasmPluginWrapper {
 		return nil
 	}
 	ec := &envoy_config_core_v3.TypedExtensionConfig{
-		Name:        plugin.Name,
+		Name:        plugin.Namespace + "." + plugin.Name,
 		TypedConfig: typedConfig,
 	}
 	return &WasmPluginWrapper{
diff --git a/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin.go b/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin.go
index 58973a200f..698f716bea 100644
--- a/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin.go
+++ b/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin.go
@@ -25,6 +25,9 @@
 	"istio.io/istio/pilot/pkg/networking"
 	authzmodel "istio.io/istio/pilot/pkg/security/authz/model"
 	securitymodel "istio.io/istio/pilot/pkg/security/model"
+
+	// include for registering wasm logging scope
+	_ "istio.io/istio/pkg/wasm"
 )
 
 const (
@@ -125,7 +128,7 @@ func popAppend(list []*hcm_filter.HttpFilter,
 
 func toEnvoyHTTPFilter(wasmPlugin *model.WasmPluginWrapper) *hcm_filter.HttpFilter {
 	return &hcm_filter.HttpFilter{
-		Name: wasmPlugin.Namespace + "." + wasmPlugin.Name,
+		Name: wasmPlugin.ExtensionConfiguration.Name,
 		ConfigType: &hcm_filter.HttpFilter_ConfigDiscovery{
 			ConfigDiscovery: &envoy_config_core_v3.ExtensionConfigSource{
 				ConfigSource: defaultConfigSource,
@@ -149,7 +152,7 @@ func InsertedExtensionConfigurations(
 	}
 	for _, list := range wasmPlugins {
 		for _, p := range list {
-			if _, ok := hasName[p.Namespace+"."+p.Name]; !ok {
+			if _, ok := hasName[p.ExtensionConfiguration.Name]; !ok {
 				continue
 			}
 			result = append(result, proto.Clone(p.ExtensionConfiguration).(*envoy_config_core_v3.TypedExtensionConfig))
diff --git a/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin_test.go b/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin_test.go
index cdf32ed216..ca79408d04 100644
--- a/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin_test.go
+++ b/pilot/pkg/networking/core/v1alpha3/extension/wasmplugin_test.go
@@ -47,22 +47,34 @@
 		Name: "unknown.filter",
 	}
 	someAuthNFilter = &model.WasmPluginWrapper{
-		Name: "someAuthNFilter",
+		Name:      "someAuthNFilter",
+		Namespace: "istio-system",
 		WasmPlugin: extensions.WasmPlugin{
 			Priority: &types.Int64Value{Value: 1},
 		},
+		ExtensionConfiguration: &envoy_config_core_v3.TypedExtensionConfig{
+			Name: "istio-system.someAuthNFilter",
+		},
 	}
 	someImportantAuthNFilter = &model.WasmPluginWrapper{
-		Name: "someImportantAuthNFilter",
+		Name:      "someImportantAuthNFilter",
+		Namespace: "istio-system",
 		WasmPlugin: extensions.WasmPlugin{
 			Priority: &types.Int64Value{Value: 1000},
 		},
+		ExtensionConfiguration: &envoy_config_core_v3.TypedExtensionConfig{
+			Name: "istio-system.someImportantAuthNFilter",
+		},
 	}
 	someAuthZFilter = &model.WasmPluginWrapper{
-		Name: "someAuthZFilter",
+		Name:      "someAuthZFilter",
+		Namespace: "istio-system",
 		WasmPlugin: extensions.WasmPlugin{
 			Priority: &types.Int64Value{Value: 1000},
 		},
+		ExtensionConfiguration: &envoy_config_core_v3.TypedExtensionConfig{
+			Name: "istio-system.someAuthZFilter",
+		},
 	}
 )
 
diff --git a/tests/integration/telemetry/stats/prometheus/customizemetrics/testdata/attributegen_envoy_filter.yaml b/tests/integration/telemetry/stats/prometheus/customizemetrics/testdata/attributegen_envoy_filter.yaml
index bc2bd1ae99..cec528252d 100644
--- a/tests/integration/telemetry/stats/prometheus/customizemetrics/testdata/attributegen_envoy_filter.yaml
+++ b/tests/integration/telemetry/stats/prometheus/customizemetrics/testdata/attributegen_envoy_filter.yaml
@@ -1,3 +1,29 @@
+{{- if .WasmRemoteLoad }}
+apiVersion: extensions.istio.io/v1alpha1
+kind: WasmPlugin
+metadata:
+  name: istio.attributegen
+spec:
+  phase: STATS
+  selector:
+    matchLabels:
+      app: server
+  url: {{ .AttributeGenURL }}
+  pluginConfig:
+    attributes:
+    - output_attribute: istio_responseClass
+      match:
+      - value: 2xx
+        condition: response.code >= 200 && response.code <= 299
+    - output_attribute: istio_operationId
+      match:
+      - value: getoperation
+        condition: request.method == 'GET'
+    - output_attribute: istio_grpcResponseStatus
+      match:
+      - value: OK
+        condition: response.grpc_status == 0
+{{- else }}
 apiVersion: networking.istio.io/v1alpha3
 kind: EnvoyFilter
 metadata:
@@ -78,16 +104,8 @@ spec:
                       }]
                     }
                 vm_config:
-                 {{- if .WasmRemoteLoad }}
-                  runtime: envoy.wasm.runtime.v8
-                  code:
-                    remote:
-                      http_uri:
-                        uri: {{ .AttributeGenURL }}
-                        timeout: 10s
-                  {{- else }}
                   runtime: envoy.wasm.runtime.null
                   code:
                     local:
                       inline_string: envoy.wasm.attributegen
-                  {{- end }}
+{{- end }}
-- 
2.35.3

